{
    "advisory_record": {
        "cve_id": "CVE-2018-11787",
        "description": "In Apache Karaf version prior to 3.0.9, 4.0.9, 4.1.1, when the webconsole feature is installed in Karaf, it is available at .../system/console and requires authentication to access it. One part of the console is a Gogo shell/console that gives access to the command line console of Karaf via a Web browser, and when navigated to it is available at .../system/console/gogo. Trying to go directly to that URL does require authentication. And optional bundle that some applications use is the Pax Web Extender Whiteboard, it is part of the pax-war feature and perhaps others. When it is installed, the Gogo console becomes available at another URL .../gogo/, and that URL is not secured giving access to the Karaf console to unauthenticated users. A mitigation for the issue is to manually stop/uninstall Gogo plugin bundle that is installed with the webconsole feature, although of course this removes the console from the .../system/console application, not only from the unauthenticated endpoint. One could also stop/uninstall the Pax Web Extender Whiteboard, but other components/applications may require it and so their functionality would be reduced/compromised.",
        "reserved_timestamp": 1528156800,
        "published_timestamp": 1537228800,
        "updated_timestamp": 1537279022,
        "repository_url": null,
        "references": {
            "": 255,
            "https://github.co/hiddenchars": 9,
            "https://issues.apache.org/jira/browse/KARAF-4993": 7,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 6,
            "https://access.redhat.com/support/": 6,
            "https://access.redhat.com/downloads/": 5,
            "http://karaf.apache.org/security/cve-2018-11787.txt": 4,
            "https://access.redhat.com/labs/": 4,
            "https://github.com/features/actions": 3,
            "https://github.com/features/packages": 3,
            "https://github.com/features/security": 3,
            "https://github.com/features/codespaces": 3,
            "https://github.com/features/copilot": 3,
            "https://github.com/features/code-review": 3,
            "https://github.com/features/issues": 3,
            "https://github.com/features/discussions": 3,
            "https://github.com/features": 3,
            "https://docs.github.com": 3,
            "https://skills.github.com": 3,
            "https://github.blog": 3,
            "https://github.com/enterprise": 3,
            "https://github.com/team": 3,
            "https://github.com/enterprise/startups": 3,
            "https://github.com/solutions/industries/healthcare": 3,
            "https://github.com/solutions/industries/financial-services": 3,
            "https://github.com/solutions/industries/manufacturing": 3,
            "https://github.com/solutions/ci-cd": 3,
            "https://github.com/solutions/devops": 3,
            "https://github.com/solutions/devsecops": 3,
            "https://resources.github.com/learn/pathways": 3,
            "https://resources.github.com": 3,
            "https://github.com/customer-stories": 3,
            "https://partner.github.com": 3,
            "https://github.com/readme": 3,
            "https://github.com/topics": 3,
            "https://github.com/trending": 3,
            "https://github.com/collections": 3,
            "https://github.com/enterprise/advanced-security": 3,
            "https://github.com/pricing": 3,
            "https://github.com": 3,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 3,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 3,
            "https://github.com/security": 3,
            "https://www.githubstatus.com/": 3,
            "https://docs.github.com/": 3,
            "https://support.github.com?tags=dotcom-footer": 3,
            "https://access.redhat.com/errata/": 3,
            "https://lists.apache.org/thread.html/d9ba4c3104ba32225646879a057b75b54430f349c246c85469037d3c%40%3Cdev.karaf.apache.org%3E": 2,
            "https://gitbox.apache.org/repos/asf?p=karaf.git;h=cfa213a": 2,
            "https://gitbox.apache.org/repos/asf?p=karaf.git;h=434e525": 2,
            "https://gitbox.apache.org/repos/asf?p=karaf.git;h=1fc60d7": 2,
            "https://access.redhat.com/support/policy/updates/jboss_notes": 2,
            "https://docs.atlassian.com/jira/jcore-docs-0820/": 2,
            "http://www.atlassian.com/software/jira": 2,
            "https://access.redhat.com/management/": 2,
            "https://access.redhat.com/": 2,
            "https://access.redhat.com/documentation": 2,
            "https://access.redhat.com/product-life-cycles/": 2,
            "https://access.redhat.com/security": 2,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 2,
            "https://access.redhat.com/security/security-updates/#/cve": 2,
            "https://access.redhat.com/support/contact/": 2,
            "https://access.redhat.com/support/policy/updates/red_hat_build_of_quarkus_notes": 2,
            "https://access.redhat.com/articles/7060671": 2,
            "https://status.redhat.com": 2,
            "https://issues.apache.org/jira/secure/MyJiraHome.jspa": 1,
            "https://selfserve.apache.org/jira-account.html": 1,
            "http://apaste.info/wQTBD": 1,
            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-11787": 1,
            "https://www.atlassian.com/software/jira": 1,
            "http://www.atlassian.com/": 1,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 1,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 1,
            "https://access.redhat.com/products/": 1,
            "https://access.redhat.com/downloads/content/package-browser": 1,
            "https://catalog.redhat.com/software/containers/explore/": 1,
            "https://access.redhat.com/articles/1202803": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 1,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 1,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 1,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 1,
            "https://access.redhat.com/documentation/": 1,
            "https://access.redhat.com/security/": 1,
            "https://access.redhat.com/security/vulnerabilities": 1,
            "https://access.redhat.com/security/data": 1,
            "https://access.redhat.com/security/security-updates/#/security-labs": 1,
            "https://access.redhat.com/security/updates/backporting/": 1,
            "https://access.redhat.com/support/cases/": 1,
            "https://access.redhat.com/support/cases/#/troubleshoot": 1,
            "https://access.redhat.com/community": 1,
            "https://access.redhat.com/community/": 1,
            "https://access.redhat.com/discussions/": 1,
            "https://access.redhat.com/announcements/": 1,
            "https://access.redhat.com/accelerators/": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 1,
            "https://cloud.redhat.com/insights": 1,
            "https://access.redhat.com/changeLanguage?language=en": 1,
            "https://access.redhat.com/changeLanguage?language=ko": 1,
            "https://access.redhat.com/changeLanguage?language=ja": 1,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 1,
            "https://access.redhat.com/product-life-cycles": 1,
            "https://access.redhat.com/articles/7019023": 1,
            "https://access.redhat.com/articles/6200982": 1,
            "https://access.redhat.com/search/#/knowledgebase": 1,
            "https://access.redhat.com/search/#/discussions": 1,
            "https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes": 1,
            "https://access.redhat.com/articles/7037218": 1,
            "https://github.com/nodejs/Release": 1,
            "https://access.redhat.com/articles/4544981": 1,
            "https://access.redhat.com/support/policy/updates/jboss_notes#p_rhbocamel": 1,
            "https://access.redhat.com/solutions/6342381": 1,
            "https://access.redhat.com/solutions/5941551": 1,
            "https://access.redhat.com/support/policy/updates/service-interconnect": 1,
            "https://access.redhat.com/articles/6975608": 1,
            "https://access.redhat.com/articles/6999674": 1,
            "https://access.redhat.com/articles/6371801": 1,
            "https://redhat.com/en": 1,
            "https://twitter.com/RedHat": 1,
            "https://access.redhat.com/management": 1,
            "https://access.redhat.com/support": 1,
            "https://access.redhat.com/support/customer-service": 1,
            "https://access.redhat.com/articles/33844": 1,
            "https://access.redhat.com/help/login_assistance": 1,
            "https://www.redhat.com/en/trust": 1,
            "https://www.redhat.com/en/about/browser-support": 1,
            "https://www.redhat.com/en/about/digital-accessibility": 1,
            "https://access.redhat.com/recognition/": 1,
            "https://access.redhat.com/help/colophon/": 1,
            "https://www.redhat.com/": 1,
            "http://developers.redhat.com/": 1,
            "https://connect.redhat.com/": 1,
            "https://cloud.redhat.com/": 1,
            "https://access.redhat.com/subscription-value": 1,
            "https://www.redhat.com/about/": 1,
            "http://jobs.redhat.com": 1,
            "https://redhat.com/en/about/company": 1,
            "https://redhat.com/en/jobs": 1,
            "https://redhat.com/en/events": 1,
            "https://redhat.com/en/about/office-locations": 1,
            "https://redhat.com/en/contact": 1,
            "https://redhat.com/en/blog": 1,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 1,
            "https://coolstuff.redhat.com/": 1,
            "https://www.redhat.com/en/summit": 1,
            "https://redhat.com/en/about/privacy-policy": 1,
            "https://redhat.com/en/about/terms-use": 1,
            "https://redhat.com/en/about/all-policies-guidelines": 1,
            "https://redhat.com/en/about/digital-accessibility": 1
        },
        "affected_products": [
            "Gogo",
            "Karaf",
            "gogo",
            "Apache",
            "console",
            "Whiteboard",
            "Apache Karaf",
            "Extender",
            "uninstall",
            "Pax",
            "Web"
        ],
        "versions": {
            "status": "affected",
            "version": "prior to 3.0.9"
        },
        "files": [
            "URL",
            "pax-war"
        ],
        "keywords": [
            "line",
            "issue",
            "component",
            "reduce",
            "navigate",
            "gogo",
            "secure",
            "console",
            "mitigation",
            "extender",
            "command",
            "require",
            "browser",
            "bundle",
            "apache",
            "feature",
            "remove",
            "uninstall",
            "whiteboard",
            "version",
            "compromise",
            "course",
            "authentication",
            "karaf",
            "instal",
            "plugin",
            "user",
            "part",
            "webconsole",
            "shell",
            "other",
            "stop",
            "become",
            "functionality",
            "give",
            "application",
            "endpoint",
            "access"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "96855638157a1e3f107667db5fc90d8350fb4769",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533100220,
            "hunks": 26,
            "message": "[KARAF-5851] Remove heading spaces in the cfg files",
            "diff": [
                "diff --git a/assemblies/features/enterprise/src/main/feature/feature.xml b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "index 2c4d7c32d6..33e8e96a0d 100644",
                "--- a/assemblies/features/enterprise/src/main/feature/feature.xml",
                "+++ b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "@@ -39,27 +39,27 @@",
                "         <config name=\"org.apache.aries.transaction\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "-            aries.transaction.recoverable = true",
                "-            aries.transaction.timeout = 600",
                "-            aries.transaction.howl.logFileDir = ${karaf.data}/txlog",
                "-            aries.transaction.howl.maxLogFiles = 2",
                "-            aries.transaction.howl.maxBlocksPerFile = 512",
                "-            aries.transaction.howl.bufferSize = 4",
                "+aries.transaction.recoverable = true",
                "+aries.transaction.timeout = 600",
                "+aries.transaction.howl.logFileDir = ${karaf.data}/txlog",
                "+aries.transaction.howl.maxLogFiles = 2",
                "+aries.transaction.howl.maxBlocksPerFile = 512",
                "+aries.transaction.howl.bufferSize = 4",
                "         </config>",
                "@@ -76,24 +76,24 @@",
                "         <config name=\"org.jboss.narayana\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "-            ObjectStoreEnvironmentBean.objectStoreDir=${karaf.data}/narayana",
                "-            ObjectStoreEnvironmentBean.communicationStore.objectStoreDir=${karaf.data}/narayana",
                "-            HornetqJournalEnvironmentBean.storeDir=${karaf.data}/narayana/hornetq",
                "+ObjectStoreEnvironmentBean.objectStoreDir=${karaf.data}/narayana",
                "+ObjectStoreEnvironmentBean.communicationStore.objectStoreDir=${karaf.data}/narayana",
                "+HornetqJournalEnvironmentBean.storeDir=${karaf.data}/narayana/hornetq",
                "         </config>",
                "diff --git a/assemblies/features/standard/src/main/feature/feature.xml b/assemblies/features/standard/src/main/feature/feature.xml",
                "index d07d72c890..6d696adc0f 100644",
                "--- a/assemblies/features/standard/src/main/feature/feature.xml",
                "+++ b/assemblies/features/standard/src/main/feature/feature.xml",
                "@@ -60,57 +60,57 @@",
                "         <config name=\"org.apache.karaf.features.repos\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # This file describes the features repository URL",
                "-            # It could be directly installed using feature:repo-add command",
                "-            #",
                "-            enterprise=mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features",
                "-            enterprise-legacy=mvn:org.apache.karaf.features/enterprise-legacy/${karaf.version}/xml/features",
                "-            spring=mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features",
                "-            spring-legacy=mvn:org.apache.karaf.features/spring-legacy/${karaf.version}/xml/features",
                "-            cellar=mvn:org.apache.karaf.cellar/apache-karaf-cellar/RELEASE/xml/features",
                "-            cave=mvn:org.apache.karaf.cave/apache-karaf-cave/RELEASE/xml/features",
                "-            camel=mvn:org.apache.camel.karaf/apache-camel/RELEASE/xml/features",
                "-            camel-extras=mvn:org.apache-extras.camel-extra.karaf/camel-extra/RELEASE/xml/features",
                "-            cxf=mvn:org.apache.cxf.karaf/apache-cxf/RELEASE/xml/features",
                "-            cxf-dosgi=mvn:org.apache.cxf.dosgi/cxf-dosgi/RELEASE/xml/features",
                "-            cxf-dosgi-samples=mvn:org.apache.cxf.dosgi/cxf-dosgi-samples/RELEASE/xml/features",
                "-            cxf-xkms=mvn:org.apache.cxf.services.xkms/cxf-services-xkms-features/RELEASE/xml",
                "-            activemq=mvn:org.apache.activemq/activemq-karaf/RELEASE/xml/features",
                "-            jclouds=mvn:org.apache.jclouds.karaf/jclouds-karaf/RELEASE/xml/features",
                "-            openejb=mvn:org.apache.openejb/openejb-feature/RELEASE/xml/features",
                "-            wicket=mvn:org.ops4j.pax.wicket/features/RELEASE/xml/features",
                "-            hawtio=mvn:io.hawt/hawtio-karaf/RELEASE/xml/features",
                "-            pax-cdi=mvn:org.ops4j.pax.cdi/pax-cdi-features/RELEASE/xml/features",
                "-            pax-jdbc=mvn:org.ops4j.pax.jdbc/pax-jdbc-features/RELEASE/xml/features",
                "-            pax-jpa=mvn:org.ops4j.pax.jpa/pax-jpa-features/RELEASE/xml/features",
                "-            pax-web=mvn:org.ops4j.pax.web/pax-web-features/RELEASE/xml/features",
                "-            pax-wicket=mvn:org.ops4j.pax.wicket/pax-wicket-features/RELEASE/xml/features",
                "-            ecf=http://download.eclipse.org/rt/ecf/RELEASE/site.p2/karaf-features.xml",
                "-            decanter=mvn:org.apache.karaf.decanter/apache-karaf-decanter/RELEASE/xml/features",
                "-            eclipsesource-jaxrs=mvn:com.eclipsesource.jaxrs/features/RELEASE/xml/features",
                "-            aries-jpa=mvn:org.apache.aries.jpa/jpa-features/RELEASE/xml/features",
                "-            aries-rsa=mvn:org.apache.aries.rsa/rsa-features/RELEASE/xml/features",
                "-            hibernate=mvn:org.hibernate/hibernate-osgi/RELEASE/xml/karaf",
                "-            ignite=mvn:org.apache.ignite/ignite-osgi-karaf/RELEASE/xml/features",
                "-            openjpa=mvn:org.apache.openjpa/openjpa-features/RELEASE/xml/features",
                "-            artemis=mvn:org.apache.activemq/artemis-features/RELEASE/xml/features",
                "-            brave=mvn:io.zipkin.brave.karaf/brave-features/RELEASE/xml/features",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This file describes the features repository URL",
                "+# It could be directly installed using feature:repo-add command",
                "+#",
                "+enterprise=mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features",
                "+enterprise-legacy=mvn:org.apache.karaf.features/enterprise-legacy/${karaf.version}/xml/features",
                "+spring=mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features",
                "+spring-legacy=mvn:org.apache.karaf.features/spring-legacy/${karaf.version}/xml/features",
                "+cellar=mvn:org.apache.karaf.cellar/apache-karaf-cellar/RELEASE/xml/features",
                "+cave=mvn:org.apache.karaf.cave/apache-karaf-cave/RELEASE/xml/features",
                "+camel=mvn:org.apache.camel.karaf/apache-camel/RELEASE/xml/features",
                "+camel-extras=mvn:org.apache-extras.camel-extra.karaf/camel-extra/RELEASE/xml/features",
                "+cxf=mvn:org.apache.cxf.karaf/apache-cxf/RELEASE/xml/features",
                "+cxf-dosgi=mvn:org.apache.cxf.dosgi/cxf-dosgi/RELEASE/xml/features",
                "+cxf-dosgi-samples=mvn:org.apache.cxf.dosgi/cxf-dosgi-samples/RELEASE/xml/features",
                "+cxf-xkms=mvn:org.apache.cxf.services.xkms/cxf-services-xkms-features/RELEASE/xml",
                "+activemq=mvn:org.apache.activemq/activemq-karaf/RELEASE/xml/features",
                "+jclouds=mvn:org.apache.jclouds.karaf/jclouds-karaf/RELEASE/xml/features",
                "+openejb=mvn:org.apache.openejb/openejb-feature/RELEASE/xml/features",
                "+wicket=mvn:org.ops4j.pax.wicket/features/RELEASE/xml/features",
                "+hawtio=mvn:io.hawt/hawtio-karaf/RELEASE/xml/features",
                "+pax-cdi=mvn:org.ops4j.pax.cdi/pax-cdi-features/RELEASE/xml/features",
                "+pax-jdbc=mvn:org.ops4j.pax.jdbc/pax-jdbc-features/RELEASE/xml/features",
                "+pax-jpa=mvn:org.ops4j.pax.jpa/pax-jpa-features/RELEASE/xml/features",
                "+pax-web=mvn:org.ops4j.pax.web/pax-web-features/RELEASE/xml/features",
                "+pax-wicket=mvn:org.ops4j.pax.wicket/pax-wicket-features/RELEASE/xml/features",
                "+ecf=http://download.eclipse.org/rt/ecf/RELEASE/site.p2/karaf-features.xml",
                "+decanter=mvn:org.apache.karaf.decanter/apache-karaf-decanter/RELEASE/xml/features",
                "+eclipsesource-jaxrs=mvn:com.eclipsesource.jaxrs/features/RELEASE/xml/features",
                "+aries-jpa=mvn:org.apache.aries.jpa/jpa-features/RELEASE/xml/features",
                "+aries-rsa=mvn:org.apache.aries.rsa/rsa-features/RELEASE/xml/features",
                "+hibernate=mvn:org.hibernate/hibernate-osgi/RELEASE/xml/karaf",
                "+ignite=mvn:org.apache.ignite/ignite-osgi-karaf/RELEASE/xml/features",
                "+openjpa=mvn:org.apache.openjpa/openjpa-features/RELEASE/xml/features",
                "+artemis=mvn:org.apache.activemq/artemis-features/RELEASE/xml/features",
                "+brave=mvn:io.zipkin.brave.karaf/brave-features/RELEASE/xml/features",
                "         </config>",
                "@@ -119,29 +119,29 @@",
                "             <config name=\"org.apache.karaf.command.acl.feature\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for commands in the feature subshell",
                "-                #",
                "-                install = admin",
                "-                uninstall = admin",
                "-                start = admin",
                "-                stop = admin",
                "-                update = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the feature subshell",
                "+#",
                "+install = admin",
                "+uninstall = admin",
                "+start = admin",
                "+stop = admin",
                "+update = admin",
                "             </config>",
                "@@ -160,188 +160,188 @@",
                "         <config name=\"org.apache.karaf.command.acl.shell\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # This configuration file defines the ACLs for commands in the shell subshell",
                "-            #",
                "-            nano = admin",
                "-            exec = admin",
                "-            new = admin",
                "-            java = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the shell subshell",
                "+#",
                "+nano = admin",
                "+exec = admin",
                "+new = admin",
                "+java = admin",
                "         </config>",
                "         <config name=\"org.apache.karaf.command.acl.scope_bundle\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # This configuration file defines the ACLs for scope bundles",
                "-            # ",
                "-            features=org.apache.karaf.features.command",
                "-            jaas=org.apache.karaf.jaas.command",
                "-            admin=org.apache.karaf.admin.command",
                "-            osgi=org.apache.karaf.shell.osgi",
                "-            log=org.apache.karaf.shell.log",
                "-            packages=org.apache.karaf.shell.packages",
                "-            config=org.apache.karaf.shell.config",
                "-            ssh=org.apache.karaf.shell.ssh",
                "-            shell=org.apache.karaf.shell.commands",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for scope bundles",
                "+#",
                "+features=org.apache.karaf.features.command",
                "+jaas=org.apache.karaf.jaas.command",
                "+admin=org.apache.karaf.admin.command",
                "+osgi=org.apache.karaf.shell.osgi",
                "+log=org.apache.karaf.shell.log",
                "+packages=org.apache.karaf.shell.packages",
                "+config=org.apache.karaf.shell.config",
                "+ssh=org.apache.karaf.shell.ssh",
                "+shell=org.apache.karaf.shell.commands",
                "         </config>",
                "         <config name=\"org.apache.karaf.shell\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # These properties are used to configure Karaf's ssh shell.",
                "-            #",
                "-",
                "-            #",
                "-            # Via sshPort and sshHost you define the address you can login into Karaf.",
                "-            #",
                "-            sshPort = 8101",
                "-            sshHost = 0.0.0.0",
                "-",
                "-            #",
                "-            # The sshIdleTimeout defines the inactivity timeout to logout the SSH session.",
                "-            # The sshIdleTimeout is in milliseconds, and the default is set to 30 minutes.",
                "-            #",
                "-            sshIdleTimeout = 1800000",
                "-",
                "-            #",
                "-            # sshRealm defines which JAAS domain to use for password authentication.",
                "-            #",
                "-            sshRealm = karaf",
                "-",
                "-            #",
                "-            # Defines if the SFTP system is enabled or not in the SSH server",
                "-            #",
                "-            sftpEnabled=true",
                "-",
                "-            #",
                "-            # The location of the hostKey file defines where the private/public key of the server",
                "-            # is located. If no file is at the defined location it will be ignored.",
                "-            #",
                "-            hostKey = ${karaf.etc}/host.key",
                "-",
                "-            #",
                "-            # The format used for hostKey.",
                "-            #\u00c2\u00a0Possible values are simple (Karaf internal), or PEM (OpenSSH format)",
                "-            #",
                "-            hostKeyFormat = simple",
                "-",
                "-            #",
                "-            # shRole defines the role required to access the console through ssh",
                "-            #",
                "-            sshRole = ssh",
                "-",
                "-            #",
                "-            # Self defined key size in 1024, 2048, 3072, or 4096",
                "-            # If not set, this defaults to 4096.",
                "-            #",
                "-            # keySize = 4096",
                "-",
                "-            #",
                "-            # Specify host key algorithm, defaults to RSA",
                "-            #",
                "-            # algorithm = RSA",
                "-",
                "-            #",
                "-            # Specify the client log level (default is WARN)",
                "-            # 0: ERROR",
                "-            # 1: WARN",
                "-            # 2: INFO",
                "-            # 3: DEBUG",
                "-            # 4: TRACE",
                "-            #",
                "-            #logLevel=1",
                "-",
                "-            #",
                "-            # Specify an additional welcome banner to be displayed when a user logs into the server.",
                "-            #",
                "-            # welcomeBanner =",
                "-",
                "-            #",
                "-            # Defines the completion mode on the Karaf shell console. The possible values are:",
                "-            # - GLOBAL: it's the same behavior as in previous Karaf releases. The completion displays all commands and all aliases",
                "-            #           ignoring if you are in a subshell or not.",
                "-            # - FIRST: the completion displays all commands and all aliases only when you are not in a subshell. When you are",
                "-            #          in a subshell, the completion displays only the commands local to the subshell.",
                "-            # - SUBSHELL: the completion displays only the subshells on the root level. When you are in a subshell, the completion",
                "-            #             displays only the commands local to the subshell.",
                "-            # This property define the default value when you use the Karaf shell console.",
                "-            # You can change the completion mode directly in the shell console, using shell:completion command.",
                "-            #",
                "-",
                "-            #",
                "-            # Override allowed SSH cipher algorithms.",
                "-            # Default: aes128-ctr,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc",
                "-            #",
                "-            # ciphers = aes128-ctr,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc",
                "-",
                "-            #",
                "-            # Override allowed SSH HMAC algorithms.",
                "-            # Default: hmac-sha2-512,hmac-sha2-256,hmac-sha1",
                "-            #",
                "-            # macs = hmac-sha2-512,hmac-sha2-256,hmac-sha1",
                "-",
                "-            #",
                "-            # Override allowed SSH key exchange algorithms.",
                "-            # Default: diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1",
                "-            #",
                "-            # kexAlgorithms = diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1",
                "-",
                "-            #",
                "-            # Override moduli-url.",
                "-            # Default: moduli-url not specified to use the internal one from SSHD",
                "-            #",
                "-            # moduli-url = external moduli-url users wanna use",
                "-",
                "-            completionMode = GLOBAL",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# These properties are used to configure Karaf's ssh shell.",
                "+#",
                "+",
                "+#",
                "+# Via sshPort and sshHost you define the address you can login into Karaf.",
                "+#",
                "+sshPort = 8101",
                "+sshHost = 0.0.0.0",
                "+",
                "+#",
                "+# The sshIdleTimeout defines the inactivity timeout to logout the SSH session.",
                "+# The sshIdleTimeout is in milliseconds, and the default is set to 30 minutes.",
                "+#",
                "+sshIdleTimeout = 1800000",
                "+",
                "+#",
                "+# sshRealm defines which JAAS domain to use for password authentication.",
                "+#",
                "+sshRealm = karaf",
                "+",
                "+#",
                "+# Defines if the SFTP system is enabled or not in the SSH server",
                "+#",
                "+sftpEnabled=true",
                "+",
                "+#",
                "+# The location of the hostKey file defines where the private/public key of the server",
                "+# is located. If no file is at the defined location it will be ignored.",
                "+#",
                "+hostKey = ${karaf.etc}/host.key",
                "+",
                "+#",
                "+# The format used for hostKey.",
                "+#\u00c2\u00a0Possible values are simple (Karaf internal), or PEM (OpenSSH format)",
                "+#",
                "+hostKeyFormat = simple",
                "+",
                "+#",
                "+# shRole defines the role required to access the console through ssh",
                "+#",
                "+sshRole = ssh",
                "+",
                "+#",
                "+# Self defined key size in 1024, 2048, 3072, or 4096",
                "+# If not set, this defaults to 4096.",
                "+#",
                "+# keySize = 4096",
                "+",
                "+#",
                "+# Specify host key algorithm, defaults to RSA",
                "+#",
                "+# algorithm = RSA",
                "+",
                "+#",
                "+# Specify the client log level (default is WARN)",
                "+# 0: ERROR",
                "+# 1: WARN",
                "+# 2: INFO",
                "+# 3: DEBUG",
                "+# 4: TRACE",
                "+#",
                "+#logLevel=1",
                "+",
                "+#",
                "+# Specify an additional welcome banner to be displayed when a user logs into the server.",
                "+#",
                "+# welcomeBanner =",
                "+",
                "+#",
                "+# Defines the completion mode on the Karaf shell console. The possible values are:",
                "+# - GLOBAL: it's the same behavior as in previous Karaf releases. The completion displays all commands and all aliases",
                "+#           ignoring if you are in a subshell or not.",
                "+# - FIRST: the completion displays all commands and all aliases only when you are not in a subshell. When you are",
                "+#          in a subshell, the completion displays only the commands local to the subshell.",
                "+# - SUBSHELL: the completion displays only the subshells on the root level. When you are in a subshell, the completion",
                "+#             displays only the commands local to the subshell.",
                "+# This property define the default value when you use the Karaf shell console.",
                "+# You can change the completion mode directly in the shell console, using shell:completion command.",
                "+#",
                "+",
                "+#",
                "+# Override allowed SSH cipher algorithms.",
                "+# Default: aes128-ctr,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc",
                "+#",
                "+# ciphers = aes128-ctr,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc",
                "+",
                "+#",
                "+# Override allowed SSH HMAC algorithms.",
                "+# Default: hmac-sha2-512,hmac-sha2-256,hmac-sha1",
                "+#",
                "+# macs = hmac-sha2-512,hmac-sha2-256,hmac-sha1",
                "+",
                "+#",
                "+# Override allowed SSH key exchange algorithms.",
                "+# Default: diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1",
                "+#",
                "+# kexAlgorithms = diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1",
                "+",
                "+#",
                "+# Override moduli-url.",
                "+# Default: moduli-url not specified to use the internal one from SSHD",
                "+#",
                "+# moduli-url = external moduli-url users wanna use",
                "+",
                "+completionMode = GLOBAL",
                "         </config>",
                "@@ -396,40 +396,40 @@",
                "             <config name=\"jmx.acl.org.apache.karaf.bundle\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # JMX ACL specific to the org.apache.karaf:type=bundle,name=* MBean which maps to the Karaf MBean",
                "-                # to control OSGi bundles.",
                "-                #",
                "-                install = manager",
                "-                refresh = manager",
                "-                resolve = manager",
                "-                restart = manager",
                "-                setStartLevel(java.lang.String, int)[/([1-4])?[0-9]/,/.*/] = admin",
                "-                setStartLevel = manager",
                "-                start(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "-                start = manager",
                "-                stop(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "-                stop = manager",
                "-                uninstall(java.lang.String)[\"0\"] = #this is a comment, no roles can perform this operation",
                "-                uninstall = admin",
                "-                update(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "-                update(java.lang.String,java.lang.String)[/([1-4])?[0-9]/,/.*/] = admin",
                "-                update = manager",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=bundle,name=* MBean which maps to the Karaf MBean",
                "+# to control OSGi bundles.",
                "+#",
                "+install = manager",
                "+refresh = manager",
                "+resolve = manager",
                "+restart = manager",
                "+setStartLevel(java.lang.String, int)[/([1-4])?[0-9]/,/.*/] = admin",
                "+setStartLevel = manager",
                "+start(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+start = manager",
                "+stop(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+stop = manager",
                "+uninstall(java.lang.String)[\"0\"] = #this is a comment, no roles can perform this operation",
                "+uninstall = admin",
                "+update(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+update(java.lang.String,java.lang.String)[/([1-4])?[0-9]/,/.*/] = admin",
                "+update = manager",
                "             </config>",
                "@@ -439,46 +439,46 @@",
                "             <config name=\"org.apache.karaf.command.acl.bundle\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for commands in the bundle subshell",
                "-                #",
                "-                # For an explanation of the syntax of this file, see the file:",
                "-                #   org.apache.karaf.command.acl.system.cfg",
                "-                #",
                "-                # This configuration relies on the fact that 'system' bundles need to be managed",
                "-                # with the",
                "-                #   -f (--force)",
                "-                # flag. Operations with -f need admin permission. Most of these operations without",
                "-                # the 'force' option can be done by a manager.",
                "-                install = admin",
                "-                refresh[/.*[-][f].*/] = admin",
                "-                refresh = manager",
                "-                restart[/.*[-][f].*/] = admin",
                "-                restart = manager",
                "-                start[/.*[-][f].*/] = admin",
                "-                start = manager",
                "-                stop[/.*[-][f].*/] = admin",
                "-                stop = manager",
                "-                uninstall[/.*[-][f].*/] = admin",
                "-                uninstall = manager",
                "-                update[/.*[-][f].*/] = admin",
                "-                update = manager",
                "-                watch = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the bundle subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+# This configuration relies on the fact that 'system' bundles need to be managed",
                "+# with the",
                "+#   -f (--force)",
                "+# flag. Operations with -f need admin permission. Most of these operations without",
                "+# the 'force' option can be done by a manager.",
                "+install = admin",
                "+refresh[/.*[-][f].*/] = admin",
                "+refresh = manager",
                "+restart[/.*[-][f].*/] = admin",
                "+restart = manager",
                "+start[/.*[-][f].*/] = admin",
                "+start = manager",
                "+stop[/.*[-][f].*/] = admin",
                "+stop = manager",
                "+uninstall[/.*[-][f].*/] = admin",
                "+uninstall = manager",
                "+update[/.*[-][f].*/] = admin",
                "+update = manager",
                "+watch = admin",
                "             </config>",
                "@@ -492,54 +492,54 @@",
                "             <config name=\"jmx.acl.org.apache.karaf.config\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # JMX ACL specific to the org.apache.karaf:type=config,name=* MBean which maps to the Karaf MBean to interact with the",
                "-                # OSGi Config Admin service.",
                "-                #",
                "-                # For a description of the format of this file, see jmx.acl.cfg",
                "-                #",
                "-                # By default, only an admin can make changes to the JMX ACL and shell command rules, but managers can make",
                "-                # changes to other PIDs.",
                "-                #",
                "-                appendProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "-                appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "-                appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "-                appendProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "-                create(java.lang.String)[/jmx[.]acl.*/] = admin",
                "-                create(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "-                create(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "-                create(java.lang.String) = manager",
                "-                delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "-                delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "-                delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "-                delete(java.lang.String) = manager",
                "-                deleteProperty(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "-                deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "-                deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "-                deleteProperty(java.lang.String,java.lang.String) = manager",
                "-                setProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "-                setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "-                setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "-                setProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "-                update(java.lang.String,java.util.Map)[/jmx[.]acl.*/,/.*/] = admin",
                "-                update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "-                update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "-                update(java.lang.String,java.util.Map) = manager",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=config,name=* MBean which maps to the Karaf MBean to interact with the",
                "+# OSGi Config Admin service.",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+# By default, only an admin can make changes to the JMX ACL and shell command rules, but managers can make",
                "+# changes to other PIDs.",
                "+#",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "+create(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+create(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "+create(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "+create(java.lang.String) = manager",
                "+delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "+delete(java.lang.String) = manager",
                "+deleteProperty(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String) = manager",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "+update(java.lang.String,java.util.Map)[/jmx[.]acl.*/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map) = manager",
                "             </config>",
                "@@ -549,46 +549,46 @@",
                "             <config name=\"org.apache.karaf.command.acl.config\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for various commands in the config subshell",
                "-                #",
                "-                # For an explanation of the syntax of this file, see the file:",
                "-                #   org.apache.karaf.command.acl.system.cfg",
                "-                #",
                "-                cancel = manager",
                "-                delete = admin",
                "-                edit = manager",
                "-                edit[/.*jmx[.]acl.*/] = admin",
                "-                edit[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-                edit[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-                property-append = manager",
                "-                property-append[/.*jmx[.]acl.*/] = admin",
                "-                property-append[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-                property-append[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-                property-delete = manager",
                "-                property-delete[/.*jmx[.]acl.*/] = admin",
                "-                property-delete[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-                property-delete[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-                property-set = manager",
                "-                property-set[/.*jmx[.]acl.*/] = admin",
                "-                property-set[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-                property-set[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-                update = manager",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for various commands in the config subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+cancel = manager",
                "+delete = admin",
                "+edit = manager",
                "+edit[/.*jmx[.]acl.*/] = admin",
                "+edit[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+edit[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-append = manager",
                "+property-append[/.*jmx[.]acl.*/] = admin",
                "+property-append[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-append[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-delete = manager",
                "+property-delete[/.*jmx[.]acl.*/] = admin",
                "+property-delete[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-delete[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-set = manager",
                "+property-set[/.*jmx[.]acl.*/] = admin",
                "+property-set[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-set[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+update = manager",
                "             </config>",
                "@@ -610,63 +610,63 @@",
                "         <config name=\"org.apache.karaf.jaas\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # Boolean enabling / disabling encrypted passwords",
                "-            #",
                "-            encryption.enabled = false",
                "-",
                "-            #",
                "-            # Encryption Service name",
                "-            #   the default one is 'basic'",
                "-            #   a more powerful one named 'jasypt' is available",
                "-            #       when installing the encryption feature",
                "-            #",
                "-            encryption.name =",
                "-",
                "-            #",
                "-            # Encryption prefix",
                "-            #",
                "-            encryption.prefix = {CRYPT}",
                "-",
                "-            #",
                "-            # Encryption suffix",
                "-            #",
                "-            encryption.suffix = {CRYPT}",
                "-",
                "-            #",
                "-            # Set the encryption algorithm to use in Karaf JAAS login module",
                "-            # Supported encryption algorithms follow:",
                "-            #   MD2",
                "-            #   MD5",
                "-            #   SHA-1",
                "-            #   SHA-256",
                "-            #   SHA-384",
                "-            #   SHA-512",
                "-            #",
                "-            encryption.algorithm = MD5",
                "-",
                "-            #",
                "-            # Encoding of the encrypted password.",
                "-            # Can be:",
                "-            #   hexadecimal",
                "-            #   base64",
                "-            #",
                "-            encryption.encoding = hexadecimal",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# Boolean enabling / disabling encrypted passwords",
                "+#",
                "+encryption.enabled = false",
                "+",
                "+#",
                "+# Encryption Service name",
                "+#   the default one is 'basic'",
                "+#   a more powerful one named 'jasypt' is available",
                "+#       when installing the encryption feature",
                "+#",
                "+encryption.name =",
                "+",
                "+#",
                "+# Encryption prefix",
                "+#",
                "+encryption.prefix = {CRYPT}",
                "+",
                "+#",
                "+# Encryption suffix",
                "+#",
                "+encryption.suffix = {CRYPT}",
                "+",
                "+#",
                "+# Set the encryption algorithm to use in Karaf JAAS login module",
                "+# Supported encryption algorithms follow:",
                "+#   MD2",
                "+#   MD5",
                "+#   SHA-1",
                "+#   SHA-256",
                "+#   SHA-384",
                "+#   SHA-512",
                "+#",
                "+encryption.algorithm = MD5",
                "+",
                "+#",
                "+# Encoding of the encrypted password.",
                "+# Can be:",
                "+#   hexadecimal",
                "+#   base64",
                "+#",
                "+encryption.encoding = hexadecimal",
                "         </config>",
                "@@ -682,25 +682,25 @@",
                "             <config name=\"org.apache.karaf.command.acl.jaas\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for commands in the jaas subshell",
                "-                # Jaas commands commands have no effect until update is called.",
                "-                update = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the jaas subshell",
                "+# Jaas commands commands have no effect until update is called.",
                "+update = admin",
                "             </config>",
                "@@ -712,38 +712,38 @@",
                "         <config name=\"org.apache.karaf.log\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # This configuration file is used to configure the default values for the log:display",
                "-            # and log:exception-display commands.",
                "-            #",
                "-",
                "-            #",
                "-            # The number of log statements to be displayed using log:display. It also defines the number",
                "-            # of lines searched for exceptions using log:exception-display. You can override this value",
                "-            # at runtime using -n in log:display.",
                "-            #",
                "-            size = 500",
                "-",
                "-            #",
                "-            # The pattern used to format the log statement when using log:display. This pattern is according",
                "-            # to the log4j layout. You can override this parameter at runtime using log:display with -p.",
                "-            #",
                "-            pattern = %d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file is used to configure the default values for the log:display",
                "+# and log:exception-display commands.",
                "+#",
                "+",
                "+#",
                "+# The number of log statements to be displayed using log:display. It also defines the number",
                "+# of lines searched for exceptions using log:exception-display. You can override this value",
                "+# at runtime using -n in log:display.",
                "+#",
                "+size = 500",
                "+",
                "+#",
                "+# The pattern used to format the log statement when using log:display. This pattern is according",
                "+# to the log4j layout. You can override this parameter at runtime using log:display with -p.",
                "+#",
                "+pattern = %d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n",
                "         </config>",
                "@@ -765,29 +765,29 @@",
                "             <config name=\"org.apache.karaf.command.acl.system\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for commands in the system subshell",
                "-                #",
                "-                property = admin",
                "-                shutdown = admin",
                "-                start-level[/.*[1-9][0-9][0-9]+.*/] = manager # manager can set startlevels above 100",
                "-                start-level[/[^0-9]*/] = viewer               # viewer can obtain the current start level",
                "-                start-level = admin                           # admin can set any start level, including &lt; 100",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the system subshell",
                "+#",
                "+property = admin",
                "+shutdown = admin",
                "+start-level[/.*[1-9][0-9][0-9]+.*/] = manager # manager can set startlevels above 100",
                "+start-level[/[^0-9]*/] = viewer               # viewer can obtain the current start level",
                "+start-level = admin                           # admin can set any start level, including &lt; 100",
                "             </config>",
                "@@ -881,29 +881,29 @@",
                "             <config name=\"org.apache.karaf.command.acl.kar\">",
                "-                ################################################################################",
                "-                #",
                "-                #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-                #    contributor license agreements.  See the NOTICE file distributed with",
                "-                #    this work for additional information regarding copyright ownership.",
                "-                #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-                #    (the \"License\"); you may not use this file except in compliance with",
                "-                #    the License.  You may obtain a copy of the License at",
                "-                #",
                "-                #       http://www.apache.org/licenses/LICENSE-2.0",
                "-                #",
                "-                #    Unless required by applicable law or agreed to in writing, software",
                "-                #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-                #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-                #    See the License for the specific language governing permissions and",
                "-                #    limitations under the License.",
                "-                #",
                "-                ################################################################################",
                "-",
                "-                #",
                "-                # This configuration file defines the ACLs for commands in the kar subshell",
                "-                #",
                "-                # For an explanation of the syntax of this file, see the file:",
                "-                #   org.apache.karaf.command.acl.system.cfg",
                "-                #",
                "-                install = admin",
                "-                uninstall = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the kar subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+install = admin",
                "+uninstall = admin",
                "             </config>",
                "@@ -915,22 +915,22 @@",
                "         <config name=\"org.apache.karaf.webconsole\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            realm=karaf",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+realm=karaf",
                "         </config>",
                "@@ -963,310 +963,310 @@",
                "         <config name=\"jmx.acl\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # Generic JMX ACL",
                "-            #",
                "-            # This file defines the roles required for MBean operations for MBeans that ",
                "-            # do not have this defined explicitly.",
                "-            #",
                "-            # The definition of ACLs for JMX operations works as follows:",
                "-            #",
                "-            # The required roles for JMX operations are defined in configuration files",
                "-            # read via OSGi ConfigAdmin.",
                "-            #",
                "-            # JMX RBAC-related configuration is prefixed with jmx.acl and based on the",
                "-            # JMX ObjectName that it applies to. For example specific configuration for",
                "-            # an MBean with the following objectName: foo.bar:type=Test can be placed in",
                "-            # a configuration file called jmx.acl.foo.bar.Test.cfg. More generic",
                "-            # configuration can be placed in the domain (e.g. jmx.acl.foo.bar.cfg) or",
                "-            # at the top level (jmx.acl.cfg). A simple configuration file looks like",
                "-            # this:",
                "-            #   test : admin",
                "-            #   getVal : manager, viewer",
                "-            #   ",
                "-            # The system looks for required roles using the following process:",
                "-            # The most specific configuration file/pid is tried first. E.g. in the",
                "-            # above example the jmx.acl.foo.bar.Test.cfg is looked at first. In this",
                "-            # configuration, the system looks for a:",
                "-            #   1. Specific match for the current invocation, e.g. test(int)[\"17\"] : role1",
                "-            #   2. Reg exp match for the current invocation, e.g. test(int)[/[0-9]/] : role2",
                "-            #   In both cases the passed argument is converted to a String for the",
                "-            # comparison.",
                "-            #   If any of the above match all the roles with matching definitions",
                "-            # are collected and allowed. If no matches are found the following is tried:",
                "-            #   3. Signature match for the invocation, e.g. test(int) : role3. If",
                "-            # matched the associated roles are used.",
                "-            #   4. Method name match for the invocation, e.g. test : role4. If matched",
                "-            # the associated roles are used.",
                "-            #   5. A method name wildcard match, e.g. te* : role5. For all the",
                "-            # wildcard matches found in the current configuration file, the roles",
                "-            # associated with the longest match are used. So if you have te* and * and",
                "-            # the method invoked is 'test', then the roles defined with te* are used,",
                "-            # not the ones defined with *.",
                "-            # If no matching definition is found in the current configuration file, a ",
                "-            # more general configuration file is looked for. So jmx.acl.foo.bar.cfg is ",
                "-            # tried next, this matches the domain of the MBean. If there is no match ",
                "-            # found in the domain the most generic configuration file is consulted",
                "-            # (jmx.acl.cfg).",
                "-            # If a matching definition is found, this is used and the process will not",
                "-            # look for any other matching definitions. So the most specific definition",
                "-            # always takes precedence.",
                "-            #",
                "-            list* = viewer",
                "-            get* = viewer",
                "-            is* = viewer",
                "-            set* = admin",
                "-            * = admin",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# Generic JMX ACL",
                "+#",
                "+# This file defines the roles required for MBean operations for MBeans that",
                "+# do not have this defined explicitly.",
                "+#",
                "+# The definition of ACLs for JMX operations works as follows:",
                "+#",
                "+# The required roles for JMX operations are defined in configuration files",
                "+# read via OSGi ConfigAdmin.",
                "+#",
                "+# JMX RBAC-related configuration is prefixed with jmx.acl and based on the",
                "+# JMX ObjectName that it applies to. For example specific configuration for",
                "+# an MBean with the following objectName: foo.bar:type=Test can be placed in",
                "+# a configuration file called jmx.acl.foo.bar.Test.cfg. More generic",
                "+# configuration can be placed in the domain (e.g. jmx.acl.foo.bar.cfg) or",
                "+# at the top level (jmx.acl.cfg). A simple configuration file looks like",
                "+# this:",
                "+#   test : admin",
                "+#   getVal : manager, viewer",
                "+#",
                "+# The system looks for required roles using the following process:",
                "+# The most specific configuration file/pid is tried first. E.g. in the",
                "+# above example the jmx.acl.foo.bar.Test.cfg is looked at first. In this",
                "+# configuration, the system looks for a:",
                "+#   1. Specific match for the current invocation, e.g. test(int)[\"17\"] : role1",
                "+#   2. Reg exp match for the current invocation, e.g. test(int)[/[0-9]/] : role2",
                "+#   In both cases the passed argument is converted to a String for the",
                "+# comparison.",
                "+#   If any of the above match all the roles with matching definitions",
                "+# are collected and allowed. If no matches are found the following is tried:",
                "+#   3. Signature match for the invocation, e.g. test(int) : role3. If",
                "+# matched the associated roles are used.",
                "+#   4. Method name match for the invocation, e.g. test : role4. If matched",
                "+# the associated roles are used.",
                "+#   5. A method name wildcard match, e.g. te* : role5. For all the",
                "+# wildcard matches found in the current configuration file, the roles",
                "+# associated with the longest match are used. So if you have te* and * and",
                "+# the method invoked is 'test', then the roles defined with te* are used,",
                "+# not the ones defined with *.",
                "+# If no matching definition is found in the current configuration file, a",
                "+# more general configuration file is looked for. So jmx.acl.foo.bar.cfg is",
                "+# tried next, this matches the domain of the MBean. If there is no match",
                "+# found in the domain the most generic configuration file is consulted",
                "+# (jmx.acl.cfg).",
                "+# If a matching definition is found, this is used and the process will not",
                "+# look for any other matching definitions. So the most specific definition",
                "+# always takes precedence.",
                "+#",
                "+list* = viewer",
                "+get* = viewer",
                "+is* = viewer",
                "+set* = admin",
                "+* = admin",
                "         </config>",
                "         <config name=\"jmx.acl.org.apache.karaf.security.jmx\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # JMX ACL specific to the org.apache.karaf:type=security,area=jmx MBean which",
                "-            # can be used to find out whether the currently logged in JMX user can invoke",
                "-            # the requested JMX operations.",
                "-            #",
                "-            # For a description of the format of this file, see jmx.acl.cfg",
                "-            #",
                "-            canInvoke = viewer",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=security,area=jmx MBean which",
                "+# can be used to find out whether the currently logged in JMX user can invoke",
                "+# the requested JMX operations.",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+canInvoke = viewer",
                "         </config>",
                "         <config name=\"jmx.acl.java.lang.Memory\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # JMX ACL specific to the java.lang.Memory MBean",
                "-            #",
                "-            # For a description of the format of this file, see jmx.acl.cfg",
                "-            #",
                "-            gc = manager",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the java.lang.Memory MBean",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+gc = manager",
                "         </config>",
                "         <config name=\"jmx.acl.osgi.compendium.cm\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # JMX ACL specific to osgi.compendium.cm MBean",
                "-            #",
                "-            # For a description of the format of this file, see jmx.acl.cfg",
                "-            #",
                "-            # This configuration file configures the management of ConfigAdmin via the standard ConfigAdmin MBean",
                "-            # Such that only an admin can make changes to the JMX ACL rules, but managers can make",
                "-            # changes to other PIDs.",
                "-            #",
                "-            createFactoryConfiguration(java.lang.String)[/jmx[.]acl.*/] = admin",
                "-            createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-            createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-            createFactoryConfiguration(java.lang.String) = manager",
                "-            createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "-            createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "-            createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "-            createFactoryConfigurationForLocation(java.lang.String,java.lang.String) = manager",
                "-            delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "-            delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "-            delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "-            delete(java.lang.String) = manager",
                "-            deleteConfigurations = admin",
                "-            deleteForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "-            deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "-            deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "-            deleteForLocation(java.lang.String,java.lang.String) = manager",
                "-            update(java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/] = admin",
                "-            update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "-            update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "-            update(java.lang.String,javax.management.openmbean.TabularData) = manager",
                "-            updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "-            updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/,/.*/] = admin",
                "-            updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/,/.*/] = admin",
                "-            updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData) = manager",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to osgi.compendium.cm MBean",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+# This configuration file configures the management of ConfigAdmin via the standard ConfigAdmin MBean",
                "+# Such that only an admin can make changes to the JMX ACL rules, but managers can make",
                "+# changes to other PIDs.",
                "+#",
                "+createFactoryConfiguration(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+createFactoryConfiguration(java.lang.String) = manager",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String) = manager",
                "+delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+delete(java.lang.String) = manager",
                "+deleteConfigurations = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String) = manager",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData) = manager",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData) = manager",
                "         </config>",
                "         <config name=\"org.apache.karaf.management\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #",
                "-            # The properties in this file define the configuration of Apache Karaf's JMX Management",
                "-            #",
                "-",
                "-            #",
                "-            # Port number for RMI registry connection",
                "-            #",
                "-            rmiRegistryPort = 1099",
                "-",
                "-            #",
                "-            # Host for RMI registry",
                "-            #",
                "-            rmiRegistryHost = 127.0.0.1",
                "-",
                "-            #",
                "-            # Port number for RMI server connection",
                "-            #",
                "-            rmiServerPort = 44444",
                "-",
                "-            #",
                "-            # Host for RMI server",
                "-            #",
                "-            rmiServerHost = 127.0.0.1",
                "-",
                "-            #",
                "-            # Name of the JAAS realm used for authentication",
                "-            #",
                "-            jmxRealm = karaf",
                "-",
                "-            #",
                "-            # The service URL for the JMXConnectorServer",
                "-            #",
                "-            serviceUrl = service:jmx:rmi://${rmiServerHost}:${rmiServerPort}/jndi/rmi://${rmiRegistryHost}:${rmiRegistryPort}/karaf-${karaf.name}",
                "-",
                "-            #",
                "-            # Whether any threads started for the JMXConnectorServer should be started as daemon threads",
                "-            #",
                "-            daemon = true",
                "-",
                "-            #",
                "-            # Whether the JMXConnectorServer should be started in a separate thread",
                "-            #",
                "-            threaded = true",
                "-",
                "-            #",
                "-            # The ObjectName used to register the JMXConnectorServer",
                "-            #",
                "-            objectName = connector:name=rmi",
                "-",
                "-            #",
                "-            # Timeout to lookup for the keystore in case of SSL authentication usage",
                "-            #",
                "-            #keyStoreAvailabilityTimeout = 5000",
                "-",
                "-            #",
                "-            # The type of authentication",
                "-            #",
                "-            #authenticatorType = password",
                "-",
                "-            #",
                "-            # Enable or not SSL/TLS",
                "-            #",
                "-            #secured = false",
                "-",
                "-            #",
                "-            # Secure algorithm to use",
                "-            #",
                "-            #secureAlgorithm = default",
                "-",
                "-            #",
                "-            # Secure protocol to use",
                "-            #",
                "-            #secureProtocol = TLS",
                "-",
                "-            #",
                "-            # Keystore to use for secure mode",
                "-            #",
                "-            #keyStore = karaf.ks",
                "-",
                "-            #",
                "-            # Alias of the key to use in the keystore",
                "-            #",
                "-            #keyAlias = karaf",
                "-",
                "-            #",
                "-            # Truststore to use for secure mode",
                "-            #",
                "-            #trustStore = karaf.ts",
                "-",
                "-            #",
                "-            # Create the JMX RMI registry",
                "-            #",
                "-            #createRmiRegistry = true",
                "-",
                "-            #",
                "-            # Locate the JMX RMI registry",
                "-            #",
                "-            #locateRmiRegistry = true",
                "-",
                "-            #",
                "-            # Locate an existing MBean server if possible (usefull when Karaf is embedded)",
                "-            #",
                "-            #locateExistingMBeanServerIfPossible = true",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# The properties in this file define the configuration of Apache Karaf's JMX Management",
                "+#",
                "+",
                "+#",
                "+# Port number for RMI registry connection",
                "+#",
                "+rmiRegistryPort = 1099",
                "+",
                "+#",
                "+# Host for RMI registry",
                "+#",
                "+rmiRegistryHost = 127.0.0.1",
                "+",
                "+#",
                "+# Port number for RMI server connection",
                "+#",
                "+rmiServerPort = 44444",
                "+",
                "+#",
                "+# Host for RMI server",
                "+#",
                "+rmiServerHost = 127.0.0.1",
                "+",
                "+#",
                "+# Name of the JAAS realm used for authentication",
                "+#",
                "+jmxRealm = karaf",
                "+",
                "+#",
                "+# The service URL for the JMXConnectorServer",
                "+#",
                "+serviceUrl = service:jmx:rmi://${rmiServerHost}:${rmiServerPort}/jndi/rmi://${rmiRegistryHost}:${rmiRegistryPort}/karaf-${karaf.name}",
                "+",
                "+#",
                "+# Whether any threads started for the JMXConnectorServer should be started as daemon threads",
                "+#",
                "+daemon = true",
                "+",
                "+#",
                "+# Whether the JMXConnectorServer should be started in a separate thread",
                "+#",
                "+threaded = true",
                "+",
                "+#",
                "+# The ObjectName used to register the JMXConnectorServer",
                "+#",
                "+objectName = connector:name=rmi",
                "+",
                "+#",
                "+# Timeout to lookup for the keystore in case of SSL authentication usage",
                "+#",
                "+#keyStoreAvailabilityTimeout = 5000",
                "+",
                "+#",
                "+# The type of authentication",
                "+#",
                "+#authenticatorType = password",
                "+",
                "+#",
                "+# Enable or not SSL/TLS",
                "+#",
                "+#secured = false",
                "+",
                "+#",
                "+# Secure algorithm to use",
                "+#",
                "+#secureAlgorithm = default",
                "+",
                "+#",
                "+# Secure protocol to use",
                "+#",
                "+#secureProtocol = TLS",
                "+",
                "+#",
                "+# Keystore to use for secure mode",
                "+#",
                "+#keyStore = karaf.ks",
                "+",
                "+#",
                "+# Alias of the key to use in the keystore",
                "+#",
                "+#keyAlias = karaf",
                "+",
                "+#",
                "+# Truststore to use for secure mode",
                "+#",
                "+#trustStore = karaf.ts",
                "+",
                "+#",
                "+# Create the JMX RMI registry",
                "+#",
                "+#createRmiRegistry = true",
                "+",
                "+#",
                "+# Locate the JMX RMI registry",
                "+#",
                "+#locateRmiRegistry = true",
                "+",
                "+#",
                "+# Locate an existing MBean server if possible (usefull when Karaf is embedded)",
                "+#",
                "+#locateExistingMBeanServerIfPossible = true",
                "         </config>",
                "@@ -1287,38 +1287,38 @@",
                "         <config name=\"org.apache.karaf.scheduler.quartz\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            #============================================================================",
                "-            # Configure Karaf Scheduler Properties",
                "-            #============================================================================",
                "-            org.quartz.scheduler.instanceName=Karaf",
                "-            org.quartz.scheduler.instanceId=AUTO",
                "-",
                "-            #============================================================================",
                "-            # Configure ThreadPool",
                "-            #============================================================================",
                "-            org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool",
                "-            org.quartz.threadPool.threadCount=30",
                "-            org.quartz.threadPool.threadPriority=5",
                "-",
                "-            #============================================================================",
                "-            # Configure JobStore",
                "-            #============================================================================",
                "-            org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#============================================================================",
                "+# Configure Karaf Scheduler Properties",
                "+#============================================================================",
                "+org.quartz.scheduler.instanceName=Karaf",
                "+org.quartz.scheduler.instanceId=AUTO",
                "+",
                "+#============================================================================",
                "+# Configure ThreadPool",
                "+#============================================================================",
                "+org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool",
                "+org.quartz.threadPool.threadCount=30",
                "+org.quartz.threadPool.threadPriority=5",
                "+",
                "+#============================================================================",
                "+# Configure JobStore",
                "+#============================================================================",
                "+org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore",
                "         </config>",
                "@@ -1329,23 +1329,23 @@",
                "         <config name=\"org.apache.felix.eventadmin.impl.EventAdmin\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            org.apache.felix.eventadmin.AddTimestamp=true",
                "-            org.apache.felix.eventadmin.AddSubject=true",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+org.apache.felix.eventadmin.AddTimestamp=true",
                "+org.apache.felix.eventadmin.AddSubject=true",
                "         </config>",
                "@@ -1419,22 +1419,22 @@",
                "         <config name=\"org.apache.karaf.profile\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            profilesDirectory = ${karaf.home}/profiles",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+profilesDirectory = ${karaf.home}/profiles",
                "         </config>",
                "@@ -1448,24 +1448,24 @@",
                "         <config name=\"org.jolokia.osgi\">",
                "-            ################################################################################",
                "-            #",
                "-            #    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-            #    contributor license agreements.  See the NOTICE file distributed with",
                "-            #    this work for additional information regarding copyright ownership.",
                "-            #    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-            #    (the \"License\"); you may not use this file except in compliance with",
                "-            #    the License.  You may obtain a copy of the License at",
                "-            #",
                "-            #       http://www.apache.org/licenses/LICENSE-2.0",
                "-            #",
                "-            #    Unless required by applicable law or agreed to in writing, software",
                "-            #    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-            #    See the License for the specific language governing permissions and",
                "-            #    limitations under the License.",
                "-            #",
                "-            ################################################################################",
                "-",
                "-            org.jolokia.user=karaf",
                "-            org.jolokia.realm=karaf",
                "-            org.jolokia.authMode=jaas",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+org.jolokia.user=karaf",
                "+org.jolokia.realm=karaf",
                "+org.jolokia.authMode=jaas",
                "         </config>"
            ],
            "changed_files": [
                "assemblies/features/enterprise/src/main/feature/feature.xml",
                "assemblies/features/standard/src/main/feature/feature.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5851": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5057aa441eb2df2f676d669b5bf0a5f223064e9f"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: remove",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5851",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d40aa1f2f28489a286b2661521e05d8f74cdb9b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529487999,
            "hunks": 2,
            "message": "[KARAF-5791]need to check the blacklist when we add feature repo through JMX",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java b/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "index 9f10a84ba6..cbc169c0cb 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "@@ -129,3 +129,7 @@ public class FeaturesServiceMBeanImpl extends StandardEmitterMBean implements",
                "     public void addRepository(String uri) throws Exception {",
                "-        featuresService.addRepository(new URI(uri));",
                "+        URI repoUri = new URI(uri);",
                "+        if (featuresService.isRepositoryUriBlacklisted(repoUri)) {",
                "+            throw new RuntimeException(\"Feature URL \" + uri + \" is blacklisted\");",
                "+        }",
                "+        featuresService.addRepository(repoUri);",
                "     }",
                "@@ -133,3 +137,7 @@ public class FeaturesServiceMBeanImpl extends StandardEmitterMBean implements",
                "     public void addRepository(String uri, boolean install) throws Exception {",
                "-        featuresService.addRepository(new URI(uri), install);",
                "+        URI repoUri = new URI(uri);",
                "+        if (featuresService.isRepositoryUriBlacklisted(repoUri)) {",
                "+            throw new RuntimeException(\"Feature URL \" + uri + \" is blacklisted\");",
                "+        }",
                "+        featuresService.addRepository(repoUri, install);",
                "     }"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5791": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5791",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2711223555f16ebfffcabd941175bb1212841645",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524713763,
            "hunks": 2,
            "message": "[KARAF-5694]don't strip out protocol header (cherry picked from commit 9fb700697e494b8310cff575f2a7b3ead3e21751)",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "index fb5e4dd8f6..ba2ffedf43 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "@@ -57,2 +57,10 @@ public final class DownloadManagerHelper {",
                "     }",
                "+    ",
                "+    public static String stripStartLevel(String url) {",
                "+        String strippedUrl = url;",
                "+        if (strippedUrl.contains(\";start-level=\")) {",
                "+            strippedUrl = strippedUrl.substring(0, strippedUrl.indexOf(\";start-level=\"));",
                "+        }",
                "+        return strippedUrl;",
                "+    }",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "index 633bf238a0..b4e788a424 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "@@ -75,3 +75,3 @@ public class SimpleDownloadTask extends AbstractRetryableDownloadTask {",
                "-            urlObj = new URL(DownloadManagerHelper.stripUrl(urlObj.toString()));",
                "+            urlObj = new URL(DownloadManagerHelper.stripStartLevel(urlObj.toString()));",
                "             try (InputStream is = urlObj.openStream();"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5694": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9fb700697e494b8310cff575f2a7b3ead3e21751"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5694",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d2f17ba7882941ca6ebb79980b533e97a2ce065c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525972326,
            "hunks": 5,
            "message": "Extend the completion method of shell:source",
            "diff": [
                "diff --git a/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/SourceAction.java b/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/SourceAction.java",
                "index eab00eb5ae..2e22d1818c 100644",
                "--- a/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/SourceAction.java",
                "+++ b/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/SourceAction.java",
                "@@ -34,3 +34,5 @@ import org.apache.karaf.shell.api.action.Argument;",
                " import org.apache.karaf.shell.api.action.Command;",
                "+import org.apache.karaf.shell.api.action.Completion;",
                " import org.apache.karaf.shell.api.console.Session;",
                "+import org.apache.karaf.shell.support.completers.FileOrUriCompleter;",
                " import org.apache.karaf.shell.api.action.lifecycle.Reference;",
                "@@ -50,3 +52,4 @@ public class SourceAction implements Action {",
                "     @Argument(index = 0, name = \"script\", description = \"A URI pointing to the script\", required = true, multiValued = false)",
                "-    private URI script;",
                "+    @Completion(FileOrUriCompleter.class)",
                "+    private String script;",
                "@@ -64,3 +67,3 @@ public class SourceAction implements Action {",
                "             try {",
                "-                URL url = script.toURL();",
                "+                URL url = new URI(script).toURL();",
                "                 log.info(\"Printing URL: \" + url);",
                "@@ -70,3 +73,3 @@ public class SourceAction implements Action {",
                "                 // fallback to a file",
                "-                Path file = session.currentDir().resolve(script.getPath());",
                "+                Path file = session.currentDir().resolve(script);",
                "                 log.info(\"Printing file: \" + file);"
            ],
            "changed_files": [
                "shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/SourceAction.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, command",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c9d89b1f1b93a132abb706e6e1c03342520ad1f2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524471614,
            "hunks": 65,
            "message": "[KARAF-5706] Upgrade to Felix Utils 1.11.0",
            "diff": [
                "diff --git a/features/core/pom.xml b/features/core/pom.xml",
                "index 5bc36369a2..9b585e23c8 100644",
                "--- a/features/core/pom.xml",
                "+++ b/features/core/pom.xml",
                "@@ -166,2 +166,5 @@",
                "                             org.apache.felix.utils.manifest,",
                "+                            org.apache.felix.utils.resource,",
                "+                            org.apache.felix.utils.repository,",
                "+                            org.apache.felix.utils.json,",
                "                             org.apache.karaf.util,",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java b/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "index 8ac3e3bcb6..123aa0e228 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "@@ -37,2 +37,3 @@ import org.apache.felix.resolver.ResolverImpl;",
                " import org.apache.felix.utils.properties.Properties;",
                "+import org.apache.felix.utils.repository.AggregateRepository;",
                " import org.apache.karaf.features.FeaturesListener;",
                "@@ -42,3 +43,2 @@ import org.apache.karaf.features.internal.management.FeaturesServiceMBeanImpl;",
                " import org.apache.karaf.features.internal.region.DigraphHelper;",
                "-import org.apache.karaf.features.internal.repository.AggregateRepository;",
                " import org.apache.karaf.features.internal.repository.JsonRepository;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/region/OfflineResolver.java b/features/core/src/main/java/org/apache/karaf/features/internal/region/OfflineResolver.java",
                "index 1ff7ec5011..eecb7a4dc2 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/region/OfflineResolver.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/region/OfflineResolver.java",
                "@@ -30,7 +30,7 @@ import org.apache.felix.resolver.Logger;",
                " import org.apache.felix.resolver.ResolverImpl;",
                "-import org.apache.karaf.features.internal.repository.BaseRepository;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                "+import org.apache.felix.utils.repository.BaseRepository;",
                "+import org.apache.felix.utils.resource.RequirementImpl;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                "+import org.apache.felix.utils.resource.SimpleFilter;",
                " import org.apache.karaf.util.json.JsonReader;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/region/RepositoryManager.java b/features/core/src/main/java/org/apache/karaf/features/internal/region/RepositoryManager.java",
                "index ac2aa20096..36957d5ab8 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/region/RepositoryManager.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/region/RepositoryManager.java",
                "@@ -22,3 +22,3 @@ import java.util.concurrent.ConcurrentMap;",
                "-import org.apache.karaf.features.internal.repository.BaseRepository;",
                "+import org.apache.felix.utils.repository.BaseRepository;",
                " import org.apache.karaf.features.internal.repository.JsonRepository;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/region/Subsystem.java b/features/core/src/main/java/org/apache/karaf/features/internal/region/Subsystem.java",
                "index 26f62cf2c5..c9b374074b 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/region/Subsystem.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/region/Subsystem.java",
                "@@ -34,4 +34,11 @@ import java.util.zip.ZipInputStream;",
                "+import org.apache.felix.utils.collections.StringArrayMap;",
                " import org.apache.felix.utils.manifest.Clause;",
                " import org.apache.felix.utils.manifest.Parser;",
                "+import org.apache.felix.utils.repository.BaseRepository;",
                "+import org.apache.felix.utils.resource.CapabilityImpl;",
                "+import org.apache.felix.utils.resource.RequirementImpl;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                "+import org.apache.felix.utils.resource.SimpleFilter;",
                " import org.apache.felix.utils.version.VersionRange;",
                "@@ -49,13 +56,6 @@ import org.apache.karaf.features.internal.download.Downloader;",
                " import org.apache.karaf.features.internal.download.StreamProvider;",
                "-import org.apache.karaf.features.internal.repository.BaseRepository;",
                "-import org.apache.karaf.features.internal.resolver.CapabilityImpl;",
                " import org.apache.karaf.features.internal.resolver.FeatureResource;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                " import org.apache.karaf.features.internal.resolver.ResolverUtil;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                " import org.apache.karaf.features.internal.resolver.ResourceUtils;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                " import org.apache.karaf.features.internal.service.Overrides;",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                " import org.osgi.framework.BundleException;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolveContext.java b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolveContext.java",
                "index 6bb11661aa..645a6773d1 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolveContext.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolveContext.java",
                "@@ -30,9 +30,9 @@ import java.util.Set;",
                "+import org.apache.felix.utils.repository.BaseRepository;",
                "+import org.apache.felix.utils.resource.CapabilityImpl;",
                "+import org.apache.felix.utils.resource.RequirementImpl;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                " import org.apache.karaf.features.FeaturesService;",
                " import org.apache.karaf.features.internal.download.Downloader;",
                "-import org.apache.karaf.features.internal.repository.BaseRepository;",
                "-import org.apache.karaf.features.internal.resolver.CapabilityImpl;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                " import org.apache.karaf.features.internal.resolver.ResolverUtil;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                " import org.eclipse.equinox.region.Region;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "index 082070befb..aa0c31f905 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "@@ -23,3 +23,12 @@ import java.nio.file.Paths;",
                " import java.nio.file.StandardOpenOption;",
                "-import java.util.*;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.Collection;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                "+import java.util.HashSet;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                " import java.util.stream.Collectors;",
                "@@ -27,2 +36,9 @@ import java.util.stream.Collectors;",
                " import org.apache.felix.utils.collections.DictionaryAsMap;",
                "+import org.apache.felix.utils.resource.CapabilityImpl;",
                "+import org.apache.felix.utils.resource.CapabilitySet;",
                "+import org.apache.felix.utils.resource.RequirementImpl;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                "+import org.apache.felix.utils.resource.ResourceUtils;",
                "+import org.apache.felix.utils.resource.SimpleFilter;",
                " import org.apache.karaf.features.BundleInfo;",
                "@@ -33,10 +49,3 @@ import org.apache.karaf.features.internal.download.Downloader;",
                " import org.apache.karaf.features.internal.download.StreamProvider;",
                "-import org.apache.karaf.features.internal.resolver.BaseClause;",
                "-import org.apache.karaf.features.internal.resolver.CapabilityImpl;",
                "-import org.apache.karaf.features.internal.resolver.CapabilitySet;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                " import org.apache.karaf.features.internal.resolver.ResolverUtil;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                " import org.apache.karaf.util.json.JsonWriter;",
                "@@ -288,3 +297,3 @@ public class SubsystemResolver implements SubsystemResolverResolution, Subsystem",
                "     private static String toString(Requirement r) {",
                "-        return BaseClause.toString(null, r.getNamespace(), r.getAttributes(), r.getDirectives());",
                "+        return ResourceUtils.toString(null, r.getNamespace(), r.getAttributes(), r.getDirectives());",
                "     }",
                "@@ -292,3 +301,3 @@ public class SubsystemResolver implements SubsystemResolverResolution, Subsystem",
                "     private static String toString(Capability c) {",
                "-        return BaseClause.toString(null, c.getNamespace(), c.getAttributes(), c.getDirectives());",
                "+        return ResourceUtils.toString(null, c.getNamespace(), c.getAttributes(), c.getDirectives());",
                "     }",
                "@@ -305,3 +314,3 @@ public class SubsystemResolver implements SubsystemResolverResolution, Subsystem",
                "         for (Capability identity : identities) {",
                "-            String id = BaseClause.toString(null, identity.getNamespace(), identity.getAttributes(), identity.getDirectives());",
                "+            String id = ResourceUtils.toString(null, identity.getNamespace(), identity.getAttributes(), identity.getDirectives());",
                "             resources.add(toJson(identity.getResource()));",
                "@@ -316,6 +325,6 @@ public class SubsystemResolver implements SubsystemResolverResolution, Subsystem",
                "         for (Capability cap : resource.getCapabilities(null)) {",
                "-            caps.add(BaseClause.toString(null, cap.getNamespace(), cap.getAttributes(), cap.getDirectives()));",
                "+            caps.add(ResourceUtils.toString(null, cap.getNamespace(), cap.getAttributes(), cap.getDirectives()));",
                "         }",
                "         for (Requirement req : resource.getRequirements(null)) {",
                "-            reqs.add(BaseClause.toString(null, req.getNamespace(), req.getAttributes(), req.getDirectives()));",
                "+            reqs.add(ResourceUtils.toString(null, req.getNamespace(), req.getAttributes(), req.getDirectives()));",
                "         }",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/AggregateRepository.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/AggregateRepository.java",
                "deleted file mode 100644",
                "index caac614889..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/AggregateRepository.java",
                "+++ /dev/null",
                "@@ -1,55 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.repository;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Collection;",
                "-import java.util.Collections;",
                "-import java.util.HashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.service.repository.Repository;",
                "-",
                "-public class AggregateRepository implements Repository {",
                "-",
                "-    private final Collection<Repository> repositories;",
                "-",
                "-    public AggregateRepository(Collection<Repository> repositories) {",
                "-        this.repositories = repositories;",
                "-    }",
                "-",
                "-    @Override",
                "-    public Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements) {",
                "-        Map<Requirement, Collection<Capability>> result = new HashMap<>();",
                "-        for (Requirement requirement : requirements) {",
                "-            List<Capability> caps = new ArrayList<>();",
                "-            for (Repository repository : repositories) {",
                "-                Map<Requirement, Collection<Capability>> resMap =",
                "-                        repository.findProviders(Collections.singleton(requirement));",
                "-                Collection<Capability> res = resMap != null ? resMap.get(requirement) : null;",
                "-                if (res != null) {",
                "-                    caps.addAll(res);",
                "-                }",
                "-            }",
                "-            result.put(requirement, caps);",
                "-        }",
                "-        return result;",
                "-    }",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/BaseRepository.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/BaseRepository.java",
                "deleted file mode 100644",
                "index b8bfc623ba..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/BaseRepository.java",
                "+++ /dev/null",
                "@@ -1,91 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.repository;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Collection;",
                "-import java.util.Collections;",
                "-import java.util.HashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-",
                "-import org.apache.karaf.features.internal.resolver.CapabilitySet;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-import org.osgi.service.repository.Repository;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-",
                "-/**",
                "- */",
                "-public class BaseRepository implements Repository {",
                "-",
                "-    protected final Logger logger = LoggerFactory.getLogger(getClass());",
                "-    protected final List<Resource> resources;",
                "-    protected final Map<String, CapabilitySet> capSets;",
                "-",
                "-    public BaseRepository() {",
                "-        this.resources = new ArrayList<>();",
                "-        this.capSets = new HashMap<>();",
                "-    }",
                "-",
                "-    public BaseRepository(Collection<Resource> resources) {",
                "-        this();",
                "-        for (Resource resource : resources) {",
                "-            addResource(resource);",
                "-        }",
                "-    }",
                "-",
                "-    protected void addResource(Resource resource) {",
                "-        for (Capability cap : resource.getCapabilities(null)) {",
                "-            String ns = cap.getNamespace();",
                "-            capSets.computeIfAbsent(ns, n -> new CapabilitySet(Collections.singletonList(n))).addCapability(cap);",
                "-        }",
                "-        resources.add(resource);",
                "-    }",
                "-",
                "-    public List<Resource> getResources() {",
                "-        return resources;",
                "-    }",
                "-",
                "-    @Override",
                "-    public Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements) {",
                "-        Map<Requirement, Collection<Capability>> result = new HashMap<>();",
                "-        for (Requirement requirement : requirements) {",
                "-            CapabilitySet set = capSets.get(requirement.getNamespace());",
                "-            if (set != null) {",
                "-                SimpleFilter sf;",
                "-                if (requirement instanceof RequirementImpl) {",
                "-                    sf = ((RequirementImpl) requirement).getFilter();",
                "-                } else {",
                "-                    String filter = requirement.getDirectives().get(Constants.FILTER_DIRECTIVE);",
                "-                    sf = (filter != null)",
                "-                            ? SimpleFilter.parse(filter)",
                "-                            : SimpleFilter.MATCH_ALL_FILTER;",
                "-                }",
                "-                result.put(requirement, set.match(sf, true));",
                "-            } else {",
                "-                result.put(requirement, Collections.emptyList());",
                "-            }",
                "-        }",
                "-        return result;",
                "-    }",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/JsonRepository.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/JsonRepository.java",
                "index c105b8d5b8..19e1aebaf5 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/JsonRepository.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/repository/JsonRepository.java",
                "@@ -18,15 +18,2 @@ package org.apache.karaf.features.internal.repository;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.util.Collection;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.concurrent.locks.ReadWriteLock;",
                "-import java.util.concurrent.locks.ReentrantReadWriteLock;",
                "-",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.util.json.JsonReader;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                " import org.slf4j.Logger;",
                "@@ -40,3 +27,3 @@ import org.slf4j.LoggerFactory;",
                "  */",
                "-public class JsonRepository extends BaseRepository {",
                "+public class JsonRepository extends org.apache.felix.utils.repository.JsonRepository {",
                "@@ -45,12 +32,5 @@ public class JsonRepository extends BaseRepository {",
                "     private final boolean ignoreFailures;",
                "-    private final UrlLoader loader;",
                "-    private final ReadWriteLock lock = new ReentrantReadWriteLock();",
                "     public JsonRepository(String url, long expiration, boolean ignoreFailures) {",
                "-        loader = new UrlLoader(url, expiration) {",
                "-            @Override",
                "-            protected boolean doRead(InputStream is) throws IOException {",
                "-                return JsonRepository.this.doRead(is);",
                "-            }",
                "-        };",
                "+        super(url, expiration);",
                "         this.ignoreFailures = ignoreFailures;",
                "@@ -58,30 +38,8 @@ public class JsonRepository extends BaseRepository {",
                "-    @Override",
                "-    public List<Resource> getResources() {",
                "-        checkAndLoadCache();",
                "-        lock.readLock().lock();",
                "-        try {",
                "-            return super.getResources();",
                "-        } finally {",
                "-            lock.readLock().unlock();",
                "-        }",
                "-    }",
                "-",
                "-    @Override",
                "-    public Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements) {",
                "-        checkAndLoadCache();",
                "-        lock.readLock().lock();",
                "-        try {",
                "-            return super.findProviders(requirements);",
                "-        } finally {",
                "-            lock.readLock().unlock();",
                "-        }",
                "-    }",
                "-",
                "-    private void checkAndLoadCache() {",
                "+    protected void checkAndLoadCache() {",
                "         try {",
                "-            loader.checkAndLoadCache();",
                "+            super.checkAndLoadCache();",
                "         } catch (Exception e) {",
                "             if (ignoreFailures) {",
                "-                logger.warn(\"Ignoring failure: \" + e.getMessage(), e);",
                "+                LOGGER.warn(\"Ignoring failure: \" + e.getMessage(), e);",
                "             } else {",
                "@@ -92,36 +50,2 @@ public class JsonRepository extends BaseRepository {",
                "-    protected boolean doRead(InputStream is) throws IOException {",
                "-        Map<String, Map<String, String>> metadatas = verify(JsonReader.read(is));",
                "-        lock.writeLock().lock();",
                "-        try {",
                "-            resources.clear();",
                "-            capSets.clear();",
                "-            for (Map.Entry<String, Map<String, String>> metadata : metadatas.entrySet()) {",
                "-                try {",
                "-                    Resource resource = ResourceBuilder.build(metadata.getKey(), metadata.getValue());",
                "-                    addResource(resource);",
                "-                } catch (Exception e) {",
                "-                    LOGGER.info(\"Unable to build resource for \" + metadata.getKey(), e);",
                "-                }",
                "-            }",
                "-            return true;",
                "-        } finally {",
                "-            lock.writeLock().unlock();",
                "-        }",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    private Map<String, Map<String, String>> verify(Object value) {",
                "-        Map<?, ?> obj = Map.class.cast(value);",
                "-        for (Map.Entry<?, ?> entry : obj.entrySet()) {",
                "-            String.class.cast(entry.getKey());",
                "-            Map<?, ?> child = Map.class.cast(entry.getValue());",
                "-            for (Map.Entry<?, ?> ce : child.entrySet()) {",
                "-                String.class.cast(ce.getKey());",
                "-                String.class.cast(ce.getValue());",
                "-            }",
                "-        }",
                "-        return (Map<String, Map<String, String>>) obj;",
                "-    }",
                "-",
                " }",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/StaxParser.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/StaxParser.java",
                "deleted file mode 100644",
                "index 3652301271..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/StaxParser.java",
                "+++ /dev/null",
                "@@ -1,451 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.repository;",
                "-",
                "-import javax.xml.stream.Location;",
                "-import javax.xml.stream.XMLInputFactory;",
                "-import javax.xml.stream.XMLOutputFactory;",
                "-import javax.xml.stream.XMLStreamException;",
                "-import javax.xml.stream.XMLStreamReader;",
                "-import javax.xml.stream.XMLStreamWriter;",
                "-import java.io.InputStream;",
                "-import java.io.Writer;",
                "-import java.net.URI;",
                "-import java.util.ArrayList;",
                "-import java.util.HashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-",
                "-import org.apache.felix.utils.version.VersionTable;",
                "-import org.apache.karaf.features.internal.resolver.CapabilityImpl;",
                "-import org.apache.karaf.features.internal.resolver.RequirementImpl;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-import org.osgi.service.repository.ContentNamespace;",
                "-",
                "-import static javax.xml.stream.XMLStreamConstants.CHARACTERS;",
                "-import static javax.xml.stream.XMLStreamConstants.END_ELEMENT;",
                "-import static javax.xml.stream.XMLStreamConstants.START_ELEMENT;",
                "-",
                "-/**",
                "- * Repository XML xml based on StaX",
                "- */",
                "-public final class StaxParser {",
                "-",
                "-    public static final String REPOSITORY = \"repository\";",
                "-    public static final String REPO_NAME = \"name\";",
                "-    public static final String INCREMENT = \"increment\";",
                "-    public static final String REFERRAL = \"referral\";",
                "-    public static final String DEPTH = \"depth\";",
                "-    public static final String URL = \"url\";",
                "-    public static final String RESOURCE = \"resource\";",
                "-    public static final String CAPABILITY = \"capability\";",
                "-    public static final String REQUIREMENT = \"requirement\";",
                "-    public static final String NAMESPACE = \"namespace\";",
                "-    public static final String ATTRIBUTE = \"attribute\";",
                "-    public static final String DIRECTIVE = \"directive\";",
                "-    public static final String NAME = \"name\";",
                "-    public static final String VALUE = \"value\";",
                "-    public static final String TYPE = \"type\";",
                "-",
                "-    public static final String REPOSITORY_NAMESPACE = \"http://www.osgi.org/xmlns/repository/v1.0.0\";",
                "-",
                "-    static XMLInputFactory inputFactory;",
                "-    static XMLOutputFactory outputFactory;",
                "-",
                "-    private StaxParser() {",
                "-    }",
                "-",
                "-    public static class Referral {",
                "-        public String url;",
                "-        public int depth = Integer.MAX_VALUE;",
                "-    }",
                "-",
                "-    public static class XmlRepository {",
                "-        public String name;",
                "-        public long increment;",
                "-        public List<Referral> referrals = new ArrayList<>();",
                "-        public List<Resource> resources = new ArrayList<>();",
                "-    }",
                "-",
                "-    public static void write(XmlRepository repository, Writer os) throws XMLStreamException {",
                "-        XMLStreamWriter writer = getOutputFactory().createXMLStreamWriter(os);",
                "-        try {",
                "-            writer.writeStartDocument();",
                "-            writer.setDefaultNamespace(REPOSITORY_NAMESPACE);",
                "-            // repository element",
                "-            writer.writeStartElement(REPOSITORY_NAMESPACE, REPOSITORY);",
                "-            writer.writeAttribute(\"xmlns\", REPOSITORY_NAMESPACE);",
                "-            writer.writeAttribute(REPO_NAME, repository.name);",
                "-            writer.writeAttribute(INCREMENT, Long.toString(repository.increment));",
                "-            // referrals",
                "-            for (Referral referral : repository.referrals) {",
                "-                writer.writeStartElement(REPOSITORY_NAMESPACE, REFERRAL);",
                "-                writer.writeAttribute(DEPTH, Integer.toString(referral.depth));",
                "-                writer.writeAttribute(URL, referral.url);",
                "-                writer.writeEndElement();",
                "-            }",
                "-            // resources",
                "-            for (Resource resource : repository.resources) {",
                "-                writer.writeStartElement(REPOSITORY_NAMESPACE, RESOURCE);",
                "-                for (Capability cap : resource.getCapabilities(null)) {",
                "-                    writeClause(writer, CAPABILITY, cap.getNamespace(), cap.getDirectives(), cap.getAttributes());",
                "-                }",
                "-                for (Requirement req : resource.getRequirements(null)) {",
                "-                    writeClause(writer, REQUIREMENT, req.getNamespace(), req.getDirectives(), req.getAttributes());",
                "-                }",
                "-                writer.writeEndElement();",
                "-            }",
                "-            writer.writeEndDocument();",
                "-            writer.flush();",
                "-        } finally {",
                "-            writer.close();",
                "-        }",
                "-    }",
                "-",
                "-    private static void writeClause(XMLStreamWriter writer, String element, String namespace, Map<String, String> directives, Map<String, Object> attributes) throws XMLStreamException {",
                "-        writer.writeStartElement(REPOSITORY_NAMESPACE, element);",
                "-        writer.writeAttribute(NAMESPACE, namespace);",
                "-        for (Map.Entry<String, String> dir : directives.entrySet()) {",
                "-            writer.writeStartElement(REPOSITORY_NAMESPACE, DIRECTIVE);",
                "-            writer.writeAttribute(NAME, dir.getKey());",
                "-            writer.writeAttribute(VALUE, dir.getValue());",
                "-            writer.writeEndElement();",
                "-        }",
                "-        for (Map.Entry<String, Object> att : attributes.entrySet()) {",
                "-            String key = att.getKey();",
                "-            Object val = att.getValue();",
                "-            writer.writeStartElement(REPOSITORY_NAMESPACE, ATTRIBUTE);",
                "-            writer.writeAttribute(NAME, key);",
                "-            if (val instanceof Version) {",
                "-                writer.writeAttribute(TYPE, \"Version\");",
                "-            } else if (val instanceof Long) {",
                "-                writer.writeAttribute(TYPE, \"Long\");",
                "-            } else if (val instanceof Double) {",
                "-                writer.writeAttribute(TYPE, \"Double\");",
                "-            } else if (val instanceof Iterable) {",
                "-                Iterable<?> it = (Iterable<?>) att.getValue();",
                "-                String scalar = null;",
                "-                for (Object o : it) {",
                "-                    String ts;",
                "-                    if (o instanceof String) {",
                "-                        ts = \"String\";",
                "-                    } else if (o instanceof Long) {",
                "-                        ts = \"Long\";",
                "-                    } else if (o instanceof Double) {",
                "-                        ts = \"Double\";",
                "-                    } else if (o instanceof Version) {",
                "-                        ts = \"Version\";",
                "-                    } else {",
                "-                        throw new IllegalArgumentException(\"Unsupported scalar type: \" + o);",
                "-                    }",
                "-                    if (scalar == null) {",
                "-                        scalar = ts;",
                "-                    } else if (!scalar.equals(ts)) {",
                "-                        throw new IllegalArgumentException(\"Unconsistent list type for attribute \" + key);",
                "-                    }",
                "-                }",
                "-                writer.writeAttribute(TYPE, \"List<\" + scalar + \">\");",
                "-                StringBuilder sb = new StringBuilder();",
                "-                boolean first = true;",
                "-                for (Object o : it) {",
                "-                    if (first) {",
                "-                        first = false;",
                "-                    } else {",
                "-                        sb.append(\",\");",
                "-                    }",
                "-                    sb.append(o.toString().replace(\",\", \"\\\\,\"));",
                "-                }",
                "-                val = sb.toString();",
                "-            }",
                "-            writer.writeAttribute(VALUE, val.toString());",
                "-            writer.writeEndElement();",
                "-        }",
                "-        writer.writeEndElement();",
                "-    }",
                "-",
                "-    public static XmlRepository parse(InputStream is) throws XMLStreamException {",
                "-        return parse(null, is, null);",
                "-    }",
                "-",
                "-    public static XmlRepository parse(URI repositoryUrl, InputStream is) throws XMLStreamException {",
                "-        return parse(repositoryUrl, is, null);",
                "-    }",
                "-",
                "-    public static XmlRepository parse(URI repositoryUrl, InputStream is, XmlRepository previous) throws XMLStreamException {",
                "-        XMLStreamReader reader = getInputFactory().createXMLStreamReader(is);",
                "-        try {",
                "-            int event = reader.nextTag();",
                "-            if (event != START_ELEMENT || !REPOSITORY.equals(reader.getLocalName())) {",
                "-                throw new IllegalStateException(\"Expected element 'repository' at the root of the document\");",
                "-            }",
                "-            XmlRepository repo = new XmlRepository();",
                "-            for (int i = 0, nb = reader.getAttributeCount(); i < nb; i++) {",
                "-                String attrName = reader.getAttributeLocalName(i);",
                "-                String attrValue = reader.getAttributeValue(i);",
                "-                switch (attrName) {",
                "-                case REPO_NAME:",
                "-                    repo.name = attrValue;",
                "-                    break;",
                "-                case INCREMENT:",
                "-                    repo.increment = Long.parseLong(attrValue);",
                "-                    break;",
                "-                default:",
                "-                    throw new IllegalStateException(\"Unexpected attribute '\" + attrName + \"'\");",
                "-                }",
                "-            }",
                "-            if (previous != null && repo.increment == previous.increment) {",
                "-                return previous;",
                "-            }",
                "-            while ((event = reader.nextTag()) == START_ELEMENT) {",
                "-                String element = reader.getLocalName();",
                "-                switch (element) {",
                "-                case REFERRAL:",
                "-                    Referral referral = new Referral();",
                "-                    for (int i = 0, nb = reader.getAttributeCount(); i < nb; i++) {",
                "-                        String attrName = reader.getAttributeLocalName(i);",
                "-                        String attrValue = reader.getAttributeValue(i);",
                "-                        switch (attrName) {",
                "-                        case DEPTH:",
                "-                            referral.depth = Integer.parseInt(attrValue);",
                "-                            break;",
                "-                        case URL:",
                "-                            referral.url = attrValue;",
                "-                            break;",
                "-                        default:",
                "-                            throw new IllegalStateException(\"Unexpected attribute '\" + attrName + \"'\");",
                "-                        }",
                "-                    }",
                "-                    if (referral.url == null) {",
                "-                        throw new IllegalStateException(\"Expected attribute '\" + URL + \"'\");",
                "-                    }",
                "-                    repo.referrals.add(referral);",
                "-                    sanityCheckEndElement(reader, reader.nextTag(), REFERRAL);",
                "-                    break;",
                "-                case RESOURCE:",
                "-                    repo.resources.add(parseResource(repositoryUrl, reader));",
                "-                    break;",
                "-                default:",
                "-                    throw new IllegalStateException(\"Unsupported element '\" + element + \"'. Expected 'referral' or 'resource'\");",
                "-                }",
                "-            }",
                "-            // Sanity check",
                "-            sanityCheckEndElement(reader, event, REPOSITORY);",
                "-            return repo;",
                "-        } finally {",
                "-            reader.close();",
                "-        }",
                "-    }",
                "-",
                "-    private static void sanityCheckEndElement(XMLStreamReader reader, int event, String element) {",
                "-        if (event != END_ELEMENT || !element.equals(reader.getLocalName())) {",
                "-            throw new IllegalStateException(\"Unexpected state while finishing element \" + element);",
                "-        }",
                "-    }",
                "-",
                "-    private static ResourceImpl parseResource(URI repositoryUrl, XMLStreamReader reader) {",
                "-        try {",
                "-            if (reader.getAttributeCount() > 0) {",
                "-                throw new IllegalStateException(\"Unexpected attribute '\" + reader.getAttributeLocalName(0) + \"'\");",
                "-            }",
                "-            ResourceImpl resource = new ResourceImpl();",
                "-            int event;",
                "-            while ((event = reader.nextTag()) == START_ELEMENT) {",
                "-                String element = reader.getLocalName();",
                "-                switch (element) {",
                "-                case CAPABILITY:",
                "-                    CapabilityImpl cap = parseCapability(reader, resource);",
                "-                    // Resolve relative resource urls now",
                "-                    if (repositoryUrl != null && ContentNamespace.CONTENT_NAMESPACE.equals(cap.getNamespace())) {",
                "-                        Object url = cap.getAttributes().get(ContentNamespace.CAPABILITY_URL_ATTRIBUTE);",
                "-                        if (url instanceof String) {",
                "-                            url = repositoryUrl.resolve(url.toString()).toString();",
                "-                            cap.getAttributes().put(ContentNamespace.CAPABILITY_URL_ATTRIBUTE, url);",
                "-                        }",
                "-                    }",
                "-                    resource.addCapability(cap);",
                "-                    break;",
                "-                case REQUIREMENT:",
                "-                    resource.addRequirement(parseRequirement(reader, resource));",
                "-                    break;",
                "-                default:",
                "-                    while ((event = reader.next()) != END_ELEMENT) {",
                "-                        switch (event) {",
                "-                        case START_ELEMENT:",
                "-                            throw new IllegalStateException(\"Unexpected element '\" + reader.getLocalName() + \"' inside 'resource' element\");",
                "-                        case CHARACTERS:",
                "-                            throw new IllegalStateException(\"Unexpected text inside 'resource' element\");",
                "-                        default:",
                "-                            break;",
                "-                        }",
                "-                    }",
                "-                    break;",
                "-                }",
                "-            }",
                "-            // Sanity check",
                "-            sanityCheckEndElement(reader, event, RESOURCE);",
                "-            return resource;",
                "-        } catch (Exception e) {",
                "-            Location loc = reader.getLocation();",
                "-            if (loc != null) {",
                "-                throw new IllegalStateException(\"Error while parsing resource at line \" + loc.getLineNumber() + \" and column \" + loc.getColumnNumber(), e);",
                "-            } else {",
                "-                throw new IllegalStateException(\"Error while parsing resource\", e);",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private static CapabilityImpl parseCapability(XMLStreamReader reader, ResourceImpl resource) throws XMLStreamException {",
                "-        String[] namespace = new String[1];",
                "-        Map<String, String> directives = new HashMap<>();",
                "-        Map<String, Object> attributes = new HashMap<>();",
                "-        parseClause(reader, namespace, directives, attributes);",
                "-        sanityCheckEndElement(reader, reader.getEventType(), CAPABILITY);",
                "-        return new CapabilityImpl(resource, namespace[0], directives, attributes);",
                "-    }",
                "-",
                "-    private static RequirementImpl parseRequirement(XMLStreamReader reader, ResourceImpl resource) throws XMLStreamException {",
                "-        String[] namespace = new String[1];",
                "-        Map<String, String> directives = new HashMap<>();",
                "-        Map<String, Object> attributes = new HashMap<>();",
                "-        parseClause(reader, namespace, directives, attributes);",
                "-        sanityCheckEndElement(reader, reader.getEventType(), REQUIREMENT);",
                "-        String filterStr = directives.get(Constants.FILTER_DIRECTIVE);",
                "-        SimpleFilter sf = (filterStr != null)",
                "-                ? SimpleFilter.parse(filterStr)",
                "-                : SimpleFilter.convert(attributes);",
                "-        return new RequirementImpl(resource, namespace[0], directives, attributes, sf);",
                "-    }",
                "-",
                "-    private static void parseClause(XMLStreamReader reader, String[] namespace, Map<String, String> directives, Map<String, Object> attributes) throws XMLStreamException {",
                "-        namespace[0] = null;",
                "-        for (int i = 0, nb = reader.getAttributeCount(); i < nb; i++) {",
                "-            String name = reader.getAttributeLocalName(i);",
                "-            String value = reader.getAttributeValue(i);",
                "-            if (NAMESPACE.equals(name)) {",
                "-                namespace[0] = value;",
                "-            } else {",
                "-                throw new IllegalStateException(\"Unexpected attribute: '\" + name + \"'. Expected 'namespace'\");",
                "-            }",
                "-        }",
                "-        if (namespace[0] == null) {",
                "-            throw new IllegalStateException(\"Expected attribute 'namespace'\");",
                "-        }",
                "-        while (reader.nextTag() == START_ELEMENT) {",
                "-            String element = reader.getLocalName();",
                "-            switch (element) {",
                "-            case DIRECTIVE: {",
                "-                String name = null;",
                "-                String value = null;",
                "-                for (int i = 0, nb = reader.getAttributeCount(); i < nb; i++) {",
                "-                    String attName = reader.getAttributeLocalName(i);",
                "-                    String attValue = reader.getAttributeValue(i);",
                "-                    switch (attName) {",
                "-                    case NAME:",
                "-                        name = attValue;",
                "-                        break;",
                "-                    case VALUE:",
                "-                        value = attValue;",
                "-                        break;",
                "-                    default:",
                "-                        throw new IllegalStateException(\"Unexpected attribute: '\" + attName + \"'. Expected 'name', or 'value'.\");",
                "-                    }",
                "-                }",
                "-                if (name == null || value == null) {",
                "-                    throw new IllegalStateException(\"Expected attribute 'name' and 'value'\");",
                "-                }",
                "-                directives.put(name, value);",
                "-                sanityCheckEndElement(reader, reader.nextTag(), DIRECTIVE);",
                "-                break;",
                "-            }",
                "-            case ATTRIBUTE: {",
                "-                String name = null;",
                "-                String value = null;",
                "-                String type = \"String\";",
                "-                for (int i = 0, nb = reader.getAttributeCount(); i < nb; i++) {",
                "-                    String attName = reader.getAttributeLocalName(i);",
                "-                    String attValue = reader.getAttributeValue(i);",
                "-                    switch (attName) {",
                "-                    case NAME:",
                "-                        name = attValue;",
                "-                        break;",
                "-                    case VALUE:",
                "-                        value = attValue;",
                "-                        break;",
                "-                    case TYPE:",
                "-                        type = attValue;",
                "-                        break;",
                "-                    default:",
                "-                        throw new IllegalStateException(\"Unexpected attribute: '\" + attName + \"'. Expected 'name', 'value' or 'type'.\");",
                "-                    }",
                "-                }",
                "-                if (name == null || value == null) {",
                "-                    throw new IllegalStateException(\"Expected attribute 'name' and 'value'\");",
                "-                }",
                "-                attributes.put(name, parseAttribute(value, type));",
                "-                sanityCheckEndElement(reader, reader.nextTag(), ATTRIBUTE);",
                "-                break;",
                "-            }",
                "-            default:",
                "-                throw new IllegalStateException(\"Unexpected element: '\" + element + \". Expected 'directive' or 'attribute'\");",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private static Object parseAttribute(String value, String type) {",
                "-        if (\"String\".equals(type)) {",
                "-            return value;",
                "-        } else if (\"Version\".equals(type)) {",
                "-            return VersionTable.getVersion(value);",
                "-        } else if (\"Long\".equals(type)) {",
                "-            return Long.parseLong(value.trim());",
                "-        } else if (\"Double\".equals(type)) {",
                "-            return Double.parseDouble(value.trim());",
                "-        } else if (type.startsWith(\"List<\") && type.endsWith(\">\")) {",
                "-            type = type.substring(\"List<\".length(), type.length() - 1);",
                "-            List<Object> list = new ArrayList<>();",
                "-            for (String s : value.split(\",\")) {",
                "-                list.add(parseAttribute(s.trim(), type));",
                "-            }",
                "-            return list;",
                "-        } else {",
                "-            throw new IllegalStateException(\"Unexpected type: '\" + type + \"'\");",
                "-        }",
                "-    }",
                "-",
                "-    private static synchronized XMLInputFactory getInputFactory() {",
                "-        if (StaxParser.inputFactory == null) {",
                "-            XMLInputFactory factory = XMLInputFactory.newInstance();",
                "-            factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true);",
                "-            StaxParser.inputFactory = factory;",
                "-        }",
                "-        return StaxParser.inputFactory;",
                "-    }",
                "-",
                "-    private static synchronized XMLOutputFactory getOutputFactory() {",
                "-        if (StaxParser.outputFactory == null) {",
                "-            StaxParser.outputFactory = XMLOutputFactory.newInstance();",
                "-        }",
                "-        return StaxParser.outputFactory;",
                "-    }",
                "-",
                "-}",
                "\\ No newline at end of file",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/UrlLoader.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/UrlLoader.java",
                "deleted file mode 100644",
                "index 41652f0801..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/UrlLoader.java",
                "+++ /dev/null",
                "@@ -1,126 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.repository;",
                "-",
                "-import java.io.BufferedInputStream;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.net.HttpURLConnection;",
                "-import java.net.URL;",
                "-import java.net.URLConnection;",
                "-import java.nio.charset.StandardCharsets;",
                "-import java.util.zip.GZIPInputStream;",
                "-",
                "-import static java.net.HttpURLConnection.HTTP_NOT_MODIFIED;",
                "-import static java.net.HttpURLConnection.HTTP_OK;",
                "-",
                "-/**",
                "- */",
                "-public abstract class UrlLoader {",
                "-",
                "-    public static final String HEADER_ACCEPT_ENCODING = \"Accept-Encoding\";",
                "-    public static final String GZIP = \"gzip\";",
                "-",
                "-    private final String url;",
                "-    private final long expiration;",
                "-    private long lastModified;",
                "-    private long lastChecked;",
                "-",
                "-    public UrlLoader(String url, long expiration) {",
                "-        this.url = url;",
                "-        this.expiration = expiration;",
                "-    }",
                "-",
                "-    public String getUrl() {",
                "-        return url;",
                "-    }",
                "-",
                "-    protected boolean checkAndLoadCache() {",
                "-        long time = System.currentTimeMillis();",
                "-        if (lastChecked > 0) {",
                "-            if (expiration < 0 || time - lastChecked < expiration) {",
                "-                return false;",
                "-            }",
                "-        }",
                "-        try {",
                "-            URL u = new java.net.URL(url);",
                "-            URLConnection connection = u.openConnection();",
                "-            if (connection instanceof HttpURLConnection) {",
                "-                HttpURLConnection con = (HttpURLConnection) connection;",
                "-                if (lastModified > 0) {",
                "-                    con.setIfModifiedSince(lastModified);",
                "-                }",
                "-                con.setRequestProperty(HEADER_ACCEPT_ENCODING, GZIP);",
                "-                if (u.getUserInfo() != null)  {",
                "-                    String encoded = java.util.Base64.getEncoder().encodeToString((u.getUserInfo()).getBytes(StandardCharsets.UTF_8));",
                "-                    connection.setRequestProperty(\"Authorization\", \"Basic \" + encoded);",
                "-                }",
                "-                int rc = con.getResponseCode();",
                "-                if (rc == HTTP_NOT_MODIFIED) {",
                "-                    lastChecked = time;",
                "-                    return false;",
                "-                }",
                "-                if (rc != HTTP_OK) {",
                "-                    throw new IOException(\"Unexpected http response loading \" + url + \" : \" + rc + \" \" + con.getResponseMessage());",
                "-                }",
                "-            }",
                "-            ",
                "-            if (didNotChange(connection)) {",
                "-                lastChecked = time;",
                "-                return false;",
                "-            }",
                "-            boolean wasRead = read(connection);",
                "-            lastModified = connection.getLastModified();",
                "-            lastChecked = time;",
                "-            return wasRead;",
                "-        } catch (IOException e) {",
                "-            throw new RuntimeException(e);",
                "-        }",
                "-    }",
                "-",
                "-    private boolean didNotChange(URLConnection connection) {",
                "-        long lm = connection.getLastModified();",
                "-        return lm > 0 && lm <= lastModified;",
                "-    }",
                "-",
                "-    private boolean read(URLConnection connection) throws IOException {",
                "-        InputStream is = null;",
                "-        try {",
                "-            is = new BufferedInputStream(connection.getInputStream());",
                "-            if (isGzipStream(is)) {",
                "-                is = new GZIPInputStream(is);",
                "-            }",
                "-            return doRead(is);",
                "-        } finally {",
                "-            // cannot be use try-with-resources, as it would not close GZIPInpuStream",
                "-            if (is != null) {",
                "-                is.close();",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private boolean isGzipStream(InputStream is) throws IOException {",
                "-        is.mark(512);",
                "-        int b0 = is.read();",
                "-        int b1 = is.read();",
                "-        is.reset();",
                "-        return (b0 == 0x1f && b1 == 0x8b);",
                "-    }",
                "-",
                "-    protected abstract boolean doRead(InputStream is) throws IOException;",
                "-",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/repository/XmlRepository.java b/features/core/src/main/java/org/apache/karaf/features/internal/repository/XmlRepository.java",
                "index 48de660703..10382b83df 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/repository/XmlRepository.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/repository/XmlRepository.java",
                "@@ -18,24 +18,4 @@ package org.apache.karaf.features.internal.repository;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.net.URI;",
                "-import java.util.Collection;",
                "-import java.util.HashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.concurrent.locks.ReadWriteLock;",
                "-import java.util.concurrent.locks.ReentrantReadWriteLock;",
                "-",
                "-import javax.xml.stream.XMLStreamException;",
                "-",
                "-import org.apache.karaf.features.internal.resolver.CapabilitySet;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-",
                "-import static org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE;",
                "-import static org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE;",
                "-import static org.osgi.framework.namespace.IdentityNamespace.IDENTITY_NAMESPACE;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "@@ -45,13 +25,10 @@ import static org.osgi.framework.namespace.IdentityNamespace.IDENTITY_NAMESPACE;",
                "  */",
                "-public class XmlRepository extends BaseRepository {",
                "+public class XmlRepository extends org.apache.felix.utils.repository.XmlRepository {",
                "+",
                "+    private static final Logger LOGGER = LoggerFactory.getLogger(JsonRepository.class);",
                "-    protected final String url;",
                "-    protected final long expiration;",
                "     protected final boolean ignoreFailures;",
                "-    protected final Map<String, XmlLoader> loaders = new HashMap<>();",
                "-    protected final ReadWriteLock lock = new ReentrantReadWriteLock();",
                "     public XmlRepository(String url, long expiration, boolean ignoreFailures) {",
                "-        this.url = url;",
                "-        this.expiration = expiration;",
                "+        super(url, expiration);",
                "         this.ignoreFailures = ignoreFailures;",
                "@@ -59,73 +36,8 @@ public class XmlRepository extends BaseRepository {",
                "-    @Override",
                "-    public List<Resource> getResources() {",
                "-        checkAndLoadCache();",
                "-        return super.getResources();",
                "-    }",
                "-",
                "-    @Override",
                "-    public Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements) {",
                "-        checkAndLoadCache();",
                "-        return super.findProviders(requirements);",
                "-    }",
                "-",
                "-    public String getUrl() {",
                "-        return url;",
                "-    }",
                "-",
                "-    protected Map<String, XmlLoader> getLoaders() {",
                "-        return loaders;",
                "-    }",
                "-",
                "-    @Override",
                "-    protected void addResource(Resource resource) {",
                "-        List<Capability> identities = resource.getCapabilities(IDENTITY_NAMESPACE);",
                "-        if (identities.isEmpty()) {",
                "-            throw new IllegalStateException(\"Invalid resource: a capability with 'osgi.identity' namespace is required\");",
                "-        } else if (identities.size() > 1) {",
                "-            throw new IllegalStateException(\"Invalid resource: multiple 'osgi.identity' capabilities found\");",
                "-        }",
                "-        Capability identity = identities.get(0);",
                "-        Object name = identity.getAttributes().get(IDENTITY_NAMESPACE);",
                "-        Object type = identity.getAttributes().get(CAPABILITY_TYPE_ATTRIBUTE);",
                "-        Object vers = identity.getAttributes().get(CAPABILITY_VERSION_ATTRIBUTE);",
                "-        if (!String.class.isInstance(name)",
                "-                || !String.class.isInstance(type)",
                "-                || !Version.class.isInstance(vers)) {",
                "-            throw new IllegalStateException(\"Invalid osgi.identity capability: \" + identity);",
                "-        }",
                "-        if (!hasResource((String) type, (String) name, (Version) vers)) {",
                "-            super.addResource(resource);",
                "-        }",
                "-    }",
                "-",
                "-    private boolean hasResource(String type, String name, Version version) {",
                "-        CapabilitySet set = capSets.get(IDENTITY_NAMESPACE);",
                "-        if (set != null) {",
                "-            Map<String, Object> attrs = new HashMap<>();",
                "-            attrs.put(CAPABILITY_TYPE_ATTRIBUTE, type);",
                "-            attrs.put(IDENTITY_NAMESPACE, name);",
                "-            attrs.put(CAPABILITY_VERSION_ATTRIBUTE, version);",
                "-            SimpleFilter sf = SimpleFilter.convert(attrs);",
                "-            return !set.match(sf, true).isEmpty();",
                "-        } else {",
                "-            return false;",
                "-        }",
                "-    }",
                "-",
                "-    private void checkAndLoadCache() {",
                "+    protected void checkAndLoadCache() {",
                "         try {",
                "-            if (checkAndLoadReferrals(url, Integer.MAX_VALUE)) {",
                "-                lock.writeLock().lock();",
                "-                try {",
                "-                    resources.clear();",
                "-                    capSets.clear();",
                "-                    populate(loaders.get(url).xml, Integer.MAX_VALUE);",
                "-                } finally {",
                "-                    lock.writeLock().unlock();",
                "-                }",
                "-            }",
                "+            super.checkAndLoadCache();",
                "         } catch (Exception e) {",
                "             if (ignoreFailures) {",
                "-                logger.warn(\"Ignoring failure: \" + e.getMessage(), e);",
                "+                LOGGER.warn(\"Ignoring failure: \" + e.getMessage(), e);",
                "             } else {",
                "@@ -136,50 +48,2 @@ public class XmlRepository extends BaseRepository {",
                "-    private void populate(StaxParser.XmlRepository xml, int hopCount) {",
                "-        if (hopCount > 0) {",
                "-            for (Resource resource : xml.resources) {",
                "-                addResource(resource);",
                "-            }",
                "-            for (StaxParser.Referral referral : xml.referrals) {",
                "-                populate(loaders.get(referral.url).xml, Math.min(referral.depth, hopCount - 1));",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private boolean checkAndLoadReferrals(String url, int hopCount) {",
                "-        boolean modified = false;",
                "-        if (hopCount > 0) {",
                "-            XmlLoader loader = loaders.computeIfAbsent(url, u -> new XmlLoader(u, expiration));",
                "-            modified = loader.checkAndLoadCache();",
                "-            for (StaxParser.Referral referral : loader.xml.referrals) {",
                "-                modified |= checkAndLoadReferrals(referral.url, Math.min(referral.depth, hopCount - 1));",
                "-            }",
                "-        }",
                "-        return modified;",
                "-    }",
                "-",
                "-    protected static class XmlLoader extends UrlLoader {",
                "-",
                "-        protected StaxParser.XmlRepository xml;",
                "-",
                "-        public XmlLoader(String url, long expiration) {",
                "-            super(url, expiration);",
                "-        }",
                "-",
                "-        public XmlLoader(String url, long expiration, StaxParser.XmlRepository xml) {",
                "-            super(url, expiration);",
                "-            this.xml = xml;",
                "-        }",
                "-",
                "-        @Override",
                "-        protected boolean doRead(InputStream is) throws IOException {",
                "-            try {",
                "-                StaxParser.XmlRepository oldXml = xml;",
                "-                xml = StaxParser.parse(URI.create(getUrl()), is, oldXml);",
                "-                return oldXml != xml;",
                "-            } catch (XMLStreamException e) {",
                "-                throw new IOException(\"Unable to read xml repository\", e);",
                "-            }",
                "-        }",
                "-    }",
                "-",
                " }",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/BaseClause.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/BaseClause.java",
                "deleted file mode 100644",
                "index 8e64156653..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/BaseClause.java",
                "+++ /dev/null",
                "@@ -1,114 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.Map;",
                "-",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.resource.Resource;",
                "-",
                "-/**",
                "- */",
                "-public abstract class BaseClause {",
                "-",
                "-    public abstract Resource getResource();",
                "-",
                "-    public abstract String getNamespace();",
                "-",
                "-    public abstract Map<String, String> getDirectives();",
                "-",
                "-    public abstract Map<String, Object> getAttributes();",
                "-",
                "-    @Override",
                "-    public String toString() {",
                "-        return toString(getResource(), getNamespace(), getAttributes(), getDirectives());",
                "-    }",
                "-",
                "-    public static String toString(Resource res, String namespace, Map<String, Object> attrs, Map<String, String> dirs) {",
                "-        StringBuilder sb = new StringBuilder();",
                "-        if (res != null) {",
                "-            sb.append(\"[\").append(res).append(\"] \");",
                "-        }",
                "-        sb.append(namespace);",
                "-        for (String key : attrs.keySet()) {",
                "-            sb.append(\"; \");",
                "-            append(sb, key, attrs.get(key), true);",
                "-        }",
                "-        for (String key : dirs.keySet()) {",
                "-            sb.append(\"; \");",
                "-            append(sb, key, dirs.get(key), false);",
                "-        }",
                "-        return sb.toString();",
                "-    }",
                "-",
                "-    private static void append(StringBuilder sb, String key, Object val, boolean attribute) {",
                "-        sb.append(key);",
                "-        if (val instanceof Version) {",
                "-            sb.append(\":Version=\");",
                "-            sb.append(val);",
                "-        } else if (val instanceof Long) {",
                "-            sb.append(\":Long=\");",
                "-            sb.append(val);",
                "-        } else if (val instanceof Double) {",
                "-            sb.append(\":Double=\");",
                "-            sb.append(val);",
                "-        } else if (val instanceof Iterable) {",
                "-            Iterable<?> it = (Iterable<?>) val;",
                "-            String scalar = null;",
                "-            for (Object o : it) {",
                "-                String ts;",
                "-                if (o instanceof String) {",
                "-                    ts = \"String\";",
                "-                } else if (o instanceof Long) {",
                "-                    ts = \"Long\";",
                "-                } else if (o instanceof Double) {",
                "-                    ts = \"Double\";",
                "-                } else if (o instanceof Version) {",
                "-                    ts = \"Version\";",
                "-                } else {",
                "-                    throw new IllegalArgumentException(\"Unsupported scalar type: \" + o);",
                "-                }",
                "-                if (scalar == null) {",
                "-                    scalar = ts;",
                "-                } else if (!scalar.equals(ts)) {",
                "-                    throw new IllegalArgumentException(\"Unconsistent list type for attribute \" + key);",
                "-                }",
                "-            }",
                "-            sb.append(\":List<\").append(scalar).append(\">=\");",
                "-            sb.append(\"\\\"\");",
                "-            boolean first = true;",
                "-            for (Object o : it) {",
                "-                if (first) {",
                "-                    first = false;",
                "-                } else {",
                "-                    sb.append(\",\");",
                "-                }",
                "-                sb.append(o.toString().replace(\"\\\"\", \"\\\\\\\"\").replace(\",\", \"\\\\,\"));",
                "-            }",
                "-            sb.append(\"\\\"\");",
                "-        } else {",
                "-            sb.append(attribute ? \"=\" : \":=\");",
                "-            String s = val.toString();",
                "-            if (s.matches(\"[0-9a-zA-Z_\\\\-.]*\")) {",
                "-                sb.append(s);",
                "-            } else {",
                "-                sb.append(\"\\\"\").append(s.replace(\"\\\"\", \"\\\\\\\\\")).append(\"\\\"\");",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilityImpl.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilityImpl.java",
                "deleted file mode 100644",
                "index 991e3c9acd..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilityImpl.java",
                "+++ /dev/null",
                "@@ -1,84 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.Collections;",
                "-import java.util.HashSet;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Resource;",
                "-",
                "-public class CapabilityImpl extends BaseClause implements Capability {",
                "-",
                "-    private final Resource resource;",
                "-    private final String namespace;",
                "-    private final Map<String, String> dirs;",
                "-    private final Map<String, Object> attrs;",
                "-    private final Set<String> mandatory;",
                "-",
                "-    public CapabilityImpl(Resource resource, String namespace,",
                "-                          Map<String, String> dirs, Map<String, Object> attrs) {",
                "-        this.namespace = namespace.intern();",
                "-        this.resource = resource;",
                "-        this.dirs = StringArrayMap.reduceMemory(dirs);",
                "-        this.attrs = StringArrayMap.reduceMemory(attrs);",
                "-",
                "-        // Handle mandatory directive",
                "-        Set<String> mandatory = Collections.emptySet();",
                "-        String value = this.dirs.get(Constants.MANDATORY_DIRECTIVE);",
                "-        if (value != null) {",
                "-            List<String> names = ResourceBuilder.parseDelimitedString(value, \",\");",
                "-            mandatory = new HashSet<>(names.size());",
                "-            for (String name : names) {",
                "-                // If attribute exists, then record it as mandatory.",
                "-                if (this.attrs.containsKey(name)) {",
                "-                    mandatory.add(name);",
                "-                // Otherwise, report an error.",
                "-                } else {",
                "-                    throw new IllegalArgumentException(\"Mandatory attribute '\" + name + \"' does not exist.\");",
                "-                }",
                "-            }",
                "-        }",
                "-        this.mandatory = mandatory;",
                "-    }",
                "-",
                "-    public Resource getResource() {",
                "-        return resource;",
                "-    }",
                "-",
                "-    public String getNamespace() {",
                "-        return namespace;",
                "-    }",
                "-",
                "-    public Map<String, String> getDirectives() {",
                "-        return dirs;",
                "-    }",
                "-",
                "-    public Map<String, Object> getAttributes() {",
                "-        return attrs;",
                "-    }",
                "-",
                "-    public boolean isAttributeMandatory(String name) {",
                "-        return !mandatory.isEmpty() && mandatory.contains(name);",
                "-    }",
                "-",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilitySet.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilitySet.java",
                "deleted file mode 100644",
                "index eef1cf9912..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilitySet.java",
                "+++ /dev/null",
                "@@ -1,464 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.lang.reflect.Array;",
                "-import java.lang.reflect.Constructor;",
                "-import java.util.ArrayList;",
                "-import java.util.Collection;",
                "-import java.util.HashMap;",
                "-import java.util.HashSet;",
                "-import java.util.Iterator;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.Map.Entry;",
                "-import java.util.Set;",
                "-import java.util.TreeMap;",
                "-",
                "-import org.apache.felix.utils.version.VersionTable;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.resource.Capability;",
                "-",
                "-@SuppressWarnings(\"rawtypes\")",
                "-public class CapabilitySet {",
                "-",
                "-    private static final Class<?>[] STRING_CLASS = new Class[] {String.class};",
                "-",
                "-    private final Map<String, Map<Object, Set<Capability>>> indices;",
                "-    private final Set<Capability> capSet = new HashSet<>();",
                "-",
                "-    public CapabilitySet(List<String> indexProps) {",
                "-        indices = new TreeMap<>();",
                "-        for (int i = 0; (indexProps != null) && (i < indexProps.size()); i++) {",
                "-            indices.put(",
                "-                    indexProps.get(i), new HashMap<>());",
                "-        }",
                "-    }",
                "-",
                "-    public void dump() {",
                "-        for (Entry<String, Map<Object, Set<Capability>>> entry : indices.entrySet()) {",
                "-            boolean header1 = false;",
                "-            for (Entry<Object, Set<Capability>> entry2 : entry.getValue().entrySet()) {",
                "-                boolean header2 = false;",
                "-                for (Capability cap : entry2.getValue()) {",
                "-                    if (!header1) {",
                "-                        System.out.println(entry.getKey() + \":\");",
                "-                        header1 = true;",
                "-                    }",
                "-                    if (!header2) {",
                "-                        System.out.println(\"   \" + entry2.getKey());",
                "-                        header2 = true;",
                "-                    }",
                "-                    System.out.println(\"      \" + cap);",
                "-                }",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    public void addCapability(Capability cap) {",
                "-        capSet.add(cap);",
                "-",
                "-        // Index capability.",
                "-        for (Entry<String, Map<Object, Set<Capability>>> entry : indices.entrySet()) {",
                "-            Object value = cap.getAttributes().get(entry.getKey());",
                "-            if (value != null) {",
                "-                if (value.getClass().isArray()) {",
                "-                    value = convertArrayToList(value);",
                "-                }",
                "-",
                "-                Map<Object, Set<Capability>> index = entry.getValue();",
                "-",
                "-                if (value instanceof Collection) {",
                "-                    Collection c = (Collection) value;",
                "-                    for (Object o : c) {",
                "-                        indexCapability(index, cap, o);",
                "-                    }",
                "-                } else {",
                "-                    indexCapability(index, cap, value);",
                "-                }",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private void indexCapability(",
                "-            Map<Object, Set<Capability>> index, Capability cap, Object capValue) {",
                "-        index.computeIfAbsent(capValue, k -> new HashSet<>()).add(cap);",
                "-    }",
                "-",
                "-    public void removeCapability(Capability cap) {",
                "-        if (capSet.remove(cap)) {",
                "-            for (Entry<String, Map<Object, Set<Capability>>> entry : indices.entrySet()) {",
                "-                Object value = cap.getAttributes().get(entry.getKey());",
                "-                if (value != null) {",
                "-                    if (value.getClass().isArray()) {",
                "-                        value = convertArrayToList(value);",
                "-                    }",
                "-",
                "-                    Map<Object, Set<Capability>> index = entry.getValue();",
                "-",
                "-                    if (value instanceof Collection) {",
                "-                        Collection c = (Collection) value;",
                "-                        for (Object o : c) {",
                "-                            deindexCapability(index, cap, o);",
                "-                        }",
                "-                    } else {",
                "-                        deindexCapability(index, cap, value);",
                "-                    }",
                "-                }",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private void deindexCapability(",
                "-            Map<Object, Set<Capability>> index, Capability cap, Object value) {",
                "-        Set<Capability> caps = index.get(value);",
                "-        if (caps != null) {",
                "-            caps.remove(cap);",
                "-            if (caps.isEmpty()) {",
                "-                index.remove(value);",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    public Set<Capability> match(SimpleFilter sf, boolean obeyMandatory) {",
                "-        Set<Capability> matches = match(capSet, sf);",
                "-        return obeyMandatory",
                "-                ? matchMandatory(matches, sf)",
                "-                : matches;",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    private Set<Capability> match(Set<Capability> caps, SimpleFilter sf) {",
                "-        Set<Capability> matches = new HashSet<>();",
                "-",
                "-        if (sf.getOperation() == SimpleFilter.MATCH_ALL) {",
                "-            matches.addAll(caps);",
                "-        } else if (sf.getOperation() == SimpleFilter.AND) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For AND we calculate the intersection of each subfilter.",
                "-            // We can short-circuit the AND operation if there are no",
                "-            // remaining capabilities.",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (int i = 0; (caps.size() > 0) && (i < sfs.size()); i++) {",
                "-                matches = match(caps, sfs.get(i));",
                "-                caps = matches;",
                "-            }",
                "-        } else if (sf.getOperation() == SimpleFilter.OR) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For OR we calculate the union of each subfilter.",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (SimpleFilter sf1 : sfs) {",
                "-                matches.addAll(match(caps, sf1));",
                "-            }",
                "-        } else if (sf.getOperation() == SimpleFilter.NOT) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For OR we calculate the union of each subfilter.",
                "-            matches.addAll(caps);",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (SimpleFilter sf1 : sfs) {",
                "-                matches.removeAll(match(caps, sf1));",
                "-            }",
                "-        } else {",
                "-            Map<Object, Set<Capability>> index = indices.get(sf.getName());",
                "-            if ((sf.getOperation() == SimpleFilter.EQ) && (index != null)) {",
                "-                Set<Capability> existingCaps = index.get(sf.getValue());",
                "-                if (existingCaps != null) {",
                "-                    matches.addAll(existingCaps);",
                "-                    matches.retainAll(caps);",
                "-                }",
                "-            } else {",
                "-                for (Capability cap : caps) {",
                "-                    Object lhs = cap.getAttributes().get(sf.getName());",
                "-                    if (lhs != null) {",
                "-                        if (compare(lhs, sf.getValue(), sf.getOperation())) {",
                "-                            matches.add(cap);",
                "-                        }",
                "-                    }",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        return matches;",
                "-    }",
                "-",
                "-    public static boolean matches(Capability cap, SimpleFilter sf) {",
                "-        return matchesInternal(cap, sf) && matchMandatory(cap, sf);",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    private static boolean matchesInternal(Capability cap, SimpleFilter sf) {",
                "-        boolean matched = true;",
                "-",
                "-        if (sf.getOperation() == SimpleFilter.MATCH_ALL) {",
                "-            matched = true;",
                "-        } else if (sf.getOperation() == SimpleFilter.AND) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For AND we calculate the intersection of each subfilter.",
                "-            // We can short-circuit the AND operation if there are no",
                "-            // remaining capabilities.",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (int i = 0; matched && (i < sfs.size()); i++) {",
                "-                matched = matchesInternal(cap, sfs.get(i));",
                "-            }",
                "-        } else if (sf.getOperation() == SimpleFilter.OR) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For OR we calculate the union of each subfilter.",
                "-            matched = false;",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (int i = 0; !matched && (i < sfs.size()); i++) {",
                "-                matched = matchesInternal(cap, sfs.get(i));",
                "-            }",
                "-        } else if (sf.getOperation() == SimpleFilter.NOT) {",
                "-            // Evaluate each subfilter against the remaining capabilities.",
                "-            // For OR we calculate the union of each subfilter.",
                "-            List<SimpleFilter> sfs = (List<SimpleFilter>) sf.getValue();",
                "-            for (SimpleFilter sf1 : sfs) {",
                "-                matched = !(matchesInternal(cap, sf1));",
                "-            }",
                "-        } else {",
                "-            matched = false;",
                "-            Object lhs = cap.getAttributes().get(sf.getName());",
                "-            if (lhs != null) {",
                "-                matched = compare(lhs, sf.getValue(), sf.getOperation());",
                "-            }",
                "-        }",
                "-",
                "-        return matched;",
                "-    }",
                "-",
                "-    private static Set<Capability> matchMandatory(",
                "-            Set<Capability> caps, SimpleFilter sf) {",
                "-        for (Iterator<Capability> it = caps.iterator(); it.hasNext();) {",
                "-            Capability cap = it.next();",
                "-            if (!matchMandatory(cap, sf)) {",
                "-                it.remove();",
                "-            }",
                "-        }",
                "-        return caps;",
                "-    }",
                "-",
                "-    private static boolean matchMandatory(Capability cap, SimpleFilter sf) {",
                "-        if (cap instanceof CapabilityImpl) {",
                "-            for (Entry<String, Object> entry : cap.getAttributes().entrySet()) {",
                "-                if (((CapabilityImpl) cap).isAttributeMandatory(entry.getKey())",
                "-                        && !matchMandatoryAttribute(entry.getKey(), sf)) {",
                "-                    return false;",
                "-                }",
                "-            }",
                "-        } else {",
                "-            String value = cap.getDirectives().get(Constants.MANDATORY_DIRECTIVE);",
                "-            if (value != null) {",
                "-                List<String> names = ResourceBuilder.parseDelimitedString(value, \",\");",
                "-                for (Entry<String, Object> entry : cap.getAttributes().entrySet()) {",
                "-                    if (names.contains(entry.getKey())",
                "-                            && !matchMandatoryAttribute(entry.getKey(), sf)) {",
                "-                        return false;",
                "-                    }",
                "-                }",
                "-            }",
                "-",
                "-        }",
                "-        return true;",
                "-    }",
                "-",
                "-    private static boolean matchMandatoryAttribute(String attrName, SimpleFilter sf) {",
                "-        if ((sf.getName() != null) && sf.getName().equals(attrName)) {",
                "-            return true;",
                "-        } else if (sf.getOperation() == SimpleFilter.AND) {",
                "-            List list = (List) sf.getValue();",
                "-            for (Object aList : list) {",
                "-                SimpleFilter sf2 = (SimpleFilter) aList;",
                "-                if ((sf2.getName() != null)",
                "-                        && sf2.getName().equals(attrName)) {",
                "-                    return true;",
                "-                }",
                "-            }",
                "-        }",
                "-        return false;",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    private static boolean compare(Object lhs, Object rhsUnknown, int op) {",
                "-        if (lhs == null) {",
                "-            return false;",
                "-        }",
                "-",
                "-        // If this is a PRESENT operation, then just return true immediately",
                "-        // since we wouldn't be here if the attribute wasn't present.",
                "-        if (op == SimpleFilter.PRESENT) {",
                "-            return true;",
                "-        }",
                "-",
                "-        // If the type is comparable, then we can just return the",
                "-        // result immediately.",
                "-        if (lhs instanceof Comparable) {",
                "-            // Spec says SUBSTRING is false for all types other than string.",
                "-            if ((op == SimpleFilter.SUBSTRING) && !(lhs instanceof String)) {",
                "-                return false;",
                "-            }",
                "-",
                "-            Object rhs;",
                "-            if (op == SimpleFilter.SUBSTRING) {",
                "-                rhs = rhsUnknown;",
                "-            } else {",
                "-                try {",
                "-                    rhs = coerceType(lhs, (String) rhsUnknown);",
                "-                } catch (Exception ex) {",
                "-                    return false;",
                "-                }",
                "-            }",
                "-",
                "-            switch (op) {",
                "-            case SimpleFilter.EQ:",
                "-                try {",
                "-                    return ((Comparable) lhs).compareTo(rhs) == 0;",
                "-                } catch (Exception ex) {",
                "-                    return false;",
                "-                }",
                "-            case SimpleFilter.GTE:",
                "-                try {",
                "-                    return ((Comparable) lhs).compareTo(rhs) >= 0;",
                "-                } catch (Exception ex) {",
                "-                    return false;",
                "-                }",
                "-            case SimpleFilter.LTE:",
                "-                try {",
                "-                    return ((Comparable) lhs).compareTo(rhs) <= 0;",
                "-                } catch (Exception ex) {",
                "-                    return false;",
                "-                }",
                "-            case SimpleFilter.APPROX:",
                "-                return compareApproximate(lhs, rhs);",
                "-            case SimpleFilter.SUBSTRING:",
                "-                return SimpleFilter.compareSubstring((List<String>) rhs, (String) lhs);",
                "-            default:",
                "-                throw new RuntimeException(\"Unknown comparison operator: \" + op);",
                "-            }",
                "-        }",
                "-",
                "-        // If the LHS is not a comparable or boolean, check if it is an",
                "-        // array. If so, convert it to a list so we can treat it as a",
                "-        // collection.",
                "-        if (lhs.getClass().isArray()) {",
                "-            lhs = convertArrayToList(lhs);",
                "-        }",
                "-",
                "-        // If LHS is a collection, then call compare() on each element",
                "-        // of the collection until a match is found.",
                "-        if (lhs instanceof Collection) {",
                "-            for (Object o : (Collection) lhs) {",
                "-                if (compare(o, rhsUnknown, op)) {",
                "-                    return true;",
                "-                }",
                "-            }",
                "-",
                "-            return false;",
                "-        }",
                "-",
                "-        // Spec says SUBSTRING is false for all types other than string.",
                "-        if (op == SimpleFilter.SUBSTRING) {",
                "-            return false;",
                "-        }",
                "-",
                "-        // Since we cannot identify the LHS type, then we can only perform",
                "-        // equality comparison.",
                "-        try {",
                "-            return lhs.equals(coerceType(lhs, (String) rhsUnknown));",
                "-        } catch (Exception ex) {",
                "-            return false;",
                "-        }",
                "-    }",
                "-",
                "-    private static boolean compareApproximate(Object lhs, Object rhs) {",
                "-        if (rhs instanceof String) {",
                "-            return removeWhitespace((String) lhs)",
                "-                    .equalsIgnoreCase(removeWhitespace((String) rhs));",
                "-        } else if (rhs instanceof Character) {",
                "-            return Character.toLowerCase((Character) lhs)",
                "-                    == Character.toLowerCase((Character) rhs);",
                "-        }",
                "-        return lhs.equals(rhs);",
                "-    }",
                "-",
                "-    private static String removeWhitespace(String s) {",
                "-        StringBuilder sb = new StringBuilder(s.length());",
                "-        for (int i = 0; i < s.length(); i++) {",
                "-            if (!Character.isWhitespace(s.charAt(i))) {",
                "-                sb.append(s.charAt(i));",
                "-            }",
                "-        }",
                "-        return sb.toString();",
                "-    }",
                "-",
                "-    private static Object coerceType(Object lhs, String rhsString) throws Exception {",
                "-        // If the LHS expects a string, then we can just return",
                "-        // the RHS since it is a string.",
                "-        if (lhs.getClass() == rhsString.getClass()) {",
                "-            return rhsString;",
                "-        }",
                "-",
                "-        // Try to convert the RHS type to the LHS type by using",
                "-        // the string constructor of the LHS class, if it has one.",
                "-        Object rhs;",
                "-        try {",
                "-            if (lhs instanceof Version) {",
                "-                rhs = VersionTable.getVersion(rhsString, false);",
                "-            } else",
                "-            // The Character class is a special case, since its constructor",
                "-            // does not take a string, so handle it separately.",
                "-            if (lhs instanceof Character) {",
                "-                rhs = rhsString.charAt(0);",
                "-            } else {",
                "-                // Spec says we should trim number types.",
                "-                if ((lhs instanceof Number) || (lhs instanceof Boolean)) {",
                "-                    rhsString = rhsString.trim();",
                "-                }",
                "-                Constructor ctor = lhs.getClass().getConstructor(STRING_CLASS);",
                "-                ctor.setAccessible(true);",
                "-                rhs = ctor.newInstance(rhsString);",
                "-            }",
                "-        } catch (Exception ex) {",
                "-            throw new Exception(",
                "-                    \"Could not instantiate class \"",
                "-                            + lhs.getClass().getName()",
                "-                            + \" from string constructor with argument '\"",
                "-                            + rhsString + \"' because \" + ex",
                "-            );",
                "-        }",
                "-",
                "-        return rhs;",
                "-    }",
                "-",
                "-    /**",
                "-     * This is an ugly utility method to convert an array of primitives",
                "-     * to an array of primitive wrapper objects. This method simplifies",
                "-     * processing LDAP filters since the special case of primitive arrays",
                "-     * can be ignored.",
                "-     *",
                "-     * @param array An array of primitive types.",
                "-     * @return An corresponding array using pritive wrapper objects.",
                "-     */",
                "-    private static List<Object> convertArrayToList(Object array) {",
                "-        int len = Array.getLength(array);",
                "-        List<Object> list = new ArrayList<>(len);",
                "-        for (int i = 0; i < len; i++) {",
                "-            list.add(Array.get(array, i));",
                "-        }",
                "-        return list;",
                "-    }",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/FeatureResource.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/FeatureResource.java",
                "index c5b9dd2ab8..5dff21499a 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/FeatureResource.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/FeatureResource.java",
                "@@ -21,2 +21,4 @@ import java.util.Map;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                " import org.apache.felix.utils.version.VersionRange;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/RequirementImpl.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/RequirementImpl.java",
                "deleted file mode 100644",
                "index 9dbf6c2a46..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/RequirementImpl.java",
                "+++ /dev/null",
                "@@ -1,82 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.Map;",
                "-",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-",
                "-public class RequirementImpl extends BaseClause implements Requirement {",
                "-",
                "-    private final Resource resource;",
                "-    private final String namespace;",
                "-    private final SimpleFilter filter;",
                "-    private final boolean optional;",
                "-    private final Map<String, String> dirs;",
                "-    private final Map<String, Object> attrs;",
                "-",
                "-    public RequirementImpl(",
                "-            Resource resource, String namespace,",
                "-            Map<String, String> dirs, Map<String, Object> attrs, SimpleFilter filter) {",
                "-        this.resource = resource;",
                "-        this.namespace = namespace.intern();",
                "-        this.dirs = StringArrayMap.reduceMemory(dirs);",
                "-        this.attrs = StringArrayMap.reduceMemory(attrs);",
                "-        this.filter = filter;",
                "-        // Find resolution import directives.",
                "-        optional = Constants.RESOLUTION_OPTIONAL.equals(this.dirs.get(Constants.RESOLUTION_DIRECTIVE));",
                "-    }",
                "-",
                "-    public RequirementImpl(",
                "-            Resource resource, String namespace,",
                "-            Map<String, String> dirs, Map<String, Object> attrs) {",
                "-        this(resource, namespace, dirs, attrs, SimpleFilter.convert(attrs));",
                "-    }",
                "-",
                "-    public String getNamespace() {",
                "-        return namespace;",
                "-    }",
                "-",
                "-    public Map<String, String> getDirectives() {",
                "-        return dirs;",
                "-    }",
                "-",
                "-    public Map<String, Object> getAttributes() {",
                "-        return attrs;",
                "-    }",
                "-",
                "-    public Resource getResource() {",
                "-        return resource;",
                "-    }",
                "-",
                "-    public boolean matches(Capability cap) {",
                "-        return CapabilitySet.matches(cap, getFilter());",
                "-    }",
                "-",
                "-    public boolean isOptional() {",
                "-        return optional;",
                "-    }",
                "-",
                "-    public SimpleFilter getFilter() {",
                "-        return filter;",
                "-    }",
                "-",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceBuilder.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceBuilder.java",
                "deleted file mode 100644",
                "index 68cb48f6b9..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceBuilder.java",
                "+++ /dev/null",
                "@@ -1,1209 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Collections;",
                "-import java.util.HashSet;",
                "-import java.util.Iterator;",
                "-import java.util.LinkedHashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-",
                "-import org.apache.felix.utils.version.VersionRange;",
                "-import org.apache.felix.utils.version.VersionTable;",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                "-import org.osgi.framework.BundleException;",
                "-import org.osgi.framework.Constants;",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.framework.namespace.ExecutionEnvironmentNamespace;",
                "-import org.osgi.framework.namespace.IdentityNamespace;",
                "-import org.osgi.framework.wiring.BundleRevision;",
                "-import org.osgi.namespace.service.ServiceNamespace;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-import org.osgi.service.repository.ContentNamespace;",
                "-",
                "-public final class ResourceBuilder {",
                "-",
                "-    public static final String RESOLUTION_DYNAMIC = \"dynamic\";",
                "-",
                "-    private static final char EOF = (char) -1;",
                "-",
                "-    private static final int CLAUSE_START = 0;",
                "-    private static final int PARAMETER_START = 1;",
                "-    private static final int KEY = 2;",
                "-    private static final int DIRECTIVE_OR_TYPEDATTRIBUTE = 4;",
                "-    private static final int ARGUMENT = 8;",
                "-    private static final int VALUE = 16;",
                "-",
                "-    private static final int CHAR = 1;",
                "-    private static final int DELIMITER = 2;",
                "-    private static final int STARTQUOTE = 4;",
                "-    private static final int ENDQUOTE = 8;",
                "-",
                "-    private static final Map<String, String> DEFAULT_DIRECTIVES = Collections.singletonMap(ServiceNamespace.CAPABILITY_EFFECTIVE_DIRECTIVE, ServiceNamespace.EFFECTIVE_ACTIVE);",
                "-",
                "-    private ResourceBuilder() {",
                "-    }",
                "-",
                "-    public static ResourceImpl build(String uri, Map<String, String> headerMap) throws BundleException {",
                "-        return build(new ResourceImpl(), uri, headerMap, false);",
                "-    }",
                "-",
                "-    public static ResourceImpl build(String uri, Map<String, String> headerMap, boolean removeServiceRequirements) throws BundleException {",
                "-        return build(new ResourceImpl(), uri, headerMap, removeServiceRequirements);",
                "-    }",
                "-",
                "-    public static ResourceImpl build(ResourceImpl resource, String uri, Map<String, String> headerMap) throws BundleException {",
                "-        return build(resource, uri, headerMap, false);",
                "-    }",
                "-",
                "-    public static ResourceImpl build(ResourceImpl resource, String uri, Map<String, String> headerMap, boolean removeServiceRequirements) throws BundleException {",
                "-        try {",
                "-            return doBuild(resource, uri, headerMap, removeServiceRequirements);",
                "-        } catch (Exception e) {",
                "-            throw new BundleException(\"Unable to build resource for \" + uri + \": \" + e.getMessage(), e);",
                "-        }",
                "-    }",
                "-",
                "-    private static ResourceImpl doBuild(ResourceImpl resource, String uri, Map<String, String> headerMap, boolean removeServiceRequirements) throws BundleException {",
                "-        // Verify that only manifest version 2 is specified.",
                "-        String manifestVersion = getManifestVersion(headerMap);",
                "-        if (manifestVersion == null || !manifestVersion.equals(\"2\")) {",
                "-            throw new BundleException(\"Unsupported 'Bundle-ManifestVersion' value: \" + manifestVersion);",
                "-        }",
                "-",
                "-        //",
                "-        // Parse bundle version.",
                "-        //",
                "-",
                "-        Version bundleVersion = Version.emptyVersion;",
                "-        if (headerMap.get(Constants.BUNDLE_VERSION) != null) {",
                "-            bundleVersion = VersionTable.getVersion(headerMap.get(Constants.BUNDLE_VERSION));",
                "-        }",
                "-",
                "-        //",
                "-        // Parse bundle symbolic name.",
                "-        //",
                "-",
                "-        String bundleSymbolicName;",
                "-        ParsedHeaderClause bundleCap = parseBundleSymbolicName(headerMap);",
                "-        if (bundleCap == null) {",
                "-            throw new BundleException(\"Bundle manifest must include bundle symbolic name\");",
                "-        }",
                "-        bundleSymbolicName = (String) bundleCap.attrs.get(BundleRevision.BUNDLE_NAMESPACE);",
                "-",
                "-        // Now that we have symbolic name and version, create the resource",
                "-        String type = headerMap.get(Constants.FRAGMENT_HOST) == null ? IdentityNamespace.TYPE_BUNDLE : IdentityNamespace.TYPE_FRAGMENT;",
                "-        {",
                "-            Map<String, Object> attrs = new StringArrayMap<>(3);",
                "-            attrs.put(IdentityNamespace.IDENTITY_NAMESPACE, bundleSymbolicName);",
                "-            attrs.put(IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE, type);",
                "-            attrs.put(IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE, bundleVersion);",
                "-            CapabilityImpl identity = new CapabilityImpl(resource, IdentityNamespace.IDENTITY_NAMESPACE, Collections.emptyMap(), attrs);",
                "-            resource.addCapability(identity);",
                "-        }",
                "-        if (uri != null) {",
                "-            resource.addCapability(new CapabilityImpl(resource, ContentNamespace.CONTENT_NAMESPACE, Collections.emptyMap(),",
                "-                Collections.singletonMap(ContentNamespace.CAPABILITY_URL_ATTRIBUTE, uri)));",
                "-        }",
                "-",
                "-        // Add a bundle and host capability to all",
                "-        // non-fragment bundles. A host capability is the same",
                "-        // as a require capability, but with a different capability",
                "-        // namespace. Bundle capabilities resolve required-bundle",
                "-        // dependencies, while host capabilities resolve fragment-host",
                "-        // dependencies.",
                "-        if (headerMap.get(Constants.FRAGMENT_HOST) == null) {",
                "-            // All non-fragment bundles have bundle capability.",
                "-            resource.addCapability(new CapabilityImpl(resource, BundleRevision.BUNDLE_NAMESPACE, bundleCap.dirs, bundleCap.attrs));",
                "-            // A non-fragment bundle can choose to not have a host capability.",
                "-            String attachment = bundleCap.dirs.get(Constants.FRAGMENT_ATTACHMENT_DIRECTIVE);",
                "-            attachment = (attachment == null) ? Constants.FRAGMENT_ATTACHMENT_RESOLVETIME : attachment;",
                "-            if (!attachment.equalsIgnoreCase(Constants.FRAGMENT_ATTACHMENT_NEVER)) {",
                "-                Map<String, Object> hostAttrs = new StringArrayMap<>(bundleCap.attrs.size());",
                "-                for (Map.Entry<String, Object> e : bundleCap.attrs.entrySet()) {",
                "-                    String k = e.getKey();",
                "-                    if (BundleRevision.BUNDLE_NAMESPACE.equals(k)) {",
                "-                        k = BundleRevision.HOST_NAMESPACE;",
                "-                    }",
                "-                    hostAttrs.put(k, e.getValue());",
                "-                }",
                "-                resource.addCapability(new CapabilityImpl(",
                "-                        resource, BundleRevision.HOST_NAMESPACE,",
                "-                        bundleCap.dirs,",
                "-                        hostAttrs));",
                "-            }",
                "-        }",
                "-",
                "-        //",
                "-        // Parse Fragment-Host.",
                "-        //",
                "-",
                "-        List<RequirementImpl> hostReqs = parseFragmentHost(resource, headerMap);",
                "-",
                "-        //",
                "-        // Parse Require-Bundle",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> rbClauses = parseStandardHeader(headerMap.get(Constants.REQUIRE_BUNDLE));",
                "-        rbClauses = normalizeRequireClauses(rbClauses);",
                "-        List<Requirement> rbReqs = convertRequires(rbClauses, resource);",
                "-",
                "-        //",
                "-        // Parse Import-Package.",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> importClauses = parseStandardHeader(headerMap.get(Constants.IMPORT_PACKAGE));",
                "-        importClauses = normalizeImportClauses(importClauses);",
                "-        List<Requirement> importReqs = convertImports(importClauses, resource);",
                "-",
                "-        //",
                "-        // Parse DynamicImport-Package.",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> dynamicClauses = parseStandardHeader(headerMap.get(Constants.DYNAMICIMPORT_PACKAGE));",
                "-        dynamicClauses = normalizeDynamicImportClauses(dynamicClauses);",
                "-        List<Requirement> dynamicReqs = convertImports(dynamicClauses, resource);",
                "-",
                "-        //",
                "-        // Parse Require-Capability.",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> requireClauses = parseStandardHeader(headerMap.get(Constants.REQUIRE_CAPABILITY));",
                "-        requireClauses = normalizeRequireCapabilityClauses(requireClauses);",
                "-        List<Requirement> requireReqs = convertRequireCapabilities(requireClauses, resource);",
                "-",
                "-        //",
                "-        // Parse Bundle-RequiredExecutionEnvironment.",
                "-        //",
                "-        List<Requirement> breeReqs =",
                "-                parseBreeHeader(headerMap.get(Constants.BUNDLE_REQUIREDEXECUTIONENVIRONMENT), resource);",
                "-",
                "-        //",
                "-        // Parse Export-Package.",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> exportClauses = parseStandardHeader(headerMap.get(Constants.EXPORT_PACKAGE));",
                "-        exportClauses = normalizeExportClauses(exportClauses, bundleSymbolicName, bundleVersion);",
                "-        List<Capability> exportCaps = convertExports(exportClauses, resource);",
                "-",
                "-        //",
                "-        // Parse Provide-Capability.",
                "-        //",
                "-",
                "-        List<ParsedHeaderClause> provideClauses = parseStandardHeader(headerMap.get(Constants.PROVIDE_CAPABILITY));",
                "-        provideClauses = normalizeProvideCapabilityClauses(provideClauses);",
                "-        List<Capability> provideCaps = convertProvideCapabilities(provideClauses, resource);",
                "-",
                "-        //",
                "-        // Parse Import-Service and Export-Service",
                "-        // if Require-Capability and Provide-Capability are not set for services",
                "-        //",
                "-",
                "-        boolean hasServiceReferenceCapability = false;",
                "-        for (Capability cap : exportCaps) {",
                "-            hasServiceReferenceCapability |= ServiceNamespace.SERVICE_NAMESPACE.equals(cap.getNamespace());",
                "-        }",
                "-        if (!hasServiceReferenceCapability) {",
                "-            List<ParsedHeaderClause> exportServices = parseStandardHeader(headerMap.get(Constants.EXPORT_SERVICE));",
                "-            List<Capability> caps = convertExportService(exportServices, resource);",
                "-            provideCaps.addAll(caps);",
                "-        }",
                "-",
                "-        boolean hasServiceReferenceRequirement = false;",
                "-        for (Requirement req : requireReqs) {",
                "-            hasServiceReferenceRequirement |= ServiceNamespace.SERVICE_NAMESPACE.equals(req.getNamespace());",
                "-        }",
                "-        if (!hasServiceReferenceRequirement) {",
                "-            List<ParsedHeaderClause> importServices = parseStandardHeader(headerMap.get(Constants.IMPORT_SERVICE));",
                "-            List<Requirement> reqs = convertImportService(importServices, resource);",
                "-            if (!reqs.isEmpty()) {",
                "-                requireReqs.addAll(reqs);",
                "-                hasServiceReferenceRequirement = true;",
                "-            }",
                "-        }",
                "-",
                "-        if (hasServiceReferenceRequirement && removeServiceRequirements) {",
                "-            for (Iterator<Requirement> iterator = requireReqs.iterator(); iterator.hasNext();) {",
                "-                Requirement req = iterator.next();",
                "-                if (ServiceNamespace.SERVICE_NAMESPACE.equals(req.getNamespace())) {",
                "-                    iterator.remove();",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        // Combine all capabilities.",
                "-        resource.addCapabilities(exportCaps);",
                "-        resource.addCapabilities(provideCaps);",
                "-",
                "-        // Combine all requirements.",
                "-        resource.addRequirements(hostReqs);",
                "-        resource.addRequirements(importReqs);",
                "-        resource.addRequirements(rbReqs);",
                "-        resource.addRequirements(requireReqs);",
                "-        resource.addRequirements(dynamicReqs);",
                "-",
                "-        return resource;",
                "-    }",
                "-",
                "-    public static List<Requirement> parseRequirement(Resource resource, String requirement) throws BundleException {",
                "-        List<ParsedHeaderClause> requireClauses = parseStandardHeader(requirement);",
                "-        requireClauses = normalizeRequireCapabilityClauses(requireClauses);",
                "-        return convertRequireCapabilities(requireClauses, resource);",
                "-    }",
                "-",
                "-    public static List<Capability> parseCapability(Resource resource, String capability) throws BundleException {",
                "-        List<ParsedHeaderClause> provideClauses = parseStandardHeader(capability);",
                "-        provideClauses = normalizeProvideCapabilityClauses(provideClauses);",
                "-        return convertProvideCapabilities(provideClauses, resource);",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"deprecation\")",
                "-    private static List<ParsedHeaderClause> normalizeImportClauses(List<ParsedHeaderClause> clauses) throws BundleException {",
                "-        // Verify that the values are equals if the package specifies",
                "-        // both version and specification-version attributes.",
                "-        Set<String> dupeSet = new HashSet<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            // Check for \"version\" and \"specification-version\" attributes",
                "-            // and verify they are the same if both are specified.",
                "-            Object v = clause.attrs.get(Constants.VERSION_ATTRIBUTE);",
                "-            Object sv = clause.attrs.get(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-            if ((v != null) && (sv != null)) {",
                "-                // Verify they are equal.",
                "-                if (!((String) v).trim().equals(((String) sv).trim())) {",
                "-                    throw new IllegalArgumentException(",
                "-                            \"Both version and specification-version are specified, but they are not equal.\");",
                "-                }",
                "-            }",
                "-",
                "-            // Ensure that only the \"version\" attribute is used and convert",
                "-            // it to the VersionRange type.",
                "-            if ((v != null) || (sv != null)) {",
                "-                clause.attrs.remove(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-                v = (v == null) ? sv : v;",
                "-                clause.attrs.put(Constants.VERSION_ATTRIBUTE, VersionRange.parseVersionRange(v.toString()));",
                "-            }",
                "-",
                "-            // If bundle version is specified, then convert its type to VersionRange.",
                "-            v = clause.attrs.get(Constants.BUNDLE_VERSION_ATTRIBUTE);",
                "-            if (v != null) {",
                "-                clause.attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, VersionRange.parseVersionRange(v.toString()));",
                "-            }",
                "-",
                "-            // Verify java.* is not imported, nor any duplicate imports.",
                "-            for (String pkgName : clause.paths) {",
                "-                if (!dupeSet.contains(pkgName)) {",
                "-                    // Verify that java.* packages are not imported.",
                "-                    if (pkgName.startsWith(\"java.\")) {",
                "-                        throw new BundleException(\"Importing java.* packages not allowed: \" + pkgName);",
                "-                    // The character \".\" has no meaning in the OSGi spec except",
                "-                    // when placed on the bundle class path. Some people, however,",
                "-                    // mistakenly think it means the default package when imported",
                "-                    // or exported. This is not correct. It is invalid.",
                "-                    } else if (pkgName.equals(\".\")) {",
                "-                        throw new BundleException(\"Importing '.' is invalid.\");",
                "-                    // Make sure a package name was specified.",
                "-                    } else if (pkgName.length() == 0) {",
                "-                        throw new BundleException(",
                "-                                \"Imported package names cannot be zero length.\");",
                "-                    }",
                "-                    dupeSet.add(pkgName);",
                "-                } else {",
                "-                    throw new BundleException(\"Duplicate import: \" + pkgName);",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<Capability> convertExportService(List<ParsedHeaderClause> clauses, Resource resource) {",
                "-        List<Capability> capList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (String path : clause.paths) {",
                "-                Map<String, Object> attrs = new LinkedHashMap<>();",
                "-                attrs.put(Constants.OBJECTCLASS, path);",
                "-                attrs.putAll(clause.attrs);",
                "-                capList.add(new CapabilityImpl(",
                "-                        resource,",
                "-                        ServiceNamespace.SERVICE_NAMESPACE,",
                "-                        DEFAULT_DIRECTIVES,",
                "-                        attrs));",
                "-            }",
                "-        }",
                "-        return capList;",
                "-    }",
                "-",
                "-    private static List<Requirement> convertImportService(List<ParsedHeaderClause> clauses, Resource resource) throws BundleException {",
                "-        try {",
                "-            List<Requirement> reqList = new ArrayList<>();",
                "-            for (ParsedHeaderClause clause : clauses) {",
                "-                for (String path : clause.paths) {",
                "-                    String multiple = clause.dirs.get(\"multiple\");",
                "-                    String avail = clause.dirs.get(\"availability\");",
                "-                    String filter = (String) clause.attrs.get(\"filter\");",
                "-                    Map<String, String> dirs = new LinkedHashMap<>(2);",
                "-                    dirs.put(ServiceNamespace.REQUIREMENT_EFFECTIVE_DIRECTIVE, ServiceNamespace.EFFECTIVE_ACTIVE);",
                "-                    if (\"optional\".equals(avail)) {",
                "-                        dirs.put(ServiceNamespace.REQUIREMENT_RESOLUTION_DIRECTIVE, ServiceNamespace.RESOLUTION_OPTIONAL);",
                "-                    }",
                "-                    if (\"true\".equals(multiple)) {",
                "-                        dirs.put(ServiceNamespace.REQUIREMENT_CARDINALITY_DIRECTIVE, ServiceNamespace.CARDINALITY_MULTIPLE);",
                "-                    }",
                "-                    if (filter == null) {",
                "-                        filter = \"(\" + Constants.OBJECTCLASS + \"=\" + path + \")\";",
                "-                    } else if (!filter.startsWith(\"(\") && !filter.endsWith(\")\")) {",
                "-                        filter = \"(&(\" + Constants.OBJECTCLASS + \"=\" + path + \")(\" + filter + \"))\";",
                "-                    } else {",
                "-                        filter = \"(&(\" + Constants.OBJECTCLASS + \"=\" + path + \")\" + filter + \")\";",
                "-                    }",
                "-                    dirs.put(ServiceNamespace.REQUIREMENT_FILTER_DIRECTIVE, filter);",
                "-                    reqList.add(new RequirementImpl(",
                "-                            resource,",
                "-                            ServiceNamespace.SERVICE_NAMESPACE,",
                "-                            dirs,",
                "-                            Collections.emptyMap(),",
                "-                            SimpleFilter.parse(filter)));",
                "-                }",
                "-            }",
                "-            return reqList;",
                "-        } catch (Exception ex) {",
                "-            throw new BundleException(\"Error creating requirement: \" + ex, ex);",
                "-        }",
                "-    }",
                "-",
                "-    private static List<Requirement> convertImports(List<ParsedHeaderClause> clauses, Resource resource) {",
                "-        // Now convert generic header clauses into requirements.",
                "-        List<Requirement> reqList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (String path : clause.paths) {",
                "-                // Prepend the package name to the array of attributes.",
                "-                Map<String, Object> attrs = clause.attrs;",
                "-                // Note that we use a linked hash map here to ensure the",
                "-                // package attribute is first, which will make indexing",
                "-                // more efficient.",
                "-                // TODO: OSGi R4.3 - This is ordering is kind of hacky.",
                "-                // Prepend the package name to the array of attributes.",
                "-                Map<String, Object> newAttrs = new LinkedHashMap<>(attrs.size() + 1);",
                "-                // We want this first from an indexing perspective.",
                "-                newAttrs.put(BundleRevision.PACKAGE_NAMESPACE, path);",
                "-                newAttrs.putAll(attrs);",
                "-                // But we need to put it again to make sure it wasn't overwritten.",
                "-                newAttrs.put(BundleRevision.PACKAGE_NAMESPACE, path);",
                "-",
                "-                // Create filter now so we can inject filter directive.",
                "-                SimpleFilter sf = SimpleFilter.convert(newAttrs);",
                "-",
                "-                // Inject filter directive.",
                "-                // TODO: OSGi R4.3 - Can we insert this on demand somehow?",
                "-                Map<String, String> dirs = clause.dirs;",
                "-                Map<String, String> newDirs = new StringArrayMap<>(dirs.size() + 1);",
                "-                newDirs.putAll(dirs);",
                "-                newDirs.put(Constants.FILTER_DIRECTIVE, sf.toString());",
                "-",
                "-                // Create package requirement and add to requirement list.",
                "-                reqList.add(",
                "-                        new RequirementImpl(",
                "-                                resource,",
                "-                                BundleRevision.PACKAGE_NAMESPACE,",
                "-                                newDirs,",
                "-                                Collections.emptyMap(),",
                "-                                sf)",
                "-                );",
                "-            }",
                "-        }",
                "-",
                "-        return reqList;",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"deprecation\")",
                "-    private static List<ParsedHeaderClause> normalizeDynamicImportClauses(List<ParsedHeaderClause> clauses) throws BundleException {",
                "-        // Verify that the values are equals if the package specifies",
                "-        // both version and specification-version attributes.",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            // Add the resolution directive to indicate that these are",
                "-            // dynamic imports.",
                "-            clause.dirs.put(Constants.RESOLUTION_DIRECTIVE, RESOLUTION_DYNAMIC);",
                "-",
                "-            // Check for \"version\" and \"specification-version\" attributes",
                "-            // and verify they are the same if both are specified.",
                "-            Object v = clause.attrs.get(Constants.VERSION_ATTRIBUTE);",
                "-            Object sv = clause.attrs.get(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-            if ((v != null) && (sv != null)) {",
                "-                // Verify they are equal.",
                "-                if (!((String) v).trim().equals(((String) sv).trim())) {",
                "-                    throw new IllegalArgumentException(",
                "-                            \"Both version and specification-version are specified, but they are not equal.\");",
                "-                }",
                "-            }",
                "-",
                "-            // Ensure that only the \"version\" attribute is used and convert",
                "-            // it to the VersionRange type.",
                "-            if ((v != null) || (sv != null)) {",
                "-                clause.attrs.remove(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-                v = (v == null) ? sv : v;",
                "-                clause.attrs.put(Constants.VERSION_ATTRIBUTE, VersionRange.parseVersionRange(v.toString()));",
                "-            }",
                "-",
                "-            // If bundle version is specified, then convert its type to VersionRange.",
                "-            v = clause.attrs.get(Constants.BUNDLE_VERSION_ATTRIBUTE);",
                "-            if (v != null) {",
                "-                clause.attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, VersionRange.parseVersionRange(v.toString()));",
                "-            }",
                "-",
                "-            // Dynamic imports can have duplicates, so verify that java.*",
                "-            // packages are not imported.",
                "-            for (String pkgName : clause.paths) {",
                "-                if (pkgName.startsWith(\"java.\")) {",
                "-                    throw new BundleException(\"Dynamically importing java.* packages not allowed: \" + pkgName);",
                "-                } else if (!pkgName.equals(\"*\") && pkgName.endsWith(\"*\") && !pkgName.endsWith(\".*\")) {",
                "-                    throw new BundleException(\"Partial package name wild carding is not allowed: \" + pkgName);",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<ParsedHeaderClause> normalizeRequireCapabilityClauses(",
                "-            List<ParsedHeaderClause> clauses) throws BundleException {",
                "-",
                "-        // Convert attributes into specified types.",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (Map.Entry<String, Object> entry : clause.attrs.entrySet()) {",
                "-                if (entry.getKey().equals(\"version\")) {",
                "-                    clause.attrs.put(entry.getKey(), new VersionRange(entry.getValue().toString()));",
                "-                }",
                "-            }",
                "-            for (Map.Entry<String, String> entry : clause.types.entrySet()) {",
                "-                String type = entry.getValue();",
                "-                if (!type.equals(\"String\")) {",
                "-                    if (type.equals(\"Double\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Double(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.equals(\"Version\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Version(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.equals(\"Long\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Long(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.startsWith(\"List\")) {",
                "-                        int startIdx = type.indexOf('<');",
                "-                        int endIdx = type.indexOf('>');",
                "-                        if (((startIdx > 0) && (endIdx <= startIdx))",
                "-                                || ((startIdx < 0) && (endIdx > 0))) {",
                "-                            throw new BundleException(",
                "-                                    \"Invalid Provide-Capability attribute list type for '\"",
                "-                                            + entry.getKey()",
                "-                                            + \"' : \"",
                "-                                            + type",
                "-                            );",
                "-                        }",
                "-",
                "-                        String listType = \"String\";",
                "-                        if (endIdx > startIdx) {",
                "-                            listType = type.substring(startIdx + 1, endIdx).trim();",
                "-                        }",
                "-",
                "-                        List<String> tokens = parseDelimitedString(",
                "-                                clause.attrs.get(entry.getKey()).toString(), \",\", false);",
                "-                        List<Object> values = new ArrayList<>(tokens.size());",
                "-                        for (String token : tokens) {",
                "-                            switch (listType) {",
                "-                            case \"String\":",
                "-                                values.add(token);",
                "-                                break;",
                "-                            case \"Double\":",
                "-                                values.add(new Double(token.trim()));",
                "-                                break;",
                "-                            case \"Version\":",
                "-                                values.add(new Version(token.trim()));",
                "-                                break;",
                "-                            case \"Long\":",
                "-                                values.add(new Long(token.trim()));",
                "-                                break;",
                "-                            default:",
                "-                                throw new BundleException(",
                "-                                        \"Unknown Provide-Capability attribute list type for '\"",
                "-                                                + entry.getKey()",
                "-                                                + \"' : \"",
                "-                                                + type",
                "-                                );",
                "-                            }",
                "-                        }",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                values);",
                "-                    } else {",
                "-                        throw new BundleException(",
                "-                                \"Unknown Provide-Capability attribute type for '\"",
                "-                                        + entry.getKey()",
                "-                                        + \"' : \"",
                "-                                        + type",
                "-                        );",
                "-                    }",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<ParsedHeaderClause> normalizeProvideCapabilityClauses(",
                "-            List<ParsedHeaderClause> clauses) throws BundleException {",
                "-",
                "-        // Convert attributes into specified types.",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (Map.Entry<String, String> entry : clause.types.entrySet()) {",
                "-                String type = entry.getValue();",
                "-                if (!type.equals(\"String\")) {",
                "-                    if (type.equals(\"Double\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Double(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.equals(\"Version\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Version(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.equals(\"Long\")) {",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                new Long(clause.attrs.get(entry.getKey()).toString().trim()));",
                "-                    } else if (type.startsWith(\"List\")) {",
                "-                        int startIdx = type.indexOf('<');",
                "-                        int endIdx = type.indexOf('>');",
                "-                        if (((startIdx > 0) && (endIdx <= startIdx))",
                "-                                || ((startIdx < 0) && (endIdx > 0))) {",
                "-                            throw new BundleException(",
                "-                                    \"Invalid Provide-Capability attribute list type for '\"",
                "-                                            + entry.getKey()",
                "-                                            + \"' : \"",
                "-                                            + type",
                "-                            );",
                "-                        }",
                "-",
                "-                        String listType = \"String\";",
                "-                        if (endIdx > startIdx) {",
                "-                            listType = type.substring(startIdx + 1, endIdx).trim();",
                "-                        }",
                "-",
                "-                        List<String> tokens = parseDelimitedString(",
                "-                                clause.attrs.get(entry.getKey()).toString(), \",\", false);",
                "-                        List<Object> values = new ArrayList<>(tokens.size());",
                "-                        for (String token : tokens) {",
                "-                            switch (listType) {",
                "-                            case \"String\":",
                "-                                values.add(token);",
                "-                                break;",
                "-                            case \"Double\":",
                "-                                values.add(new Double(token.trim()));",
                "-                                break;",
                "-                            case \"Version\":",
                "-                                values.add(new Version(token.trim()));",
                "-                                break;",
                "-                            case \"Long\":",
                "-                                values.add(new Long(token.trim()));",
                "-                                break;",
                "-                            default:",
                "-                                throw new BundleException(",
                "-                                        \"Unknown Provide-Capability attribute list type for '\"",
                "-                                                + entry.getKey()",
                "-                                                + \"' : \"",
                "-                                                + type",
                "-                                );",
                "-                            }",
                "-                        }",
                "-                        clause.attrs.put(",
                "-                                entry.getKey(),",
                "-                                values);",
                "-                    } else {",
                "-                        throw new BundleException(",
                "-                                \"Unknown Provide-Capability attribute type for '\"",
                "-                                        + entry.getKey()",
                "-                                        + \"' : \"",
                "-                                        + type",
                "-                        );",
                "-                    }",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<Requirement> convertRequireCapabilities(",
                "-            List<ParsedHeaderClause> clauses, Resource resource) throws BundleException {",
                "-",
                "-        // Now convert generic header clauses into requirements.",
                "-        List<Requirement> reqList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            try {",
                "-                String filterStr = clause.dirs.get(Constants.FILTER_DIRECTIVE);",
                "-                SimpleFilter sf = (filterStr != null)",
                "-                        ? SimpleFilter.parse(filterStr)",
                "-                        : SimpleFilter.convert(clause.attrs);",
                "-                for (String path : clause.paths) {",
                "-                    // Create requirement and add to requirement list.",
                "-                    reqList.add(new RequirementImpl(",
                "-                            resource, path, clause.dirs, clause.attrs, sf));",
                "-                }",
                "-            } catch (Exception ex) {",
                "-                throw new BundleException(\"Error creating requirement: \" + ex, ex);",
                "-            }",
                "-        }",
                "-",
                "-        return reqList;",
                "-    }",
                "-",
                "-    private static List<Capability> convertProvideCapabilities(",
                "-            List<ParsedHeaderClause> clauses, Resource resource) throws BundleException {",
                "-",
                "-        List<Capability> capList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (String path : clause.paths) {",
                "-                if (path.startsWith(\"osgi.wiring.\")) {",
                "-//                    throw new BundleException(\"Manifest cannot use Provide-Capability for '\" + path + \"' namespace.\");",
                "-                }",
                "-",
                "-                // Create package capability and add to capability list.",
                "-                capList.add(new CapabilityImpl(resource, path, clause.dirs, clause.attrs));",
                "-            }",
                "-        }",
                "-",
                "-        return capList;",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"deprecation\")",
                "-    private static List<ParsedHeaderClause> normalizeExportClauses(",
                "-            List<ParsedHeaderClause> clauses,",
                "-            String bsn, Version bv) throws BundleException {",
                "-",
                "-        // Verify that \"java.*\" packages are not exported.",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            // Verify that the named package has not already been declared.",
                "-            for (String pkgName : clause.paths) {",
                "-                // Verify that java.* packages are not exported.",
                "-                if (pkgName.startsWith(\"java.\")) {",
                "-                    throw new BundleException(\"Exporting java.* packages not allowed: \" + pkgName);",
                "-                // The character \".\" has no meaning in the OSGi spec except",
                "-                // when placed on the bundle class path. Some people, however,",
                "-                // mistakenly think it means the default package when imported",
                "-                // or exported. This is not correct. It is invalid.",
                "-                } else if (pkgName.equals(\".\")) {",
                "-                    throw new BundleException(\"Exporing '.' is invalid.\");",
                "-                // Make sure a package name was specified.",
                "-                } else if (pkgName.length() == 0) {",
                "-                    throw new BundleException(\"Exported package names cannot be zero length.\");",
                "-                }",
                "-            }",
                "-",
                "-            // Check for \"version\" and \"specification-version\" attributes",
                "-            // and verify they are the same if both are specified.",
                "-            Object v = clause.attrs.get(Constants.VERSION_ATTRIBUTE);",
                "-            Object sv = clause.attrs.get(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-            if ((v != null) && (sv != null)) {",
                "-                // Verify they are equal.",
                "-                if (!((String) v).trim().equals(((String) sv).trim())) {",
                "-                    throw new IllegalArgumentException(\"Both version and specification-version are specified, but they are not equal.\");",
                "-                }",
                "-            }",
                "-",
                "-            // Always add the default version if not specified.",
                "-            if ((v == null) && (sv == null)) {",
                "-                v = Version.emptyVersion;",
                "-            }",
                "-",
                "-            // Ensure that only the \"version\" attribute is used and convert",
                "-            // it to the appropriate type.",
                "-            if ((v != null) || (sv != null)) {",
                "-                // Convert version attribute to type Version.",
                "-                clause.attrs.remove(Constants.PACKAGE_SPECIFICATION_VERSION);",
                "-                v = (v == null) ? sv : v;",
                "-                clause.attrs.put(Constants.VERSION_ATTRIBUTE, VersionTable.getVersion(v.toString()));",
                "-            }",
                "-",
                "-            // Find symbolic name and version attribute, if present.",
                "-            if (clause.attrs.containsKey(Constants.BUNDLE_VERSION_ATTRIBUTE)",
                "-                    || clause.attrs.containsKey(Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE)) {",
                "-                throw new BundleException(\"Exports must not specify bundle symbolic name or bundle version.\");",
                "-            }",
                "-",
                "-            // Now that we know that there are no bundle symbolic name and version",
                "-            // attributes, add them since the spec says they are there implicitly.",
                "-            clause.attrs.put(Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE, bsn);",
                "-            clause.attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, bv);",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<Capability> convertExports(List<ParsedHeaderClause> clauses, Resource resource) {",
                "-        List<Capability> capList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (String pkgName : clause.paths) {",
                "-                // Prepend the package name to the array of attributes.",
                "-                Map<String, Object> attrs = clause.attrs;",
                "-                Map<String, Object> newAttrs = new StringArrayMap<>(attrs.size() + 1);",
                "-                newAttrs.putAll(attrs);",
                "-                newAttrs.put(BundleRevision.PACKAGE_NAMESPACE, pkgName);",
                "-",
                "-                // Create package capability and add to capability list.",
                "-                capList.add(new CapabilityImpl(resource, BundleRevision.PACKAGE_NAMESPACE, clause.dirs, newAttrs));",
                "-            }",
                "-        }",
                "-",
                "-        return capList;",
                "-    }",
                "-",
                "-    private static String getManifestVersion(Map<String, String> headerMap) {",
                "-        String manifestVersion = headerMap.get(Constants.BUNDLE_MANIFESTVERSION);",
                "-        return (manifestVersion == null) ? \"1\" : manifestVersion.trim();",
                "-    }",
                "-",
                "-    private static ParsedHeaderClause parseBundleSymbolicName(Map<String, String> headerMap) throws BundleException {",
                "-        List<ParsedHeaderClause> clauses = parseStandardHeader(headerMap.get(Constants.BUNDLE_SYMBOLICNAME));",
                "-        if (clauses.size() > 0) {",
                "-            if (clauses.size() > 1 || clauses.get(0).paths.size() > 1) {",
                "-                throw new BundleException(\"Cannot have multiple symbolic names: \" + headerMap.get(Constants.BUNDLE_SYMBOLICNAME));",
                "-            }",
                "-",
                "-            // Get bundle version.",
                "-            Version bundleVersion = Version.emptyVersion;",
                "-            if (headerMap.get(Constants.BUNDLE_VERSION) != null) {",
                "-                bundleVersion = VersionTable.getVersion(headerMap.get(Constants.BUNDLE_VERSION));",
                "-            }",
                "-",
                "-            // Create a require capability and return it.",
                "-            ParsedHeaderClause clause = clauses.get(0);",
                "-            String symName = clause.paths.get(0);",
                "-            clause.attrs.put(BundleRevision.BUNDLE_NAMESPACE, symName);",
                "-            clause.attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, bundleVersion);",
                "-            return clause;",
                "-        }",
                "-",
                "-        return null;",
                "-    }",
                "-",
                "-    private static List<RequirementImpl> parseFragmentHost(Resource resource, Map<String, String> headerMap) throws BundleException {",
                "-        List<RequirementImpl> reqs = new ArrayList<>();",
                "-        List<ParsedHeaderClause> clauses = parseStandardHeader(headerMap.get(Constants.FRAGMENT_HOST));",
                "-        if (clauses.size() > 0) {",
                "-            // Make sure that only one fragment host symbolic name is specified.",
                "-            if (clauses.size() > 1 || clauses.get(0).paths.size() > 1) {",
                "-                throw new BundleException(\"Fragments cannot have multiple hosts: \" + headerMap.get(Constants.FRAGMENT_HOST));",
                "-            }",
                "-",
                "-            // If the bundle-version attribute is specified, then convert",
                "-            // it to the proper type.",
                "-            Object value = clauses.get(0).attrs.get(Constants.BUNDLE_VERSION_ATTRIBUTE);",
                "-            value = (value == null) ? \"0.0.0\" : value;",
                "-            clauses.get(0).attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, VersionRange.parseVersionRange(value.toString()));",
                "-",
                "-            // Note that we use a linked hash map here to ensure the",
                "-            // host symbolic name is first, which will make indexing",
                "-            // more efficient.",
                "-            // TODO: OSGi R4.3 - This is ordering is kind of hacky.",
                "-            // Prepend the host symbolic name to the map of attributes.",
                "-            Map<String, Object> attrs = clauses.get(0).attrs;",
                "-            Map<String, Object> newAttrs = new LinkedHashMap<>(attrs.size() + 1);",
                "-            // We want this first from an indexing perspective.",
                "-            newAttrs.put(BundleRevision.HOST_NAMESPACE, clauses.get(0).paths.get(0));",
                "-            newAttrs.putAll(attrs);",
                "-            // But we need to put it again to make sure it wasn't overwritten.",
                "-            newAttrs.put(BundleRevision.HOST_NAMESPACE, clauses.get(0).paths.get(0));",
                "-",
                "-            // Create filter now so we can inject filter directive.",
                "-            SimpleFilter sf = SimpleFilter.convert(newAttrs);",
                "-",
                "-            // Inject filter directive.",
                "-            // TODO: OSGi R4.3 - Can we insert this on demand somehow?",
                "-            Map<String, String> dirs = clauses.get(0).dirs;",
                "-            Map<String, String> newDirs = new StringArrayMap<>(dirs.size() + 1);",
                "-            newDirs.putAll(dirs);",
                "-            newDirs.put(Constants.FILTER_DIRECTIVE, sf.toString());",
                "-",
                "-            reqs.add(new RequirementImpl(",
                "-                    resource, BundleRevision.HOST_NAMESPACE,",
                "-                    newDirs,",
                "-                    newAttrs));",
                "-        }",
                "-",
                "-        return reqs;",
                "-    }",
                "-",
                "-    private static List<Requirement> parseBreeHeader(String header, Resource resource) {",
                "-        List<String> filters = new ArrayList<>();",
                "-        for (String entry : parseDelimitedString(header, \",\")) {",
                "-            List<String> names = parseDelimitedString(entry, \"/\");",
                "-            List<String> left = parseDelimitedString(names.get(0), \"-\");",
                "-",
                "-            String lName = left.get(0);",
                "-            Version lVer;",
                "-            try {",
                "-                lVer = Version.parseVersion(left.get(1));",
                "-            } catch (Exception ex) {",
                "-                // Version doesn't parse. Make it part of the name.",
                "-                lName = names.get(0);",
                "-                lVer = null;",
                "-            }",
                "-",
                "-            String rName = null;",
                "-            Version rVer = null;",
                "-            if (names.size() > 1) {",
                "-                List<String> right = parseDelimitedString(names.get(1), \"-\");",
                "-                rName = right.get(0);",
                "-                try {",
                "-                    rVer = Version.parseVersion(right.get(1));",
                "-                } catch (Exception ex) {",
                "-                    rName = names.get(1);",
                "-                    rVer = null;",
                "-                }",
                "-            }",
                "-",
                "-            String versionClause;",
                "-            if (lVer != null) {",
                "-                if ((rVer != null) && (!rVer.equals(lVer))) {",
                "-                    // Both versions are defined, but different. Make each of them part of the name",
                "-                    lName = names.get(0);",
                "-                    rName = names.get(1);",
                "-                    versionClause = null;",
                "-                } else {",
                "-                    versionClause = getBreeVersionClause(lVer);",
                "-                }",
                "-            } else {",
                "-                versionClause = getBreeVersionClause(rVer);",
                "-            }",
                "-",
                "-            if (\"J2SE\".equals(lName)) {",
                "-                // J2SE is not used in the Capability variant of BREE, use JavaSE here",
                "-                // This can only happen with the lName part...",
                "-                lName = \"JavaSE\";",
                "-            }",
                "-",
                "-            String nameClause;",
                "-            if (rName != null) {",
                "-                nameClause = \"(\" + ExecutionEnvironmentNamespace.EXECUTION_ENVIRONMENT_NAMESPACE + \"=\" + lName + \"/\" + rName + \")\";",
                "-            } else {",
                "-                nameClause = \"(\" + ExecutionEnvironmentNamespace.EXECUTION_ENVIRONMENT_NAMESPACE + \"=\" + lName + \")\";",
                "-            }",
                "-",
                "-            String filter;",
                "-            if (versionClause != null) {",
                "-                filter = \"(&\" + nameClause + versionClause + \")\";",
                "-            } else {",
                "-                filter = nameClause;",
                "-            }",
                "-",
                "-            filters.add(filter);",
                "-        }",
                "-",
                "-        if (filters.size() == 0) {",
                "-            return Collections.emptyList();",
                "-        } else {",
                "-            String reqFilter;",
                "-            if (filters.size() == 1) {",
                "-                reqFilter = filters.get(0);",
                "-            } else {",
                "-                // If there are more BREE filters, we need to or them together",
                "-                StringBuilder sb = new StringBuilder(\"(|\");",
                "-                for (String f : filters) {",
                "-                    sb.append(f);",
                "-                }",
                "-                sb.append(\")\");",
                "-                reqFilter = sb.toString();",
                "-            }",
                "-",
                "-            SimpleFilter sf = SimpleFilter.parse(reqFilter);",
                "-            return Collections.singletonList(new RequirementImpl(",
                "-                    resource,",
                "-                    ExecutionEnvironmentNamespace.EXECUTION_ENVIRONMENT_NAMESPACE,",
                "-                    Collections.singletonMap(ExecutionEnvironmentNamespace.REQUIREMENT_FILTER_DIRECTIVE, reqFilter),",
                "-                    Collections.emptyMap(),",
                "-                    sf));",
                "-        }",
                "-    }",
                "-",
                "-    private static String getBreeVersionClause(Version ver) {",
                "-        if (ver == null) {",
                "-            return null;",
                "-        }",
                "-",
                "-        return \"(\" + ExecutionEnvironmentNamespace.CAPABILITY_VERSION_ATTRIBUTE + \"=\" + ver + \")\";",
                "-    }",
                "-",
                "-    private static List<ParsedHeaderClause> normalizeRequireClauses(List<ParsedHeaderClause> clauses) {",
                "-        // Convert bundle version attribute to VersionRange type.",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            Object value = clause.attrs.get(Constants.BUNDLE_VERSION_ATTRIBUTE);",
                "-            if (value != null) {",
                "-                clause.attrs.put(Constants.BUNDLE_VERSION_ATTRIBUTE, VersionRange.parseVersionRange(value.toString()));",
                "-            }",
                "-        }",
                "-",
                "-        return clauses;",
                "-    }",
                "-",
                "-    private static List<Requirement> convertRequires(List<ParsedHeaderClause> clauses, Resource resource) {",
                "-        List<Requirement> reqList = new ArrayList<>();",
                "-        for (ParsedHeaderClause clause : clauses) {",
                "-            for (String path : clause.paths) {",
                "-                // Prepend the bundle symbolic name to the array of attributes.",
                "-                Map<String, Object> attrs = clause.attrs;",
                "-                // Note that we use a linked hash map here to ensure the",
                "-                // symbolic name attribute is first, which will make indexing",
                "-                // more efficient.",
                "-                // TODO: OSGi R4.3 - This is ordering is kind of hacky.",
                "-                // Prepend the symbolic name to the array of attributes.",
                "-                Map<String, Object> newAttrs = new LinkedHashMap<>(attrs.size() + 1);",
                "-                // We want this first from an indexing perspective.",
                "-                newAttrs.put(BundleRevision.BUNDLE_NAMESPACE, path);",
                "-                newAttrs.putAll(attrs);",
                "-                // But we need to put it again to make sure it wasn't overwritten.",
                "-                newAttrs.put(BundleRevision.BUNDLE_NAMESPACE, path);",
                "-",
                "-                // Create filter now so we can inject filter directive.",
                "-                SimpleFilter sf = SimpleFilter.convert(newAttrs);",
                "-",
                "-                // Inject filter directive.",
                "-                // TODO: OSGi R4.3 - Can we insert this on demand somehow?",
                "-                Map<String, String> dirs = clause.dirs;",
                "-                Map<String, String> newDirs = new StringArrayMap<>(dirs.size() + 1);",
                "-                newDirs.putAll(dirs);",
                "-                newDirs.put(Constants.FILTER_DIRECTIVE, sf.toString());",
                "-",
                "-                // Create package requirement and add to requirement list.",
                "-                reqList.add(new RequirementImpl(resource, BundleRevision.BUNDLE_NAMESPACE, newDirs, newAttrs));",
                "-            }",
                "-        }",
                "-",
                "-        return reqList;",
                "-    }",
                "-",
                "-    private static char charAt(int pos, String headers, int length) {",
                "-        if (pos >= length) {",
                "-            return EOF;",
                "-        }",
                "-        return headers.charAt(pos);",
                "-    }",
                "-",
                "-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})",
                "-    private static List<ParsedHeaderClause> parseStandardHeader(String header) {",
                "-        List<ParsedHeaderClause> clauses = new ArrayList<>();",
                "-        if (header == null) {",
                "-            return clauses;",
                "-        }",
                "-        ParsedHeaderClause clause = null;",
                "-        String key = null;",
                "-        Map targetMap = null;",
                "-        int state = CLAUSE_START;",
                "-        int currentPosition = 0;",
                "-        int startPosition = 0;",
                "-        int length = header.length();",
                "-        boolean quoted = false;",
                "-        boolean escaped = false;",
                "-",
                "-        char currentChar;",
                "-        do {",
                "-            currentChar = charAt(currentPosition, header, length);",
                "-            switch (state) {",
                "-            case CLAUSE_START:",
                "-                clause = new ParsedHeaderClause();",
                "-                clauses.add(clause);",
                "-                // Fall through",
                "-            case PARAMETER_START:",
                "-                startPosition = currentPosition;",
                "-                state = KEY;",
                "-                // Fall through",
                "-            case KEY:",
                "-                switch (currentChar) {",
                "-                case ':':",
                "-                case '=':",
                "-                    key = header.substring(startPosition, currentPosition).trim();",
                "-                    startPosition = currentPosition + 1;",
                "-                    targetMap = clause.attrs;",
                "-                    state = currentChar == ':' ? DIRECTIVE_OR_TYPEDATTRIBUTE : ARGUMENT;",
                "-                    break;",
                "-                case EOF:",
                "-                case ',':",
                "-                case ';':",
                "-                    clause.paths.add(header.substring(startPosition, currentPosition).trim());",
                "-                    state = currentChar == ',' ? CLAUSE_START : PARAMETER_START;",
                "-                    break;",
                "-                default:",
                "-                    break;",
                "-                }",
                "-                currentPosition++;",
                "-                break;",
                "-            case DIRECTIVE_OR_TYPEDATTRIBUTE:",
                "-                switch (currentChar) {",
                "-                case '=':",
                "-                    if (startPosition != currentPosition) {",
                "-                        clause.types.put(key, header.substring(startPosition, currentPosition).trim());",
                "-                    } else {",
                "-                        targetMap = clause.dirs;",
                "-                    }",
                "-                    state = ARGUMENT;",
                "-                    startPosition = currentPosition + 1;",
                "-                    break;",
                "-                default:",
                "-                    break;",
                "-                }",
                "-                currentPosition++;",
                "-                break;",
                "-            case ARGUMENT:",
                "-                if (currentChar == '\\\"') {",
                "-                    quoted = true;",
                "-                    currentPosition++;",
                "-                } else {",
                "-                    quoted = false;",
                "-                }",
                "-                if (!Character.isWhitespace(currentChar)) {",
                "-                    state = VALUE;",
                "-                } else {",
                "-                    currentPosition++;",
                "-                }",
                "-                break;",
                "-            case VALUE:",
                "-                if (escaped) {",
                "-                    escaped = false;",
                "-                } else {",
                "-                    if (currentChar == '\\\\') {",
                "-                        escaped = true;",
                "-                    } else if (quoted && currentChar == '\\\"') {",
                "-                        quoted = false;",
                "-                    } else if (!quoted) {",
                "-                        String value;",
                "-                        switch (currentChar) {",
                "-                        case EOF:",
                "-                        case ';':",
                "-                        case ',':",
                "-                            value = header.substring(startPosition, currentPosition).trim();",
                "-                            if (value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {",
                "-                                value = value.substring(1, value.length() - 1);",
                "-                            }",
                "-                            if (targetMap.put(key, value) != null) {",
                "-                                throw new IllegalArgumentException(",
                "-                                        \"Duplicate '\" + key + \"' in: \" + header);",
                "-                            }",
                "-                            state = currentChar == ';' ? PARAMETER_START : CLAUSE_START;",
                "-                            break;",
                "-                        default:",
                "-                            break;",
                "-                        }",
                "-                    }",
                "-                }",
                "-                currentPosition++;",
                "-                break;",
                "-            default:",
                "-                break;",
                "-            }",
                "-        } while (currentChar != EOF);",
                "-",
                "-        if (state > PARAMETER_START) {",
                "-            throw new IllegalArgumentException(\"Unable to parse header: \" + header);",
                "-        }",
                "-        return clauses;",
                "-    }",
                "-",
                "-    public static List<String> parseDelimitedString(String value, String delim) {",
                "-        return parseDelimitedString(value, delim, true);",
                "-    }",
                "-",
                "-    /**",
                "-     * Parses delimited string and returns an array containing the tokens. This",
                "-     * parser obeys quotes, so the delimiter character will be ignored if it is",
                "-     * inside of a quote. This method assumes that the quote character is not",
                "-     * included in the set of delimiter characters.",
                "-     *",
                "-     * @param value the delimited string to parse.",
                "-     * @param delim the characters delimiting the tokens.",
                "-     * @param trim true to trim the string, false else.",
                "-     * @return a list of string or an empty list if there are none.",
                "-     */",
                "-    public static List<String> parseDelimitedString(String value, String delim, boolean trim) {",
                "-        if (value == null) {",
                "-            value = \"\";",
                "-        }",
                "-",
                "-        List<String> list = new ArrayList<>();",
                "-",
                "-        StringBuilder sb = new StringBuilder();",
                "-",
                "-        int expecting = CHAR | DELIMITER | STARTQUOTE;",
                "-",
                "-        boolean isEscaped = false;",
                "-        for (int i = 0; i < value.length(); i++) {",
                "-            char c = value.charAt(i);",
                "-",
                "-            boolean isDelimiter = delim.indexOf(c) >= 0;",
                "-",
                "-            if (!isEscaped && c == '\\\\') {",
                "-                isEscaped = true;",
                "-                continue;",
                "-            }",
                "-",
                "-            if (isEscaped) {",
                "-                sb.append(c);",
                "-            } else if (isDelimiter && ((expecting & DELIMITER) > 0)) {",
                "-                if (trim) {",
                "-                    list.add(sb.toString().trim());",
                "-                } else {",
                "-                    list.add(sb.toString());",
                "-                }",
                "-                sb.delete(0, sb.length());",
                "-                expecting = CHAR | DELIMITER | STARTQUOTE;",
                "-            } else if ((c == '\"') && (expecting & STARTQUOTE) > 0) {",
                "-                sb.append(c);",
                "-                expecting = CHAR | ENDQUOTE;",
                "-            } else if ((c == '\"') && (expecting & ENDQUOTE) > 0) {",
                "-                sb.append(c);",
                "-                expecting = CHAR | STARTQUOTE | DELIMITER;",
                "-            } else if ((expecting & CHAR) > 0) {",
                "-                sb.append(c);",
                "-            } else {",
                "-                throw new IllegalArgumentException(\"Invalid delimited string: \" + value);",
                "-            }",
                "-",
                "-            isEscaped = false;",
                "-        }",
                "-",
                "-        if (sb.length() > 0) {",
                "-            if (trim) {",
                "-                list.add(sb.toString().trim());",
                "-            } else {",
                "-                list.add(sb.toString());",
                "-            }",
                "-        }",
                "-",
                "-        return list;",
                "-    }",
                "-",
                "-",
                "-    static class ParsedHeaderClause {",
                "-        public final List<String> paths = new ArrayList<>();",
                "-        public final Map<String, String> dirs = new StringArrayMap<>(0);",
                "-        public final Map<String, Object> attrs = new StringArrayMap<>(0);",
                "-        public final Map<String, String> types = new StringArrayMap<>(0);",
                "-    }",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceImpl.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceImpl.java",
                "deleted file mode 100644",
                "index 892cfc79ca..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceImpl.java",
                "+++ /dev/null",
                "@@ -1,116 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Collection;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                "-import org.osgi.framework.Version;",
                "-import org.osgi.framework.namespace.IdentityNamespace;",
                "-import org.osgi.resource.Capability;",
                "-import org.osgi.resource.Requirement;",
                "-import org.osgi.resource.Resource;",
                "-",
                "-/**",
                "- */",
                "-public class ResourceImpl implements Resource {",
                "-",
                "-    protected final List<Capability> caps;",
                "-    protected final List<Requirement> reqs;",
                "-",
                "-    /**",
                "-     * CAUTION: This constructor does not ensure that the resource",
                "-     * has the required identity capability",
                "-     */",
                "-    public ResourceImpl() {",
                "-        caps = new ArrayList<>(0);",
                "-        reqs = new ArrayList<>(0);",
                "-    }",
                "-",
                "-    public ResourceImpl(String name, String type, Version version) {",
                "-        caps = new ArrayList<>(1);",
                "-        Map<String, String> dirs = new StringArrayMap<>(0);",
                "-        Map<String, Object> attrs = new StringArrayMap<>(3);",
                "-        attrs.put(IdentityNamespace.IDENTITY_NAMESPACE, name);",
                "-        attrs.put(IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE, type);",
                "-        attrs.put(IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE, version);",
                "-        CapabilityImpl identity = new CapabilityImpl(this, IdentityNamespace.IDENTITY_NAMESPACE, dirs, attrs);",
                "-        caps.add(identity);",
                "-        reqs = new ArrayList<>(0);",
                "-    }",
                "-",
                "-    public void addCapability(Capability capability) {",
                "-        assert capability.getResource() == this;",
                "-        caps.add(capability);",
                "-    }",
                "-",
                "-    public void addCapabilities(Collection<? extends Capability> capabilities) {",
                "-        for (Capability cap : capabilities) {",
                "-            assert cap.getResource() == this;",
                "-        }",
                "-        caps.addAll(capabilities);",
                "-    }",
                "-",
                "-    public void addRequirement(Requirement requirement) {",
                "-        assert requirement.getResource() == this;",
                "-        reqs.add(requirement);",
                "-    }",
                "-",
                "-    public void addRequirements(Collection<? extends Requirement> requirements) {",
                "-        for (Requirement req : requirements) {",
                "-            assert req.getResource() == this;",
                "-        }",
                "-        reqs.addAll(requirements);",
                "-    }",
                "-",
                "-    public List<Capability> getCapabilities(String namespace) {",
                "-        List<Capability> result = caps;",
                "-        if (namespace != null) {",
                "-            result = new ArrayList<>();",
                "-            for (Capability cap : caps) {",
                "-                if (cap.getNamespace().equals(namespace)) {",
                "-                    result.add(cap);",
                "-                }",
                "-            }",
                "-        }",
                "-        return result;",
                "-    }",
                "-",
                "-    public List<Requirement> getRequirements(String namespace) {",
                "-        List<Requirement> result = reqs;",
                "-        if (namespace != null) {",
                "-            result = new ArrayList<>();",
                "-            for (Requirement req : reqs) {",
                "-                if (req.getNamespace().equals(namespace)) {",
                "-                    result.add(req);",
                "-                }",
                "-            }",
                "-        }",
                "-        return result;",
                "-    }",
                "-",
                "-    @Override",
                "-    public String toString() {",
                "-        Capability cap = getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE).get(0);",
                "-        return cap.getAttributes().get(IdentityNamespace.IDENTITY_NAMESPACE) + \"/\"",
                "-                + cap.getAttributes().get(IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE);",
                "-    }",
                "-",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceUtils.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceUtils.java",
                "index 9d5737c638..c8b5ab28d5 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceUtils.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceUtils.java",
                "@@ -22,5 +22,9 @@ import java.util.Map;",
                "+import org.apache.felix.utils.collections.StringArrayMap;",
                "+import org.apache.felix.utils.resource.CapabilityImpl;",
                "+import org.apache.felix.utils.resource.RequirementImpl;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                "+import org.apache.felix.utils.resource.SimpleFilter;",
                " import org.apache.felix.utils.version.VersionRange;",
                " import org.apache.felix.utils.version.VersionTable;",
                "-import org.apache.karaf.features.internal.util.StringArrayMap;",
                " import org.osgi.framework.Constants;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "deleted file mode 100644",
                "index c9d4e46cb8..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "+++ /dev/null",
                "@@ -1,585 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.resolver;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Collections;",
                "-import java.util.Deque;",
                "-import java.util.LinkedList;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.Map.Entry;",
                "-import java.util.concurrent.ConcurrentHashMap;",
                "-",
                "-import org.apache.felix.utils.version.VersionRange;",
                "-",
                "-public class SimpleFilter {",
                "-    public static final int MATCH_ALL = 0;",
                "-    public static final int AND = 1;",
                "-    public static final int OR = 2;",
                "-    public static final int NOT = 3;",
                "-    public static final int EQ = 4;",
                "-    public static final int LTE = 5;",
                "-    public static final int GTE = 6;",
                "-    public static final int SUBSTRING = 7;",
                "-    public static final int PRESENT = 8;",
                "-    public static final int APPROX = 9;",
                "-",
                "-    /**",
                "-     * Strings which are commonly found in filter specification. We use this map as an interner.",
                "-     */",
                "-    private static final ConcurrentHashMap<String, String> COMMON_STRINGS;",
                "-",
                "-    static {",
                "-        ConcurrentHashMap<String, String> s = new ConcurrentHashMap<>(8);",
                "-        s.put(\"optional\", \"optional\");",
                "-        s.put(\"osgi.ee\", \"osgi.ee\");",
                "-        s.put(\"resolution\", \"resolution\");",
                "-        s.put(\"uses\", \"uses\");",
                "-        s.put(\"version\", \"version\");",
                "-        COMMON_STRINGS = s;",
                "-    }",
                "-",
                "-    public static final SimpleFilter MATCH_ALL_FILTER = new SimpleFilter(null, null, MATCH_ALL);",
                "-",
                "-    private final String name;",
                "-    private final Object value;",
                "-    private final int op;",
                "-",
                "-    SimpleFilter(String name, Object value, int op) {",
                "-        this.name = reuseCommonString(name);",
                "-        this.value = value;",
                "-        this.op = op;",
                "-    }",
                "-",
                "-    public String getName() {",
                "-        return name;",
                "-    }",
                "-",
                "-    public Object getValue() {",
                "-        return value;",
                "-    }",
                "-",
                "-    public int getOperation() {",
                "-        return op;",
                "-    }",
                "-",
                "-    @Override",
                "-    public String toString() {",
                "-        StringBuilder sb = new StringBuilder();",
                "-        toString(sb);",
                "-        return sb.toString();",
                "-    }",
                "-",
                "-    private void toString(StringBuilder sb) {",
                "-        switch (op)",
                "-        {",
                "-        case AND:",
                "-            sb.append(\"(&\");",
                "-            toString(sb, (List<?>) value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case OR:",
                "-            sb.append(\"(|\");",
                "-            toString(sb, (List<?>) value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case NOT:",
                "-            sb.append(\"(!\");",
                "-            toString(sb, (List<?>) value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case EQ:",
                "-            sb.append(\"(\")",
                "-                    .append(name)",
                "-                    .append(\"=\");",
                "-            toEncodedString(sb, value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case LTE:",
                "-            sb.append(\"(\")",
                "-                    .append(name)",
                "-                    .append(\"<=\");",
                "-            toEncodedString(sb, value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case GTE:",
                "-            sb.append(\"(\")",
                "-                    .append(name)",
                "-                    .append(\">=\");",
                "-            toEncodedString(sb, value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case SUBSTRING:",
                "-            sb.append(\"(\").append(name).append(\"=\");",
                "-            unparseSubstring(sb, (List<?>) value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case PRESENT:",
                "-            sb.append(\"(\").append(name).append(\"=*)\");",
                "-            break;",
                "-        case APPROX:",
                "-            sb.append(\"(\").append(name).append(\"~=\");",
                "-            toEncodedString(sb, value);",
                "-            sb.append(\")\");",
                "-            break;",
                "-        case MATCH_ALL:",
                "-            sb.append(\"(*)\");",
                "-            break;",
                "-        }",
                "-    }",
                "-",
                "-    private static String reuseCommonString(String str) {",
                "-        return str != null ? COMMON_STRINGS.getOrDefault(str, str) : null;",
                "-    }",
                "-",
                "-    private static void toString(StringBuilder sb, List<?> list) {",
                "-        for (Object o : list) {",
                "-            SimpleFilter sf = (SimpleFilter) o;",
                "-            sf.toString(sb);",
                "-        }",
                "-    }",
                "-",
                "-",
                "-    private static String toDecodedString(String s, int startIdx, int endIdx) {",
                "-        StringBuilder sb = null;",
                "-        boolean escaped = false;",
                "-        for (int i = startIdx; i < endIdx; i++) {",
                "-            char c = s.charAt(i);",
                "-            if (!escaped && (c == '\\\\')) {",
                "-                sb = new StringBuilder(endIdx - startIdx);",
                "-                sb.append(s, startIdx, i);",
                "-                escaped = true;",
                "-            } else {",
                "-                escaped = false;",
                "-                if (sb != null) {",
                "-                    sb.append(c);",
                "-                }",
                "-            }",
                "-        }",
                "-        return sb != null ? sb.toString() : s.substring(startIdx, endIdx);",
                "-    }",
                "-",
                "-    private static void toEncodedString(StringBuilder sb, Object o) {",
                "-        if (o instanceof String) {",
                "-            String s = (String) o;",
                "-            for (int i = 0; i < s.length(); i++) {",
                "-                char c = s.charAt(i);",
                "-                if ((c == '\\\\') || (c == '(') || (c == ')') || (c == '*')) {",
                "-                    sb.append('\\\\');",
                "-                }",
                "-                sb.append(c);",
                "-            }",
                "-        } else {",
                "-            sb.append(o);",
                "-        }",
                "-    }",
                "-",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    public static SimpleFilter parse(String filter) {",
                "-        int idx = skipWhitespace(filter, 0);",
                "-",
                "-        if ((filter == null) || (filter.length() == 0) || (idx >= filter.length())) {",
                "-            throw new IllegalArgumentException(\"Null or empty filter.\");",
                "-        } else if (filter.charAt(idx) != '(') {",
                "-            throw new IllegalArgumentException(\"Missing opening parenthesis: \" + filter);",
                "-        }",
                "-",
                "-        SimpleFilter sf = null;",
                "-        Deque<Object> stack = new LinkedList<>();",
                "-        boolean isEscaped = false;",
                "-        while (idx < filter.length()) {",
                "-            if (sf != null) {",
                "-                throw new IllegalArgumentException(",
                "-                        \"Only one top-level operation allowed: \" + filter);",
                "-            }",
                "-",
                "-            if (!isEscaped && (filter.charAt(idx) == '(')) {",
                "-                // Skip paren and following whitespace.",
                "-                idx = skipWhitespace(filter, idx + 1);",
                "-",
                "-                if (filter.charAt(idx) == '&') {",
                "-                    int peek = skipWhitespace(filter, idx + 1);",
                "-                    if (filter.charAt(peek) == '(') {",
                "-                        idx = peek - 1;",
                "-                        stack.addFirst(new SimpleFilter(null, new ArrayList<>(2), SimpleFilter.AND));",
                "-                    } else {",
                "-                        stack.addFirst(idx);",
                "-                    }",
                "-                } else if (filter.charAt(idx) == '|') {",
                "-                    int peek = skipWhitespace(filter, idx + 1);",
                "-                    if (filter.charAt(peek) == '(') {",
                "-                        idx = peek - 1;",
                "-                        stack.addFirst(new SimpleFilter(null, new ArrayList<>(2), SimpleFilter.OR));",
                "-                    } else {",
                "-                        stack.addFirst(idx);",
                "-                    }",
                "-                } else if (filter.charAt(idx) == '!') {",
                "-                    int peek = skipWhitespace(filter, idx + 1);",
                "-                    if (filter.charAt(peek) == '(') {",
                "-                        idx = peek - 1;",
                "-                        stack.addFirst(new SimpleFilter(null, new ArrayList<>(1), SimpleFilter.NOT));",
                "-                    } else {",
                "-                        stack.addFirst(idx);",
                "-                    }",
                "-                } else {",
                "-                    stack.addFirst(idx);",
                "-                }",
                "-            } else if (!isEscaped && (filter.charAt(idx) == ')')) {",
                "-                Object top = stack.removeFirst();",
                "-                Object next = stack.peekFirst();",
                "-                if (top instanceof SimpleFilter) {",
                "-                    if (next instanceof SimpleFilter) {",
                "-                        ((List<Object>) ((SimpleFilter) next).value).add(top);",
                "-                    } else {",
                "-                        sf = (SimpleFilter) top;",
                "-                    }",
                "-                } else if (next instanceof SimpleFilter) {",
                "-                    ((List<Object>) ((SimpleFilter) next).value).add(",
                "-                            SimpleFilter.subfilter(filter, (Integer) top, idx));",
                "-                } else {",
                "-                    sf = SimpleFilter.subfilter(filter, (Integer) top, idx);",
                "-                }",
                "-            } else {",
                "-                isEscaped = !isEscaped && (filter.charAt(idx) == '\\\\');",
                "-            }",
                "-",
                "-            idx = skipWhitespace(filter, idx + 1);",
                "-        }",
                "-",
                "-        if (sf == null) {",
                "-            throw new IllegalArgumentException(\"Missing closing parenthesis: \" + filter);",
                "-        }",
                "-",
                "-        return sf;",
                "-    }",
                "-",
                "-    private static SimpleFilter subfilter(String filter, int startIdx, int endIdx) {",
                "-        // Determine the ending index of the attribute name.",
                "-        int attrEndIdx = startIdx;",
                "-        for (int i = 0; i < (endIdx - startIdx); i++) {",
                "-            char c = filter.charAt(startIdx + i);",
                "-            if (\"=<>~\".indexOf(c) >= 0) {",
                "-                break;",
                "-            } else if (!Character.isWhitespace(c)) {",
                "-                attrEndIdx = startIdx + i + 1;",
                "-            }",
                "-        }",
                "-        if (attrEndIdx == startIdx) {",
                "-            throw new IllegalArgumentException(",
                "-                    \"Missing attribute name: \" + filter.substring(startIdx, endIdx));",
                "-        }",
                "-        String attr = filter.substring(startIdx, attrEndIdx);",
                "-",
                "-        // Skip the attribute name and any following whitespace.",
                "-        startIdx = skipWhitespace(filter, attrEndIdx);",
                "-",
                "-        // Determine the operator type.",
                "-        int op;",
                "-        switch (filter.charAt(startIdx)) {",
                "-        case '=':",
                "-            op = EQ;",
                "-            startIdx++;",
                "-            break;",
                "-        case '<':",
                "-            if (filter.charAt(startIdx + 1) != '=') {",
                "-                throw new IllegalArgumentException(",
                "-                        \"Unknown operator: \" + filter.substring(startIdx, endIdx));",
                "-            }",
                "-            op = LTE;",
                "-            startIdx += 2;",
                "-            break;",
                "-        case '>':",
                "-            if (filter.charAt(startIdx + 1) != '=') {",
                "-                throw new IllegalArgumentException(",
                "-                        \"Unknown operator: \" + filter.substring(startIdx, endIdx));",
                "-            }",
                "-            op = GTE;",
                "-            startIdx += 2;",
                "-            break;",
                "-        case '~':",
                "-            if (filter.charAt(startIdx + 1) != '=') {",
                "-                throw new IllegalArgumentException(",
                "-                        \"Unknown operator: \" + filter.substring(startIdx, endIdx));",
                "-            }",
                "-            op = APPROX;",
                "-            startIdx += 2;",
                "-            break;",
                "-        default:",
                "-            throw new IllegalArgumentException(",
                "-                    \"Unknown operator: \" + filter.substring(startIdx, endIdx));",
                "-        }",
                "-",
                "-        // Parse value.",
                "-        Object value = toDecodedString(filter, startIdx, endIdx);",
                "-",
                "-        // Check if the equality comparison is actually a substring",
                "-        // or present operation.",
                "-        if (op == EQ) {",
                "-            String valueStr = filter.substring(startIdx, endIdx);",
                "-            List<String> values = parseSubstring(valueStr);",
                "-            if ((values.size() == 2)",
                "-                    && (values.get(0).length() == 0)",
                "-                    && (values.get(1).length() == 0)) {",
                "-                op = PRESENT;",
                "-            } else if (values.size() > 1) {",
                "-                op = SUBSTRING;",
                "-                value = values;",
                "-            }",
                "-        }",
                "-",
                "-        return new SimpleFilter(attr, value, op);",
                "-    }",
                "-",
                "-    public static List<String> parseSubstring(String value) {",
                "-        int length = value.length();",
                "-",
                "-        boolean isSimple = true;",
                "-        for (int idx = 0; idx < length; idx++) {",
                "-            char c = value.charAt(idx);",
                "-            if (c == '*' || c == '\\\\') {",
                "-                isSimple = false;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (isSimple) {",
                "-            return Collections.singletonList(value);",
                "-        }",
                "-",
                "-        StringBuilder ss = new StringBuilder();",
                "-        // int kind = SIMPLE; // assume until proven otherwise",
                "-        boolean wasStar = false; // indicates last piece was a star",
                "-        boolean leftstar = false; // track if the initial piece is a star",
                "-        boolean rightstar = false; // track if the final piece is a star",
                "-",
                "-        int idx = 0;",
                "-",
                "-        // We assume (sub)strings can contain leading and trailing blanks",
                "-        List<String> pieces = new ArrayList<>(2);",
                "-        boolean escaped = false;",
                "-        for (;;) {",
                "-            if (idx >= length) {",
                "-                if (wasStar) {",
                "-                    // insert last piece as \"\" to handle trailing star",
                "-                    rightstar = true;",
                "-                } else {",
                "-                    pieces.add(ss.toString());",
                "-                    // accumulate the last piece",
                "-                    // note that in the case of",
                "-                    // (cn=); this might be",
                "-                    // the string \"\" (!=null)",
                "-                }",
                "-                ss.setLength(0);",
                "-                break;",
                "-            }",
                "-",
                "-            // Read the next character and account for escapes.",
                "-            char c = value.charAt(idx++);",
                "-            if (!escaped && (c == '*')) {",
                "-                // If we have successive '*' characters, then we can",
                "-                // effectively collapse them by ignoring succeeding ones.",
                "-                if (!wasStar) {",
                "-                    if (ss.length() > 0) {",
                "-                        pieces.add(ss.toString()); // accumulate the pieces",
                "-                        // between '*' occurrences",
                "-                    }",
                "-                    ss.setLength(0);",
                "-                    // if this is a leading star, then track it",
                "-                    if (pieces.isEmpty()) {",
                "-                        leftstar = true;",
                "-                    }",
                "-                    wasStar = true;",
                "-                }",
                "-            } else if (!escaped && (c == '\\\\')) {",
                "-                escaped = true;",
                "-            } else {",
                "-                escaped = false;",
                "-                wasStar = false;",
                "-                ss.append(c);",
                "-            }",
                "-        }",
                "-        if (leftstar || rightstar || pieces.size() > 1) {",
                "-            // insert leading and/or trailing \"\" to anchor ends",
                "-            if (rightstar) {",
                "-                pieces.add(\"\");",
                "-            }",
                "-            if (leftstar) {",
                "-                pieces.add(0, \"\");",
                "-            }",
                "-        }",
                "-        return pieces;",
                "-    }",
                "-",
                "-    public static void unparseSubstring(StringBuilder sb, List<?> pieces) {",
                "-        for (int i = 0; i < pieces.size(); i++) {",
                "-            if (i > 0) {",
                "-                sb.append(\"*\");",
                "-            }",
                "-            toEncodedString(sb, pieces.get(i));",
                "-        }",
                "-    }",
                "-",
                "-    public static boolean compareSubstring(List<String> pieces, String s) {",
                "-        // Walk the pieces to match the string",
                "-        // There are implicit stars between each piece,",
                "-        // and the first and last pieces might be \"\" to anchor the match.",
                "-        // assert (pieces.length > 1)",
                "-        // minimal case is <string>*<string>",
                "-",
                "-        boolean result = true;",
                "-        int len = pieces.size();",
                "-",
                "-        // Special case, if there is only one piece, then",
                "-        // we must perform an equality test.",
                "-        if (len == 1) {",
                "-            return s.equals(pieces.get(0));",
                "-        }",
                "-",
                "-        // Otherwise, check whether the pieces match",
                "-        // the specified string.",
                "-",
                "-        int index = 0;",
                "-",
                "-        for (int i = 0; i < len; i++) {",
                "-            String piece = pieces.get(i);",
                "-",
                "-            // If this is the first piece, then make sure the",
                "-            // string starts with it.",
                "-            if (i == 0) {",
                "-                if (!s.startsWith(piece)) {",
                "-                    result = false;",
                "-                    break;",
                "-                }",
                "-            }",
                "-",
                "-            // If this is the last piece, then make sure the",
                "-            // string ends with it.",
                "-            if (i == (len - 1)) {",
                "-                result = s.endsWith(piece) && (s.length() >= (index + piece.length()));",
                "-                break;",
                "-            }",
                "-",
                "-            // If this is neither the first or last piece, then",
                "-            // make sure the string contains it.",
                "-            if ((i > 0) && (i < (len - 1))) {",
                "-                index = s.indexOf(piece, index);",
                "-                if (index < 0) {",
                "-                    result = false;",
                "-                    break;",
                "-                }",
                "-            }",
                "-",
                "-            // Move string index beyond the matching piece.",
                "-            index += piece.length();",
                "-        }",
                "-",
                "-        return result;",
                "-    }",
                "-",
                "-    private static int skipWhitespace(String s, int startIdx) {",
                "-        int len = s.length();",
                "-        while ((startIdx < len) && Character.isWhitespace(s.charAt(startIdx))) {",
                "-            startIdx++;",
                "-        }",
                "-        return startIdx;",
                "-    }",
                "-",
                "-    /**",
                "-     * Converts a attribute map to a filter. The filter is created by iterating",
                "-     * over the map's entry set. If ordering of attributes is important (e.g.,",
                "-     * for hitting attribute indices), then the map's entry set should iterate",
                "-     * in the desired order. Equality testing is assumed for all attribute types",
                "-     * other than version ranges, which are handled appropriated. If the attribute",
                "-     * map is empty, then a filter that matches anything is returned.",
                "-     *",
                "-     * @param attrs Map of attributes to convert to a filter.",
                "-     * @return A filter corresponding to the attributes.",
                "-     */",
                "-    public static SimpleFilter convert(Map<String, Object> attrs) {",
                "-        // Rather than building a filter string to be parsed into a SimpleFilter,",
                "-        // we will just create the parsed SimpleFilter directly.",
                "-",
                "-        List<SimpleFilter> filters = new ArrayList<>(attrs.size());",
                "-",
                "-        for (Entry<String, Object> entry : attrs.entrySet()) {",
                "-            if (entry.getValue() instanceof VersionRange) {",
                "-                VersionRange vr = (VersionRange) entry.getValue();",
                "-                if (!vr.isOpenFloor()) {",
                "-                    filters.add(",
                "-                            new SimpleFilter(",
                "-                                    entry.getKey(),",
                "-                                    vr.getFloor().toString(),",
                "-                                    SimpleFilter.GTE)",
                "-                    );",
                "-                } else {",
                "-                    SimpleFilter val = new SimpleFilter(",
                "-                        entry.getKey(),",
                "-                        vr.getFloor().toString(),",
                "-                        SimpleFilter.LTE);",
                "-                    SimpleFilter not =",
                "-                            new SimpleFilter(null, Collections.singletonList(val), SimpleFilter.NOT);",
                "-                    filters.add(not);",
                "-                }",
                "-",
                "-                if (vr.getCeiling() != null) {",
                "-                    if (!vr.isOpenCeiling()) {",
                "-                        filters.add(",
                "-                                new SimpleFilter(",
                "-                                        entry.getKey(),",
                "-                                        vr.getCeiling().toString(),",
                "-                                        SimpleFilter.LTE)",
                "-                        );",
                "-                    } else if (!vr.getCeiling().equals(VersionRange.INFINITE_VERSION)) {",
                "-                        SimpleFilter val = new SimpleFilter(",
                "-                            entry.getKey(),",
                "-                            vr.getCeiling().toString(),",
                "-                            SimpleFilter.GTE);",
                "-                        SimpleFilter not =",
                "-                                new SimpleFilter(null, Collections.singletonList(val), SimpleFilter.NOT);",
                "-                        filters.add(not);",
                "-                    }",
                "-                }",
                "-            } else {",
                "-                List<String> values = SimpleFilter.parseSubstring(entry.getValue().toString());",
                "-                if (values.size() > 1) {",
                "-                    filters.add(",
                "-                            new SimpleFilter(",
                "-                                    entry.getKey(),",
                "-                                    values,",
                "-                                    SimpleFilter.SUBSTRING)",
                "-                    );",
                "-                } else {",
                "-                    filters.add(",
                "-                            new SimpleFilter(",
                "-                                    entry.getKey(),",
                "-                                    values.get(0),",
                "-                                    SimpleFilter.EQ)",
                "-                    );",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        switch (filters.size()) {",
                "-            case 0:",
                "-                return MATCH_ALL_FILTER;",
                "-            case 1:",
                "-                return filters.get(0);",
                "-            default:",
                "-                return new SimpleFilter(null, filters, SimpleFilter.AND);",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/service/RequirementSort.java b/features/core/src/main/java/org/apache/karaf/features/internal/service/RequirementSort.java",
                "index 921fda830f..0dc2920b45 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/service/RequirementSort.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/service/RequirementSort.java",
                "@@ -24,4 +24,4 @@ import java.util.Set;",
                "-import org.apache.karaf.features.internal.resolver.CapabilitySet;",
                "-import org.apache.karaf.features.internal.resolver.SimpleFilter;",
                "+import org.apache.felix.utils.resource.CapabilitySet;",
                "+import org.apache.felix.utils.resource.SimpleFilter;",
                " import org.osgi.framework.Constants;",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/util/StringArrayMap.java b/features/core/src/main/java/org/apache/karaf/features/internal/util/StringArrayMap.java",
                "deleted file mode 100644",
                "index e343bc4504..0000000000",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/util/StringArrayMap.java",
                "+++ /dev/null",
                "@@ -1,329 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package org.apache.karaf.features.internal.util;",
                "-",
                "-import java.util.AbstractCollection;",
                "-import java.util.AbstractSet;",
                "-import java.util.Arrays;",
                "-import java.util.Collection;",
                "-import java.util.Collections;",
                "-import java.util.Iterator;",
                "-import java.util.Map;",
                "-import java.util.NoSuchElementException;",
                "-import java.util.Objects;",
                "-import java.util.Set;",
                "-",
                "-public class StringArrayMap<V> implements Map<String, V> {",
                "-",
                "-    private Object[] table;",
                "-    private int size;",
                "-",
                "-    public static <T> Map<String, T> reduceMemory(Map<String, T> map) {",
                "-        switch (map.size()) {",
                "-            case 0:",
                "-                return Collections.emptyMap();",
                "-            case 1:",
                "-                Entry<String, T> e = map.entrySet().iterator().next();",
                "-                return Collections.singletonMap(e.getKey().intern(), e.getValue());",
                "-            default:",
                "-                if (map instanceof StringArrayMap) {",
                "-                    StringArrayMap<T> m = (StringArrayMap) map;",
                "-                    if (m.size == m.table.length / 2) {",
                "-                        return map;",
                "-                    }",
                "-                }",
                "-                return new StringArrayMap<>(map);",
                "-        }",
                "-    }",
                "-",
                "-    public StringArrayMap(Map<String, ? extends V> map) {",
                "-        if (map instanceof StringArrayMap) {",
                "-            size = ((StringArrayMap) map).size;",
                "-            table = Arrays.copyOf(((StringArrayMap) map).table, size * 2);",
                "-        } else {",
                "-            size = 0;",
                "-            table = new Object[map.size() * 2];",
                "-            for (Entry<String, ? extends V> e : map.entrySet()) {",
                "-                int i = size++ << 1;",
                "-                table[i++] = e.getKey().intern();",
                "-                table[i] = e.getValue();",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    public StringArrayMap() {",
                "-        this(32);",
                "-    }",
                "-",
                "-    public StringArrayMap(int capacity) {",
                "-        table = new Object[capacity * 2];",
                "-        size = 0;",
                "-    }",
                "-",
                "-    @Override",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    public V get(Object key) {",
                "-        String k = ((String) key).intern();",
                "-        for (int i = 0, l = size << 1; i < l; i += 2) {",
                "-            if (k == table[i]) {",
                "-                return (V) table[i + 1];",
                "-            }",
                "-        }",
                "-        return null;",
                "-    }",
                "-",
                "-    @Override",
                "-    @SuppressWarnings(\"unchecked\")",
                "-    public V put(String key, V value) {",
                "-        key = key.intern();",
                "-        for (int i = 0, l = size << 1; i < l; i += 2) {",
                "-            if (key == table[i]) {",
                "-                V old = (V) table[i + 1];",
                "-                table[i + 1] = value;",
                "-                return old;",
                "-            }",
                "-        }",
                "-        if (table.length == 0) {",
                "-            table = new Object[2];",
                "-        } else if (size * 2 == table.length) {",
                "-            Object[] n = new Object[table.length * 2];",
                "-            System.arraycopy(table, 0, n, 0, table.length);",
                "-            table = n;",
                "-        }",
                "-        int i = size++ << 1;",
                "-        table[i++] = key;",
                "-        table[i] = value;",
                "-        return null;",
                "-    }",
                "-",
                "-    @Override",
                "-    public Set<String> keySet() {",
                "-        return new AbstractSet<String>() {",
                "-            @Override",
                "-            public Iterator<String> iterator() {",
                "-                return new Iterator<String>() {",
                "-                    int index = 0;",
                "-",
                "-                    @Override",
                "-                    public boolean hasNext() {",
                "-                        return index < size;",
                "-                    }",
                "-",
                "-                    @Override",
                "-                    public String next() {",
                "-                        if (index >= size) {",
                "-                            throw new NoSuchElementException();",
                "-                        }",
                "-                        return (String) table[(index++ << 1)];",
                "-                    }",
                "-                };",
                "-            }",
                "-",
                "-            @Override",
                "-            public int size() {",
                "-                return size;",
                "-            }",
                "-        };",
                "-    }",
                "-",
                "-    @Override",
                "-    public Collection<V> values() {",
                "-        return new AbstractCollection<V>() {",
                "-            @Override",
                "-            public Iterator<V> iterator() {",
                "-                return new Iterator<V>() {",
                "-                    int index = 0;",
                "-",
                "-                    public boolean hasNext() {",
                "-                        return index < size;",
                "-                    }",
                "-",
                "-                    @SuppressWarnings(\"unchecked\")",
                "-                    public V next() {",
                "-                        if (index >= size) {",
                "-                            throw new NoSuchElementException();",
                "-                        }",
                "-                        return (V) table[(index++ << 1) + 1];",
                "-                    }",
                "-                };",
                "-            }",
                "-",
                "-            @Override",
                "-            public int size() {",
                "-                return size;",
                "-            }",
                "-        };",
                "-    }",
                "-",
                "-    @Override",
                "-    public Set<Entry<String, V>> entrySet() {",
                "-        return new AbstractSet<Entry<String, V>>() {",
                "-            @Override",
                "-            public Iterator<Entry<String, V>> iterator() {",
                "-                return new Iterator<Entry<String, V>>() {",
                "-                    int index = 0;",
                "-",
                "-                    public boolean hasNext() {",
                "-                        return index < size;",
                "-                    }",
                "-",
                "-                    @SuppressWarnings(\"unchecked\")",
                "-                    public Entry<String, V> next() {",
                "-                        if (index >= size) {",
                "-                            throw new NoSuchElementException();",
                "-                        }",
                "-                        int i = index << 1;",
                "-                        index++;",
                "-                        return new Entry<String, V>() {",
                "-                            @Override",
                "-                            public String getKey() {",
                "-                                return (String) table[i];",
                "-                            }",
                "-",
                "-                            @Override",
                "-                            public V getValue() {",
                "-                                return (V) table[i + 1];",
                "-                            }",
                "-",
                "-                            @Override",
                "-                            public V setValue(V value) {",
                "-                                throw new UnsupportedOperationException();",
                "-                            }",
                "-                        };",
                "-                    }",
                "-                };",
                "-            }",
                "-",
                "-            @Override",
                "-            public int size() {",
                "-                return size;",
                "-            }",
                "-        };",
                "-    }",
                "-",
                "-    @Override",
                "-    public int size() {",
                "-        return size;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean isEmpty() {",
                "-        return size == 0;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean containsKey(Object key) {",
                "-        String k = ((String) key).intern();",
                "-        for (int i = 0, l = size * 2; i < l; i += 2) {",
                "-            if (table[i] == k) {",
                "-                return true;",
                "-            }",
                "-        }",
                "-        return false;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean containsValue(Object value) {",
                "-        for (int i = 0, l = size * 2; i < l; i += 2) {",
                "-            if (Objects.equals(table[i + 1], value)) {",
                "-                return true;",
                "-            }",
                "-        }",
                "-        return false;",
                "-    }",
                "-",
                "-    @Override",
                "-    public V remove(Object key) {",
                "-        String k = ((String) key).intern();",
                "-        for (int i = 0, l = size * 2; i < l; i += 2) {",
                "-            if (table[i] == k) {",
                "-                Object v = table[i + 1];",
                "-                if (i < l - 2) {",
                "-                    System.arraycopy(table, i + 2, table, i, l - 2 - i);",
                "-                }",
                "-                table[l - 1] = null;",
                "-                table[l - 2] = null;",
                "-                size--;",
                "-                return (V) v;",
                "-            }",
                "-        }",
                "-        return null;",
                "-    }",
                "-",
                "-    @Override",
                "-    public void putAll(Map<? extends String, ? extends V> m) {",
                "-        for (Map.Entry<? extends String, ? extends V> e : m.entrySet()) {",
                "-            put(e.getKey(), e.getValue());",
                "-        }",
                "-    }",
                "-",
                "-    @Override",
                "-    public void clear() {",
                "-        size = 0;",
                "-        Arrays.fill(table, null);",
                "-    }",
                "-",
                "-    public int hashCode() {",
                "-        return Objects.hash(table, size);",
                "-    }",
                "-",
                "-    public boolean equals(Object o) {",
                "-        if (o == this)",
                "-            return true;",
                "-        if (!(o instanceof Map))",
                "-            return false;",
                "-        Map<?,?> m = (Map<?,?>) o;",
                "-        if (m.size() != size())",
                "-            return false;",
                "-        try {",
                "-            for (int i = 0, l = size * 2; i < l; i += 2) {",
                "-                Object key = table[i];",
                "-                Object value = table[i+1];",
                "-                if (value == null) {",
                "-                    if (!(m.get(key)==null && m.containsKey(key)))",
                "-                        return false;",
                "-                } else {",
                "-                    if (!value.equals(m.get(key)))",
                "-                        return false;",
                "-                }",
                "-            }",
                "-        } catch (ClassCastException | NullPointerException unused) {",
                "-            return false;",
                "-        }",
                "-        return true;",
                "-    }",
                "-",
                "-    public String toString() {",
                "-        if (size == 0)",
                "-            return \"{}\";",
                "-",
                "-        StringBuilder sb = new StringBuilder();",
                "-        sb.append('{');",
                "-        for (int i = 0, l = size * 2; i < l; i += 2) {",
                "-            if (i > 0) {",
                "-                sb.append(',').append(' ');",
                "-            }",
                "-            sb.append(table[i]);",
                "-            sb.append('=');",
                "-            sb.append(table[i+1] == this ? \"(this Map)\" : table[i+1]);",
                "-        }",
                "-        return sb.append('}').toString();",
                "-    }",
                "-",
                "-}",
                "diff --git a/pom.xml b/pom.xml",
                "index 41448b9a30..f2ac0d094c 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -201,3 +201,3 @@",
                "         <felix.plugin.version>3.5.0</felix.plugin.version>",
                "-        <felix.utils.version>1.10.4</felix.utils.version>",
                "+        <felix.utils.version>1.11.0-SNAPSHOT</felix.utils.version>",
                "         <felix.webconsole.version>4.3.4</felix.webconsole.version>",
                "diff --git a/profile/pom.xml b/profile/pom.xml",
                "index a1c6865e14..e6dfb11894 100644",
                "--- a/profile/pom.xml",
                "+++ b/profile/pom.xml",
                "@@ -188,4 +188,8 @@",
                "                             org.apache.karaf.util.tracker;-split-package:=merge-first,",
                "+                            org.apache.felix.utils.collections;-split-package:=merge-first,",
                "+                            org.apache.felix.utils.json;-split-package:=merge-first,",
                "                             org.apache.felix.utils.manifest;-split-package:=merge-first,",
                "                             org.apache.felix.utils.properties;-split-package:=merge-first,",
                "+                            org.apache.felix.utils.repository;-split-package:=merge-first,",
                "+                            org.apache.felix.utils.resource;-split-package:=merge-first,",
                "                             org.apache.felix.utils.version;-split-package:=merge-first",
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "index 06dff5dcdd..8e403f7ddd 100644",
                "--- a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "@@ -66,2 +66,4 @@ import org.apache.felix.utils.manifest.Clause;",
                " import org.apache.felix.utils.properties.Properties;",
                "+import org.apache.felix.utils.repository.BaseRepository;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                " import org.apache.karaf.features.BundleInfo;",
                "@@ -83,4 +85,2 @@ import org.apache.karaf.features.internal.model.JaxbUtil;",
                " import org.apache.karaf.features.internal.model.processing.FeaturesProcessing;",
                "-import org.apache.karaf.features.internal.repository.BaseRepository;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                " import org.apache.karaf.features.internal.service.Blacklist;",
                "@@ -102,3 +102,2 @@ import org.apache.karaf.util.config.PropertiesLoader;",
                " import org.apache.karaf.util.maven.Parser;",
                "-import org.ops4j.net.URLUtils;",
                " import org.ops4j.pax.url.mvn.MavenResolver;",
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/assembly/FakeBundleRevision.java b/profile/src/main/java/org/apache/karaf/profile/assembly/FakeBundleRevision.java",
                "index 7b797d601f..95b805bbd7 100644",
                "--- a/profile/src/main/java/org/apache/karaf/profile/assembly/FakeBundleRevision.java",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/assembly/FakeBundleRevision.java",
                "@@ -24,4 +24,4 @@ import java.util.List;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                " import org.osgi.framework.Bundle;",
                "diff --git a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "index 3005a10fd1..065178dec3 100644",
                "--- a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "+++ b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "@@ -59,2 +59,4 @@ import org.apache.felix.resolver.Logger;",
                " import org.apache.felix.resolver.ResolverImpl;",
                "+import org.apache.felix.utils.resource.ResourceBuilder;",
                "+import org.apache.felix.utils.resource.ResourceImpl;",
                " import org.apache.felix.utils.version.VersionRange;",
                "@@ -74,4 +76,2 @@ import org.apache.karaf.features.internal.model.Features;",
                " import org.apache.karaf.features.internal.model.JaxbUtil;",
                "-import org.apache.karaf.features.internal.resolver.ResourceBuilder;",
                "-import org.apache.karaf.features.internal.resolver.ResourceImpl;",
                " import org.apache.karaf.features.internal.resolver.ResourceUtils;"
            ],
            "changed_files": [
                "features/core/pom.xml",
                "features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/region/OfflineResolver.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/region/RepositoryManager.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/region/Subsystem.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolveContext.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/AggregateRepository.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/BaseRepository.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/JsonRepository.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/StaxParser.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/UrlLoader.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/repository/XmlRepository.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/BaseClause.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilityImpl.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/CapabilitySet.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/FeatureResource.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/RequirementImpl.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceBuilder.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceImpl.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/ResourceUtils.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/service/RequirementSort.java",
                "features/core/src/main/java/org/apache/karaf/features/internal/util/StringArrayMap.java",
                "pom.xml",
                "profile/pom.xml",
                "profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "profile/src/main/java/org/apache/karaf/profile/assembly/FakeBundleRevision.java",
                "tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5706": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "28e22cc9e9dcdbc4b20444b1279e363908855086"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: line, require, bundle, feature, plugin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5706",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a5fe513192e644aac3efa9540c73a12058e6ee2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532961229,
            "hunks": 27,
            "message": "[KARAF-4996] Fix instance resources to expose same packages as the root instance",
            "diff": [
                "diff --git a/instance/pom.xml b/instance/pom.xml",
                "index cc37cbe0c0..e89c7090a3 100644",
                "--- a/instance/pom.xml",
                "+++ b/instance/pom.xml",
                "@@ -112,2 +112,21 @@",
                "         <plugins>",
                "+            <plugin>",
                "+                <groupId>org.codehaus.mojo</groupId>",
                "+                <artifactId>build-helper-maven-plugin</artifactId>",
                "+                <executions>",
                "+                    <execution>",
                "+                        <id>regex-property</id>",
                "+                        <goals>",
                "+                            <goal>regex-property</goal>",
                "+                        </goals>",
                "+                        <configuration>",
                "+                            <name>karaf.osgi.version</name>",
                "+                            <value>${project.version}</value>",
                "+                            <regex>\\.*</regex>",
                "+                            <replacement></replacement>",
                "+                            <failIfNoMatch>false</failIfNoMatch>",
                "+                        </configuration>",
                "+                    </execution>",
                "+                </executions>",
                "+            </plugin>",
                "             <plugin>",
                "@@ -124,2 +143,3 @@",
                "                             <outputDirectory>${project.build.directory}/generated-resources/org/apache/karaf/instance</outputDirectory>",
                "+                            <addDefaultExcludes>false</addDefaultExcludes>",
                "                             <resources>",
                "@@ -135,2 +155,3 @@",
                "                                     <excludes>",
                "+                                        <exclude>**/etc/config.properties</exclude>",
                "                                         <exclude>**/bin/karaf</exclude>",
                "@@ -143,2 +164,9 @@",
                "                                 </resource>",
                "+                                <resource>",
                "+                                    <directory>${project.basedir}/src/main/resources/org/apache/karaf/instance</directory>",
                "+                                    <includes>",
                "+                                        <include>**/*</include>",
                "+                                    </includes>",
                "+                                    <filtering>true</filtering>",
                "+                                </resource>",
                "                             </resources>",
                "diff --git a/instance/src/main/java/org/apache/karaf/instance/core/internal/InstanceServiceImpl.java b/instance/src/main/java/org/apache/karaf/instance/core/internal/InstanceServiceImpl.java",
                "index c3d1d0a66c..8818331d4b 100644",
                "--- a/instance/src/main/java/org/apache/karaf/instance/core/internal/InstanceServiceImpl.java",
                "+++ b/instance/src/main/java/org/apache/karaf/instance/core/internal/InstanceServiceImpl.java",
                "@@ -337,4 +337,24 @@ public class InstanceServiceImpl implements InstanceService {",
                "                     \"etc/java.util.logging.properties\",",
                "+                    \"etc/jmx.acl.cfg\",",
                "+                    \"etc/jmx.acl.java.lang.Memory.cfg\",",
                "+                    \"etc/jmx.acl.org.apache.karaf.bundle.cfg\",",
                "+                    \"etc/jmx.acl.org.apache.karaf.config.cfg\",",
                "+                    \"etc/jmx.acl.org.apache.karaf.security.jmx.cfg\",",
                "+                    \"etc/jmx.acl.osgi.compendium.cm.cfg\",",
                "                     \"etc/jre.properties\",",
                "                     \"etc/keys.properties\",",
                "+                    \"etc/org.apache.felix.eventadmin.impl.EventAdmin.cfg\",",
                "+                    \"etc/org.apache.felix.fileinstall-deploy.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.bundle.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.config.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.feature.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.jaas.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.kar.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.scope_bundle.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.shell.cfg\",",
                "+                    \"etc/org.apache.karaf.command.acl.system.cfg\",",
                "+                    \"etc/org.apache.karaf.features.repos.cfg\",",
                "+                    \"etc/org.apache.karaf.jaas.cfg\",",
                "+                    \"etc/org.apache.karaf.kar.cfg\",",
                "+                    \"etc/org.apache.karaf.log.cfg\",",
                "                     \"etc/org.ops4j.pax.logging.cfg\",",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/config.properties b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/config.properties",
                "new file mode 100644",
                "index 0000000000..3684e82816",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/config.properties",
                "@@ -0,0 +1,409 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This file lists Karaf default settings for this particular version of Karaf.",
                "+# For easier maintenance when upgrading Karaf and to better document which",
                "+# default values have changed, it is recommended to place any changes to",
                "+# these values in a custom.properties file in the same folder as this file.",
                "+# Each value specified in custom.properties will override the default value",
                "+# here.",
                "+#",
                "+",
                "+#",
                "+# Properties file inclusions (as a space separated list of relative paths)",
                "+# Included files will override the values specified in this file",
                "+# NB: ${includes} properties files are mandatory, it means that Karaf will not start",
                "+# if the include file is not found",
                "+#",
                "+${includes} = jre.properties custom.properties",
                "+",
                "+#",
                "+# Properties file inclusions (as a space separated list of relative paths)",
                "+# Included files will override the values specified in this file",
                "+# NB: ${optionals} properties files are optionals, it means that Karaf will just",
                "+# display a warning message but the bootstrap will be performed",
                "+#",
                "+# ${optionals} = my.properties",
                "+",
                "+#",
                "+# Framework selection properties",
                "+#",
                "+karaf.framework=felix",
                "+",
                "+#",
                "+# Location of the OSGi frameworks",
                "+#",
                "+karaf.framework.equinox=mvn\\:@@equinox.groupId@@/@@equinox.artifactId@@/@@equinox.version@@",
                "+karaf.framework.felix=mvn\\:org.apache.felix/org.apache.felix.framework/@@felix.framework.version@@",
                "+",
                "+#",
                "+# Framework config properties.",
                "+#",
                "+org.osgi.framework.system.packages= \\",
                "+ org.osgi.dto;version=\"1.0\",\\",
                "+ org.osgi.resource;version=\"1.0\",\\",
                "+ org.osgi.resource.dto;version=\"1.0\";uses:=\"org.osgi.dto\",\\",
                "+ org.osgi.framework;version=\"1.8\",\\",
                "+ org.osgi.framework.dto;version=\"1.8\";uses:=\"org.osgi.dto\",\\",
                "+ org.osgi.framework.hooks.bundle;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.framework.hooks.resolver;version=\"1.0\";uses:=\"org.osgi.framework.wiring\",\\",
                "+ org.osgi.framework.hooks.service;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.framework.hooks.weaving;version=\"1.1\";uses:=\"org.osgi.framework.wiring\",\\",
                "+ org.osgi.framework.launch;version=\"1.2\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.framework.namespace;version=\"1.1\";uses:=\"org.osgi.resource\",\\",
                "+ org.osgi.framework.startlevel;version=\"1.0\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.framework.startlevel.dto;version=\"1.0\";uses:=\"org.osgi.dto\",\\",
                "+ org.osgi.framework.wiring;version=\"1.2\";uses:=\"org.osgi.framework,org.osgi.resource\",\\",
                "+ org.osgi.framework.wiring.dto;version=\"1.2\";uses:=\"org.osgi.dto,org.osgi.resource.dto\",\\",
                "+ org.osgi.service.condpermadmin;version=\"1.1.1\";uses:=\"org.osgi.framework,org.osgi.service.permissionadmin\",\\",
                "+ org.osgi.service.packageadmin;version=\"1.2\";uses:=\"org.osgi.framework\",org.osgi.service.permissionadmin;version=\"1.2\",\\",
                "+ org.osgi.service.resolver;version=\"1.0\";uses:=\"org.osgi.resource\",\\",
                "+ org.osgi.service.startlevel;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.service.url;version=\"1.0\",\\",
                "+ org.osgi.util.tracker;version=\"1.5.1\";uses:=\"org.osgi.framework\",\\",
                "+ org.apache.karaf.version;version=\"@@karaf.osgi.version@@\",\\",
                "+ org.apache.karaf.jaas.boot.principal;uses:=javax.security.auth;version=\"@@karaf.osgi.version@@\",\\",
                "+ org.apache.karaf.jaas.boot;uses:=\"javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.osgi.framework\";version=\"@@karaf.osgi.version@@\",\\",
                "+ ${jre-${java.specification.version}}",
                "+",
                "+#",
                "+# Extra packages appended after standard packages",
                "+#",
                "+org.osgi.framework.system.packages.extra= \\",
                "+    org.apache.karaf.branding, \\",
                "+    sun.misc, \\",
                "+    javax.xml.stream;uses:=\\\"javax.xml.namespace,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform\\\";version=1.2, \\",
                "+    javax.xml.stream.events;uses:=\\\"javax.xml.namespace,javax.xml.stream\\\";version=1.2, \\",
                "+    javax.xml.stream.util;uses:=\\\"javax.xml.namespace,javax.xml.stream,javax.xml.stream.events\\\";version=1.2, \\",
                "+    javax.xml;version=1.4, \\",
                "+    javax.xml.datatype;uses:=javax.xml.namespace;version=1.4, \\",
                "+    javax.xml.namespace;version=1.4, \\",
                "+    javax.xml.parsers;uses:=\\\"javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers\\\";version=1.4, \\",
                "+    javax.xml.transform;version=1.4, \\",
                "+    javax.xml.transform.dom;uses:=\\\"javax.xml.transform,org.w3c.dom\\\";version=1.4, \\",
                "+    javax.xml.transform.sax;uses:=\\\"javax.xml.transform,org.xml.sax,org.xml.sax.ext\\\";version=1.4, \\",
                "+    javax.xml.transform.stax;uses:=\\\"javax.xml.stream,javax.xml.transform\\\";version=1.4, \\",
                "+    javax.xml.transform.stream;uses:=javax.xml.transform;version=1.4, \\",
                "+    javax.xml.validation;uses:=\\\"javax.xml.transform,org.w3c.dom,org.w3c.dom.ls,org.xml.sax\\\";version=1.4, \\",
                "+    javax.xml.xpath;uses:=\\\"javax.xml.namespace,org.xml.sax\\\";version=1.4, \\",
                "+    org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.bootstrap;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.css;uses:=\\\"org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views\\\";version=1.0, \\",
                "+    org.w3c.dom.events;uses:=\\\"org.w3c.dom,org.w3c.dom.views\\\";version=1.0, \\",
                "+    org.w3c.dom.html;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.ls;uses:=\\\"org.w3c.dom,org.w3c.dom.events,org.w3c.dom.traversal\\\";version=1.0, \\",
                "+    org.w3c.dom.ranges;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.stylesheets;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.traversal;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.w3c.dom.views;version=1.0, \\",
                "+    org.w3c.dom.xpath;uses:=org.w3c.dom;version=1.0, \\",
                "+    org.xml.sax;version=2.0.2, \\",
                "+    org.xml.sax.ext;uses:=\\\"org.xml.sax,org.xml.sax.helpers\\\";version=2.0.2, \\",
                "+    org.xml.sax.helpers;uses:=org.xml.sax;version=2.0.2, \\",
                "+    javax.xml.bind;uses:=\\\"javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax\\\";version=2.2.1, \\",
                "+    javax.xml.bind.annotation;uses:=\\\"javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom\\\";version=2.2.1, \\",
                "+    javax.xml.bind.annotation.adapters;version=2.2.1, \\",
                "+    javax.xml.bind.attachment;uses:=javax.activation;version=2.2.1, \\",
                "+    javax.xml.bind.helpers;uses:=\\\"javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax\\\";version=2.2.1, \\",
                "+    javax.xml.bind.util;uses:=\\\"javax.xml.bind,javax.xml.transform.sax\\\";version=2.2.1, \\",
                "+    javax.annotation;version=1.2, \\",
                "+    javax.annotation.security;version=1.2, \\",
                "+    javax.annotation.sql;version=1.2, \\",
                "+    java_cup.runtime;version=2.7.2, \\",
                "+    org.apache.xalan;version=2.7.2, \\",
                "+    org.apache.xalan.xslt;uses:=\\\"org.w3c.dom,org.xml.sax,org.apache.xalan,org.xml.sax.helpers,javax.xml.transform.sax,org.apache.xalan.res,org.apache.xml.utils,org.apache.xalan.transformer,javax.xml.transform.dom,javax.xml.parsers,javax.xml.transform,org.apache.xalan.trace,javax.xml.transform.stream\\\";version=2.7.2, \\",
                "+    org.apache.xalan.transformer;uses:=\\\"org.apache.xml.dtm,org.xml.sax.ext,org.apache.xml.serializer,org.apache.xalan.serialize,org.xml.sax,org.apache.xml.utils,javax.xml.transform,org.apache.xpath,org.apache.xalan.templates,org.apache.xalan.res,org.apache.xpath.axes,org.apache.xpath.objects,org.w3c.dom,org.xml.sax.helpers,javax.xml.parsers,org.w3c.dom.traversal,javax.xml.transform.sax,org.apache.xml.dtm.ref.sax2dtm,org.apache.xml.dtm.ref,javax.xml.transform.dom,javax.xml.transform.stream,org.apache.xpath.functions,org.apache.xalan.trace,org.apache.xalan.extensions\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.trax;uses:=\\\"org.xml.sax.ext,org.xml.sax.helpers,org.w3c.dom,org.xml.sax,org.apache.xalan.xsltc.dom,org.apache.xml.serializer,org.apache.xalan.xsltc.runtime,javax.xml.parsers,javax.xml.transform.sax,javax.xml.transform,org.apache.xalan.xsltc.compiler.util,org.apache.xalan.xsltc.compiler,javax.xml,org.apache.xalan.xsltc,org.apache.xml.utils,javax.xml.transform.dom,org.apache.xalan.xsltc.runtime.output,org.apache.xml.dtm,javax.xml.transform.stream\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.compiler.util;uses:=\\\"org.apache.bcel.generic,org.apache.xalan.xsltc.compiler,org.apache.bcel.classfile,org.apache.xml.utils\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.cmdline.getopt;uses:=org.apache.xalan.xsltc.compiler.util;version=2.7.2, \\",
                "+    org.apache.xalan.lib;uses:=\\\"org.w3c.dom,org.apache.xml.dtm.ref,org.apache.xml.dtm,org.apache.xpath,org.apache.xpath.axes,org.apache.xalan.extensions,org.apache.xpath.objects,org.xml.sax,org.apache.xalan.res,org.apache.xml.utils,javax.xml.parsers,javax.xml.transform,org.apache.xalan.xslt,org.w3c.dom.traversal,org.xml.sax.helpers,org.apache.xml.serializer,javax.xml.transform.sax,org.apache.xalan.templates,org.apache.xalan.transformer,javax.xml.transform.stream\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.runtime;uses:=\\\"org.apache.xml.serializer,org.w3c.dom,org.apache.xalan.xsltc.runtime.output,javax.xml.parsers,javax.xml.transform,org.apache.xml.dtm,org.apache.xalan.xsltc,org.apache.xalan.xsltc.dom,org.xml.sax,org.apache.xml.utils,javax.xml.transform.dom,org.apache.xml.dtm.ref\\\";version=2.7.2, \\",
                "+    org.apache.xalan.extensions;uses:=\\\"org.w3c.dom,org.apache.xpath,org.apache.xpath.objects,org.apache.xml.utils,javax.xml.transform,org.w3c.dom.traversal,org.apache.xpath.functions,org.apache.xalan.templates,org.apache.xalan.transformer,org.apache.xalan.res,org.apache.xml.dtm,org.apache.xml.dtm.ref,org.apache.xalan.trace,javax.xml.namespace,javax.xml.xpath,org.apache.xml.serializer,org.xml.sax,org.apache.xalan.serialize,org.apache.xpath.axes\\\";version=2.7.2, \\",
                "+    org.apache.xalan.processor;uses:=\\\"org.xml.sax.helpers,org.w3c.dom,org.apache.xalan.templates,org.xml.sax,org.apache.xml.utils,javax.xml.transform,javax.xml.transform.sax,org.apache.xalan.res,javax.xml.parsers,javax.xml.transform.dom,javax.xml.transform.stream,org.apache.xpath,org.apache.xpath.compiler,org.apache.xalan.extensions,org.apache.xalan.transformer\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.runtime.output;uses:=\\\"org.xml.sax.ext,org.apache.xml.serializer,org.w3c.dom,org.xml.sax,javax.xml.parsers,org.apache.xalan.xsltc.trax\\\";version=2.7.2, \\",
                "+    org.apache.xalan.templates;uses:=\\\"org.apache.xpath,org.xml.sax,org.apache.xalan.res,org.apache.xml.utils,org.apache.xalan.processor,javax.xml.transform,org.apache.xpath.compiler,org.apache.xpath.objects,org.apache.xpath.operations,org.apache.xpath.functions,org.apache.xpath.axes,org.apache.xalan.transformer,org.apache.xalan.trace,org.apache.xml.dtm,org.apache.xml.serializer,org.apache.xalan.serialize,org.apache.xml.dtm.ref,org.w3c.dom,org.apache.xalan.extensions,org.apache.xml.utils.res,org.xml.sax.helpers,org.apache.xpath.patterns\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.compiler;uses:=\\\"org.apache.bcel.generic,org.apache.xalan.xsltc.compiler.util,org.apache.xml.utils,java_cup.runtime,org.apache.xml.serializer,org.apache.xalan.xsltc.runtime,org.xml.sax,org.apache.bcel.util,org.apache.bcel.classfile,javax.xml.parsers,org.apache.xml.dtm\\\";version=2.7.2, \\",
                "+    org.apache.xalan.res;uses:=org.apache.xpath.res;version=2.7.2, \\",
                "+    org.apache.xalan.trace;uses:=\\\"org.w3c.dom,org.apache.xpath,org.apache.xpath.objects,org.apache.xalan.templates,org.apache.xalan.transformer,org.xml.sax,org.apache.xml.utils,javax.xml.transform,org.apache.xml.dtm,org.apache.xml.dtm.ref\\\";version=2.7.2, \\",
                "+    org.apache.xalan.client;uses:=\\\"javax.xml.transform.stream,org.apache.xalan.res,javax.xml.transform\\\";version=2.7.2, \\",
                "+    org.apache.xalan.lib.sql;uses:=\\\"org.apache.xalan.res,org.w3c.dom,org.xml.sax,org.apache.xml.dtm,org.xml.sax.ext,org.apache.xml.utils,org.apache.xml.dtm.ref,javax.xml.transform,javax.naming,org.apache.xpath,org.apache.xalan.extensions,org.apache.xpath.objects\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc;uses:=\\\"org.apache.xml.dtm,org.apache.xml.serializer,org.w3c.dom,org.apache.xalan.xsltc.runtime,org.xml.sax\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.cmdline;uses:=\\\"org.apache.xalan.xsltc.cmdline.getopt,org.apache.xalan.xsltc.compiler,org.apache.xalan.xsltc.compiler.util,org.apache.xml.serializer,javax.xml.transform.sax,org.apache.xalan.xsltc.runtime.output,javax.xml.parsers,javax.xml.transform,org.apache.xml.dtm,org.apache.xalan.xsltc,org.xml.sax,org.apache.xalan.xsltc.runtime,org.apache.xalan.xsltc.dom\\\";version=2.7.2, \\",
                "+    org.apache.xalan.serialize;uses:=\\\"org.apache.xml.serializer,org.xml.sax,org.w3c.dom,org.apache.xml.dtm,org.apache.xpath.objects,org.apache.xpath,org.apache.xml.utils,org.apache.xalan.transformer,javax.xml.transform\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.dom;uses:=\\\"org.apache.xml.dtm,org.apache.xalan.xsltc.runtime,org.apache.xml.dtm.ref,org.xml.sax.ext,org.apache.xml.serializer,org.w3c.dom,org.apache.xalan.xsltc,org.xml.sax,org.apache.xml.utils,javax.xml.transform,org.apache.xalan.xsltc.util,javax.xml.transform.sax,javax.xml.parsers,javax.xml.transform.stream,org.apache.xalan.xsltc.trax,org.apache.xml.dtm.ref.sax2dtm,javax.xml.transform.dom,org.apache.xml.res\\\";version=2.7.2, \\",
                "+    org.apache.xalan.xsltc.util;version=2.7.2, \\",
                "+    org.apache.xml.dtm.ref.dom2dtm;uses:=\\\"org.w3c.dom,org.xml.sax,org.apache.xml.dtm,org.xml.sax.ext,org.apache.xml.res,org.apache.xml.utils,org.apache.xml.dtm.ref,javax.xml.transform.dom,javax.xml.transform\\\";version=2.7.2, \\",
                "+    org.apache.xml.dtm;uses:=\\\"org.xml.sax.ext,org.w3c.dom,org.xml.sax,org.apache.xml.utils,javax.xml.transform,org.apache.xml.res\\\";version=2.7.2, \\",
                "+    org.apache.xml.dtm.ref;uses:=\\\"org.apache.xml.res,org.xml.sax.ext,org.xml.sax,org.apache.xml.dtm,org.w3c.dom,org.apache.xml.utils,javax.xml.transform,org.xml.sax.helpers,javax.xml.transform.sax,org.apache.xml.dtm.ref.sax2dtm,org.apache.xml.dtm.ref.dom2dtm,javax.xml.parsers,javax.xml.transform.dom,javax.xml.transform.stream,org.w3c.dom.traversal,org.apache.xpath,org.apache.xerces.parsers,org.apache.xml.serialize\\\";version=2.7.2, \\",
                "+    org.apache.xml.dtm.ref.sax2dtm;uses:=\\\"org.apache.xml.dtm,org.xml.sax.ext,org.apache.xml.res,org.xml.sax,org.apache.xml.utils,org.apache.xml.dtm.ref,javax.xml.transform,org.apache.xml.serializer\\\";version=2.7.2, \\",
                "+    org.apache.xml.res;version=2.7.2, \\",
                "+    org.apache.xml.serializer.utils;uses:=\\\"org.w3c.dom,org.xml.sax,javax.xml.transform\\\";version=2.7.2, \\",
                "+    org.apache.xml.serializer;uses:=\\\"org.xml.sax.helpers,org.xml.sax,org.apache.xml.serializer.utils,javax.xml.transform,org.w3c.dom,org.w3c.dom.ls,org.xml.sax.ext,org.apache.xml.serializer.dom3\\\";version=2.7.2, \\",
                "+    org.apache.xml.serializer.dom3;uses:=\\\"org.apache.xml.serializer,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.apache.xml.serializer.utils,org.xml.sax.ext,org.xml.sax.helpers\\\";version=2.7.2, \\",
                "+    org.apache.xml.utils.res;version=2.7.2, \\",
                "+    org.apache.xml.utils;uses:=\\\"org.w3c.dom,org.xml.sax,javax.xml.parsers,javax.xml.transform,org.xml.sax.ext,org.apache.xml.res,org.apache.xml.dtm.ref,org.xml.sax.helpers,javax.xml.transform.sax,org.apache.xml.dtm.ref.dom2dtm\\\";version=2.7.2, \\",
                "+    org.apache.xpath;uses:=\\\"org.apache.xpath.objects,org.apache.xml.utils,org.w3c.dom,javax.xml.transform,org.w3c.dom.traversal,org.apache.xml.dtm,org.xml.sax,org.apache.xalan.res,org.apache.xpath.functions,org.apache.xpath.axes,org.xml.sax.helpers,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.parsers,org.apache.xalan.templates,org.apache.xpath.compiler,org.apache.xalan.extensions,org.apache.xml.dtm.ref,org.apache.xml.dtm.ref.sax2dtm,org.apache.xpath.operations,org.apache.xpath.patterns\\\";version=2.7.2, \\",
                "+    org.apache.xpath.compiler;uses:=\\\"org.apache.xpath.operations,org.apache.xpath,org.apache.xpath.functions,org.apache.xalan.res,org.apache.xml.utils,javax.xml.transform,org.apache.xml.dtm,org.apache.xpath.objects,org.apache.xpath.axes,org.apache.xpath.patterns,org.apache.xalan.templates,org.apache.xpath.domapi\\\";version=2.7.2, \\",
                "+    org.apache.xpath.res;uses:=org.apache.xml.res;version=2.7.2, \\",
                "+    org.apache.xpath.objects;uses:=\\\"org.apache.xml.utils,org.apache.xml.dtm,org.apache.xpath,javax.xml.transform,org.w3c.dom,org.xml.sax,org.apache.xpath.axes,org.apache.xml.dtm.ref,org.w3c.dom.traversal,org.apache.xalan.res,org.xml.sax.ext\\\";version=2.7.2, \\",
                "+    org.apache.xpath.patterns;uses:=\\\"org.apache.xml.dtm,org.apache.xpath,org.apache.xpath.objects,org.apache.xpath.axes,javax.xml.transform\\\";version=2.7.2, \\",
                "+    org.apache.xpath.operations;uses:=\\\"org.apache.xpath,org.apache.xpath.objects,javax.xml.transform,org.apache.xml.utils,org.apache.xml.dtm,org.w3c.dom,org.apache.xalan.templates,org.apache.xalan.res,org.apache.xpath.axes\\\";version=2.7.2, \\",
                "+    org.apache.xpath.domapi;uses:=\\\"org.w3c.dom,org.apache.xpath.res,org.apache.xml.utils,org.w3c.dom.xpath,org.apache.xpath,javax.xml.transform,org.apache.xpath.objects,org.w3c.dom.events,org.w3c.dom.traversal\\\";version=2.7.2, \\",
                "+    org.apache.xpath.functions;uses:=\\\"org.apache.xpath,org.apache.xpath.objects,javax.xml.transform,org.apache.xalan.res,org.apache.xml.dtm,org.apache.xpath.axes,org.apache.xpath.patterns,org.apache.xalan.templates,org.apache.xml.utils,org.apache.xalan.transformer,org.apache.xpath.res,org.apache.xpath.compiler,org.xml.sax\\\";version=2.7.2, \\",
                "+    org.apache.xpath.jaxp;uses:=\\\"org.w3c.dom,javax.xml.namespace,org.apache.xpath.objects,org.apache.xpath,org.apache.xpath.functions,org.apache.xalan.res,org.apache.xml.utils,javax.xml.transform,javax.xml.xpath,javax.xml.parsers,org.w3c.dom.traversal,org.xml.sax\\\";version=2.7.2, \\",
                "+    org.apache.xpath.axes;uses:=\\\"org.apache.xml.dtm,org.apache.xpath.compiler,javax.xml.transform,org.apache.xpath,org.apache.xalan.res,org.apache.xpath.patterns,org.apache.xml.utils,org.w3c.dom,org.w3c.dom.traversal,org.apache.xpath.objects,org.apache.xpath.operations,org.apache.xpath.functions,org.xml.sax\\\";version=2.7.2, \\",
                "+    javax.xml.ws;uses:=\\\"javax.xml.bind,javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.ws.handler,javax.xml.ws.spi,javax.xml.ws.spi.http,org.w3c.dom\\\";version=2.2, \\",
                "+    javax.xml.ws.handler;uses:=\\\"javax.xml.namespace,javax.xml.ws\\\";version=2.2, \\",
                "+    javax.xml.ws.handler.soap;uses:=\\\"javax.xml.bind,javax.xml.namespace,javax.xml.soap,javax.xml.ws.handler\\\";version=2.2, \\",
                "+    javax.xml.ws.http;uses:=javax.xml.ws;version=2.2, \\",
                "+    javax.xml.ws.soap;uses:=\\\"javax.xml.soap,javax.xml.ws,javax.xml.ws.spi\\\";version=2.2, \\",
                "+    javax.xml.ws.spi;uses:=\\\"javax.xml.bind,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.wsaddressing,org.w3c.dom\\\";version=2.2, \\",
                "+    javax.xml.ws.spi.http;version=2.2, \\",
                "+    javax.xml.ws.wsaddressing;uses:=\\\"javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.ws,org.w3c.dom\\\";version=2.2, \\",
                "+    org.apache.html.dom;uses:=\\\"org.w3c.dom.html,org.apache.xerces.dom,org.w3c.dom,org.xml.sax\\\";version=2.11.0, \\",
                "+    org.apache.wml.dom;uses:=\\\"org.apache.wml,org.apache.xerces.dom,org.w3c.dom\\\";version=2.11.0, \\",
                "+    org.apache.wml;uses:=org.w3c.dom;version=2.11.0, \\",
                "+    org.apache.xerces.xpointer;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.impl,org.apache.xerces.xs,org.apache.xerces.impl.dv,org.apache.xerces.xinclude\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xni.grammars;uses:=\\\"org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xs\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs.util;uses:=\\\"org.apache.xerces.xs,org.w3c.dom.ls,org.apache.xerces.xs.datatypes,org.apache.xerces.xni,org.apache.xerces.util,org.apache.xerces.xni.grammars,org.apache.xerces.impl.xs,org.apache.xerces.xni.parser,javax.xml.namespace\\\";version=2.11.0, \\",
                "+    org.apache.xerces.jaxp.validation;uses:=\\\"org.apache.xerces.xni.grammars,javax.xml.validation,org.apache.xerces.xni,javax.xml.transform.dom,org.w3c.dom,org.apache.xerces.xs,org.apache.xerces.impl.dv,org.apache.xerces.dom,org.apache.xerces.xni.parser,org.apache.xerces.util,org.apache.xerces.impl.xs.util,javax.xml.parsers,org.xml.sax,org.apache.xerces.impl.validation,javax.xml.transform,org.apache.xerces.impl.xs,org.apache.xerces.impl,javax.xml.stream,javax.xml.transform.stax,javax.xml.stream.events,javax.xml.namespace,org.apache.xerces.parsers,org.apache.xml.serialize,javax.xml.transform.stream,org.apache.xerces.impl.msg,org.w3c.dom.ls,org.xml.sax.ext,javax.xml.transform.sax\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dtd.models;uses:=org.apache.xerces.xni;version=2.11.0, \\",
                "+    org.apache.xerces.impl.xpath;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xni\\\";version=2.11.0, \\",
                "+    org.apache.xerces.dom3.as;uses:=\\\"org.w3c.dom,org.w3c.dom.ls\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dv.xs;uses:=\\\"org.apache.xerces.xs.datatypes,javax.xml.datatype,org.apache.xerces.jaxp.datatype,org.apache.xerces.impl.dv,org.apache.xerces.util,org.apache.xerces.impl.dv.util,org.apache.xerces.xs,org.apache.xerces.impl.xs,org.apache.xerces.xni,javax.xml.namespace,org.apache.xerces.impl.xs.util,org.apache.xerces.impl.xpath.regex,org.w3c.dom\\\";version=2.11.0, \\",
                "+    org.apache.xerces.util;uses:=\\\"org.xml.sax.ext,org.apache.xerces.xni,org.xml.sax,org.w3c.dom.ls,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.dom,org.w3c.dom,org.apache.xerces.impl.xs.opti,org.apache.xerces.impl,javax.xml.namespace,javax.xml.stream,javax.xml.stream.events,javax.xml.parsers,org.apache.xml.resolver.readers,org.apache.xerces.jaxp,org.apache.xml.resolver\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs.opti;uses:=\\\"org.w3c.dom,org.apache.xerces.xni.parser,org.apache.xerces.xni,org.apache.xerces.util,org.apache.xerces.impl.xs,org.apache.xerces.impl,org.apache.xerces.xni.grammars,org.apache.xerces.parsers,org.apache.xerces.impl.validation,org.apache.xerces.impl.dv,org.apache.xerces.impl.msg\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs.identity;uses:=\\\"org.apache.xerces.xs,org.apache.xerces.impl.xs.util,org.apache.xerces.impl.xpath,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.impl.xs\\\";version=2.11.0, \\",
                "+    org.apache.xerces.jaxp;uses:=\\\"org.xml.sax.helpers,org.xml.sax,org.apache.xerces.util,org.apache.xerces.parsers,javax.xml.parsers,javax.xml.validation,org.apache.xerces.jaxp.validation,org.apache.xerces.xni.parser,org.w3c.dom,org.apache.xerces.impl.validation,org.apache.xerces.dom,org.apache.xerces.xni,org.apache.xerces.impl.xs,org.apache.xerces.impl,org.w3c.dom.ls,org.apache.xerces.impl.xs.opti,org.apache.xerces.xs,org.apache.xerces.xni.grammars\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dv;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xs,org.apache.xerces.impl.xs.util\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xs.datatypes;uses:=\\\"org.apache.xerces.xs,javax.xml.datatype,org.apache.xerces.xni,javax.xml.namespace\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.msg;uses:=org.apache.xerces.util;version=2.11.0, \\",
                "+    org.apache.xerces.dom.events;uses:=\\\"org.w3c.dom.events,org.w3c.dom.views,org.w3c.dom\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xni;uses:=org.apache.xerces.xni.parser;version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs;uses:=\\\"org.apache.xerces.xs,org.apache.xerces.impl.dv,org.apache.xerces.impl.xs.util,org.apache.xerces.util,org.apache.xerces.xni.grammars,org.apache.xerces.parsers,org.apache.xerces.impl.dv.xs,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.xml.sax,org.apache.xerces.impl.xs.identity,org.apache.xerces.xs.datatypes,org.w3c.dom,org.apache.xerces.impl.xs.opti,org.apache.xerces.impl.xs.traversers,org.w3c.dom.ls,org.apache.xerces.impl.xs.models,org.apache.xerces.dom,org.apache.xerces.impl,javax.xml.namespace,org.apache.xerces.impl.validation\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl;uses:=\\\"org.apache.xerces.xni.grammars,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.util,org.apache.xerces.impl.dtd,org.apache.xerces.impl.io,org.apache.xerces.impl.validation,org.xml.sax\\\";version=2.11.0, \\",
                "+    org.apache.xerces.stax.events;uses:=\\\"javax.xml.stream,javax.xml.stream.events,javax.xml.namespace,org.apache.xerces.util,org.apache.xerces.stax\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.io;uses:=\\\"org.apache.xerces.util,org.apache.xerces.impl.msg\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xinclude;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.impl.io,org.apache.xerces.xpointer,org.apache.xerces.impl\\\";version=2.11.0, \\",
                "+    org.apache.xerces.jaxp.datatype;uses:=\\\"javax.xml.datatype,org.apache.xerces.util,javax.xml.namespace\\\";version=2.11.0, \\",
                "+    org.apache.xerces.parsers;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xs,org.w3c.dom.ls,org.apache.xerces.impl.dv,org.apache.xerces.dom,org.apache.xerces.xni.parser,org.apache.xerces.xni,org.w3c.dom,org.xml.sax.ext,org.xml.sax,org.apache.xerces.xni.grammars,org.apache.xerces.impl.xs,org.apache.xerces.dom3.as,org.xml.sax.helpers,org.apache.xerces.impl,org.apache.xerces.impl.dtd,org.apache.xerces.impl.validation,org.apache.xerces.impl.msg,org.apache.xerces.xinclude,org.apache.xerces.xpointer\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dv.util;uses:=\\\"org.apache.xerces.xs,org.apache.xerces.xs.datatypes\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xni.parser;uses:=org.apache.xerces.xni;version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs.traversers;uses:=\\\"org.apache.xerces.util,org.apache.xerces.impl.xs.opti,org.apache.xerces.xni.parser,org.apache.xerces.xni,org.w3c.dom,org.xml.sax.helpers,org.xml.sax,javax.xml.stream,javax.xml.stream.events,javax.xml.namespace,org.apache.xerces.xs,org.apache.xerces.impl.validation,org.apache.xerces.impl.xs.util,org.apache.xerces.impl.dv,org.apache.xerces.impl.xs,org.apache.xerces.impl.xs.identity,org.apache.xerces.impl.xpath,org.apache.xerces.impl.dv.xs,org.apache.xerces.xni.grammars,org.apache.xerces.parsers,org.apache.xerces.xs.datatypes,org.apache.xerces.impl\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dv.dtd;uses:=\\\"org.apache.xerces.impl.dv,org.apache.xerces.util\\\";version=2.11.0, \\",
                "+    org.apache.xerces.xs;uses:=\\\"org.w3c.dom.ls,org.w3c.dom,org.apache.xerces.xs.datatypes\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.validation;uses:=\\\"org.apache.xerces.util,org.apache.xerces.impl.dv,org.apache.xerces.xni\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.dtd;uses:=\\\"org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.impl.validation,org.apache.xerces.xni.grammars,org.apache.xerces.impl.dv,org.apache.xerces.impl.dtd.models,org.apache.xerces.xni.parser,org.apache.xerces.impl,org.apache.xerces.impl.msg\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.xs.models;uses:=\\\"org.apache.xerces.xs,org.apache.xerces.impl.dtd.models,org.apache.xerces.impl.xs,org.apache.xerces.util,org.apache.xerces.xni.parser,org.apache.xerces.impl,org.apache.xerces.xni\\\";version=2.11.0, \\",
                "+    org.apache.xerces.impl.xpath.regex;uses:=org.apache.xerces.util;version=2.11.0, \\",
                "+    org.apache.xerces.stax;uses:=\\\"javax.xml.namespace,javax.xml.stream,javax.xml.stream.events,org.apache.xerces.stax.events\\\";version=2.11.0, \\",
                "+    org.apache.xerces.dom;uses:=\\\"org.apache.xerces.parsers,org.apache.xerces.dom3.as,org.w3c.dom,org.apache.xerces.impl.xs,org.apache.xerces.xni,org.apache.xerces.impl.dv.xs,org.apache.xerces.impl,org.apache.xerces.impl.dtd,org.apache.xerces.util,org.w3c.dom.ls,org.apache.xml.serialize,org.w3c.dom.events,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.impl.validation,org.apache.xerces.impl.dv,org.apache.xerces.impl.msg,org.apache.xerces.impl.xs.util,org.apache.xerces.xs,org.apache.xerces.dom.events,org.w3c.dom.traversal,org.w3c.dom.ranges\\\";version=2.11.0, \\",
                "+    org.apache.xml.serialize;uses:=\\\"org.apache.xerces.util,org.w3c.dom.ls,org.xml.sax.ext,org.apache.xerces.dom,org.w3c.dom,org.xml.sax,org.apache.xerces.impl,sun.io,org.w3c.dom.html,org.apache.xerces.xni,org.xml.sax.helpers\\\";version=2.11.0, \\",
                "+    javax.activation;version=1.1, \\",
                "+    org.apache.xml.serializer;uses:=\\\"org.xml.sax.helpers,org.xml.sax,org.apache.xml.serializer.utils,javax.xml.transform,org.w3c.dom.ls,org.w3c.dom,org.xml.sax.ext,org.apache.xml.serializer.dom3\\\";version=2.7.2, \\",
                "+    org.apache.xml.serializer.dom3;uses:=\\\"org.apache.xml.serializer,org.w3c.dom.ls,org.apache.xml.serializer.utils,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers\\\";version=2.7.2, \\",
                "+    org.apache.karaf.jaas.boot;uses:=\\\"javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.osgi.framework\\\";version=@@karaf.osgi.version@@, \\",
                "+    org.apache.karaf.jaas.boot.principal;uses:=javax.security.auth;version=@@karaf.osgi.version@@, \\",
                "+    org.apache.karaf.diagnostic.core;uses:=org.osgi.framework;version=@@karaf.osgi.version@@, \\",
                "+    org.apache.karaf.diagnostic.core.common;uses:=org.apache.karaf.diagnostic.core;version=@@karaf.osgi.version@@",
                "+",
                "+org.osgi.framework.system.capabilities= \\",
                "+ ${eecap-${java.specification.version}}, \\",
                "+ ${${karaf.framework}-capabilities}, \\",
                "+ ${karaf-capabilities}",
                "+",
                "+karaf-capabilities= \\",
                "+ osgi.service;objectClass:List<String>=org.apache.karaf.info.ServerInfo",
                "+",
                "+felix-capabilities= \\",
                "+ osgi.service;objectClass:List<String>=org.osgi.service.packageadmin.PackageAdmin, \\",
                "+ osgi.service;objectClass:List<String>=org.osgi.service.resolver.Resolver, \\",
                "+ osgi.service;objectClass:List<String>=org.osgi.service.startlevel.StartLevel",
                "+",
                "+equinox-capabilities= \\",
                "+ osgi.service;objectClass:List<String>=java.lang.ClassLoader;equinox.classloader.type=contextClassLoader, \\",
                "+ osgi.service;objectClass:List<String>=javax.xml.parsers.DocumentBuilderFactory, \\",
                "+ osgi.service;objectClass:List<String>=javax.xml.parsers.SAXParserFactory, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.framework.log.FrameworkLog, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.framework.log.FrameworkLog;performance=true, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.datalocation.Location;type=eclipse.home.location, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.datalocation.Location;type=osgi.configuration.area, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.datalocation.Location;type=osgi.install.area, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.datalocation.Location;type=osgi.instance.area, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.datalocation.Location;type=osgi.user.area, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.debug.DebugOptions, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.environment.EnvironmentInfo, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.localization.BundleLocalization, \\",
                "+ osgi.service;objectClass:List<String>=\"org.osgi.service.log.LogReaderService,org.eclipse.equinox.log.ExtendedLogReaderService\", \\",
                "+ osgi.service;objectClass:List<String>=\"org.osgi.service.log.LogService,org.eclipse.equinox.log.ExtendedLogService\", \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.security.TrustEngine;osgi.signedcontent.trust.engine=org.eclipse.osgi, \\",
                "+ osgi.service;objectClass:List<String>=org.eclipse.osgi.service.urlconversion.URLConverter;protocol:List<String>=\"bundleentry,bundleresource\"",
                "+",
                "+eecap-9= osgi.ee; osgi.ee=\"OSGi/Minimum\"; version:List<Version>=\"1.0,1.1,1.2\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE\"; version:List<Version>=\"1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,9.0\", \\",
                "+ osgi.ee; osgi.ee=\"JRE\"; version:List<Version>=\"1.0,1.1\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact1\"; version:List<Version>=\"1.8,9.0\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact2\"; version:List<Version>=\"1.8,9.0\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact3\"; version:List<Version>=\"1.8,9.0\"",
                "+eecap-1.8= osgi.ee; osgi.ee=\"OSGi/Minimum\"; version:List<Version>=\"1.0,1.1,1.2\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE\"; version:List<Version>=\"1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8\", \\",
                "+ osgi.ee; osgi.ee=\"JRE\"; version:List<Version>=\"1.0,1.1\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact1\"; version:List<Version>=\"1.8\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact2\"; version:List<Version>=\"1.8\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact3\"; version:List<Version>=\"1.8\"",
                "+",
                "+#",
                "+# javax.transaction is needed to avoid class loader constraint violation when using javax.sql",
                "+#",
                "+org.osgi.framework.bootdelegation=\\",
                "+    com.sun.*, \\",
                "+    javax.transaction, \\",
                "+    javax.transaction.*, \\",
                "+    javax.xml.crypto, \\",
                "+    javax.xml.crypto.*, \\",
                "+    jdk.nashorn.*, \\",
                "+    sun.*, \\",
                "+    org.apache.html.dom, \\",
                "+    org.apache.wml.dom, \\",
                "+    org.apache.wml, \\",
                "+    org.apache.xerces.xpointer, \\",
                "+    org.apache.xerces.xni.grammars, \\",
                "+    org.apache.xerces.impl.xs.util, \\",
                "+    org.apache.xerces.jaxp.validation, \\",
                "+    org.apache.xerces.impl.dtd.models, \\",
                "+    org.apache.xerces.impl.xpath, \\",
                "+    org.apache.xerces.dom3.as, \\",
                "+    org.apache.xerces.impl.dv.xs, \\",
                "+    org.apache.xerces.util, \\",
                "+    org.apache.xerces.impl.xs.opti, \\",
                "+    org.apache.xerces.impl.xs.identity, \\",
                "+    org.apache.xerces.jaxp, \\",
                "+    org.apache.xerces.impl.dv, \\",
                "+    org.apache.xerces.xs.datatypes, \\",
                "+    org.apache.xerces.impl.msg, \\",
                "+    org.apache.xerces.dom.events, \\",
                "+    org.apache.xerces.xni, \\",
                "+    org.apache.xerces.impl.xs, \\",
                "+    org.apache.xerces.impl, \\",
                "+    org.apache.xerces.stax.events, \\",
                "+    org.apache.xerces.impl.io, \\",
                "+    org.apache.xerces.xinclude, \\",
                "+    org.apache.xerces.jaxp.datatype, \\",
                "+    org.apache.xerces.parsers, \\",
                "+    org.apache.xerces.impl.dv.util, \\",
                "+    org.apache.xerces.xni.parser, \\",
                "+    org.apache.xerces.impl.xs.traversers, \\",
                "+    org.apache.xerces.impl.dv.dtd, \\",
                "+    org.apache.xerces.xs, \\",
                "+    org.apache.xerces.impl.validation, \\",
                "+    org.apache.xerces.impl.dtd, \\",
                "+    org.apache.xerces.impl.xs.models, \\",
                "+    org.apache.xerces.impl.xpath.regex, \\",
                "+    org.apache.xerces.stax, \\",
                "+    org.apache.xerces.dom, \\",
                "+    org.apache.xml.serialize, \\",
                "+    org.apache.karaf.jaas.boot, \\",
                "+    org.apache.karaf.jaas.boot.principal",
                "+",
                "+# jVisualVM support",
                "+# in order to use Karaf with jvisualvm, the org.osgi.framework.bootdelegation property has to contain the org.netbeans.lib.profiler.server package",
                "+# and, so, it should look like:",
                "+#",
                "+# org.osgi.framework.bootdelegation=org.apache.karaf.jaas.boot,org.apache.karaf.jaas.boot.principal,sun.*,com.sun.*,javax.transaction,javax.transaction.*,javax.xml.crypto,javax.xml.crypto.*,org.apache.xerces.jaxp.datatype,org.apache.xerces.stax,org.apache.xerces.parsers,org.apache.xerces.jaxp,org.apache.xerces.jaxp.validation,org.apache.xerces.dom,org.netbeans.lib.profiler.server",
                "+#",
                "+# YourKit support",
                "+# in order to use Karaf with YourKit, the org.osgi.framework.bootdelegation property has to contain the com.yourkit.* packages",
                "+#\u00c2\u00a0and, so, it should look like:",
                "+#",
                "+# org.osgi.framework.bootdelegation=org.apache.karaf.jaas.boot,org.apache.karaf.jaas.boot.principal,sun.*,com.sun.*,javax.transaction,javax.transaction.*,javax.xml.crypto,javax.xml.crypto.*,org.apache.xerces.jaxp.datatype,org.apache.xerces.stax,org.apache.xerces.parsers,org.apache.xerces.jaxp,org.apache.xerces.jaxp.validation,org.apache.xerces.dom,com.yourkit.*",
                "+#",
                "+",
                "+#",
                "+# Set the parent classloader for the bundle to the classloader that loads the Framework (i.e. everything in lib/*.jar)",
                "+#",
                "+org.osgi.framework.bundle.parent=framework",
                "+",
                "+#",
                "+# Definition of the default bundle start level",
                "+#",
                "+org.osgi.framework.startlevel.beginning=100",
                "+karaf.startlevel.bundle=80",
                "+",
                "+#",
                "+# The location of the Karaf shutdown port file used to stop instance",
                "+#",
                "+karaf.shutdown.port.file=${karaf.data}/port",
                "+",
                "+#",
                "+# The location of the Karaf pid file",
                "+#",
                "+karaf.pid.file=${karaf.base}/karaf.pid",
                "+",
                "+#",
                "+# Configuration FileMonitor properties",
                "+#",
                "+felix.fileinstall.enableConfigSave = true",
                "+felix.fileinstall.dir    = ${karaf.etc}",
                "+felix.fileinstall.filter = .*\\\\.(cfg|config)",
                "+felix.fileinstall.poll   = 1000",
                "+felix.fileinstall.noInitialDelay = true",
                "+felix.fileinstall.log.level = 3",
                "+felix.fileinstall.log.default = jul",
                "+",
                "+# Use cached urls for bundle CodeSource to avoid",
                "+# problems with JCE cached informations, see KARAF-3974",
                "+felix.bundlecodesource.usecachedurls = true",
                "+",
                "+#",
                "+# Delay for writing the framework state to disk in equinox",
                "+# must be  >= 1000 and <= 1800000",
                "+#",
                "+eclipse.stateSaveDelayInterval = 1000",
                "+",
                "+#",
                "+# OBR Repository list",
                "+# This property will be modified by the obr:addUrl and obr:removeUrl commands. ",
                "+#",
                "+obr.repository.url = ",
                "+",
                "+#",
                "+# Start blueprint bundles synchronously when possible",
                "+#",
                "+org.apache.aries.blueprint.synchronous=true",
                "+",
                "+#",
                "+# Do not weave all any classes by default",
                "+#",
                "+org.apache.aries.proxy.weaving.enabled=",
                "+",
                "+#",
                "+# mvn url handler requires config instance configuration",
                "+#",
                "+org.ops4j.pax.url.mvn.requireConfigAdminConfig=true",
                "+",
                "+#",
                "+# Don't delay the console startup. Set to true if you want the console to start after all other bundles",
                "+#",
                "+karaf.delay.console=false",
                "+",
                "+#",
                "+# Enable native Karaf support for systemd's watchdog.",
                "+#",
                "+#karaf.systemd.enabled=false",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.cfg",
                "new file mode 100644",
                "index 0000000000..b4899bd7e9",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.cfg",
                "@@ -0,0 +1,73 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# Generic JMX ACL",
                "+#",
                "+# This file defines the roles required for MBean operations for MBeans that",
                "+# do not have this defined explicitly.",
                "+#",
                "+# The definition of ACLs for JMX operations works as follows:",
                "+#",
                "+# The required roles for JMX operations are defined in configuration files",
                "+# read via OSGi ConfigAdmin.",
                "+#",
                "+# JMX RBAC-related configuration is prefixed with jmx.acl and based on the",
                "+# JMX ObjectName that it applies to. For example specific configuration for",
                "+# an MBean with the following objectName: foo.bar:type=Test can be placed in",
                "+# a configuration file called jmx.acl.foo.bar.Test.cfg. More generic",
                "+# configuration can be placed in the domain (e.g. jmx.acl.foo.bar.cfg) or",
                "+# at the top level (jmx.acl.cfg). A simple configuration file looks like",
                "+# this:",
                "+#   test : admin",
                "+#   getVal : manager, viewer",
                "+#",
                "+# The system looks for required roles using the following process:",
                "+# The most specific configuration file/pid is tried first. E.g. in the",
                "+# above example the jmx.acl.foo.bar.Test.cfg is looked at first. In this",
                "+# configuration, the system looks for a:",
                "+#   1. Specific match for the current invocation, e.g. test(int)[\"17\"] : role1",
                "+#   2. Reg exp match for the current invocation, e.g. test(int)[/[0-9]/] : role2",
                "+#   In both cases the passed argument is converted to a String for the",
                "+# comparison.",
                "+#   If any of the above match all the roles with matching definitions",
                "+# are collected and allowed. If no matches are found the following is tried:",
                "+#   3. Signature match for the invocation, e.g. test(int) : role3. If",
                "+# matched the associated roles are used.",
                "+#   4. Method name match for the invocation, e.g. test : role4. If matched",
                "+# the associated roles are used.",
                "+#   5. A method name wildcard match, e.g. te* : role5. For all the",
                "+# wildcard matches found in the current configuration file, the roles",
                "+# associated with the longest match are used. So if you have te* and * and",
                "+# the method invoked is 'test', then the roles defined with te* are used,",
                "+# not the ones defined with *.",
                "+# If no matching definition is found in the current configuration file, a",
                "+# more general configuration file is looked for. So jmx.acl.foo.bar.cfg is",
                "+# tried next, this matches the domain of the MBean. If there is no match",
                "+# found in the domain the most generic configuration file is consulted",
                "+# (jmx.acl.cfg).",
                "+# If a matching definition is found, this is used and the process will not",
                "+# look for any other matching definitions. So the most specific definition",
                "+# always takes precedence.",
                "+#",
                "+list* = viewer",
                "+get* = viewer",
                "+is* = viewer",
                "+set* = admin",
                "+* = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.java.lang.Memory.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.java.lang.Memory.cfg",
                "new file mode 100644",
                "index 0000000000..60e627599c",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.java.lang.Memory.cfg",
                "@@ -0,0 +1,25 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the java.lang.Memory MBean",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+gc = manager",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.bundle.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.bundle.cfg",
                "new file mode 100644",
                "index 0000000000..e0d15f4f35",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.bundle.cfg",
                "@@ -0,0 +1,38 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=bundle,name=* MBean which maps to the Karaf MBean",
                "+# to control OSGi bundles.",
                "+#",
                "+install = manager",
                "+refresh = manager",
                "+resolve = manager",
                "+restart = manager",
                "+setStartLevel(java.lang.String, int)[/([1-4])?[0-9]/,/.*/] = admin",
                "+setStartLevel = manager",
                "+start(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+start = manager",
                "+stop(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+stop = manager",
                "+uninstall(java.lang.String)[\"0\"] = #this is a comment, no roles can perform this operation",
                "+uninstall = admin",
                "+update(java.lang.String)[/([1-4])?[0-9]/] = admin",
                "+update(java.lang.String,java.lang.String)[/([1-4])?[0-9]/,/.*/] = admin",
                "+update = manager",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.config.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.config.cfg",
                "new file mode 100644",
                "index 0000000000..8dded0d3f8",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.config.cfg",
                "@@ -0,0 +1,52 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=config,name=* MBean which maps to the Karaf MBean to interact with the",
                "+# OSGi Config Admin service.",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+# By default, only an admin can make changes to the JMX ACL and shell command rules, but managers can make",
                "+# changes to other PIDs.",
                "+#",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "+appendProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "+create(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+create(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "+create(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "+create(java.lang.String) = manager",
                "+delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/] = admin",
                "+delete(java.lang.String) = manager",
                "+deleteProperty(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "+deleteProperty(java.lang.String,java.lang.String) = manager",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/,/.*/] = admin",
                "+setProperty(java.lang.String,java.lang.String,java.lang.String) = manager",
                "+update(java.lang.String,java.util.Map)[/jmx[.]acl.*/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]command[.]acl.+/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map)[/org[.]apache[.]karaf[.]service[.]acl.+/,/.*/] = admin",
                "+update(java.lang.String,java.util.Map) = manager",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.security.jmx.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.security.jmx.cfg",
                "new file mode 100644",
                "index 0000000000..0af2c96766",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.security.jmx.cfg",
                "@@ -0,0 +1,27 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to the org.apache.karaf:type=security,area=jmx MBean which",
                "+# can be used to find out whether the currently logged in JMX user can invoke",
                "+# the requested JMX operations.",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+canInvoke = viewer",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.osgi.compendium.cm.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.osgi.compendium.cm.cfg",
                "new file mode 100644",
                "index 0000000000..7de362dd2c",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.osgi.compendium.cm.cfg",
                "@@ -0,0 +1,53 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# JMX ACL specific to osgi.compendium.cm MBean",
                "+#",
                "+# For a description of the format of this file, see jmx.acl.cfg",
                "+#",
                "+# This configuration file configures the management of ConfigAdmin via the standard ConfigAdmin MBean",
                "+# Such that only an admin can make changes to the JMX ACL rules, but managers can make",
                "+# changes to other PIDs.",
                "+#",
                "+createFactoryConfiguration(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+createFactoryConfiguration(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+createFactoryConfiguration(java.lang.String) = manager",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+createFactoryConfigurationForLocation(java.lang.String,java.lang.String) = manager",
                "+delete(java.lang.String)[/jmx[.]acl.*/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+delete(java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+delete(java.lang.String) = manager",
                "+deleteConfigurations = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/jmx[.]acl.*/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+deleteForLocation(java.lang.String,java.lang.String) = manager",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/] = admin",
                "+update(java.lang.String,javax.management.openmbean.TabularData) = manager",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/jmx[.]acl.*/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]command[.]acl[.].+/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData)[/org[.]apache[.]karaf[.]service[.]acl[.].+/,/.*/,/.*/] = admin",
                "+updateForLocation(java.lang.String,java.lang.String,javax.management.openmbean.TabularData) = manager",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.eventadmin.impl.EventAdmin.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.eventadmin.impl.EventAdmin.cfg",
                "new file mode 100644",
                "index 0000000000..1e55122c3b",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.eventadmin.impl.EventAdmin.cfg",
                "@@ -0,0 +1,21 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+org.apache.felix.eventadmin.AddTimestamp=true",
                "+org.apache.felix.eventadmin.AddSubject=true",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.fileinstall-deploy.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.fileinstall-deploy.cfg",
                "new file mode 100644",
                "index 0000000000..7f9f0ca950",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.fileinstall-deploy.cfg",
                "@@ -0,0 +1,25 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+felix.fileinstall.dir           = ${karaf.base}/deploy",
                "+felix.fileinstall.tmpdir        = ${karaf.data}/generated-bundles",
                "+felix.fileinstall.poll          = 1000",
                "+felix.fileinstall.start.level   = 80",
                "+felix.fileinstall.active.level  = 80",
                "+felix.fileinstall.log.level     = 3",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.bundle.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.bundle.cfg",
                "new file mode 100644",
                "index 0000000000..961e2d1a36",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.bundle.cfg",
                "@@ -0,0 +1,44 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the bundle subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+# This configuration relies on the fact that 'system' bundles need to be managed",
                "+# with the",
                "+#   -f (--force)",
                "+# flag. Operations with -f need admin permission. Most of these operations without",
                "+# the 'force' option can be done by a manager.",
                "+install = admin",
                "+refresh[/.*[-][f].*/] = admin",
                "+refresh = manager",
                "+restart[/.*[-][f].*/] = admin",
                "+restart = manager",
                "+start[/.*[-][f].*/] = admin",
                "+start = manager",
                "+stop[/.*[-][f].*/] = admin",
                "+stop = manager",
                "+uninstall[/.*[-][f].*/] = admin",
                "+uninstall = manager",
                "+update[/.*[-][f].*/] = admin",
                "+update = manager",
                "+watch = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.config.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.config.cfg",
                "new file mode 100644",
                "index 0000000000..1cbc8b5cd8",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.config.cfg",
                "@@ -0,0 +1,44 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for various commands in the config subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+cancel = manager",
                "+delete = admin",
                "+edit = manager",
                "+edit[/.*jmx[.]acl.*/] = admin",
                "+edit[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+edit[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-append = manager",
                "+property-append[/.*jmx[.]acl.*/] = admin",
                "+property-append[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-append[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-delete = manager",
                "+property-delete[/.*jmx[.]acl.*/] = admin",
                "+property-delete[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-delete[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+property-set = manager",
                "+property-set[/.*jmx[.]acl.*/] = admin",
                "+property-set[/.*org[.]apache[.]karaf[.]command[.]acl[.].+/] = admin",
                "+property-set[/.*org[.]apache[.]karaf[.]service[.]acl[.].+/] = admin",
                "+update = manager",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.feature.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.feature.cfg",
                "new file mode 100644",
                "index 0000000000..8cea100faa",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.feature.cfg",
                "@@ -0,0 +1,27 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the feature subshell",
                "+#",
                "+install = admin",
                "+uninstall = admin",
                "+start = admin",
                "+stop = admin",
                "+update = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.jaas.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.jaas.cfg",
                "new file mode 100644",
                "index 0000000000..8c6c9c8326",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.jaas.cfg",
                "@@ -0,0 +1,23 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the jaas subshell",
                "+# Jaas commands commands have no effect until update is called.",
                "+update = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.kar.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.kar.cfg",
                "new file mode 100644",
                "index 0000000000..758d745c86",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.kar.cfg",
                "@@ -0,0 +1,27 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the kar subshell",
                "+#",
                "+# For an explanation of the syntax of this file, see the file:",
                "+#   org.apache.karaf.command.acl.system.cfg",
                "+#",
                "+install = admin",
                "+uninstall = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.scope_bundle.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.scope_bundle.cfg",
                "new file mode 100644",
                "index 0000000000..d788e6bb57",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.scope_bundle.cfg",
                "@@ -0,0 +1,31 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for scope bundles",
                "+#",
                "+features=org.apache.karaf.features.command",
                "+jaas=org.apache.karaf.jaas.command",
                "+admin=org.apache.karaf.admin.command",
                "+osgi=org.apache.karaf.shell.osgi",
                "+log=org.apache.karaf.shell.log",
                "+packages=org.apache.karaf.shell.packages",
                "+config=org.apache.karaf.shell.config",
                "+ssh=org.apache.karaf.shell.ssh",
                "+shell=org.apache.karaf.shell.commands",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.shell.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.shell.cfg",
                "new file mode 100644",
                "index 0000000000..5e7039a0a9",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.shell.cfg",
                "@@ -0,0 +1,26 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the shell subshell",
                "+#",
                "+nano = admin",
                "+exec = admin",
                "+new = admin",
                "+java = admin",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.system.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.system.cfg",
                "new file mode 100644",
                "index 0000000000..fed0554b63",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.system.cfg",
                "@@ -0,0 +1,27 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file defines the ACLs for commands in the system subshell",
                "+#",
                "+property = admin",
                "+shutdown = admin",
                "+start-level[/.*[1-9][0-9][0-9]+.*/] = manager # manager can set startlevels above 100",
                "+start-level[/[^0-9]*/] = viewer               # viewer can obtain the current start level",
                "+start-level = admin                           # admin can set any start level, including &lt; 100",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.features.repos.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.features.repos.cfg",
                "new file mode 100644",
                "index 0000000000..41b4b3b21f",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.features.repos.cfg",
                "@@ -0,0 +1,55 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This file describes the features repository URL",
                "+# It could be directly installed using feature:repo-add command",
                "+#",
                "+enterprise=mvn:org.apache.karaf.features/enterprise/@@project.version@@/xml/features",
                "+enterprise-legacy=mvn:org.apache.karaf.features/enterprise-legacy/@@project.version@@/xml/features",
                "+spring=mvn:org.apache.karaf.features/spring/@@project.version@@/xml/features",
                "+spring-legacy=mvn:org.apache.karaf.features/spring-legacy/@@project.version@@/xml/features",
                "+cellar=mvn:org.apache.karaf.cellar/apache-karaf-cellar/RELEASE/xml/features",
                "+cave=mvn:org.apache.karaf.cave/apache-karaf-cave/RELEASE/xml/features",
                "+camel=mvn:org.apache.camel.karaf/apache-camel/RELEASE/xml/features",
                "+camel-extras=mvn:org.apache-extras.camel-extra.karaf/camel-extra/RELEASE/xml/features",
                "+cxf=mvn:org.apache.cxf.karaf/apache-cxf/RELEASE/xml/features",
                "+cxf-dosgi=mvn:org.apache.cxf.dosgi/cxf-dosgi/RELEASE/xml/features",
                "+cxf-dosgi-samples=mvn:org.apache.cxf.dosgi/cxf-dosgi-samples/RELEASE/xml/features",
                "+cxf-xkms=mvn:org.apache.cxf.services.xkms/cxf-services-xkms-features/RELEASE/xml",
                "+activemq=mvn:org.apache.activemq/activemq-karaf/RELEASE/xml/features",
                "+jclouds=mvn:org.apache.jclouds.karaf/jclouds-karaf/RELEASE/xml/features",
                "+openejb=mvn:org.apache.openejb/openejb-feature/RELEASE/xml/features",
                "+wicket=mvn:org.ops4j.pax.wicket/features/RELEASE/xml/features",
                "+hawtio=mvn:io.hawt/hawtio-karaf/RELEASE/xml/features",
                "+pax-cdi=mvn:org.ops4j.pax.cdi/pax-cdi-features/RELEASE/xml/features",
                "+pax-jdbc=mvn:org.ops4j.pax.jdbc/pax-jdbc-features/RELEASE/xml/features",
                "+pax-jpa=mvn:org.ops4j.pax.jpa/pax-jpa-features/RELEASE/xml/features",
                "+pax-web=mvn:org.ops4j.pax.web/pax-web-features/RELEASE/xml/features",
                "+pax-wicket=mvn:org.ops4j.pax.wicket/pax-wicket-features/RELEASE/xml/features",
                "+ecf=http://download.eclipse.org/rt/ecf/RELEASE/site.p2/karaf-features.xml",
                "+decanter=mvn:org.apache.karaf.decanter/apache-karaf-decanter/RELEASE/xml/features",
                "+eclipsesource-jaxrs=mvn:com.eclipsesource.jaxrs/features/RELEASE/xml/features",
                "+aries-jpa=mvn:org.apache.aries.jpa/jpa-features/RELEASE/xml/features",
                "+aries-rsa=mvn:org.apache.aries.rsa/rsa-features/RELEASE/xml/features",
                "+hibernate=mvn:org.hibernate/hibernate-osgi/RELEASE/xml/karaf",
                "+ignite=mvn:org.apache.ignite/ignite-osgi-karaf/RELEASE/xml/features",
                "+openjpa=mvn:org.apache.openjpa/openjpa-features/RELEASE/xml/features",
                "+artemis=mvn:org.apache.activemq/artemis-features/RELEASE/xml/features",
                "+brave=mvn:io.zipkin.brave.karaf/brave-features/RELEASE/xml/features",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.jaas.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.jaas.cfg",
                "new file mode 100644",
                "index 0000000000..8ac5af6cfb",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.jaas.cfg",
                "@@ -0,0 +1,61 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# Boolean enabling / disabling encrypted passwords",
                "+#",
                "+encryption.enabled = false",
                "+",
                "+#",
                "+# Encryption Service name",
                "+#   the default one is 'basic'",
                "+#   a more powerful one named 'jasypt' is available",
                "+#       when installing the encryption feature",
                "+#",
                "+encryption.name =",
                "+",
                "+#",
                "+# Encryption prefix",
                "+#",
                "+encryption.prefix = {CRYPT}",
                "+",
                "+#",
                "+# Encryption suffix",
                "+#",
                "+encryption.suffix = {CRYPT}",
                "+",
                "+#",
                "+# Set the encryption algorithm to use in Karaf JAAS login module",
                "+# Supported encryption algorithms follow:",
                "+#   MD2",
                "+#   MD5",
                "+#   SHA-1",
                "+#   SHA-256",
                "+#   SHA-384",
                "+#   SHA-512",
                "+#",
                "+encryption.algorithm = MD5",
                "+",
                "+#",
                "+# Encoding of the encrypted password.",
                "+# Can be:",
                "+#   hexadecimal",
                "+#   base64",
                "+#",
                "+encryption.encoding = hexadecimal",
                "\\ No newline at end of file",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.kar.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.kar.cfg",
                "new file mode 100644",
                "index 0000000000..3a3492066a",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.kar.cfg",
                "@@ -0,0 +1,35 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# Enable or disable the refresh of the bundles when installing",
                "+# the features contained in a KAR file",
                "+#",
                "+noAutoRefreshBundles=false",
                "+",
                "+#",
                "+# Enable or disable the automatic start of the bundles when installing",
                "+# the features contained in a KAR file",
                "+#",
                "+noAutoStartBundles=false",
                "+",
                "+#",
                "+# Directory where the kar are stored (when downloaded from Maven for instance)",
                "+#",
                "+#karStorage=${karaf.data}/kar",
                "diff --git a/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.log.cfg b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.log.cfg",
                "new file mode 100644",
                "index 0000000000..4629439f53",
                "--- /dev/null",
                "+++ b/instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.log.cfg",
                "@@ -0,0 +1,36 @@",
                "+################################################################################",
                "+#",
                "+#    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+#    contributor license agreements.  See the NOTICE file distributed with",
                "+#    this work for additional information regarding copyright ownership.",
                "+#    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+#    (the \"License\"); you may not use this file except in compliance with",
                "+#    the License.  You may obtain a copy of the License at",
                "+#",
                "+#       http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+#    Unless required by applicable law or agreed to in writing, software",
                "+#    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+#    See the License for the specific language governing permissions and",
                "+#    limitations under the License.",
                "+#",
                "+################################################################################",
                "+",
                "+#",
                "+# This configuration file is used to configure the default values for the log:display",
                "+# and log:exception-display commands.",
                "+#",
                "+",
                "+#",
                "+# The number of log statements to be displayed using log:display. It also defines the number",
                "+# of lines searched for exceptions using log:exception-display. You can override this value",
                "+# at runtime using -n in log:display.",
                "+#",
                "+size = 500",
                "+",
                "+#",
                "+# The pattern used to format the log statement when using log:display. This pattern is according",
                "+# to the log4j layout. You can override this parameter at runtime using log:display with -p.",
                "+#",
                "+pattern = %d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "instance/pom.xml",
                "instance/src/main/java/org/apache/karaf/instance/core/internal/InstanceServiceImpl.java",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/config.properties",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.java.lang.Memory.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.bundle.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.config.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.org.apache.karaf.security.jmx.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/jmx.acl.osgi.compendium.cm.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.eventadmin.impl.EventAdmin.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.felix.fileinstall-deploy.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.bundle.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.config.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.feature.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.jaas.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.kar.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.scope_bundle.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.shell.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.command.acl.system.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.features.repos.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.jaas.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.kar.cfg",
                "instance/src/main/resources/org/apache/karaf/instance/resources/etc/org.apache.karaf.log.cfg"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-4996": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e31d2a59851c139a57ecc2410ad80dcef6ff0193"
                ],
                [
                    "no-tag",
                    "ea7cdbe2a6f32df6d7694c474ec4999d5b8bfc79"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command, bundle, shell, feature, instal",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-4996",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f434e39d9b632e1093b6790341c02ed263261d9f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523330682,
            "hunks": 1,
            "message": "[KARAF-5694]strip url to ensure it's a valid one which could download",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "index 2dbf481f71..527c3a3956 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java",
                "@@ -74,3 +74,4 @@ public class SimpleDownloadTask extends AbstractRetryableDownloadTask {",
                "             File tmpFile = File.createTempFile(\"download-\", null, dir);",
                "-",
                "+            ",
                "+            urlObj = new URL(DownloadManagerHelper.stripUrl(urlObj.toString()));",
                "             try (InputStream is = urlObj.openStream();"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/download/impl/SimpleDownloadTask.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5694": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2f9dffa679eeea122a1cc5d3d6b1a856937b5377"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5694",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "22bda6963974ced378a2baf6c62b6072fc979a0c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523279551,
            "hunks": 9,
            "message": "[KARAF-3235] Expose karaf itests common bundle in order to simplify the way of writing itests for end-users",
            "diff": [
                "diff --git a/itests/common/pom.xml b/itests/common/pom.xml",
                "new file mode 100644",
                "index 0000000000..5708e6c5bc",
                "--- /dev/null",
                "+++ b/itests/common/pom.xml",
                "@@ -0,0 +1,106 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "+",
                "+    <!--",
                "+",
                "+        Licensed to the Apache Software Foundation (ASF) under one or more",
                "+        contributor license agreements.  See the NOTICE file distributed with",
                "+        this work for additional information regarding copyright ownership.",
                "+        The ASF licenses this file to You under the Apache License, Version 2.0",
                "+        (the \"License\"); you may not use this file except in compliance with",
                "+        the License.  You may obtain a copy of the License at",
                "+",
                "+            http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+        Unless required by applicable law or agreed to in writing, software",
                "+        distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+        See the License for the specific language governing permissions and",
                "+        limitations under the License.",
                "+    -->",
                "+",
                "+    <modelVersion>4.0.0</modelVersion>",
                "+",
                "+    <parent>",
                "+        <groupId>org.apache.karaf.itests</groupId>",
                "+        <artifactId>itests</artifactId>",
                "+        <version>4.2.1-SNAPSHOT</version>",
                "+        <relativePath>../pom.xml</relativePath>",
                "+    </parent>",
                "+",
                "+    <artifactId>common</artifactId>",
                "+    <name>Apache Karaf :: Integration Tests :: Common</name>",
                "+    <packaging>bundle</packaging>",
                "+",
                "+    <dependencies>",
                "+        <dependency>",
                "+            <groupId>org.ops4j.pax.exam</groupId>",
                "+            <artifactId>pax-exam-container-karaf</artifactId>",
                "+            <scope>compile</scope>",
                "+            <optional>true</optional>",
                "+            <exclusions>",
                "+                <exclusion>",
                "+                    <groupId>org.apache.felix</groupId>",
                "+                    <artifactId>org.apache.felix.configadmin</artifactId>",
                "+                </exclusion>",
                "+            </exclusions>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.ops4j.pax.exam</groupId>",
                "+            <artifactId>pax-exam-junit4</artifactId>",
                "+            <scope>compile</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>junit</groupId>",
                "+            <artifactId>junit</artifactId>",
                "+            <scope>compile</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.apache.karaf.shell</groupId>",
                "+            <artifactId>org.apache.karaf.shell.core</artifactId>",
                "+            <scope>compile</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.apache.geronimo.specs</groupId>",
                "+            <artifactId>geronimo-atinject_1.0_spec</artifactId>",
                "+            <scope>compile</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.osgi</groupId>",
                "+            <artifactId>org.osgi.core</artifactId>",
                "+            <scope>provided</scope>",
                "+        </dependency>",
                "+        <dependency>",
                "+            <groupId>org.osgi</groupId>",
                "+            <artifactId>org.osgi.compendium</artifactId>",
                "+            <scope>provided</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.apache.karaf.features</groupId>",
                "+            <artifactId>org.apache.karaf.features.core</artifactId>",
                "+        </dependency>",
                "+    </dependencies>",
                "+",
                "+    <build>",
                "+        <plugins>",
                "+            <plugin>",
                "+                <groupId>org.apache.felix</groupId>",
                "+                <artifactId>maven-bundle-plugin</artifactId>",
                "+                <configuration>",
                "+                    <instructions>",
                "+                        <Export-Package>",
                "+                            org.apache.karaf.itests",
                "+                        </Export-Package>",
                "+                    </instructions>",
                "+                </configuration>",
                "+            </plugin>",
                "+        </plugins>",
                "+    </build>",
                "+",
                "+</project>",
                "\\ No newline at end of file",
                "diff --git a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "new file mode 100644",
                "index 0000000000..f31cc2aa70",
                "--- /dev/null",
                "+++ b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "@@ -0,0 +1,613 @@",
                "+/*",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.karaf.itests;",
                "+",
                "+import java.io.ByteArrayOutputStream;",
                "+import java.io.Closeable;",
                "+import java.io.File;",
                "+import java.io.IOException;",
                "+import java.io.PrintStream;",
                "+import java.net.ServerSocket;",
                "+import java.net.URL;",
                "+import java.security.Principal;",
                "+import java.security.PrivilegedExceptionAction;",
                "+import java.util.Arrays;",
                "+import java.util.Collection;",
                "+import java.util.Collections;",
                "+import java.util.Dictionary;",
                "+import java.util.EnumSet;",
                "+import java.util.Enumeration;",
                "+import java.util.HashSet;",
                "+import java.util.Hashtable;",
                "+import java.util.Set;",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.ExecutionException;",
                "+import java.util.concurrent.ExecutorService;",
                "+import java.util.concurrent.Executors;",
                "+import java.util.concurrent.FutureTask;",
                "+import java.util.concurrent.TimeUnit;",
                "+import java.util.concurrent.TimeoutException;",
                "+",
                "+import javax.inject.Inject;",
                "+import javax.management.remote.JMXConnector;",
                "+import javax.management.remote.JMXConnectorFactory;",
                "+import javax.management.remote.JMXServiceURL;",
                "+import javax.security.auth.Subject;",
                "+",
                "+import org.apache.karaf.features.BootFinished;",
                "+import org.apache.karaf.features.Feature;",
                "+import org.apache.karaf.features.FeaturesService;",
                "+import org.apache.karaf.shell.api.console.Session;",
                "+import org.apache.karaf.shell.api.console.SessionFactory;",
                "+import org.junit.Assert;",
                "+import org.junit.Rule;",
                "+import org.junit.rules.TestRule;",
                "+import org.junit.runner.Description;",
                "+import org.junit.runners.model.Statement;",
                "+",
                "+import org.ops4j.pax.exam.*;",
                "+import org.ops4j.pax.exam.karaf.options.KarafDistributionOption;",
                "+import org.ops4j.pax.exam.karaf.options.LogLevelOption.LogLevel;",
                "+import org.ops4j.pax.exam.options.MavenArtifactUrlReference;",
                "+import org.osgi.framework.Bundle;",
                "+import org.osgi.framework.BundleContext;",
                "+import org.osgi.framework.Constants;",
                "+import org.osgi.framework.Filter;",
                "+import org.osgi.framework.FrameworkUtil;",
                "+import org.osgi.framework.InvalidSyntaxException;",
                "+import org.osgi.framework.ServiceReference;",
                "+import org.osgi.service.cm.ConfigurationAdmin;",
                "+import org.osgi.util.tracker.ServiceTracker;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+public class KarafTestSupport {",
                "+",
                "+    private static final EnumSet<FeaturesService.Option> NO_AUTO_REFRESH = EnumSet.of(FeaturesService.Option.NoAutoRefreshBundles);",
                "+    public static final String MIN_RMI_SERVER_PORT = \"44444\";",
                "+    public static final String MAX_RMI_SERVER_PORT = \"66666\";",
                "+    public static final String MIN_HTTP_PORT = \"9080\";",
                "+    public static final String MAX_HTTP_PORT = \"9999\";",
                "+    public static final String MIN_RMI_REG_PORT = \"1099\";",
                "+    public static final String MAX_RMI_REG_PORT = \"9999\";",
                "+    public static final String MIN_SSH_PORT = \"8101\";",
                "+    public static final String MAX_SSH_PORT = \"8888\";",
                "+",
                "+    static final Long COMMAND_TIMEOUT = 30000L;",
                "+    static final Long SERVICE_TIMEOUT = 30000L;",
                "+    static final long BUNDLE_TIMEOUT = 30000L;",
                "+",
                "+    private static Logger LOG = LoggerFactory.getLogger(KarafTestSupport.class);",
                "+",
                "+    @Rule",
                "+    public KarafTestWatcher baseTestWatcher = new KarafTestWatcher();",
                "+",
                "+    ExecutorService executor = Executors.newCachedThreadPool();",
                "+",
                "+    @Inject",
                "+    protected BundleContext bundleContext;",
                "+",
                "+    @Inject",
                "+    protected FeaturesService featureService;",
                "+",
                "+    @Inject",
                "+    protected SessionFactory sessionFactory;",
                "+",
                "+    @Inject",
                "+    protected ConfigurationAdmin configurationAdmin;",
                "+",
                "+",
                "+    /**",
                "+     * To make sure the tests run only when the boot features are fully installed",
                "+     */",
                "+    @Inject",
                "+    BootFinished bootFinished;",
                "+",
                "+    public static class Retry implements TestRule {",
                "+        private static boolean retry = true;",
                "+",
                "+        public Retry(boolean retry) {",
                "+            Retry.retry = retry;",
                "+        }",
                "+",
                "+        public Statement apply(Statement base, Description description) {",
                "+            return statement(base, description);",
                "+        }",
                "+",
                "+        private Statement statement(final Statement base, final Description description) {",
                "+            return new Statement() {",
                "+                @Override",
                "+                public void evaluate() throws Throwable {",
                "+                    // implement retry logic here",
                "+                    // retry once to honor the FeatureService refresh",
                "+                    try {",
                "+                        base.evaluate();",
                "+                        return;",
                "+                    } catch (Throwable t) {",
                "+                        LOG.debug(t.getMessage(), t);",
                "+                        if (retry && !(t instanceof org.junit.AssumptionViolatedException)) {",
                "+                            retry = false;",
                "+                            throw new RerunTestException(\"rerun this test pls\", t);",
                "+                        } else {",
                "+                            throw t;",
                "+                        }",
                "+                    }",
                "+",
                "+                }",
                "+            };",
                "+        }",
                "+    }",
                "+",
                "+    @Rule",
                "+    public Retry retry = new Retry(true);",
                "+",
                "+    @ProbeBuilder",
                "+    public TestProbeBuilder probeConfiguration(TestProbeBuilder probe) {",
                "+        probe.setHeader(Constants.DYNAMICIMPORT_PACKAGE, \"*,org.apache.felix.service.*;status=provisional\");",
                "+        return probe;",
                "+    }",
                "+",
                "+    public File getConfigFile(String path) {",
                "+        URL res = this.getClass().getResource(path);",
                "+        if (res == null) {",
                "+            throw new RuntimeException(\"Config resource \" + path + \" not found\");",
                "+        }",
                "+        return new File(res.getFile());",
                "+    }",
                "+",
                "+    @Configuration",
                "+    public Option[] config() {",
                "+        MavenArtifactUrlReference karafUrl = CoreOptions.maven().groupId(\"org.apache.karaf\").artifactId(\"apache-karaf\").versionAsInProject().type(\"tar.gz\");",
                "+",
                "+        String httpPort = Integer.toString(getAvailablePort(Integer.parseInt(MIN_HTTP_PORT), Integer.parseInt(MAX_HTTP_PORT)));",
                "+        String rmiRegistryPort = Integer.toString(getAvailablePort(Integer.parseInt(MIN_RMI_REG_PORT), Integer.parseInt(MAX_RMI_REG_PORT)));",
                "+        String rmiServerPort = Integer.toString(getAvailablePort(Integer.parseInt(MIN_RMI_SERVER_PORT), Integer.parseInt(MAX_RMI_SERVER_PORT)));",
                "+        String sshPort = Integer.toString(getAvailablePort(Integer.parseInt(MIN_SSH_PORT), Integer.parseInt(MAX_SSH_PORT)));",
                "+        String localRepository = System.getProperty(\"org.ops4j.pax.url.mvn.localRepository\");",
                "+        if (localRepository == null) {",
                "+            localRepository = \"\";",
                "+        }",
                "+",
                "+        return new Option[]{",
                "+                //debugConfiguration(\"8889\", true),",
                "+                KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(karafUrl).name(\"Apache Karaf\").unpackDirectory(new File(\"target/exam\")),",
                "+                // enable JMX RBAC security, thanks to the KarafMBeanServerBuilder",
                "+                KarafDistributionOption.configureSecurity().disableKarafMBeanServerBuilder(),",
                "+                KarafDistributionOption.configureConsole().ignoreLocalConsole(),",
                "+                KarafDistributionOption.keepRuntimeFolder(),",
                "+                KarafDistributionOption.logLevel(LogLevel.INFO),",
                "+                CoreOptions.mavenBundle().groupId(\"org.awaitility\").artifactId(\"awaitility\").versionAsInProject(),",
                "+                CoreOptions.mavenBundle().groupId(\"org.apache.servicemix.bundles\").artifactId(\"org.apache.servicemix.bundles.hamcrest\").versionAsInProject(),",
                "+                CoreOptions.mavenBundle().groupId(\"org.apache.karaf.itests\").artifactId(\"common\").versionAsInProject(),",
                "+                KarafDistributionOption.replaceConfigurationFile(\"etc/org.ops4j.pax.logging.cfg\", getConfigFile(\"/etc/org.ops4j.pax.logging.cfg\")),",
                "+                //replaceConfigurationFile(\"etc/host.key\", getConfigFile(\"/etc/host.key\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.features.cfg\", \"updateSnapshots\", \"none\"),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.ops4j.pax.web.cfg\", \"org.osgi.service.http.port\", httpPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.management.cfg\", \"rmiRegistryPort\", rmiRegistryPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.management.cfg\", \"rmiServerPort\", rmiServerPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.shell.cfg\", \"sshPort\", sshPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.ops4j.pax.url.mvn.cfg\", \"org.ops4j.pax.url.mvn.localRepository\", localRepository),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring31.version\", System.getProperty(\"spring31.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring32.version\", System.getProperty(\"spring32.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring40.version\", System.getProperty(\"spring40.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring41.version\", System.getProperty(\"spring41.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring42.version\", System.getProperty(\"spring42.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring43.version\", System.getProperty(\"spring43.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring50.version\", System.getProperty(\"spring50.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring.security31.version\", System.getProperty(\"spring.security31.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring.security42.version\", System.getProperty(\"spring.security42.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"activemq.version\", System.getProperty(\"activemq.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/branding.properties\", \"welcome\", \"\"), // No welcome banner",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/branding-ssh.properties\", \"welcome\", \"\")",
                "+        };",
                "+    }",
                "+",
                "+    public static int getAvailablePort(int min, int max) {",
                "+        for (int i = min; i <= max; i++) {",
                "+            try (ServerSocket socket = new ServerSocket(i)) {",
                "+                return socket.getLocalPort();",
                "+            } catch (Exception e) {",
                "+                System.err.println(\"Port \" + i + \" not available, trying next one\");",
                "+                continue; // try next port",
                "+            }",
                "+        }",
                "+        throw new IllegalStateException(\"Can't find available network ports\");",
                "+    }",
                "+",
                "+    /**",
                "+     * Executes a shell command and returns output as a String.",
                "+     * Commands have a default timeout of 10 seconds.",
                "+     *",
                "+     * @param command The command to execute",
                "+     * @param principals The principals (e.g. RolePrincipal objects) to run the command under",
                "+     * @return",
                "+     */",
                "+    protected String executeCommand(final String command, Principal ... principals) {",
                "+        return executeCommand(command, COMMAND_TIMEOUT, false, principals);",
                "+    }",
                "+",
                "+    /**",
                "+     * Executes a shell command and returns output as a String.",
                "+     * Commands have a default timeout of 10 seconds.",
                "+     *",
                "+     * @param command    The command to execute.",
                "+     * @param timeout    The amount of time in millis to wait for the command to execute.",
                "+     * @param silent     Specifies if the command should be displayed in the screen.",
                "+     * @param principals The principals (e.g. RolePrincipal objects) to run the command under",
                "+     * @return",
                "+     */",
                "+    protected String executeCommand(final String command, final Long timeout, final Boolean silent, final Principal ... principals) {",
                "+        waitForCommandService(command);",
                "+",
                "+        String response;",
                "+        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();",
                "+        final PrintStream printStream = new PrintStream(byteArrayOutputStream);",
                "+        final SessionFactory sessionFactory = getOsgiService(SessionFactory.class);",
                "+        final Session session = sessionFactory.create(System.in, printStream, System.err);",
                "+",
                "+        final Callable<String> commandCallable = () -> {",
                "+            try {",
                "+                if (!silent) {",
                "+                    System.err.println(command);",
                "+                }",
                "+                Object result = session.execute(command);",
                "+                if (result != null) {",
                "+                    session.getConsole().println(result.toString());",
                "+                }",
                "+            } catch (Exception e) {",
                "+                throw new RuntimeException(e.getMessage(), e);",
                "+            }",
                "+            printStream.flush();",
                "+            return byteArrayOutputStream.toString();",
                "+        };",
                "+",
                "+        FutureTask<String> commandFuture;",
                "+        if (principals.length == 0) {",
                "+            commandFuture = new FutureTask<>(commandCallable);",
                "+        } else {",
                "+            // If principals are defined, run the command callable via Subject.doAs()",
                "+            commandFuture = new FutureTask<>(() -> {",
                "+                Subject subject = new Subject();",
                "+                subject.getPrincipals().addAll(Arrays.asList(principals));",
                "+                return Subject.doAs(subject, (PrivilegedExceptionAction<String>) commandCallable::call);",
                "+            });",
                "+        }",
                "+",
                "+        try {",
                "+            executor.submit(commandFuture);",
                "+            response = commandFuture.get(timeout, TimeUnit.MILLISECONDS);",
                "+        } catch (TimeoutException e) {",
                "+            e.printStackTrace(System.err);",
                "+            response = \"SHELL COMMAND TIMED OUT: \";",
                "+        } catch (ExecutionException e) {",
                "+            Throwable cause = e.getCause() != null ? (e.getCause().getCause() != null ? e.getCause().getCause() : e.getCause()) : e;",
                "+            throw new RuntimeException(cause.getMessage(), cause);",
                "+        } catch (InterruptedException e) {",
                "+            throw new RuntimeException(e.getMessage(), e);",
                "+        }",
                "+        return response;",
                "+    }",
                "+",
                "+",
                "+    protected <T> T getOsgiService(Class<T> type, long timeout) {",
                "+        return getOsgiService(type, null, timeout);",
                "+    }",
                "+",
                "+    protected <T> T getOsgiService(Class<T> type) {",
                "+        return getOsgiService(type, null, SERVICE_TIMEOUT);",
                "+    }",
                "+",
                "+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })",
                "+    protected <T> T getOsgiService(Class<T> type, String filter, long timeout) {",
                "+        ServiceTracker tracker = null;",
                "+        try {",
                "+            String flt;",
                "+            if (filter != null) {",
                "+                if (filter.startsWith(\"(\")) {",
                "+                    flt = \"(&(\" + Constants.OBJECTCLASS + \"=\" + type.getName() + \")\" + filter + \")\";",
                "+                } else {",
                "+                    flt = \"(&(\" + Constants.OBJECTCLASS + \"=\" + type.getName() + \")(\" + filter + \"))\";",
                "+                }",
                "+            } else {",
                "+                flt = \"(\" + Constants.OBJECTCLASS + \"=\" + type.getName() + \")\";",
                "+            }",
                "+            Filter osgiFilter = FrameworkUtil.createFilter(flt);",
                "+            tracker = new ServiceTracker(bundleContext, osgiFilter, null);",
                "+            tracker.open(true);",
                "+            // Note that the tracker is not closed to keep the reference",
                "+            // This is buggy, as the service reference may change i think",
                "+            Object svc = type.cast(tracker.waitForService(timeout));",
                "+            if (svc == null) {",
                "+                Dictionary dic = bundleContext.getBundle().getHeaders();",
                "+                System.err.println(\"Test bundle headers: \" + explode(dic));",
                "+",
                "+                for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null, null))) {",
                "+                    System.err.println(\"ServiceReference: \" + ref);",
                "+                }",
                "+",
                "+                for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null, flt))) {",
                "+                    System.err.println(\"Filtered ServiceReference: \" + ref);",
                "+                }",
                "+",
                "+                throw new RuntimeException(\"Gave up waiting for service \" + flt);",
                "+            }",
                "+            return type.cast(svc);",
                "+        } catch (InvalidSyntaxException e) {",
                "+            throw new IllegalArgumentException(\"Invalid filter\", e);",
                "+        } catch (InterruptedException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    private void waitForCommandService(String command) {",
                "+        // the commands are represented by services. Due to the asynchronous nature of services they may not be",
                "+        // immediately available. This code waits the services to be available, in their secured form. It",
                "+        // means that the code waits for the command service to appear with the roles defined.",
                "+",
                "+        if (command == null || command.length() == 0) {",
                "+            return;",
                "+        }",
                "+",
                "+        int spaceIdx = command.indexOf(' ');",
                "+        if (spaceIdx > 0) {",
                "+            command = command.substring(0, spaceIdx);",
                "+        }",
                "+        int colonIndx = command.indexOf(':');",
                "+        String scope = (colonIndx > 0) ? command.substring(0, colonIndx) : \"*\";",
                "+        String name  = (colonIndx > 0) ? command.substring(colonIndx + 1) : command;",
                "+        try {",
                "+            long start = System.currentTimeMillis();",
                "+            long cur   = start;",
                "+            while (cur - start < SERVICE_TIMEOUT) {",
                "+                if (sessionFactory.getRegistry().getCommand(scope, name) != null) {",
                "+                    return;",
                "+                }",
                "+                Thread.sleep(100);",
                "+                cur = System.currentTimeMillis();",
                "+            }",
                "+        } catch (Exception e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    protected void waitForService(String filter, long timeout) throws InvalidSyntaxException, InterruptedException {",
                "+        ServiceTracker<Object, Object> st = new ServiceTracker<>(bundleContext, bundleContext.createFilter(filter), null);",
                "+        try {",
                "+            st.open();",
                "+            st.waitForService(timeout);",
                "+        } finally {",
                "+            st.close();",
                "+        }",
                "+    }",
                "+",
                "+    protected Bundle waitBundleState(String symbolicName, int state) {",
                "+        long endTime = System.currentTimeMillis() + BUNDLE_TIMEOUT;",
                "+        while (System.currentTimeMillis() < endTime) {",
                "+            Bundle bundle = findBundleByName(symbolicName);",
                "+            if (bundle != null && bundle.getState() == state) {",
                "+                return bundle;",
                "+            }",
                "+            try {",
                "+                Thread.sleep(500);",
                "+            } catch (InterruptedException e) {",
                "+                throw new IllegalStateException(e);",
                "+            }",
                "+        }",
                "+        Assert.fail(\"Manadatory bundle \" + symbolicName + \" not found.\");",
                "+        throw new IllegalStateException(\"Should not be reached\");",
                "+    }",
                "+",
                "+    /*",
                "+     * Explode the dictionary into a ,-delimited list of key=value pairs",
                "+     */",
                "+    @SuppressWarnings(\"rawtypes\")",
                "+    private static String explode(Dictionary dictionary) {",
                "+        Enumeration keys = dictionary.keys();",
                "+        StringBuffer result = new StringBuffer();",
                "+        while (keys.hasMoreElements()) {",
                "+            Object key = keys.nextElement();",
                "+            result.append(String.format(\"%s=%s\", key, dictionary.get(key)));",
                "+            if (keys.hasMoreElements()) {",
                "+                result.append(\", \");",
                "+            }",
                "+        }",
                "+        return result.toString();",
                "+    }",
                "+",
                "+    /**",
                "+     * Provides an iterable collection of references, even if the original array is null",
                "+     */",
                "+    @SuppressWarnings(\"rawtypes\")",
                "+    private static Collection<ServiceReference> asCollection(ServiceReference[] references) {",
                "+        return references != null ? Arrays.asList(references) : Collections.emptyList();",
                "+    }",
                "+",
                "+    public JMXConnector getJMXConnector() throws Exception {",
                "+        return getJMXConnector(\"karaf\", \"karaf\");",
                "+    }",
                "+",
                "+    public JMXConnector getJMXConnector(String userName, String passWord) throws Exception {",
                "+        JMXServiceURL url = new JMXServiceURL(getJmxServiceUrl());",
                "+        Hashtable<String, Object> env = new Hashtable<>();",
                "+        String[] credentials = new String[]{ userName, passWord };",
                "+        env.put(\"jmx.remote.credentials\", credentials);",
                "+        JMXConnector connector = JMXConnectorFactory.connect(url, env);",
                "+        return connector;",
                "+    }",
                "+",
                "+    public String getJmxServiceUrl() throws Exception {",
                "+        org.osgi.service.cm.Configuration configuration = configurationAdmin.getConfiguration(\"org.apache.karaf.management\", null);",
                "+        if (configuration != null) {",
                "+            return configuration.getProperties().get(\"serviceUrl\").toString();",
                "+        }",
                "+        return \"service:jmx:rmi:///jndi/rmi://localhost:\" + MIN_RMI_SERVER_PORT + \"/karaf-root\";",
                "+    }",
                "+",
                "+    public String getSshPort() throws Exception {",
                "+        org.osgi.service.cm.Configuration configuration = configurationAdmin.getConfiguration(\"org.apache.karaf.shell\", null);",
                "+        if (configuration != null) {",
                "+            return configuration.getProperties().get(\"sshPort\").toString();",
                "+        }",
                "+        return \"8101\";",
                "+    }",
                "+",
                "+    public void assertFeatureInstalled(String featureName) throws Exception {",
                "+        String name;",
                "+        String version;",
                "+        if (featureName.contains(\"/\")) {",
                "+            name = featureName.substring(0, featureName.indexOf(\"/\"));",
                "+            version = featureName.substring(featureName.indexOf(\"/\") + 1);",
                "+        } else {",
                "+            name = featureName;",
                "+            version = null;",
                "+        }",
                "+        assertFeatureInstalled(name, version);",
                "+    }",
                "+",
                "+    public void assertFeatureInstalled(String featureName, String featureVersion) throws Exception {",
                "+        Feature featureToAssert = featureService.getFeatures(featureName, featureVersion)[0];",
                "+        Feature[] features = featureService.listInstalledFeatures();",
                "+        for (Feature feature : features) {",
                "+            if (featureToAssert.equals(feature)) {",
                "+                return;",
                "+            }",
                "+        }",
                "+",
                "+        Assert.fail(\"Feature \" + featureName + (featureVersion != null ? \"/\" + featureVersion : \"\") + \" should be installed but is not\");",
                "+    }",
                "+",
                "+    public void assertFeaturesInstalled(String ... expectedFeatures) throws Exception {",
                "+        Set<String> expectedFeaturesSet = new HashSet<>(Arrays.asList(expectedFeatures));",
                "+        Feature[] features = featureService.listInstalledFeatures();",
                "+        Set<String> installedFeatures = new HashSet<>();",
                "+        for (Feature feature : features) {",
                "+            installedFeatures.add(feature.getName());",
                "+        }",
                "+        String msg = \"Expecting the following features to be installed : \" + expectedFeaturesSet + \" but found \" + installedFeatures;",
                "+        Assert.assertTrue(msg, installedFeatures.containsAll(expectedFeaturesSet));",
                "+    }",
                "+",
                "+    public void assertFeatureNotInstalled(String featureName) throws Exception {",
                "+        String name;",
                "+        String version;",
                "+        if (featureName.contains(\"/\")) {",
                "+            name = featureName.substring(0, featureName.indexOf(\"/\"));",
                "+            version = featureName.substring(featureName.indexOf(\"/\") + 1);",
                "+        } else {",
                "+            name = featureName;",
                "+            version = null;",
                "+        }",
                "+        assertFeatureNotInstalled(name, version);",
                "+    }",
                "+",
                "+    public void assertFeatureNotInstalled(String featureName, String featureVersion) throws Exception {",
                "+        Feature featureToAssert = featureService.getFeatures(featureName, featureVersion)[0];",
                "+        Feature[] features = featureService.listInstalledFeatures();",
                "+        for (Feature feature : features) {",
                "+            if (featureToAssert.equals(feature)) {",
                "+                Assert.fail(\"Feature \" + featureName + (featureVersion != null ? \"/\" + featureVersion : \"\") + \" is installed whereas it should not be\");",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    public void assertContains(String expectedPart, String actual) {",
                "+        Assert.assertTrue(\"Should contain '\" + expectedPart + \"' but was : \" + actual, actual.contains(expectedPart));",
                "+    }",
                "+",
                "+    public void assertContainsNot(String expectedPart, String actual) {",
                "+        Assert.assertFalse(\"Should not contain '\" + expectedPart + \"' but was : \" + actual, actual.contains(expectedPart));",
                "+    }",
                "+",
                "+    protected void assertBundleInstalled(String name) {",
                "+        Assert.assertNotNull(\"Bundle \" + name + \" should be installed\", findBundleByName(name));",
                "+    }",
                "+",
                "+    protected void assertBundleNotInstalled(String name) {",
                "+        Assert.assertNull(\"Bundle \" + name + \" should not be installed\", findBundleByName(name));",
                "+    }",
                "+",
                "+    protected Bundle findBundleByName(String symbolicName) {",
                "+        for (Bundle bundle : bundleContext.getBundles()) {",
                "+            if (bundle.getSymbolicName().equals(symbolicName)) {",
                "+                return bundle;",
                "+            }",
                "+        }",
                "+        return null;",
                "+    }",
                "+",
                "+    protected void installAndAssertFeature(String feature) throws Exception {",
                "+        featureService.installFeature(feature, NO_AUTO_REFRESH);",
                "+        assertFeatureInstalled(feature);",
                "+    }",
                "+",
                "+    protected void installAssertAndUninstallFeature(String feature, String version) throws Exception {",
                "+        installAssertAndUninstallFeatures(feature + \"/\" + version);",
                "+    }",
                "+",
                "+    protected void installAssertAndUninstallFeatures(String... feature) throws Exception {",
                "+        boolean success = false;",
                "+        Set<String> features = new HashSet<>(Arrays.asList(feature));",
                "+        try {",
                "+            System.out.println(\"Installing \" + features);",
                "+            featureService.installFeatures(features, NO_AUTO_REFRESH);",
                "+            for (String curFeature : feature) {",
                "+                assertFeatureInstalled(curFeature);",
                "+            }",
                "+            success = true;",
                "+        } finally {",
                "+            System.out.println(\"Uninstalling \" + features);",
                "+            try {",
                "+                featureService.uninstallFeatures(features, NO_AUTO_REFRESH);",
                "+            } catch (Exception e) {",
                "+                if (success) {",
                "+                    throw e;",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * The feature service does not uninstall feature dependencies when uninstalling a single feature.",
                "+     * So we need to make sure we uninstall all features that were newly installed.",
                "+     *",
                "+     * @param featuresBefore",
                "+     * @throws Exception",
                "+     */",
                "+    protected void uninstallNewFeatures(Set<Feature> featuresBefore) throws Exception {",
                "+        Feature[] features = featureService.listInstalledFeatures();",
                "+        Set<String> uninstall = new HashSet<>();",
                "+        for (Feature curFeature : features) {",
                "+            if (!featuresBefore.contains(curFeature)) {",
                "+                uninstall.add(curFeature.getId());",
                "+            }",
                "+        }",
                "+        try {",
                "+            System.out.println(\"Uninstalling \" + uninstall);",
                "+            featureService.uninstallFeatures(uninstall, NO_AUTO_REFRESH);",
                "+        } catch (Exception e) {",
                "+            LOG.error(e.getMessage(), e);",
                "+        }",
                "+    }",
                "+",
                "+    protected void close(Closeable closeAble) {",
                "+        if (closeAble != null) {",
                "+            try {",
                "+                closeAble.close();",
                "+            } catch (IOException e) {",
                "+                throw new RuntimeException(e.getMessage(), e);",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+}",
                "diff --git a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "new file mode 100644",
                "index 0000000000..2e6ea47422",
                "--- /dev/null",
                "+++ b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "@@ -0,0 +1,43 @@",
                "+/*",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.karaf.itests;",
                "+",
                "+import org.junit.rules.TestWatcher;",
                "+import org.junit.runner.Description;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+public class KarafTestWatcher extends TestWatcher {",
                "+    public static final String ANSI_RESET = \"\\u001B[0m\";",
                "+    public static final String ANSI_GREEN = \"\\u001B[32m\";",
                "+",
                "+    private static final Logger LOG = LoggerFactory.getLogger(KarafTestWatcher.class);",
                "+",
                "+    @Override",
                "+    protected void starting(Description description) {",
                "+        System.out.println();",
                "+        System.out.println(ANSI_GREEN + description.getTestClass().getSimpleName() + \": \" + description.getMethodName() + ANSI_RESET);",
                "+    }",
                "+",
                "+    @Override",
                "+    protected void failed(Throwable e, Description description) {",
                "+        LOG.error(\">>>>>> FAILED: {} , cause: {}\", description.getDisplayName(), e.getMessage());",
                "+    }",
                "+",
                "+    @Override",
                "+    protected void succeeded(Description description) {",
                "+    }",
                "+",
                "+",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/itests/pom.xml b/itests/pom.xml",
                "index 22adc65267..6c3f91a8bb 100644",
                "--- a/itests/pom.xml",
                "+++ b/itests/pom.xml",
                "@@ -32,308 +32,10 @@",
                "     <artifactId>itests</artifactId>",
                "-    <packaging>jar</packaging>",
                "     <name>Apache Karaf :: Integration Tests</name>",
                "+    <packaging>pom</packaging>",
                "-    <properties>",
                "-        <appendedResourcesDirectory>${basedir}/../etc/appended-resources</appendedResourcesDirectory>",
                "-    </properties>",
                "+    <modules>",
                "+        <module>common</module>",
                "+        <module>test</module>",
                "+    </modules>",
                "-    <dependencies>",
                "-        <dependency>",
                "-            <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "-            <scope>provided</scope>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "-            <scope>provided</scope>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf</groupId>",
                "-            <artifactId>apache-karaf</artifactId>",
                "-            <scope>test</scope>",
                "-            <type>tar.gz</type>",
                "-            <exclusions>",
                "-                <exclusion>",
                "-                    <artifactId>*</artifactId>",
                "-                    <groupId>*</groupId>",
                "-                </exclusion>",
                "-            </exclusions>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf</groupId>",
                "-            <artifactId>apache-karaf-minimal</artifactId>",
                "-            <scope>test</scope>",
                "-            <type>tar.gz</type>",
                "-            <exclusions>",
                "-                <exclusion>",
                "-                    <artifactId>*</artifactId>",
                "-                    <groupId>*</groupId>",
                "-                </exclusion>",
                "-            </exclusions>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.apache.activemq</groupId>",
                "-            <artifactId>activemq-karaf</artifactId>",
                "-            <version>${activemq.version}</version>",
                "-            <type>xml</type>",
                "-            <classifier>features</classifier>",
                "-            <exclusions>",
                "-                <exclusion>",
                "-                    <artifactId>*</artifactId>",
                "-                    <groupId>*</groupId>",
                "-                </exclusion>",
                "-            </exclusions>",
                "-        </dependency>",
                "-        ",
                "-        <dependency>",
                "-            <groupId>org.ops4j.pax.cdi</groupId>",
                "-            <artifactId>pax-cdi-features</artifactId>",
                "-            <version>${pax.cdi.version}</version>",
                "-            <type>xml</type>",
                "-            <classifier>features</classifier>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.felix</groupId>",
                "-            <artifactId>org.apache.felix.gogo.runtime</artifactId>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.geronimo.specs</groupId>",
                "-            <artifactId>geronimo-jms_1.1_spec</artifactId>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.ops4j.pax.exam</groupId>",
                "-            <artifactId>pax-exam-container-karaf</artifactId>",
                "-            <scope>test</scope>",
                "-            <exclusions>",
                "-                <exclusion>",
                "-                    <groupId>org.apache.felix</groupId>",
                "-                    <artifactId>",
                "-                        org.apache.felix.configadmin",
                "-                    </artifactId>",
                "-                </exclusion>",
                "-            </exclusions>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.ops4j.pax.exam</groupId>",
                "-            <artifactId>pax-exam-junit4</artifactId>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.geronimo.specs</groupId>",
                "-            <artifactId>geronimo-atinject_1.0_spec</artifactId>",
                "-            <version>1.0</version>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-        ",
                "-        <dependency>",
                "-            <groupId>org.awaitility</groupId>",
                "-            <artifactId>awaitility</artifactId>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.apache.servicemix.bundles</groupId>",
                "-            <artifactId>org.apache.servicemix.bundles.hamcrest</artifactId>",
                "-            <version>1.3_1</version>",
                "-            <scope>runtime</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf.features</groupId>",
                "-            <artifactId>org.apache.karaf.features.core</artifactId>",
                "-        </dependency>",
                "-        <dependency>",
                "-            <groupId>org.apache.felix</groupId>",
                "-            <artifactId>org.apache.felix.fileinstall</artifactId>",
                "-        </dependency>",
                "-",
                "-        <!-- for JmsTest -->",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf.shell</groupId>",
                "-            <artifactId>org.apache.karaf.shell.ssh</artifactId>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <!-- for JndiTest -->",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf.jndi</groupId>",
                "-            <artifactId>org.apache.karaf.jndi.core</artifactId>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf.package</groupId>",
                "-            <artifactId>org.apache.karaf.package.core</artifactId>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.karaf.bundle</groupId>",
                "-            <artifactId>org.apache.karaf.bundle.core</artifactId>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.felix</groupId>",
                "-            <artifactId>org.apache.felix.framework.security</artifactId>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.apache.servicemix.bundles</groupId>",
                "-            <artifactId>org.apache.servicemix.bundles.not-yet-commons-ssl</artifactId>",
                "-            <version>0.3.11_1</version>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>com.google.guava</groupId>",
                "-            <artifactId>guava</artifactId>",
                "-            <version>${guava.version}</version>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-",
                "-        <dependency>",
                "-            <groupId>org.eclipse.jetty</groupId>",
                "-            <artifactId>jetty-server</artifactId>",
                "-            <version>${jetty.version}</version>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-        ",
                "-        <dependency>",
                "-            <groupId>org.slf4j</groupId>",
                "-            <artifactId>slf4j-log4j12</artifactId>",
                "-            <scope>test</scope>",
                "-        </dependency>",
                "-    </dependencies>",
                "-",
                "-    <build>",
                "-        <testResources>",
                "-            <testResource>",
                "-                <directory>${project.basedir}/src/test/resources</directory>",
                "-                <filtering>false</filtering>",
                "-                <includes>",
                "-                    <include>**/*</include>",
                "-                </includes>",
                "-            </testResource>",
                "-            <testResource>",
                "-                <directory>${project.basedir}/src/test/filtered-resources</directory>",
                "-                <filtering>true</filtering>",
                "-                <includes>",
                "-                    <include>**/*</include>",
                "-                </includes>",
                "-            </testResource>",
                "-        </testResources>",
                "-        <plugins>",
                "-            <plugin>",
                "-                <groupId>org.apache.servicemix.tooling</groupId>",
                "-                <artifactId>depends-maven-plugin</artifactId>",
                "-                <executions>",
                "-                    <execution>",
                "-                        <id>generate-depends-file</id>",
                "-                        <goals>",
                "-                            <goal>generate-depends-file</goal>",
                "-                        </goals>",
                "-                    </execution>",
                "-                </executions>",
                "-            </plugin>",
                "-            <plugin>",
                "-                <artifactId>maven-jar-plugin</artifactId>",
                "-                <executions>",
                "-                    <execution>",
                "-                        <id>jar-test-classes</id>",
                "-                        <phase>package</phase>",
                "-                        <goals>",
                "-                            <goal>test-jar</goal>",
                "-                        </goals>",
                "-                    </execution>",
                "-                </executions>",
                "-            </plugin>",
                "-            <plugin>",
                "-                <groupId>org.apache.maven.plugins</groupId>",
                "-                <artifactId>maven-surefire-plugin</artifactId>",
                "-                <configuration>",
                "-                    <forkCount>1</forkCount>",
                "-                    <reuseForks>false</reuseForks>",
                "-                    <systemPropertyVariables>",
                "-                        <org.ops4j.pax.logging.DefaultServiceLog.level>INFO</org.ops4j.pax.logging.DefaultServiceLog.level>",
                "-                        <spring31.version>${spring31.version}</spring31.version>",
                "-                        <spring32.version>${spring32.version}</spring32.version>",
                "-                        <spring40.version>${spring40.version}</spring40.version>",
                "-                        <spring41.version>${spring41.version}</spring41.version>",
                "-                        <spring42.version>${spring42.version}</spring42.version>",
                "-                        <spring43.version>${spring43.version}</spring43.version>",
                "-                        <spring50.version>${spring50.version}</spring50.version>",
                "-                        <spring.security31.version>${spring.security31.version}</spring.security31.version>",
                "-                        <spring.security42.version>${spring.security42.version}</spring.security42.version>",
                "-                        <activemq.version>${activemq.version}</activemq.version>",
                "-                    </systemPropertyVariables>",
                "-                    <excludes>",
                "-                        <exclude>MavenTest</exclude>",
                "-                    </excludes>",
                "-                </configuration>",
                "-            </plugin>",
                "-            <plugin>",
                "-                <groupId>org.apache.maven.plugins</groupId>",
                "-                <artifactId>maven-resources-plugin</artifactId>",
                "-                <configuration>",
                "-                    <useDefaultDelimiters>false</useDefaultDelimiters>",
                "-                    <delimiters>",
                "-                        <delimiter>${*}</delimiter>",
                "-                        <delimiter>@@</delimiter>",
                "-                    </delimiters>",
                "-                </configuration>",
                "-                <executions>",
                "-                    <execution>",
                "-                        <id>filter</id>",
                "-                        <phase>generate-resources</phase>",
                "-                        <goals>",
                "-                            <goal>resources</goal>",
                "-                        </goals>",
                "-                    </execution>",
                "-                </executions>",
                "-            </plugin>",
                "-        </plugins>",
                "-    </build>",
                "-    ",
                "-    <profiles>",
                "-        <profile>",
                "-            <id>ci-build-profile</id>",
                "-            <activation>",
                "-                <property>",
                "-                    <name>maven.repo.local</name>",
                "-                </property>",
                "-            </activation>",
                "-            <build>",
                "-                <plugins>",
                "-                    <plugin>",
                "-                        <groupId>org.apache.maven.plugins</groupId>",
                "-                        <artifactId>maven-surefire-plugin</artifactId>",
                "-                        <configuration>",
                "-                            <excludes>",
                "-                                <exclude>MavenTest</exclude>",
                "-                            </excludes>",
                "-                            <systemPropertyVariables>",
                "-                                <org.ops4j.pax.url.mvn.localRepository>${maven.repo.local}</org.ops4j.pax.url.mvn.localRepository>",
                "-                                <org.ops4j.pax.logging.DefaultServiceLog.level>INFO</org.ops4j.pax.logging.DefaultServiceLog.level>",
                "-                                <spring31.version>${spring31.version}</spring31.version>",
                "-                                <spring32.version>${spring32.version}</spring32.version>",
                "-                                <spring40.version>${spring40.version}</spring40.version>",
                "-                                <spring41.version>${spring41.version}</spring41.version>",
                "-                                <spring42.version>${spring42.version}</spring42.version>",
                "-                                <spring43.version>${spring43.version}</spring43.version>",
                "-                                <spring50.version>${spring50.version}</spring50.version>",
                "-                                <spring.security31.version>${spring.security31.version}</spring.security31.version>",
                "-                                <spring.security42.version>${spring.security42.version}</spring.security42.version>",
                "-                                <activemq.version>${activemq.version}</activemq.version>",
                "-                    \t\t</systemPropertyVariables>",
                "-                        </configuration>",
                "-                    </plugin>",
                "-                </plugins>",
                "-            </build>",
                "-        </profile>",
                "-    </profiles>",
                "-",
                "-</project>",
                "+</project>",
                "\\ No newline at end of file",
                "diff --git a/pom.xml b/pom.xml",
                "index 753ba8503b..a29075a6ad 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -264,2 +264,3 @@",
                "         <jline.version>3.6.2</jline.version>",
                "+        <junit.version>4.12</junit.version>",
                "         <jsw.version>3.2.3</jsw.version>",
                "@@ -809,2 +810,7 @@",
                "             </dependency>",
                "+            <dependency>",
                "+                <groupId>org.apache.karaf.itests</groupId>",
                "+                <artifactId>itests</artifactId>",
                "+                <version>${project.version}</version>",
                "+            </dependency>",
                "@@ -1770,2 +1776,12 @@",
                "             </dependency>",
                "+            <dependency>",
                "+                <groupId>junit</groupId>",
                "+                <artifactId>junit</artifactId>",
                "+                <version>${junit.version}</version>",
                "+            </dependency>",
                "+            <dependency>",
                "+                <groupId>org.apache.geronimo.specs</groupId>",
                "+                <artifactId>geronimo-atinject_1.0_spec</artifactId>",
                "+                <version>1.0</version>",
                "+            </dependency>",
                "         </dependencies>",
                "@@ -1777,3 +1793,3 @@",
                "             <artifactId>junit</artifactId>",
                "-            <version>4.12</version>",
                "+            <version>${junit.version}</version>",
                "             <scope>test</scope>"
            ],
            "changed_files": [
                "itests/common/pom.xml",
                "itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "itests/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-3235": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, user",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-3235",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5a33e0b5f750f6652465fa2d763cd9ef9e3b7ffc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529325502,
            "hunks": 7,
            "message": "[KARAF-5787] Improve scheduler whiteboard handler to allow users to define scheduler service properties in raw String",
            "diff": [
                "diff --git a/scheduler/src/main/java/org/apache/karaf/scheduler/core/WhiteboardHandler.java b/scheduler/src/main/java/org/apache/karaf/scheduler/core/WhiteboardHandler.java",
                "index 2d0a9df9f0..3acfaae814 100644",
                "--- a/scheduler/src/main/java/org/apache/karaf/scheduler/core/WhiteboardHandler.java",
                "+++ b/scheduler/src/main/java/org/apache/karaf/scheduler/core/WhiteboardHandler.java",
                "@@ -22,2 +22,3 @@ import org.apache.karaf.scheduler.Job;",
                " import org.apache.karaf.scheduler.Scheduler;",
                "+import org.apache.karaf.scheduler.command.Schedule;",
                " import org.osgi.framework.BundleContext;",
                "@@ -84,5 +85,5 @@ public class WhiteboardHandler {",
                "     private String getServiceIdentifier(final ServiceReference ref) {",
                "-        String name = (String)ref.getProperty(Scheduler.PROPERTY_SCHEDULER_NAME);",
                "+        String name = (String) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_NAME);",
                "         if ( name == null ) {",
                "-            name = (String)ref.getProperty(Constants.SERVICE_PID);",
                "+            name = (String) ref.getProperty(Constants.SERVICE_PID);",
                "             if ( name == null ) {",
                "@@ -101,3 +102,10 @@ public class WhiteboardHandler {",
                "         final String name = getServiceIdentifier(ref);",
                "-        final Boolean concurrent = (Boolean) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_CONCURRENT);",
                "+        Boolean concurrent = true;",
                "+        if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_CONCURRENT) != null) {",
                "+            if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_CONCURRENT) instanceof Boolean) {",
                "+                concurrent = (Boolean) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_CONCURRENT);",
                "+            } else {",
                "+                concurrent = new Boolean((String) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_CONCURRENT));",
                "+            }",
                "+        }",
                "         final String expression = (String) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_EXPRESSION);",
                "@@ -107,6 +115,11 @@ public class WhiteboardHandler {",
                "                         .name(name)",
                "-                        .canRunConcurrently((concurrent != null ? concurrent : true)));",
                "+                        .canRunConcurrently(concurrent));",
                "             } else {",
                "-                final Long period = (Long) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_PERIOD);",
                "-                if (period != null) {",
                "+                Long period = null;",
                "+                if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_PERIOD) != null) {",
                "+                    if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_PERIOD) instanceof Long) {",
                "+                        period = (Long) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_PERIOD);",
                "+                    } else {",
                "+                        period = new Long((String) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_PERIOD));",
                "+                    }",
                "                     if (period < 1) {",
                "@@ -116,3 +129,7 @@ public class WhiteboardHandler {",
                "                         if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_IMMEDIATE) != null) {",
                "-                            immediate = (Boolean) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_IMMEDIATE);",
                "+                            if (ref.getProperty(Scheduler.PROPERTY_SCHEDULER_IMMEDIATE) instanceof Boolean) {",
                "+                                immediate = (Boolean) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_IMMEDIATE);",
                "+                            } else {",
                "+                                immediate = new Boolean((String) ref.getProperty(Scheduler.PROPERTY_SCHEDULER_IMMEDIATE));",
                "+                            }",
                "                         }"
            ],
            "changed_files": [
                "scheduler/src/main/java/org/apache/karaf/scheduler/core/WhiteboardHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5787": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "83c25f3e7220ba5daaedc23db70a1871e7e5eeea"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: whiteboard, user",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: whiteboard",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5787",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e64004d1361039f5950a5e96e080843aa970220d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533210162,
            "hunks": 3,
            "message": "[KARAF-5689] Console is broken after Ctrl+C",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "index a9695f8619..662cd50834 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "@@ -137,5 +137,3 @@ public class ConsoleSessionImpl implements Session {",
                "         // Create session",
                "-        session = processor.createSession(jlineTerminal.input(),",
                "-                jlineTerminal.output(),",
                "-                jlineTerminal.output());",
                "+        session = processor.createSession(in, out, err);",
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/LocalConsoleManager.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/LocalConsoleManager.java",
                "index 0ee97dfe65..0a27fd2e2f 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/LocalConsoleManager.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/LocalConsoleManager.java",
                "@@ -70,6 +70,12 @@ public class LocalConsoleManager {",
                "                 String encoding = getEncoding();",
                "+\t            PrintStream pout = new PrintStream(terminal.output()) {",
                "+\t                @Override",
                "+\t                public void close() {",
                "+\t                    // do nothing",
                "+\t                }",
                "+\t            };",
                "                 session = sessionFactory.create(",
                "                                       terminal.input(),",
                "-                                      new PrintStream(terminal.output()),",
                "-                                      new PrintStream(terminal.output()),",
                "+                                      pout,",
                "+                                      pout,",
                "                                       new JLineTerminal(terminal),"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/LocalConsoleManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5689": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "034d09d332257cd855fc2b051f917e9229448c27"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: console",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, console",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5689",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9869baf5611c21adfb6dda4ef7abf17151c2da4d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526284063,
            "hunks": 14,
            "message": "[KARAF-5742] Possibility to configure colors for karaf shell",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/support/ShellUtil.java b/shell/core/src/main/java/org/apache/karaf/shell/support/ShellUtil.java",
                "index 3a9ba0e1bb..2941515476 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/support/ShellUtil.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/support/ShellUtil.java",
                "@@ -20,2 +20,4 @@ package org.apache.karaf.shell.support;",
                "+import java.io.PrintWriter;",
                "+import java.io.StringWriter;",
                " import java.security.AccessControlContext;",
                "@@ -24,2 +26,4 @@ import java.util.Arrays;",
                " import java.util.Collection;",
                "+import java.util.Map;",
                "+import java.util.stream.Collectors;",
                "@@ -29,2 +33,4 @@ import org.apache.karaf.jaas.boot.principal.UserPrincipal;",
                " import org.apache.karaf.shell.api.console.Session;",
                "+import org.jline.utils.AttributedString;",
                "+import org.jline.utils.StyleResolver;",
                " import org.osgi.framework.Bundle;",
                "@@ -36,9 +42,6 @@ import org.slf4j.LoggerFactory;",
                "-import static org.apache.karaf.shell.support.ansi.SimpleAnsi.COLOR_DEFAULT;",
                "-import static org.apache.karaf.shell.support.ansi.SimpleAnsi.COLOR_RED;",
                "-import static org.apache.karaf.shell.support.ansi.SimpleAnsi.INTENSITY_BOLD;",
                "-import static org.apache.karaf.shell.support.ansi.SimpleAnsi.INTENSITY_NORMAL;",
                "-",
                " public class ShellUtil {",
                "+    public static final String DEFAULT_KS_COLORS = \"em=31:ee=1;31:st=31\";",
                "+",
                "     private static final Logger LOGGER = LoggerFactory.getLogger(ShellUtil.class);",
                "@@ -152,10 +155,9 @@ public class ShellUtil {",
                "             String pst = getPrintStackTraces(session);",
                "+            Map<String, String> cm = getKsColorMap(session);",
                "             if (\"always\".equals(pst)) {",
                "-                session.getConsole().print(COLOR_RED);",
                "-                t.printStackTrace(session.getConsole());",
                "-                session.getConsole().print(COLOR_DEFAULT);",
                "+                String str = applyStyle(getStackTrace(t), cm, \"st\");",
                "+                session.getConsole().print(str);",
                "             } else if (\"CommandNotFoundException\".equals(name)) {",
                "-                String str = COLOR_RED + \"Command not found: \"",
                "-                        + INTENSITY_BOLD + t.getClass().getMethod(\"getCommand\").invoke(t) + INTENSITY_NORMAL",
                "-                        + COLOR_DEFAULT;",
                "+                String str = applyStyle(\"Command not found: \", cm, \"em\")",
                "+                           + applyStyle((String) t.getClass().getMethod(\"getCommand\").invoke(t), cm, \"ee\");",
                "                 session.getConsole().println(str);",
                "@@ -166,3 +168,3 @@ public class ShellUtil {",
                "                 } catch (Throwable ignore) {",
                "-                    str = COLOR_RED + t.getMessage() + COLOR_DEFAULT;",
                "+                    str = applyStyle(t.getMessage(), cm, \"em\");",
                "                 }",
                "@@ -170,11 +172,10 @@ public class ShellUtil {",
                "             } else  if (\"execution\".equals(pst)) {",
                "-                session.getConsole().print(COLOR_RED);",
                "-                t.printStackTrace(session.getConsole());",
                "-                session.getConsole().print(COLOR_DEFAULT);",
                "+                String str = applyStyle(getStackTrace(t), cm, \"st\");",
                "+                session.getConsole().print(str);",
                "             } else {",
                "-                String str = COLOR_RED + \"Error executing command: \"",
                "-                        + (t.getMessage() != null ? t.getMessage() : t.getClass().getName())",
                "-                        + COLOR_DEFAULT;",
                "+                String str = applyStyle(\"Error executing command: \", cm, \"em\")",
                "+                           + applyStyle(t.getMessage() != null ? t.getMessage() : t.getClass().getName(), cm, \"ee\");",
                "                 session.getConsole().println(str);",
                "             }",
                "+            session.getConsole().flush();",
                "         } catch (Exception ignore) {",
                "@@ -184,2 +185,10 @@ public class ShellUtil {",
                "+    private static String getStackTrace(Throwable t) {",
                "+        StringWriter sw = new StringWriter();",
                "+        PrintWriter pw = new PrintWriter(sw);",
                "+        t.printStackTrace(pw);",
                "+        pw.flush();",
                "+        return sw.toString();",
                "+    }",
                "+",
                "     private static String getPrintStackTraces(Session session) {",
                "@@ -208,2 +217,30 @@ public class ShellUtil {",
                "+    static String applyStyle(String text, Map<String, String> colors, String... types) {",
                "+        String t = null;",
                "+        for (String type : types) {",
                "+            if (colors.get(type) != null) {",
                "+                t = type;",
                "+                break;",
                "+            }",
                "+        }",
                "+        return new AttributedString(text, new StyleResolver(colors::get).resolve(\".\" + t))",
                "+                .toAnsi();",
                "+    }",
                "+",
                "+    public static Map<String, String> getKsColorMap(Session session) {",
                "+        return getColorMap(session, \"KS\", DEFAULT_KS_COLORS);",
                "+    }",
                "+",
                "+    public static Map<String, String> getColorMap(Session session, String name, String def) {",
                "+        Object obj = session.get(name + \"_COLORS\");",
                "+        String str = obj != null ? obj.toString() : null;",
                "+        if (str == null) {",
                "+            str = def;",
                "+        }",
                "+        String sep = str.matches(\"[a-z]{2}=[0-9]*(;[0-9]+)*(:[a-z]{2}=[0-9]*(;[0-9]+)*)*\") ? \":\" : \" \";",
                "+        return Arrays.stream(str.split(sep))",
                "+                .collect(Collectors.toMap(s -> s.substring(0, s.indexOf('=')),",
                "+                        s -> s.substring(s.indexOf('=') + 1)));",
                "+    }",
                "+",
                " }"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/support/ShellUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5742": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5233db372e18986c2455a1563a2100560d00067c"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5742",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a8b5c3b10a08f7e3d27d9eec460c2682cb1d1e7c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529256039,
            "hunks": 5,
            "message": "[KARAF-5759] Add short option on config:list command",
            "diff": [
                "diff --git a/config/src/main/java/org/apache/karaf/config/command/ListCommand.java b/config/src/main/java/org/apache/karaf/config/command/ListCommand.java",
                "index dc041c9ba8..6d1e5d0f67 100644",
                "--- a/config/src/main/java/org/apache/karaf/config/command/ListCommand.java",
                "+++ b/config/src/main/java/org/apache/karaf/config/command/ListCommand.java",
                "@@ -25,2 +25,3 @@ import org.apache.karaf.shell.api.action.Argument;",
                " import org.apache.karaf.shell.api.action.Command;",
                "+import org.apache.karaf.shell.api.action.Option;",
                " import org.apache.karaf.shell.api.action.lifecycle.Service;",
                "@@ -32,2 +33,5 @@ public class ListCommand extends ConfigCommandSupport {",
                "+    @Option(name = \"-s\", aliases = \"--short\", description = \"Only list the PIDs, not the properties\", required = false, multiValued = false)",
                "+    boolean shortOutput;",
                "+",
                "     @Argument(index = 0, name = \"query\", description = \"Query in LDAP syntax. Example: \\\"(service.pid=org.apache.karaf.log)\\\"\", required = false, multiValued = false)",
                "@@ -43,19 +47,25 @@ public class ListCommand extends ConfigCommandSupport {",
                "             }",
                "-            for (Configuration config : sortedConfigs.values()) {",
                "-                System.out.println(\"----------------------------------------------------------------\");",
                "-                System.out.println(\"Pid:            \" + config.getPid());",
                "-                if (config.getFactoryPid() != null) {",
                "-                    System.out.println(\"FactoryPid:     \" + config.getFactoryPid());",
                "+            if (shortOutput) {",
                "+                for (Configuration config : sortedConfigs.values()) {",
                "+                    System.out.println(config.getPid());",
                "                 }",
                "-                System.out.println(\"BundleLocation: \" + config.getBundleLocation());",
                "-                if (config.getProperties() != null) {",
                "-                    System.out.println(\"Properties:\");",
                "-                    Dictionary props = config.getProperties();",
                "-                    Map<String, Object> sortedProps = new TreeMap<>();",
                "-                    for (Enumeration e = props.keys(); e.hasMoreElements();) {",
                "-                        Object key = e.nextElement();",
                "-                        sortedProps.put(key.toString(), props.get(key));",
                "+            } else {",
                "+                for (Configuration config : sortedConfigs.values()) {",
                "+                    System.out.println(\"----------------------------------------------------------------\");",
                "+                    System.out.println(\"Pid:            \" + config.getPid());",
                "+                    if (config.getFactoryPid() != null) {",
                "+                        System.out.println(\"FactoryPid:     \" + config.getFactoryPid());",
                "                     }",
                "-                    for (Map.Entry<String, Object> entry : sortedProps.entrySet()) {",
                "-                        System.out.println(\"   \" + entry.getKey() + \" = \" + displayValue(entry.getValue()));",
                "+                    System.out.println(\"BundleLocation: \" + config.getBundleLocation());",
                "+                    if (config.getProperties() != null) {",
                "+                        System.out.println(\"Properties:\");",
                "+                        Dictionary props = config.getProperties();",
                "+                        Map<String, Object> sortedProps = new TreeMap<>();",
                "+                        for (Enumeration e = props.keys(); e.hasMoreElements(); ) {",
                "+                            Object key = e.nextElement();",
                "+                            sortedProps.put(key.toString(), props.get(key));",
                "+                        }",
                "+                        for (Map.Entry<String, Object> entry : sortedProps.entrySet()) {",
                "+                            System.out.println(\"   \" + entry.getKey() + \" = \" + displayValue(entry.getValue()));",
                "+                        }",
                "                     }"
            ],
            "changed_files": [
                "config/src/main/java/org/apache/karaf/config/command/ListCommand.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5759": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fdafa8c14050d648927800d05d79f59690b4ce22"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2652f3b60534bacf9dc9e5adbfddb6c09903a370",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526045805,
            "hunks": 2,
            "message": "[KARAF-5749] Possible shell crash when executing malformed script",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "index c6b767eafc..b4409fd63a 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "@@ -439,6 +439,6 @@ public class ConsoleSessionImpl implements Session {",
                "                 command = ((ParsedLineImpl) pl).program();",
                "+            } else if (pl != null) {",
                "+                command = pl.line();",
                "             } else {",
                "-                if (pl != null) {",
                "-                    command = pl.line();",
                "-                }",
                "+                command = reader.getBuffer().toString();",
                "             }"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5749": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5749",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2b09e37d3ff6c4dee1cbe809bd6c2bc2e2879566",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526310550,
            "hunks": 6,
            "message": "[KARAF-5753] Fix bad protection of READLINK_EXISTS variable in shell scripts",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/client b/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "index 7c00e01086..c4d1d429be 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/instance b/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "index 9a388427cd..89e9ef3323 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/shell b/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "index e16a078175..f5d473a725 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/start b/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "index 9f2e4b1092..b1b384481c 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/status b/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "index c7c245d564..53e10a7268 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/stop b/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "index db5835385f..60b498df49 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "     OURPWD=${PWD}"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/stop"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5753": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, feature, stop",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5753",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b189954bc3d4535fd6add97d7b10d4015cecc25",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526055467,
            "hunks": 6,
            "message": "[KARAF-5750] Karaf console not calling Converter for custom gogo commands",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "index d55019ff19..84c1e0531a 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "@@ -59,2 +59,6 @@ public class Activator implements BundleActivator {",
                "+    ConverterTracker converterTracker;",
                "+",
                "+    ListenerTracker listenerTracker;",
                "+",
                "     @Override",
                "@@ -111,2 +115,8 @@ public class Activator implements BundleActivator {",
                "+        converterTracker = new ConverterTracker(sessionFactory, context);",
                "+        converterTracker.open();",
                "+",
                "+        listenerTracker = new ListenerTracker(sessionFactory, context);",
                "+        listenerTracker.open();",
                "+",
                "         if (Boolean.parseBoolean(context.getProperty(START_CONSOLE))) {",
                "@@ -129,2 +139,4 @@ public class Activator implements BundleActivator {",
                "         commandTracker.close();",
                "+        converterTracker.close();",
                "+        listenerTracker.close();",
                "         threadIO.stop();",
                "@@ -134,2 +146,3 @@ public class Activator implements BundleActivator {",
                "     }",
                "+",
                " }",
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ConverterTracker.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ConverterTracker.java",
                "new file mode 100644",
                "index 0000000000..a10db05fca",
                "--- /dev/null",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ConverterTracker.java",
                "@@ -0,0 +1,51 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.karaf.shell.impl.console.osgi;",
                "+",
                "+import org.apache.felix.service.command.Converter;",
                "+import org.apache.karaf.shell.impl.console.SessionFactoryImpl;",
                "+import org.osgi.framework.BundleContext;",
                "+import org.osgi.framework.ServiceReference;",
                "+import org.osgi.util.tracker.ServiceTracker;",
                "+",
                "+/**",
                "+ * Tracker for Converter.",
                "+ */",
                "+public class ConverterTracker extends ServiceTracker<Converter, Converter> {",
                "+",
                "+    private SessionFactoryImpl sessionFactory;",
                "+",
                "+    public ConverterTracker(SessionFactoryImpl sessionFactory, BundleContext context) {",
                "+        super(context, Converter.class, null);",
                "+        this.sessionFactory = sessionFactory;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Converter addingService(ServiceReference<Converter> reference) {",
                "+        Converter service = super.addingService(reference);",
                "+        sessionFactory.getCommandProcessor().addConverter(service);",
                "+        return service;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void removedService(ServiceReference<Converter> reference, Converter service) {",
                "+        sessionFactory.getCommandProcessor().removeConverter(service);",
                "+        super.removedService(reference, service);",
                "+    }",
                "+}",
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ListenerTracker.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ListenerTracker.java",
                "new file mode 100644",
                "index 0000000000..7f59e1ed62",
                "--- /dev/null",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ListenerTracker.java",
                "@@ -0,0 +1,51 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.karaf.shell.impl.console.osgi;",
                "+",
                "+import org.apache.felix.service.command.CommandSessionListener;",
                "+import org.apache.karaf.shell.impl.console.SessionFactoryImpl;",
                "+import org.osgi.framework.BundleContext;",
                "+import org.osgi.framework.ServiceReference;",
                "+import org.osgi.util.tracker.ServiceTracker;",
                "+",
                "+/**",
                "+ * Tracker for CommandSessionListener.",
                "+ */",
                "+public class ListenerTracker extends ServiceTracker<CommandSessionListener, CommandSessionListener> {",
                "+",
                "+    private SessionFactoryImpl sessionFactory;",
                "+",
                "+    public ListenerTracker(SessionFactoryImpl sessionFactory, BundleContext context) {",
                "+        super(context, CommandSessionListener.class, null);",
                "+        this.sessionFactory = sessionFactory;",
                "+    }",
                "+",
                "+    @Override",
                "+    public CommandSessionListener addingService(ServiceReference<CommandSessionListener> reference) {",
                "+        CommandSessionListener service = super.addingService(reference);",
                "+        sessionFactory.getCommandProcessor().addListener(service);",
                "+        return service;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void removedService(ServiceReference<CommandSessionListener> reference, CommandSessionListener service) {",
                "+        sessionFactory.getCommandProcessor().removeListener(service);",
                "+        super.removedService(reference, service);",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ConverterTracker.java",
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/ListenerTracker.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5750": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command, gogo, console",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5750",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "093ebce0f0fe7ca494047952e5b4a2a031c0ad8d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527235315,
            "hunks": 4,
            "message": "[KARAF-5729] Improve usage of awk on Solaris + delete blank space in sed command causing Karaf startup to fail on Solaris and AIX",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index 7e90d480a5..bbdd495732 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -35,2 +35,3 @@ detectOS() {",
                "     hpux=false;",
                "+    solaris=false;",
                "     case \"$(uname)\" in",
                "@@ -60,2 +61,5 @@ detectOS() {",
                "             ;;",
                "+        SunOS*)",
                "+            solaris=true",
                "+            ;;",
                "     esac",
                "@@ -215,3 +219,15 @@ detectJVM() {",
                " checkJvmVersion() {",
                "-    VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g ; s/\\..*//g; s/-.*//g;')",
                "+    # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated ",
                "+    if ${solaris}; then",
                "+        if [ -x /usr/xpg4/bin/awk ]; then",
                "+            VERSION=$(\"${JAVA}\" -version 2>&1 | /usr/xpg4/bin/awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+        elif [ -x /usr/bin/nawk ]; then",
                "+            VERSION=$(\"${JAVA}\" -version 2>&1 | /usr/bin/nawk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+        else ",
                "+            VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+        fi",
                "+    else    ",
                "+        VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+    fi",
                "+    # java must be at least version 8 ",
                "     if [ \"${VERSION}\" -lt \"8\" ]; then",
                "@@ -304 +320,2 @@ convertPaths() {",
                " }",
                "+"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5729": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5729",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "04b0d916f3842b19d0f0cdd8f2d3ea40f622405d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531829903,
            "hunks": 2,
            "message": "[KARAF-5842] Console unusable in docker",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "index b4409fd63a..0f11f65423 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "@@ -69,2 +69,3 @@ import org.jline.builtins.Completers;",
                " import org.jline.reader.*;",
                "+import org.jline.terminal.Size;",
                " import org.jline.terminal.Terminal.Signal;",
                "@@ -148,2 +149,6 @@ public class ConsoleSessionImpl implements Session {",
                "+        if (jlineTerminal.getSize().getColumns() == 0) {",
                "+            jlineTerminal.setSize(new Size(80, 24));",
                "+        }",
                "+",
                "         brandingProps = Branding.loadBrandingProperties(terminal.getClass().getName().endsWith(\"SshTerminal\"));"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5842": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: console",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5842",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94b9534045f34a1ec96d4cd543e959cf15cfe9f6",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523546441,
            "hunks": 4,
            "message": "[KARAF-5697] feature:start and feature:stop should be able to select multiple features",
            "diff": [
                "diff --git a/features/command/src/main/java/org/apache/karaf/features/command/FeaturesCommandSupport.java b/features/command/src/main/java/org/apache/karaf/features/command/FeaturesCommandSupport.java",
                "index 3efe67a183..e7f6a84d58 100644",
                "--- a/features/command/src/main/java/org/apache/karaf/features/command/FeaturesCommandSupport.java",
                "+++ b/features/command/src/main/java/org/apache/karaf/features/command/FeaturesCommandSupport.java",
                "@@ -19,5 +19,3 @@ package org.apache.karaf.features.command;",
                " import java.net.URI;",
                "-import java.util.EnumSet;",
                "-import java.util.LinkedHashSet;",
                "-import java.util.Set;",
                "+import java.util.*;",
                " import java.util.regex.Pattern;",
                "@@ -88,2 +86,15 @@ public abstract class FeaturesCommandSupport implements Action {",
                "     }",
                "+",
                "+    protected List<String> getFeatureIds(FeaturesService admin, List<String> nameOrIds) throws Exception {",
                "+        List<String> ids = new ArrayList<>();",
                "+        for (String nameOrId : nameOrIds) {",
                "+            for (Feature f : admin.getFeatures(nameOrId)) {",
                "+                ids.add(f.getId());",
                "+            }",
                "+        }",
                "+        if (ids.isEmpty()) {",
                "+            throw new IllegalArgumentException(\"No matching feature found for \" + nameOrIds);",
                "+        }",
                "+        return ids;",
                "+    }",
                " }",
                "diff --git a/features/command/src/main/java/org/apache/karaf/features/command/StartFeaturesCommand.java b/features/command/src/main/java/org/apache/karaf/features/command/StartFeaturesCommand.java",
                "index 2200aa0e74..7e86b823ac 100644",
                "--- a/features/command/src/main/java/org/apache/karaf/features/command/StartFeaturesCommand.java",
                "+++ b/features/command/src/main/java/org/apache/karaf/features/command/StartFeaturesCommand.java",
                "@@ -53,4 +53,3 @@ public class StartFeaturesCommand extends FeaturesCommandSupport {",
                "         Map<String, FeatureState> regionChanges = new HashMap<>();",
                "-        for (String featureName : features) {",
                "-            String featureId = getFeatureId(admin, featureName);",
                "+        for (String featureId : getFeatureIds(admin, features)) {",
                "             regionChanges.put(featureId, FeatureState.Started);",
                "diff --git a/features/command/src/main/java/org/apache/karaf/features/command/StopFeaturesCommand.java b/features/command/src/main/java/org/apache/karaf/features/command/StopFeaturesCommand.java",
                "index f58ea501c7..cf7b3970c2 100644",
                "--- a/features/command/src/main/java/org/apache/karaf/features/command/StopFeaturesCommand.java",
                "+++ b/features/command/src/main/java/org/apache/karaf/features/command/StopFeaturesCommand.java",
                "@@ -53,4 +53,3 @@ public class StopFeaturesCommand extends FeaturesCommandSupport {",
                "         Map<String, FeatureState> regionChanges = new HashMap<>();",
                "-        for (String featureName : features) {",
                "-            String featureId = getFeatureId(admin, featureName);",
                "+        for (String featureId : getFeatureIds(admin, features)) {",
                "             regionChanges.put(featureId, FeatureState.Resolved);"
            ],
            "changed_files": [
                "features/command/src/main/java/org/apache/karaf/features/command/FeaturesCommandSupport.java",
                "features/command/src/main/java/org/apache/karaf/features/command/StartFeaturesCommand.java",
                "features/command/src/main/java/org/apache/karaf/features/command/StopFeaturesCommand.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5697": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: stop, feature",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: stop, command, feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5697",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "88b42d39d38d8171fb88626af2989d3d58320a5d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526310451,
            "hunks": 5,
            "message": "[KARAF-5753] Fix bad ps command usage on HP-UX platforms",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index 58c3ce3693..be0322ffd4 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -34,2 +34,3 @@ detectOS() {",
                "     os400=false;",
                "+    hpux=false;",
                "     case \"$(uname)\" in",
                "@@ -46,2 +47,5 @@ detectOS() {",
                "             aix=true",
                "+            # For AIX, set an environment variable",
                "+            export LDR_CNTRL=MAXDATA=0xB0000000@DSA",
                "+            echo ${LDR_CNTRL}",
                "             ;;",
                "@@ -50,8 +54,9 @@ detectOS() {",
                "             ;;",
                "+        HP-UX*)",
                "+            hpux=true",
                "+            # For HP-UX, set an environment variable",
                "+\t    export PS_PREFIX=\"UNIX95= \"",
                "+            echo \"${PS_PREFIX}\"",
                "+            ;;",
                "     esac",
                "-    # For AIX, set an environment variable",
                "-    if ${aix}; then",
                "-         export LDR_CNTRL=MAXDATA=0xB0000000@DSA",
                "-         echo ${LDR_CNTRL}",
                "-    fi",
                " }",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index cb16df9a6a..1bb9e2e3af 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -95,8 +95,4 @@ checkRootInstance() {",
                "               MAIN=org.apache.karaf.main.Main",
                "-              DIST_OS=`uname -s | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "+              PID_COMMAND=$(\"${PS_PREFIX}\"ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d)",
                "-              case \"$DIST_OS\" in",
                "-                'hp-ux')PID_COMMAND=$(UNIX95= ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d);;",
                "-                *)PID_COMMAND=$(ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d);;",
                "-              esac",
                "               if [ \"${PID_COMMAND#*$MAIN}\" != \"$PID_COMMAND\" ]; then"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5753": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5753",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3b3b831a58024dd57cca94cd4478e3b66b253a1e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523437854,
            "hunks": 3,
            "message": "[KARAF-5696] Fix version detection on windows",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "index b18b46cf9d..d87b929535 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "@@ -216,2 +216,7 @@ if not \"%JAVA%\" == \"\" goto :Check_JAVA_END",
                "+rem Retrieve java version",
                "+for /f tokens^=2-5^ delims^=.-_+^\" %%j in ('\"%JAVA%\" -fullversion 2^>^&1') do (",
                "+    if %%j==1 (set JAVA_VERSION=%%k) else (set JAVA_VERSION=%%j)",
                "+)",
                "+",
                " :CheckRootInstance",
                "@@ -397,6 +402,5 @@ if \"%KARAF_PROFILER%\" == \"\" goto :RUN",
                "     if \"%IS_RUNNABLE%\" == \"true\" (",
                "-        for /f tokens^=2-5^ delims^=.-_^\" %%j in ('\"%JAVA%\" -fullversion 2^>^&1') do set \"JAVA_VERSION=%%j%\"",
                "         rem If major version is greater than 1 (meaning Java 9 or 10), we don't use endorsed lib but module",
                "         rem If major version is 1 (meaning Java 1.6, 1.7, 1.8), we use endorsed lib",
                "-        if \"%JAVA_VERSION%\" GTR 1 (",
                "+        if %JAVA_VERSION% GTR 8 (",
                "             \"%JAVA%\" %JAVA_OPTS% %OPTS% ^"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5696": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5696",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7df7fc2e2ba33352a9635f49c95f141fd6769818",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530099626,
            "hunks": 1,
            "message": "[KARAF-5701] Support installing extensions fragments",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java b/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "index 14086e734c..f2eb18f00a 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "@@ -734,2 +734,3 @@ public class Deployer {",
                "             toRefreshToStopEarly.remove(dstate.configadminBundle);",
                "+            toRefreshToStopEarly.remove(dstate.bundles.get(0L));",
                "             toStop.addAll(toRefreshToStopEarly);"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5701": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: instal",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5701",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "67b8cc319b5e259c2994617fd9da56b3b83b70a7",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530782134,
            "hunks": 8,
            "message": "[KARAF-5805] Add feature required item field to JmxFeature CompositeData",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java b/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "index cbc169c0cb..da39bc6c21 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "@@ -95,3 +95,3 @@ public class FeaturesServiceMBeanImpl extends StandardEmitterMBean implements",
                "                 try {",
                "-                    features.add(new JmxFeature(feature, insFeatures.contains(feature)));",
                "+                    features.add(new JmxFeature(feature, insFeatures.contains(feature), featuresService.isRequired(feature)));",
                "                 } catch (Throwable t) {",
                "@@ -268,8 +268,5 @@ public class FeaturesServiceMBeanImpl extends StandardEmitterMBean implements",
                "         for (Feature feature:f) {",
                "-            JmxFeature jmxFeature;",
                "-            if (featuresService.isInstalled(feature)) {",
                "-                jmxFeature = new JmxFeature(feature, true);",
                "-            } else {",
                "-                jmxFeature = new JmxFeature(feature, false);",
                "-            }",
                "+            boolean installed = featuresService.isInstalled(feature);",
                "+            boolean required = featuresService.isRequired(feature);",
                "+            JmxFeature jmxFeature = new JmxFeature(feature, installed, required);",
                "             features.add(jmxFeature);",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java b/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "index c7a0fddfbd..8d49dc08b9 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "@@ -38,2 +38,4 @@ public interface FeaturesServiceMBean {",
                "+    String FEATURE_REQUIRED = \"Required\";",
                "+",
                "     String FEATURE_CONFIG_PID = \"Pid\";",
                "@@ -63,3 +65,4 @@ public interface FeaturesServiceMBean {",
                "     String[] FEATURE = {FEATURE_NAME, FEATURE_VERSION, FEATURE_DEPENDENCIES, FEATURE_BUNDLES,",
                "-        FEATURE_CONFIGURATIONS, FEATURE_CONFIGURATIONFILES, FEATURE_INSTALLED, FEATURE_BLACKLISTED};",
                "+        FEATURE_CONFIGURATIONS, FEATURE_CONFIGURATIONFILES, FEATURE_INSTALLED, FEATURE_BLACKLISTED,",
                "+        FEATURE_REQUIRED};",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "index c9df7a4b4b..bc50c73481 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "@@ -74,3 +74,3 @@ public class JmxFeature {",
                "-    public JmxFeature(Feature feature, boolean installed) {",
                "+    public JmxFeature(Feature feature, boolean installed, boolean required) {",
                "         try {",
                "@@ -86,2 +86,3 @@ public class JmxFeature {",
                "             itemValues[7] = feature.isBlacklisted();",
                "+            itemValues[8] = required;",
                "             data = new CompositeDataSupport(FEATURE, itemNames, itemValues);",
                "@@ -318,2 +319,3 @@ public class JmxFeature {",
                "             itemTypes[7] = SimpleType.BOOLEAN;",
                "+            itemTypes[8] = SimpleType.BOOLEAN;",
                "@@ -327,2 +329,3 @@ public class JmxFeature {",
                "             itemDescriptions[7] = \"Whether the feature is blacklisted\";",
                "+            itemDescriptions[8] = \"Whether the feature is required\";"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/management/FeaturesServiceMBeanImpl.java",
                "features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5805": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature, require",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5805",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "06e5571231103658afd300eaa3f5150e79e7e650",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526041733,
            "hunks": 1,
            "message": "[KARAF-5748] Command results are not printed anymore unless they are strings",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "index 12c55194ce..c6b767eafc 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java",
                "@@ -459,3 +459,3 @@ public class ConsoleSessionImpl implements Session {",
                "             Object result = session.execute(command);",
                "-            if (result instanceof String) {",
                "+            if (result != null) {",
                "                 session.getConsole().println(session.format(result, Converter.INSPECT));"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/ConsoleSessionImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5748": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5748",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9844989d91edbe3c0fa6ab9c72d5324258fb8bbb",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528149052,
            "hunks": 7,
            "message": "[KARAF-5752] Add bundle ID in bundle:classes output",
            "diff": [
                "diff --git a/bundle/core/src/main/java/org/apache/karaf/bundle/command/Classes.java b/bundle/core/src/main/java/org/apache/karaf/bundle/command/Classes.java",
                "index 72d987cba3..78c1bc1673 100644",
                "--- a/bundle/core/src/main/java/org/apache/karaf/bundle/command/Classes.java",
                "+++ b/bundle/core/src/main/java/org/apache/karaf/bundle/command/Classes.java",
                "@@ -18,3 +18,6 @@ package org.apache.karaf.bundle.command;",
                "+import java.util.ArrayList;",
                " import java.util.Collection;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "@@ -25,2 +28,4 @@ import org.apache.karaf.shell.support.ansi.SimpleAnsi;",
                " import org.osgi.framework.Bundle;",
                "+import org.osgi.framework.wiring.BundleCapability;",
                "+import org.osgi.framework.wiring.BundleRevision;",
                " import org.osgi.framework.wiring.BundleWiring;",
                "@@ -39,2 +44,3 @@ public class Classes extends BundlesCommand {",
                "             Collection<String> resources;",
                "+            List<String> exports = getExports(bundle);",
                "             if (displayAllFiles){",
                "@@ -51,7 +57,17 @@ public class Classes extends BundlesCommand {",
                "             for (String resource:resources){",
                "-                if (localResources.contains(resource)) {",
                "-                    System.out.println(SimpleAnsi.INTENSITY_BOLD + resource + SimpleAnsi.INTENSITY_NORMAL);",
                "-                } else {",
                "-                    System.out.println(resource);",
                "+                StringBuilder stringBuilder = new StringBuilder();",
                "+                boolean localResource = localResources.contains(resource);",
                "+                if(localResource) {",
                "+                    stringBuilder.append(SimpleAnsi.INTENSITY_BOLD);",
                "                 }",
                "+                if(ids == null || ids.size() != 1) {",
                "+                    stringBuilder.append(bundle.getBundleId() + \" | \");",
                "+                }",
                "+                stringBuilder.append(resource + \" | \");",
                "+                stringBuilder.append(\"exported: \" + isExported(resource, exports));",
                "+                if(localResource) {",
                "+                    stringBuilder.append(SimpleAnsi.INTENSITY_NORMAL);",
                "+                }",
                "+",
                "+                System.out.println(stringBuilder.toString());",
                "             }",
                "@@ -62,2 +78,23 @@ public class Classes extends BundlesCommand {",
                "+    private boolean isExported(String className, List<String> exports) throws Exception {",
                "+        boolean exported = false;",
                "+        String packageName = className.substring(0, className.lastIndexOf(\"/\")).replaceAll(\"/\", \".\");",
                "+        if(exports.contains(packageName)) {",
                "+            exported = true;",
                "+        }",
                "+        return exported;",
                "+    }",
                "+",
                "+    private List<String> getExports(Bundle bundle) throws Exception {",
                "+        List<String> exports = new ArrayList<>();",
                "+        BundleRevision rev = bundle.adapt(BundleRevision.class);",
                "+        List<BundleCapability> caps = rev.getDeclaredCapabilities(BundleRevision.PACKAGE_NAMESPACE);",
                "+        for (BundleCapability cap : caps) {",
                "+            Map<String, Object> attr = cap.getAttributes();",
                "+            String packageName = (String)attr.get(BundleRevision.PACKAGE_NAMESPACE);",
                "+            exports.add(packageName);",
                "+        }",
                "+        return exports;",
                "+    }",
                "+"
            ],
            "changed_files": [
                "bundle/core/src/main/java/org/apache/karaf/bundle/command/Classes.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5752": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: bundle, command",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5752",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "de0a1a64bbd9fdb378741d256081b919821c457f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532891096,
            "hunks": 3,
            "message": "[KARAF-5850] JPA engine features provide the capability",
            "diff": [
                "diff --git a/assemblies/features/enterprise/src/main/feature/feature.xml b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "index 050142f780..66fe319562 100644",
                "--- a/assemblies/features/enterprise/src/main/feature/feature.xml",
                "+++ b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "@@ -180,3 +180,3 @@",
                "         <capability>",
                "-            osgi.service;effective:=active;objectClass=javax.persistence.spi.PersistenceProvider",
                "+            osgi.service;objectClass=javax.persistence.spi.PersistenceProvider;effective:=active;javax.persistence.provider=org.apache.openjpa.persistence.PersistenceProviderImpl",
                "         </capability>",
                "@@ -189,3 +189,3 @@",
                "         <capability>",
                "-            osgi.service;effective:=active;objectClass=javax.persistence.spi.PersistenceProvider",
                "+            osgi.service;objectClass=javax.persistence.spi.PersistenceProvider;effective:=active;javax.persistence.provider=org.hibernate.jpa.HibernatePersistenceProvider",
                "         </capability>",
                "@@ -205,3 +205,3 @@",
                "         <capability>",
                "-            osgi.service;effective:=active;objectClass=javax.persistence.spi.PersistenceProvider",
                "+            osgi.service;objectClass=javax.persistence.spi.PersistenceProvider;effective:=active;javax.persistence.provider=org.eclipse.persistence.jpa.PersistenceProvider",
                "         </capability>"
            ],
            "changed_files": [
                "assemblies/features/enterprise/src/main/feature/feature.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5850": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5850",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "845adc3ae84e1d008bb93e81f58354e563920914",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527249457,
            "hunks": 5,
            "message": "[KARAF-5768] Add AIX platform detection when installing karaf as a system service",
            "diff": [
                "diff --git a/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java b/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "index 3870bd41b2..8216bda2b7 100644",
                "--- a/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "+++ b/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "@@ -159,3 +159,3 @@ public class Install implements Action {",
                " \t\t\t\tSystem.out.println(\"\");",
                "-                System.out.println(INTENSITY_BOLD + \"On Redhat/Fedora/CentOS Systems (SystemV):\" + INTENSITY_NORMAL);",
                "+                                System.out.println(INTENSITY_BOLD + \"On Redhat/Fedora/CentOS Systems (SystemV):\" + INTENSITY_NORMAL);",
                " \t\t\t\tSystem.out.println(\"  To install the service:\");",
                "@@ -181,3 +181,3 @@ public class Install implements Action {",
                " \t\t\t\tSystem.out.println(\"\");",
                "-                System.out.println(INTENSITY_BOLD + \"On Ubuntu/Debian Systems (SystemV):\" + INTENSITY_NORMAL);",
                "+                                System.out.println(INTENSITY_BOLD + \"On Ubuntu/Debian Systems (SystemV):\" + INTENSITY_NORMAL);",
                " \t\t\t\tSystem.out.println(\"  To install the service:\");",
                "@@ -224,3 +224,5 @@ public class Install implements Action {",
                "         } else if (os.startsWith(\"Solaris\") || os.startsWith(\"SunOS\")) {",
                "-            System.out.println(\"  To install the service:\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(INTENSITY_BOLD + \"Solaris/SunOS system detected :\" + INTENSITY_NORMAL);",
                "+            System.out.println(\"  To install the service (and enable at system boot):\");",
                "             System.out.println(\"    $ ln -s \" + serviceFile.getPath() + \" /etc/init.d/\");",
                "@@ -249,4 +251,30 @@ public class Install implements Action {",
                "             System.out.println(\"    $ rm /etc/rc1.d/K20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm /etc/rc2.d/S20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm /etc/rc3.d/S20\" + serviceFile.getName());",
                "+        } else if (os.startsWith(\"AIX\")) {",
                "+            System.out.println(\"\");",
                "+            System.out.println(INTENSITY_BOLD + \"AIX system detected :\" + INTENSITY_NORMAL);",
                "+            System.out.println(\"  To install the service (and enable at system boot):\");",
                "+            System.out.println(\"    $ ln -s \" + serviceFile.getPath() + \" /etc/rc.d/init.d/\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To start the service when the machine is rebooted for all multi-user run levels\");",
                "+            System.out.println(\"  and stopped for the halt, single-user and reboot runlevels:\");",
                "+            System.out.println(\"    $ ln -s /etc/rc.d/init.d/\" + serviceFile.getName() + \" /etc/rc2.d/K20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ ln -s /etc/rc.d/init.d/\" + serviceFile.getName() + \" /etc/rc2.d/S20\" + serviceFile.getName());",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"    If your application makes use of other services, then you will need to make\");",
                "+            System.out.println(\"    sure that your application is started after, and then shutdown before. This\");",
                "+            System.out.println(\"    is done by controlling the startup/shutdown order by setting the right order\");",
                "+            System.out.println(\"    value, which in this example it set to 20.\"); ",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To start the service:\");",
                "+            System.out.println(\"    $ /etc/rc.d/init.d/\" + serviceFile.getName() + \" start\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To stop the service:\");",
                "+            System.out.println(\"    $ /etc/rc.d/init.d/\" + serviceFile.getName() + \" stop\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To uninstall the service :\");",
                "+            System.out.println(\"    $ rm /etc/rc.d/init.d/\" + serviceFile.getName());",
                "             System.out.println(\"    $ rm /etc/rc2.d/K20\" + serviceFile.getName());",
                "-            System.out.println(\"    $ rm /etc/rc3.d/K20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm /etc/rc2.d/S20\" + serviceFile.getName());",
                "         } else if (os.startsWith(\"HP-UX\")) {"
            ],
            "changed_files": [
                "wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5768": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: instal",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command, instal",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5768",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6e06d23e8993cdde1e1b9faa174c0177f8ce4211",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526680932,
            "hunks": 4,
            "message": "[KARAF-5761] Improve rendering of commands help",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/action/command/DefaultActionPreparator.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/action/command/DefaultActionPreparator.java",
                "index b4ceb2798a..65d896309f 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/action/command/DefaultActionPreparator.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/action/command/DefaultActionPreparator.java",
                "@@ -374,2 +374,4 @@ public class DefaultActionPreparator {",
                "                         }",
                "+                    } else {",
                "+                        printMeta(out, argument.required(), argument.multiValued());",
                "                     }",
                "@@ -394,2 +396,4 @@ public class DefaultActionPreparator {",
                "                                 printDefaultsTo(out, defaultValue);",
                "+                            } else {",
                "+                              printMeta(out, option.required(), option.multiValued());",
                "                             }",
                "@@ -398,2 +402,4 @@ public class DefaultActionPreparator {",
                "                         }",
                "+                    } else {",
                "+                        printMeta(out, option.required(), option.multiValued());",
                "                     }",
                "@@ -443,2 +449,20 @@ public class DefaultActionPreparator {",
                "+    private void printMeta(PrintStream out, boolean required, boolean multivalued) {",
                "+        if (required || multivalued) {",
                "+            String text = \"                (\";",
                "+            if (required) {",
                "+                text += \"required\";",
                "+                if (multivalued) {",
                "+                    text += \", \";",
                "+                }",
                "+            }",
                "+",
                "+            if (multivalued) {",
                "+                text += \"multi-valued\";",
                "+            }",
                "+            text += \")\";",
                "+            out.println(text);",
                "+        }",
                "+    }",
                "+",
                "     static void printFormatted(String prefix, String str, int termWidth, PrintStream out, boolean prefixFirstLine) {"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/action/command/DefaultActionPreparator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5761": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, command",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5761",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d5f87aaf1ce3a1fc3b2766f723a2c62c629fdcaf",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526999644,
            "hunks": 3,
            "message": "[KARAF-5765] Add display of HP-UX service instructions + fix bad usage of shell commands in karaf-service script when used on HPUX platform",
            "diff": [
                "diff --git a/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java b/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "index 78ca918a9a..3870bd41b2 100644",
                "--- a/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "+++ b/wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "@@ -251,2 +251,38 @@ public class Install implements Action {",
                "             System.out.println(\"    $ rm /etc/rc3.d/K20\" + serviceFile.getName());",
                "+        } else if (os.startsWith(\"HP-UX\")) {",
                "+            System.out.println(\"\");",
                "+            System.out.println(INTENSITY_BOLD + \"HP-UX system detected :\" + INTENSITY_NORMAL);",
                "+            System.out.println(\"  To install the service (and enable at system boot):\");",
                "+            System.out.println(\"    $ cp /sbin/init.d/template /sbin/init.d/\" + serviceFile.getName());",
                "+            System.out.println(\"    $ cat /sbin/init.d/\" + serviceFile.getName() +\" | sed 's/<specific>/\" + serviceFile.getName() + \"/g' | \\\\ \");",
                "+            System.out.println(\"      awk '/# Execute the commands to/{print;print \\\"                set_return\\\";next}1' | \\\\ \");",
                "+            System.out.println(\"      sed 's/CONTROL_VARIABLE/CONTROL_VARIABLE_KARAF/g' | \\\\ \");",
                "+            System.out.println(\"      sed 's@# Execute the commands to start your subsystem@        \" + serviceFile.getPath() + \" start@g' | \\\\ \");",
                "+            System.out.println(\"      sed 's@# Execute the commands to stop your subsystem@        \" + serviceFile.getPath() + \" stop@g' | \\\\ \");",
                "+            System.out.println(\"      sed 's/^[ \\t]*.://g' > /sbin/init.d/\" + serviceFile.getName() +\".tmp\");",
                "+            System.out.println(\"    $ mv /sbin/init.d/\" + serviceFile.getName() +\".tmp /sbin/init.d/\" + serviceFile.getName());",
                "+            System.out.println(\"    $ chmod +x /sbin/init.d/\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm -f /sbin/init.d/\" + serviceFile.getName() +\".tmp\");",
                "+            System.out.println(\"    $ echo CONTROL_VARIABLE_KARAF=1 > /etc/rc.config.d/\" + serviceFile.getName());",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To start the service when the machine is rebooted for multi-user run level\");",
                "+            System.out.println(\"  and stopped for the halt, single-user and reboot runlevels:\");",
                "+            System.out.println(\"    $ ln -s /sbin/init.d/\" + serviceFile.getName() + \" /sbin/rc2.d/K20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ ln -s /sbin/init.d/\" + serviceFile.getName() + \" /sbin/rc3.d/S20\" + serviceFile.getName());",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"    If your application makes use of other services, then you will need to make\");",
                "+            System.out.println(\"    sure that your application is started after, and then shutdown before. This\");",
                "+            System.out.println(\"    is done by controlling the startup/shutdown order by setting the right order\");",
                "+            System.out.println(\"    value, which in this example it set to 20.\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To start the service:\");",
                "+            System.out.println(\"    $ /sbin/init.d/\" + serviceFile.getName() + \" start\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To stop the service:\");",
                "+            System.out.println(\"    $ /sbin/init.d/\" + serviceFile.getName() + \" stop\");",
                "+            System.out.println(\"\");",
                "+            System.out.println(\"  To uninstall the service :\");",
                "+            System.out.println(\"    $ rm /sbin/init.d/\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm /sbin/rc2.d/K20\" + serviceFile.getName());",
                "+            System.out.println(\"    $ rm /sbin/rc3.d/S20\" + serviceFile.getName());",
                "         }",
                "diff --git a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-service b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-service",
                "index 9597ff66ba..7defa82d1b 100644",
                "--- a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-service",
                "+++ b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-service",
                "@@ -172,6 +172,10 @@ esac",
                " # Resolve the architecture",
                "-DIST_ARCH=`uname -p | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "-if [ \"$DIST_ARCH\" = \"unknown\" ]",
                "-then",
                "-    DIST_ARCH=`uname -m | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "+uname -p >/dev/null 2>&1",
                "+if [ \"$?\" -eq \"0\" ]; then",
                "+    DIST_ARCH=`uname -p | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "+else",
                "+    uname -m >/dev/null 2>&1",
                "+    if [ \"$?\" -eq \"0\" ]; then",
                "+        DIST_ARCH=`uname -m | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "+    fi",
                " fi",
                "@@ -368,2 +372,5 @@ getpid() {",
                "                     pidtest=`$PSEXE -p $pid -o args | grep \"$WRAPPER_CMD\" | tail -1`",
                "+                elif [ \"$DIST_OS\" = \"hpux\" ]",
                "+                then",
                "+                    pidtest=`UNIX95= $PSEXE -p $pid -o args | grep \"$WRAPPER_CMD\" | tail -1`",
                "                 else"
            ],
            "changed_files": [
                "wrapper/src/main/java/org/apache/karaf/wrapper/commands/Install.java",
                "wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-service"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5765": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell, command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command, instal",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5765",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0b107701c107621926ef6d2e8aa851d05726dc29",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528872177,
            "hunks": 10,
            "message": "[KARAF-5786] Add blacklisted key to JmxFeature & JmxRepository CompositeData",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java b/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "index ca33599b55..c7a0fddfbd 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "@@ -36,2 +36,4 @@ public interface FeaturesServiceMBean {",
                "+    String FEATURE_BLACKLISTED = \"Blacklisted\";",
                "+",
                "     String FEATURE_CONFIG_PID = \"Pid\";",
                "@@ -61,3 +63,3 @@ public interface FeaturesServiceMBean {",
                "     String[] FEATURE = {FEATURE_NAME, FEATURE_VERSION, FEATURE_DEPENDENCIES, FEATURE_BUNDLES,",
                "-        FEATURE_CONFIGURATIONS, FEATURE_CONFIGURATIONFILES, FEATURE_INSTALLED};",
                "+        FEATURE_CONFIGURATIONS, FEATURE_CONFIGURATIONFILES, FEATURE_INSTALLED, FEATURE_BLACKLISTED};",
                "@@ -86,2 +88,4 @@ public interface FeaturesServiceMBean {",
                "+    String REPOSITORY_BLACKLISTED = \"Blacklisted\";",
                "+",
                "     /**",
                "@@ -100,3 +104,3 @@ public interface FeaturesServiceMBean {",
                "      */",
                "-    String[] REPOSITORY = {REPOSITORY_NAME, REPOSITORY_URI, REPOSITORY_REPOSITORIES, REPOSITORY_FEATURES};",
                "+    String[] REPOSITORY = {REPOSITORY_NAME, REPOSITORY_URI, REPOSITORY_REPOSITORIES, REPOSITORY_FEATURES, REPOSITORY_BLACKLISTED};",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "index ae5469ec1b..c9df7a4b4b 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "@@ -85,2 +85,3 @@ public class JmxFeature {",
                "             itemValues[6] = installed;",
                "+            itemValues[7] = feature.isBlacklisted();",
                "             data = new CompositeDataSupport(FEATURE, itemNames, itemValues);",
                "@@ -316,2 +317,3 @@ public class JmxFeature {",
                "             itemTypes[6] = SimpleType.BOOLEAN;",
                "+            itemTypes[7] = SimpleType.BOOLEAN;",
                "@@ -324,2 +326,3 @@ public class JmxFeature {",
                "             itemDescriptions[6] = \"Whether the feature is installed\";",
                "+            itemDescriptions[7] = \"Whether the feature is blacklisted\";",
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxRepository.java b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxRepository.java",
                "index 47e9f1c661..c3ee385dd2 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxRepository.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/management/codec/JmxRepository.java",
                "@@ -54,2 +54,3 @@ public class JmxRepository {",
                "             itemValues[3] = getFeatureIdentifierTable(Arrays.asList(repository.getFeatures()));",
                "+            itemValues[4] = repository.isBlacklisted();",
                "             data = new CompositeDataSupport(REPOSITORY, itemNames, itemValues);",
                "@@ -109,2 +110,3 @@ public class JmxRepository {",
                "             itemTypes[3] = JmxFeature.FEATURE_IDENTIFIER_TABLE;",
                "+            itemTypes[4] = SimpleType.BOOLEAN;",
                "@@ -114,2 +116,3 @@ public class JmxRepository {",
                "             itemDescriptions[3] = \"The list of included features\";",
                "+            itemDescriptions[4] = \"Whether the repository is blacklisted\";"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/management/FeaturesServiceMBean.java",
                "features/core/src/main/java/org/apache/karaf/features/management/codec/JmxFeature.java",
                "features/core/src/main/java/org/apache/karaf/features/management/codec/JmxRepository.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5786": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5786",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c07843b01c780742817a38e90d78e4253f9a7999",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526636846,
            "hunks": 8,
            "message": "[KARAF-5760] Add ways to not use older versions of feature repositories when they are transitive",
            "diff": [
                "diff --git a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "index 065178dec3..be79302e8f 100644",
                "--- a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "+++ b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java",
                "@@ -67,2 +67,3 @@ import org.apache.karaf.features.FeatureEvent;",
                " import org.apache.karaf.features.FeaturesService;",
                "+import org.apache.karaf.features.LocationPattern;",
                " import org.apache.karaf.features.internal.download.DownloadCallback;",
                "@@ -78,2 +79,4 @@ import org.apache.karaf.features.internal.resolver.ResourceUtils;",
                " import org.apache.karaf.features.internal.service.Deployer;",
                "+import org.apache.karaf.features.internal.service.FeaturesProcessorImpl;",
                "+import org.apache.karaf.features.internal.service.FeaturesServiceConfig;",
                " import org.apache.karaf.features.internal.service.State;",
                "@@ -118,2 +121,5 @@ public class VerifyMojo extends MojoSupport {",
                "+    @Parameter(property = \"blacklistedDescriptors\")",
                "+    protected Set<String> blacklistedDescriptors;",
                "+",
                "     @Parameter(property = \"features\")",
                "@@ -160,2 +166,8 @@ public class VerifyMojo extends MojoSupport {",
                "+    @Parameter(readonly = true, defaultValue = \"${project.groupId}\")",
                "+    protected String selfGroupId;",
                "+",
                "+    @Parameter(readonly = true, defaultValue = \"${project.artifactId}\")",
                "+    protected String selfArtifactId;",
                "+",
                "     protected MavenResolver resolver;",
                "@@ -555,15 +567,30 @@ public class VerifyMojo extends MojoSupport {",
                "-    public static Map<String, Features> loadRepositories(DownloadManager manager, Set<String> uris) throws Exception {",
                "+    public Map<String, Features> loadRepositories(DownloadManager manager, Set<String> uris) throws Exception {",
                "         final Map<String, Features> loaded = new HashMap<>();",
                "         final Downloader downloader = manager.createDownloader();",
                "+",
                "+        FeaturesProcessorImpl processor = new FeaturesProcessorImpl(new FeaturesServiceConfig());",
                "+        if (blacklistedDescriptors != null) {",
                "+            blacklistedDescriptors.forEach(lp -> {",
                "+                processor.getInstructions().getBlacklistedRepositoryLocationPatterns()",
                "+                        .add(new LocationPattern(lp));",
                "+            });",
                "+        }",
                "+        processor.getInstructions().getBlacklistedRepositoryLocationPatterns()",
                "+                .add(new LocationPattern(\"mvn:\" + selfGroupId + \"/\" + selfArtifactId));",
                "+",
                "         for (String repository : uris) {",
                "-            downloader.download(repository, new DownloadCallback() {",
                "-                @Override",
                "-                public void downloaded(final StreamProvider provider) throws Exception {",
                "-                    try (InputStream is = provider.open()) {",
                "-                        Features featuresModel = JaxbUtil.unmarshal(provider.getUrl(), is, false);",
                "-                        synchronized (loaded) {",
                "-                            loaded.put(provider.getUrl(), featuresModel);",
                "-                            for (String innerRepository : featuresModel.getRepository()) {",
                "-                                downloader.download(innerRepository, this);",
                "+            if (!processor.isRepositoryBlacklisted(repository)) {",
                "+                downloader.download(repository, new DownloadCallback() {",
                "+                    @Override",
                "+                    public void downloaded(final StreamProvider provider) throws Exception {",
                "+                        try (InputStream is = provider.open()) {",
                "+                            Features featuresModel = JaxbUtil.unmarshal(provider.getUrl(), is, false);",
                "+                            synchronized (loaded) {",
                "+                                loaded.put(provider.getUrl(), featuresModel);",
                "+                                for (String innerRepository : featuresModel.getRepository()) {",
                "+                                    if (!processor.isRepositoryBlacklisted(innerRepository)) {",
                "+                                        downloader.download(innerRepository, this);",
                "+                                    }",
                "+                                }",
                "                             }",
                "@@ -571,4 +598,4 @@ public class VerifyMojo extends MojoSupport {",
                "                     }",
                "-                }",
                "-            });",
                "+                });",
                "+            }",
                "         }"
            ],
            "changed_files": [
                "tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/VerifyMojo.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5760": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature, version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5760",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f9c7174523736786aebf64f25fdf107a3a181d3a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531588049,
            "hunks": 1,
            "message": "[KARAF-5837] Upgrade to maven-jacoco-plugin 0.8.1",
            "diff": [
                "diff --git a/tooling/karaf-maven-plugin/pom.xml b/tooling/karaf-maven-plugin/pom.xml",
                "index 53b6c17354..8fcab5a5dd 100644",
                "--- a/tooling/karaf-maven-plugin/pom.xml",
                "+++ b/tooling/karaf-maven-plugin/pom.xml",
                "@@ -329,3 +329,3 @@",
                "                 <artifactId>jacoco-maven-plugin</artifactId>",
                "-                <version>0.7.9</version>",
                "+                <version>0.8.1</version>",
                "                 <executions>"
            ],
            "changed_files": [
                "tooling/karaf-maven-plugin/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5837": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5837",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "00689f18172f2a29000a3e3c91a217537a8773ce",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529339708,
            "hunks": 0,
            "message": "Merge pull request #531 from jbonofre/KARAF-5787 [KARAF-5787] Improve scheduler whiteboard handler to allow users to define scheduler service properties in raw String",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5787": ""
            },
            "ghissue_refs": {
                "531": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: whiteboard, user",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5787",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 531",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c1ea72f419330b3567d7c789e4178186c3f8efae",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531826883,
            "hunks": 0,
            "message": "Merge pull request #560 from jbonofre/KARAF-5832 [KARAF-5832] Upgrade to maven-jar-plugin 3.1.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5832": ""
            },
            "ghissue_refs": {
                "560": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5832",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 560",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb6767e310acc72e4e0cf27ccc30947d30786088",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531987280,
            "hunks": 0,
            "message": "Merge pull request #566 from jbonofre/KARAF-5827 [KARAF-5827] Upgrade to jline 3.9.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5827": ""
            },
            "ghissue_refs": {
                "566": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: line",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5827",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 566",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bc66379003ee1b59095e3d61cba350e4e932c82b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528960656,
            "hunks": 0,
            "message": "Merge pull request #526 from jamesnetherton/KARAF-5786 [KARAF-5786] Add blacklisted key to JmxFeature & JmxRepository CompositeData",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5786": ""
            },
            "ghissue_refs": {
                "526": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5786",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 526",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "561b4ee8365408b521343478c65dc5b4f2c9749a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529311824,
            "hunks": 0,
            "message": "Merge pull request #529 from jbonofre/KARAF-5720 [KARAF-5720] Upgrade to JLine 3.7.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5720": ""
            },
            "ghissue_refs": {
                "529": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: line",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5720",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 529",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3a0db50abbe1644128d293b9633e104931ffeba5",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524050107,
            "hunks": 1,
            "message": "Enable karaf-assembly packaging to work with features that use custom deployers wrapping maven artifacts",
            "diff": [
                "diff --git a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/InstallKarsMojo.java b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/InstallKarsMojo.java",
                "index 5b75c4b8d2..61b1955884 100644",
                "--- a/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/InstallKarsMojo.java",
                "+++ b/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/InstallKarsMojo.java",
                "@@ -564,2 +564,7 @@ public class InstallKarsMojo extends MojoSupport {",
                "             }",
                "+            // checked all known prefixes, clean a possible custom one wrapping mvn:",
                "+            int mvnIndex = bundleLocation.indexOf(\"mvn:\");",
                "+            if (mvnIndex > 0) {",
                "+                bundleLocation = bundleLocation.substring(mvnIndex);",
                "+            }",
                "             File bundleFile;"
            ],
            "changed_files": [
                "tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/InstallKarsMojo.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-3.0.10"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, feature, instal",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "041190d806bc80ee11a1ec20f43cfd0965c143f5",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527622195,
            "hunks": 0,
            "message": "Merge pull request #519 from xldai/master [KARAF-5363] make noAutoStartBundles property effect in the cfg",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5363": ""
            },
            "ghissue_refs": {
                "519": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5363",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 519",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "31bd94ff0b7d570782db2deb67d7ea7e56f06b78",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527567355,
            "hunks": 2,
            "message": "Fix KARAF-5363, make noAutoStartBundles property effect in the cfg",
            "diff": [
                "diff --git a/kar/src/main/java/org/apache/karaf/kar/internal/osgi/Activator.java b/kar/src/main/java/org/apache/karaf/kar/internal/osgi/Activator.java",
                "index 5e95528c2f..940541ea2d 100644",
                "--- a/kar/src/main/java/org/apache/karaf/kar/internal/osgi/Activator.java",
                "+++ b/kar/src/main/java/org/apache/karaf/kar/internal/osgi/Activator.java",
                "@@ -45,2 +45,3 @@ public class Activator extends BaseActivator implements ManagedService {",
                "         boolean noAutoRefreshBundles = getBoolean(\"noAutoRefreshBundles\", false);",
                "+        boolean noAutoStartBundles = getBoolean(\"noAutoStartBundles\", false);",
                "         String karStorage = getString(\"karStorage\", System.getProperty(\"karaf.data\") + File.separator + \"kar\");",
                "@@ -53,2 +54,3 @@ public class Activator extends BaseActivator implements ManagedService {",
                "         karService.setNoAutoRefreshBundles(noAutoRefreshBundles);",
                "+        karService.setNoAutoStartBundles(noAutoStartBundles);",
                "         register(KarService.class, karService);"
            ],
            "changed_files": [
                "kar/src/main/java/org/apache/karaf/kar/internal/osgi/Activator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5363": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5e176385dca1be947e2cba3755065104ce41bd30"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5363",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e1e6521500cd53ed05c40cffea3412d92c31b182",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533063788,
            "hunks": 0,
            "message": "Merge pull request #583 from jbonofre/KARAF-5851 [KARAF-5851] Remove heading spaces in the cfg files",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5851": ""
            },
            "ghissue_refs": {
                "583": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: remove",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5851",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 583",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3c9f012a2abfbdb3fd786d74115ccc84f8038cc0",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531682342,
            "hunks": 0,
            "message": "Merge pull request #555 from jbonofre/KARAF-5837 [KARAF-5837] Upgrade to maven-jacoco-plugin 0.8.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5837": ""
            },
            "ghissue_refs": {
                "555": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5837",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 555",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4ff8cca4250d1260d7b721245da7deaea6902f77",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526480488,
            "hunks": 0,
            "message": "Merge pull request #486 from jbonofre/KARAF-3235 [KARAF-3235] Expose karaf itests as a bundle in order to simplify the way of writing itests for end-users",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-3235": ""
            },
            "ghissue_refs": {
                "486": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, user",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-3235",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 486",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "890c5965b50dc98bac5008870256ec03dd31e55c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532011936,
            "hunks": 0,
            "message": "Merge pull request #573 from jbonofre/KARAF-5817 [KARAF-5817] Upgrade to maven-bundle-plugin 3.5.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5817": ""
            },
            "ghissue_refs": {
                "573": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5817",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 573",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "26e50da9ce5e6502bbb10e55b1ae24865a5824dc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527311030,
            "hunks": 0,
            "message": "Merge pull request #517 from usu-fr/KARAF-5768 [KARAF-5768] Add AIX platform detection when installing karaf as a sy\u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5768": ""
            },
            "ghissue_refs": {
                "517": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: instal",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5768",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 517",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "794e01059e4561ec2806b185ef362fda63f00254",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530611942,
            "hunks": 0,
            "message": "Merge pull request #538 from jbonofre/KARAF-5800 [KARAF-5800] Upgrade to Felix Gogo 1.1.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5800": ""
            },
            "ghissue_refs": {
                "538": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: gogo",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5800",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 538",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "748ec85c8d79306853ad7c5332179dce154d5e40",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531843859,
            "hunks": 0,
            "message": "Merge pull request #557 from jbonofre/KARAF-5835 [KARAF-5835] Upgrade to maven-surefire-plugin 2.22.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5835": ""
            },
            "ghissue_refs": {
                "557": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5835",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 557",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "90fa1a3d9fd9060a0e646f066ad202648ba9c32e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526656188,
            "hunks": 0,
            "message": "Merge pull request #507 from grgrzybek/KARAF-5760 [KARAF-5760] Add ways to not use older versions of feature repositori\u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5760": ""
            },
            "ghissue_refs": {
                "507": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5760",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 507",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d9cc37548fca040db0e7ac404f4880fa9dad0346",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526977188,
            "hunks": 7,
            "message": "[KARAF-5422] Add properties for karaf URI",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/resources/resources/etc/org.ops4j.pax.url.mvn.cfg b/assemblies/features/base/src/main/resources/resources/etc/org.ops4j.pax.url.mvn.cfg",
                "index 4d977457f8..5ef2626312 100644",
                "--- a/assemblies/features/base/src/main/resources/resources/etc/org.ops4j.pax.url.mvn.cfg",
                "+++ b/assemblies/features/base/src/main/resources/resources/etc/org.ops4j.pax.url.mvn.cfg",
                "@@ -82,5 +82,5 @@ org.ops4j.pax.url.mvn.useFallbackRepositories=false",
                " org.ops4j.pax.url.mvn.defaultRepositories=\\",
                "-    file:${karaf.home}/${karaf.default.repository}@id=system.repository@snapshots, \\",
                "-    file:${karaf.data}/kar@id=kar.repository@multi@snapshots, \\",
                "-    file:${karaf.base}/${karaf.default.repository}@id=child.system.repository@snapshots",
                "+    ${karaf.home.uri}${karaf.default.repository}@id=system.repository@snapshots, \\",
                "+    ${karaf.data.uri}kar@id=kar.repository@multi@snapshots, \\",
                "+    ${karaf.base.uri}${karaf.default.repository}@id=child.system.repository@snapshots",
                "diff --git a/main/src/main/java/org/apache/karaf/main/ConfigProperties.java b/main/src/main/java/org/apache/karaf/main/ConfigProperties.java",
                "index ebf9b1bfb3..5edc0204fb 100644",
                "--- a/main/src/main/java/org/apache/karaf/main/ConfigProperties.java",
                "+++ b/main/src/main/java/org/apache/karaf/main/ConfigProperties.java",
                "@@ -41,2 +41,4 @@ public class ConfigProperties {",
                "     public static final String PROP_KARAF_HOME = \"karaf.home\";",
                "+",
                "+    public static final String PROP_KARAF_HOME_URI = \"karaf.home.uri\";",
                "     /**",
                "@@ -51,2 +53,4 @@ public class ConfigProperties {",
                "     public static final String PROP_KARAF_BASE = \"karaf.base\";",
                "+",
                "+    public static final String PROP_KARAF_BASE_URI = \"karaf.base.uri\";",
                "     /**",
                "@@ -61,2 +65,4 @@ public class ConfigProperties {",
                "     public static final String PROP_KARAF_DATA = \"karaf.data\";",
                "+",
                "+    public static final String PROP_KARAF_DATA_URI = \"karaf.data.uri\";",
                "     /**",
                "@@ -71,2 +77,4 @@ public class ConfigProperties {",
                "     public static final String PROP_KARAF_ETC = \"karaf.etc\";",
                "+",
                "+    public static final String PROP_KARAF_ETC_URI = \"karaf.etc.uri\";",
                "     /**",
                "@@ -81,2 +89,4 @@ public class ConfigProperties {",
                "     public static final String PROP_KARAF_INSTANCES = \"karaf.instances\";",
                "+",
                "+    public static final String PROP_KARAF_INSTANCES_URI = \"karaf.instances.uri\";",
                "     /**",
                "@@ -197,2 +207,8 @@ public class ConfigProperties {",
                "+        System.setProperty(PROP_KARAF_HOME_URI, karafHome.toURI().toASCIIString());",
                "+        System.setProperty(PROP_KARAF_BASE_URI, karafBase.toURI().toASCIIString());",
                "+        System.setProperty(PROP_KARAF_DATA_URI, karafData.toURI().toASCIIString());",
                "+        System.setProperty(PROP_KARAF_ETC_URI, karafEtc.toURI().toASCIIString());",
                "+        System.setProperty(PROP_KARAF_INSTANCES_URI, karafInstances.toURI().toASCIIString());",
                "+",
                "         if (!karafEtc.exists()) {"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/resources/resources/etc/org.ops4j.pax.url.mvn.cfg",
                "main/src/main/java/org/apache/karaf/main/ConfigProperties.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5422": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9781dd84776faf83e2e430772ba07c50b6bcf83f"
                ],
                [
                    "no-tag",
                    "46e0ed15bb367ecb17375e006ecd194f89316ab6"
                ]
            ],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5422",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e1e30c425ff2a988b2851c9dade66aa7f943869c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531727146,
            "hunks": 0,
            "message": "Merge pull request #556 from jbonofre/KARAF-5836 [KARAF-5836] Upgrade to maven-war-plugin 3.2.2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5836": ""
            },
            "ghissue_refs": {
                "556": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5836",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 556",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94e75c6022fe6629cad0e5cb4d52a361c95e5d22",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531314881,
            "hunks": 2,
            "message": "[KARAF-5781] Properties edit doesn't conserve the existing ones Now it use the existing file and performs the specified changes. Signed-off-by: van Sabben <4246302+vanSabben@users.noreply.github.com>",
            "diff": [
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "index a14b285834..927b843872 100644",
                "--- a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "@@ -611,11 +611,2 @@ public class Builder {",
                "-        // 'improve' configuration files.",
                "-        if (propertyEdits != null) {",
                "-            KarafPropertiesEditor editor = new KarafPropertiesEditor();",
                "-            editor.setInputEtc(etcDirectory.toFile())",
                "-                    .setOutputEtc(etcDirectory.toFile())",
                "-                    .setEdits(propertyEdits);",
                "-            editor.run();",
                "-        }",
                "-",
                "         //",
                "@@ -671,2 +662,9 @@ public class Builder {",
                "         installStage(installedProfile, allBootFeatures);",
                "+",
                "+        // 'improve' configuration files.",
                "+        if (propertyEdits != null) {",
                "+          KarafPropertiesEditor editor = new KarafPropertiesEditor();",
                "+          editor.setInputEtc(etcDirectory.toFile()).setOutputEtc(etcDirectory.toFile()).setEdits(propertyEdits);",
                "+          editor.run();",
                "+        }",
                "     }"
            ],
            "changed_files": [
                "profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5781": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "503df8b6bd253cc354681a0f2b09490af21d5d7f"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5781",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "45c9e9662ee0ad6c7156d299f560da9a330c1acd",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531803779,
            "hunks": 0,
            "message": "Merge pull request #559 from jbonofre/KARAF-5833 [KARAF-5833] Upgrade to maven-project-info-reports-plugin 3.0.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5833": ""
            },
            "ghissue_refs": {
                "559": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5833",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 559",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c1af4ffcd53cda555056df792aedeccc5de1b880",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528206468,
            "hunks": 0,
            "message": "Merge pull request #522 from sjhiggs/KARAF-5752 [KARAF-5752] Add bundle ID in bundle:classes output",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5752": ""
            },
            "ghissue_refs": {
                "522": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5752",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 522",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "195c0016a356b2f211807877f0473cca99cfc25b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529262966,
            "hunks": 0,
            "message": "Merge pull request #528 from jbonofre/KARAF-5759 [KARAF-5759] Add short option on config:list command",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5759": ""
            },
            "ghissue_refs": {
                "528": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5759",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 528",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f45ded0112e7596b40521ec97c9c3b30f4067f6d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527149192,
            "hunks": 0,
            "message": "Merge pull request #514 from jbonofre/KARAF-5738 [KARAF-5738] Upgrade to maven-resources-plugin 3.1.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5738": ""
            },
            "ghissue_refs": {
                "514": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5738",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 514",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "48bac3edd2bc64409e268dcdab230ecd8ba694f8",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527612452,
            "hunks": 1,
            "message": "Capitalise JAAS GroupCreateCommand description",
            "diff": [
                "diff --git a/jaas/command/src/main/java/org/apache/karaf/jaas/command/GroupCreateCommand.java b/jaas/command/src/main/java/org/apache/karaf/jaas/command/GroupCreateCommand.java",
                "index e563d7a440..46e82a643e 100644",
                "--- a/jaas/command/src/main/java/org/apache/karaf/jaas/command/GroupCreateCommand.java",
                "+++ b/jaas/command/src/main/java/org/apache/karaf/jaas/command/GroupCreateCommand.java",
                "@@ -22,3 +22,3 @@ import org.apache.karaf.shell.api.action.lifecycle.Service;",
                "-@Command(scope = \"jaas\", name = \"group-create\", description = \"create a group in a realm\")",
                "+@Command(scope = \"jaas\", name = \"group-create\", description = \"Create a group in a realm\")",
                " @Service"
            ],
            "changed_files": [
                "jaas/command/src/main/java/org/apache/karaf/jaas/command/GroupCreateCommand.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b9206c9a58091709594e96385af4c1481c4ad4eb",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531826246,
            "hunks": 0,
            "message": "Merge pull request #561 from jbonofre/KARAF-5831 [KARAF-5831] Upgrade to maven-enforcer-plugin 3.0.0-M2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5831": ""
            },
            "ghissue_refs": {
                "561": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5831",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 561",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2a4ecfadfbcbed575033ca45553a28b8c60de789",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532926623,
            "hunks": 0,
            "message": "Merge pull request #580 from jbonofre/KARAF-5850 [KARAF-5850] JPA engine features provide the capability",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5850": ""
            },
            "ghissue_refs": {
                "580": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5850",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 580",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f35400b751fbde4a3e622b3a9165b9cf0e31c218",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532153437,
            "hunks": 0,
            "message": "Merge pull request #558 from jbonofre/KARAF-5834 [KARAF-5834] Upgrade to maven-site-plugin 3.7.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5834": ""
            },
            "ghissue_refs": {
                "558": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5834",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 558",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4e4ca469a7096912626479bcacfe2e83b0b0be49",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533217325,
            "hunks": 0,
            "message": "Merge pull request #585 from gnodet/KARAF-5689 [KARAF-5689] Console is broken after Ctrl+C",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5689": ""
            },
            "ghissue_refs": {
                "585": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5689",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 585",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "51a038420f8e69b94ebb5c31bce569d3786d1418",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531743819,
            "hunks": 2,
            "message": "[KARAF-5834] Upgrade to maven-site-plugin 3.7.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 94d9fa2cbb..673d69a471 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1957,3 +1957,3 @@",
                "                     <artifactId>maven-site-plugin</artifactId>",
                "-                    <version>3.6</version>",
                "+                    <version>3.7.1</version>",
                "                 </plugin>",
                "@@ -2152,3 +2152,3 @@",
                "                 <artifactId>maven-site-plugin</artifactId>",
                "-                <version>3.5</version>",
                "+                <version>3.7.1</version>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5834": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5834",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "64f5763fb837599853f481b6398f82b2119b7a43",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532364992,
            "hunks": 1,
            "message": "[KARAF-5849] Update version of pax transx to 0.4.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index bb00a70460..4a93fa1f3f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -284,3 +284,3 @@",
                "         <pax.jms.version>1.0.1</pax.jms.version>",
                "-        <pax.transx.version>0.3.0</pax.transx.version>",
                "+        <pax.transx.version>0.4.0</pax.transx.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5849": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5849",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "15dd0f39a9fe12db757c91fc421c09d286b72866",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531746713,
            "hunks": 1,
            "message": "[KARAF-5833] Upgrade to maven-project-info-reports-plugin 3.0.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 94d9fa2cbb..98321c7485 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -2162,3 +2162,3 @@",
                "                 <artifactId>maven-project-info-reports-plugin</artifactId>",
                "-                <version>2.9</version>",
                "+                <version>3.0.0</version>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5833": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5833",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1c2b4eb19a884874e9d20ced42078164c8aac579",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523451641,
            "hunks": 1,
            "message": "[KARAF-5695]Starting Karaf Container 4.2.0 in Ubuntu 17.10 with OpenJDK 9 fails",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index 8e73df24e0..58c3ce3693 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -210,3 +210,3 @@ detectJVM() {",
                " checkJvmVersion() {",
                "-    VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g ; s/\\..*//g;')",
                "+    VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g ; s/\\..*//g; s/-.*//g;')",
                "     if [ \"${VERSION}\" -lt \"8\" ]; then"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5695": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5695",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9786364d514f15e57d6723d2a5205fbb9f8790a3",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523577817,
            "hunks": 1,
            "message": "[KARAF-5694]don't mess with the wrap URI",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "index c9ca654479..fb5e4dd8f6 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "@@ -52,4 +52,4 @@ public final class DownloadManagerHelper {",
                "         }",
                "-        if (strippedUrl.contains(\";\")) {",
                "-            strippedUrl = strippedUrl.substring(0, strippedUrl.indexOf(';'));",
                "+        if (strippedUrl.contains(\";start-level=\")) {",
                "+            strippedUrl = strippedUrl.substring(0, strippedUrl.indexOf(\";start-level=\"));",
                "         }"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5694": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5694",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1e4e8937a722d7f583dfbdbbdb0cc637f9f8aff4",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531973107,
            "hunks": 1,
            "message": "[KARAF-5817] Upgrade to maven-bundle-plugin 3.5.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..310714beb9 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -201,3 +201,3 @@",
                "         <felix.inventory.version>1.0.4</felix.inventory.version>",
                "-        <felix.plugin.version>3.5.0</felix.plugin.version>",
                "+        <felix.plugin.version>3.5.1</felix.plugin.version>",
                "         <felix.utils.version>1.11.0</felix.utils.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5817": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5817",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a35b3718cb5376cd446f7a42ea37a2f51633d32",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527622448,
            "hunks": 0,
            "message": "Merge pull request #520 from coheigea/group_cmd Capitalise JAAS GroupCreateCommand description",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "520": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: command",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 520",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0ebb38932180570968f7ee6d2a6502b4192d8118",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526621318,
            "hunks": 6,
            "message": "[KARAF-5690] Add module read from java.xml to java.logging",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index 36c0ca6089..2ee57d9744 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -275,2 +275,3 @@ run() {",
                "                 ${KARAF_EXEC} \"${JAVA}\" ${JAVA_OPTS} \\",
                "+                    --add-reads=java.xml=java.logging \\",
                "                     --add-exports=java.base/org.apache.karaf.specs.locator=java.xml,java.xml.ws,ALL-UNNAMED \\",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "index d87b929535..f62f21f82f 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "@@ -406,2 +406,3 @@ if \"%KARAF_PROFILER%\" == \"\" goto :RUN",
                "             \"%JAVA%\" %JAVA_OPTS% %OPTS% ^",
                "+                --add-reads=java.xml=java.logging ^",
                "                 --add-exports=java.base/org.apache.karaf.specs.locator=java.xml,java.xml.ws,ALL-UNNAMED ^",
                "diff --git a/create-tracker.script b/create-tracker.script",
                "new file mode 100644",
                "index 0000000000..8c04fff48f",
                "--- /dev/null",
                "+++ b/create-tracker.script",
                "@@ -0,0 +1,45 @@",
                "+create-tracker = {",
                "+\ttrackingContext = $1",
                "+\ttrackedClass = $2",
                "+\tserviceAdded = $3",
                "+\tserviceRemoved = $4",
                "+\tshellClassLoader = (($.session class) getClassLoader)",
                "+\tarrayClass = ($shellClassLoader loadClass java.lang.reflect.Array)",
                "+\thandler = {",
                "+\t\tproxy = $1",
                "+\t\tmethod = $2",
                "+\t\targuments = $3",
                "+\t\tname = ($method name)",
                "+\t\t# echo \"Invoking $name\"",
                "+\t\tif { $name equals \"addingService\" } \\",
                "+\t\tthen {",
                "+\t\t\tref = ($arrayClass get $arguments 0)",
                "+\t\t\tsvc = ($.context getService $ref)",
                "+\t\t\t$serviceAdded execute $.commandSession [ $svc ]",
                "+\t\t\t$svc",
                "+\t\t} elif { $name equals \"removedService\" } \\",
                "+\t\tthen {",
                "+\t\t\tref = ($arrayClass get $arguments 0)",
                "+\t\t\tsvc = ($arrayClass get $arguments 1)",
                "+\t\t\t$serviceRemoved execute $.commandSession [ $svc ]",
                "+\t\t\t$.context ungetService $ref",
                "+\t\t}",
                "+\t}",
                "+\t# create handler",
                "+\tcustomizerClass = ($shellClassLoader loadClass org.osgi.util.tracker.ServiceTrackerCustomizer)",
                "+\tarray = ([ $customizerClass ] toArray ($arrayClass newInstance \"java.lang.Class\" 1))",
                "+\tproxyClass = ($shellClassLoader loadClass java.lang.reflect.Proxy)",
                "+\tcustomizer = ($proxyClass newProxyInstance $shellClassLoader $array $handler)",
                "+\t# create tracker",
                "+\ttrackerClass = ($shellClassLoader loadClass org.osgi.util.tracker.ServiceTracker)",
                "+\tconstructor = ($trackerClass constructor org.osgi.framework.BundleContext java.lang.String org.osgi.util.tracker.ServiceTrackerCustomizer)",
                "+\tif { \"java.lang.Class\" equals ($trackedClass class) } \\",
                "+\tthen {",
                "+\t\ttrackedClass = ($trackedClass name)",
                "+\t}",
                "+\ttracker = ($constructor newInstance $trackingContext $trackedClass $customizer)",
                "+\t$tracker",
                "+}",
                "+",
                "+tracker = (create-tracker $.context \"org.osgi.service.cm.ManagedService\" { s = (($1 class) toString); echo \"service-added $s\" } { s = (($1 class) toString); echo \"service-removed $s\" })",
                "+$tracker open true",
                "diff --git a/pom.xml b/pom.xml",
                "index 88684c420f..0043a6cdd3 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -196,4 +196,4 @@",
                "         <felix.framework.security.version>2.6.0</felix.framework.security.version>",
                "-        <felix.gogo.runtime.version>1.0.12</felix.gogo.runtime.version>",
                "-        <felix.gogo.jline.version>1.0.12</felix.gogo.jline.version>",
                "+        <felix.gogo.runtime.version>1.1.0-SNAPSHOT</felix.gogo.runtime.version>",
                "+        <felix.gogo.jline.version>1.1.0-SNAPSHOT</felix.gogo.jline.version>",
                "         <felix.httplite.version>0.1.6</felix.httplite.version>",
                "@@ -263,3 +263,3 @@",
                "         <jetty.version>9.4.6.v20170531</jetty.version>",
                "-        <jline.version>3.6.2</jline.version>",
                "+        <jline.version>3.7.0</jline.version>",
                "         <junit.version>4.12</junit.version>",
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/JLineTerminal.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/JLineTerminal.java",
                "index c38e8354af..df21c62a95 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/JLineTerminal.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/JLineTerminal.java",
                "@@ -316,2 +316,7 @@ public class JLineTerminal implements Terminal, org.jline.terminal.Terminal {",
                "+    @Override",
                "+    public void pause(boolean wait) throws InterruptedException {",
                "+        terminal.pause(wait);",
                "+    }",
                "+",
                "     @Override"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "create-tracker.script",
                "pom.xml",
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/JLineTerminal.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5690": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, feature, line, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5690",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a4746133708baff296727f828c0aa05936ec9cd2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529340612,
            "hunks": 11,
            "message": "[KARAF-5714] Upgrade to ServiceMix Spec Locator 2.10 and prepare individual spec update",
            "diff": [
                "diff --git a/assemblies/features/standard/src/main/feature/feature.xml b/assemblies/features/standard/src/main/feature/feature.xml",
                "index 6e963255d5..a68c962526 100644",
                "--- a/assemblies/features/standard/src/main/feature/feature.xml",
                "+++ b/assemblies/features/standard/src/main/feature/feature.xml",
                "@@ -849,3 +849,3 @@",
                "     <feature name=\"jetty\" version=\"${jetty.version}\">",
                "-        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/${servicemix.specs.version}</bundle>",
                "+        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.9.0</bundle>",
                "         <bundle dependency=\"true\" start-level=\"30\">mvn:${servlet.spec.groupId}/${servlet.spec.artifactId}/${servlet.spec.version}</bundle>",
                "@@ -892,3 +892,3 @@",
                "     <feature name=\"jetty\" version=\"8.1.14.v20131031\">",
                "-        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/${servicemix.specs.version}</bundle>",
                "+        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.9.0</bundle>",
                "         <bundle dependency=\"true\" start-level=\"30\">mvn:javax.servlet/javax.servlet-api/3.1.0</bundle>",
                "diff --git a/pom.xml b/pom.xml",
                "index 472041ebb8..b874e10443 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -287,3 +287,2 @@",
                "         <slf4j.version>1.7.12</slf4j.version>",
                "-        <servicemix.specs.version>2.9.0</servicemix.specs.version>",
                "@@ -1380,3 +1379,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.activation-api-1.1</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.9.0</version>",
                "             </dependency>",
                "@@ -1385,3 +1384,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.activator</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.9.0</version>",
                "             </dependency>",
                "@@ -1390,3 +1389,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.locator</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.10</version>",
                "             </dependency>",
                "@@ -1395,3 +1394,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.jaxp-api-1.4</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>1.4_1</version>",
                "             </dependency>",
                "@@ -1400,3 +1399,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.jaxb-api-2.2</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.9.0</version>",
                "             </dependency>",
                "@@ -1405,3 +1404,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.jaxws-api-2.2</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.9.0</version>",
                "             </dependency>",
                "@@ -1410,3 +1409,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.saaj-api-1.3</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>2.9.0</version>",
                "             </dependency>",
                "@@ -1415,3 +1414,3 @@",
                "                 <artifactId>org.apache.servicemix.specs.stax-api-1.2</artifactId>",
                "-                <version>${servicemix.specs.version}</version>",
                "+                <version>1.2_1</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "assemblies/features/standard/src/main/feature/feature.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5714": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5714",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "684e8b69bbdceb270254e9550b70725ba1a7eb18",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532344491,
            "hunks": 2,
            "message": "[KARAF-5847] Add felix.coordinator to prevent refreshes of felix.configadmin",
            "diff": [
                "diff --git a/assemblies/features/framework/src/main/feature/feature.xml b/assemblies/features/framework/src/main/feature/feature.xml",
                "index 134285e3ee..6df62834b2 100644",
                "--- a/assemblies/features/framework/src/main/feature/feature.xml",
                "+++ b/assemblies/features/framework/src/main/feature/feature.xml",
                "@@ -33,2 +33,3 @@",
                "         <!-- config admin -->",
                "+        <bundle start-level=\"9\">mvn:org.apache.felix/org.apache.felix.coordinator/${felix.coordinator.version}</bundle>",
                "         <bundle start-level=\"10\">mvn:org.apache.felix/org.apache.felix.configadmin/${felix.configadmin.version}</bundle>",
                "@@ -52,2 +53,3 @@",
                "         <!-- config admin -->",
                "+        <bundle start-level=\"9\">mvn:org.apache.felix/org.apache.felix.coordinator/${felix.coordinator.version}</bundle>",
                "         <bundle start-level=\"10\">mvn:org.apache.felix/org.apache.felix.configadmin/${felix.configadmin.version}</bundle>"
            ],
            "changed_files": [
                "assemblies/features/framework/src/main/feature/feature.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5847": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5847",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be8f9e3ec2ef60b0e428c7924169e82d52bd8eab",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528638306,
            "hunks": 0,
            "message": "Merge pull request #523 from coheigea/plugins Updating some maven plugin versions",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "523": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, plugin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 523",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "767a550fb92a8bd94e8f8338debcd3c160731958",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530741809,
            "hunks": 0,
            "message": "Merge pull request #534 from coheigea/update-plugins Update surefire + apache parent versions",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "534": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, plugin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 534",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8054642d4121f365c534a2767228519e315a1b03",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531235334,
            "hunks": 4,
            "message": "[KARAF-5809] fallback for 'simple' host.key if the KeyPairProvider encounters a non-valid PEM it tries an ObjectInputStream as a fallback (the old 'simple' format). If that succeeds, it rewrites the keypair into PEM format",
            "diff": [
                "diff --git a/shell/ssh/src/main/java/org/apache/karaf/shell/ssh/keygenerator/OpenSSHKeyPairProvider.java b/shell/ssh/src/main/java/org/apache/karaf/shell/ssh/keygenerator/OpenSSHKeyPairProvider.java",
                "index 78a458d6dc..0e6265bfb5 100644",
                "--- a/shell/ssh/src/main/java/org/apache/karaf/shell/ssh/keygenerator/OpenSSHKeyPairProvider.java",
                "+++ b/shell/ssh/src/main/java/org/apache/karaf/shell/ssh/keygenerator/OpenSSHKeyPairProvider.java",
                "@@ -25,4 +25,6 @@ import java.io.FileInputStream;",
                " import java.io.IOException;",
                "+import java.io.ObjectInputStream;",
                " import java.security.GeneralSecurityException;",
                " import java.security.KeyPair;",
                "+import java.security.spec.InvalidKeySpecException;",
                "@@ -60,2 +62,11 @@ public class OpenSSHKeyPairProvider extends AbstractKeyPairProvider {",
                "         } catch (Exception e) {",
                "+            LOGGER.warn(\"Failed to parse keypair in {}. Attempting to parse it as a legacy 'simple' key\", keyFile);",
                "+            try {",
                "+                KeyPair kp = convertLegacyKey(keyFile);",
                "+                LOGGER.info(\"Successfully loaded legacy simple key. Converted to PEM format\");",
                "+                cachedKey = kp;",
                "+                return singleton(kp);",
                "+            } catch (Exception nested) {",
                "+                LOGGER.warn(keyFile+\" is not a 'simple' key either\",nested);",
                "+            }",
                "             throw new RuntimeException(e);",
                "@@ -69,3 +80,16 @@ public class OpenSSHKeyPairProvider extends AbstractKeyPairProvider {",
                "     }",
                "-    ",
                "+",
                "+",
                "+    private KeyPair convertLegacyKey(File keyFile) throws GeneralSecurityException, IOException {",
                "+        KeyPair keypair = null;",
                "+        try (ObjectInputStream r = new ObjectInputStream(new FileInputStream(keyFile))) {",
                "+            keypair = (KeyPair)r.readObject();",
                "+        }",
                "+        catch (ClassNotFoundException e) {",
                "+            throw new InvalidKeySpecException(\"Missing classes: \" + e.getMessage(), e);",
                "+        }",
                "+        new PemWriter(keyFile).writeKeyPair(algorithm, keypair);",
                "+        return keypair;",
                "+    }",
                "+",
                "     private void createServerKey() {"
            ],
            "changed_files": [
                "shell/ssh/src/main/java/org/apache/karaf/shell/ssh/keygenerator/OpenSSHKeyPairProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5809": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5809",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2067caa57ea6aee220ff23e5fd139faf00e1b247",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526290543,
            "hunks": 2,
            "message": "[KARAF-5753]",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index 36c0ca6089..cb16df9a6a 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -20,3 +20,3 @@ realpath() {",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z $READLINK_EXISTS ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "@@ -95,3 +95,8 @@ checkRootInstance() {",
                "               MAIN=org.apache.karaf.main.Main",
                "-              PID_COMMAND=$(ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d)",
                "+              DIST_OS=`uname -s | tr [:upper:] [:lower:] | tr -d [:blank:]`",
                "+",
                "+              case \"$DIST_OS\" in",
                "+                'hp-ux')PID_COMMAND=$(UNIX95= ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d);;",
                "+                *)PID_COMMAND=$(ps -p \"${ROOT_INSTANCE_PID}\" -o args | sed 1d);;",
                "+              esac",
                "               if [ \"${PID_COMMAND#*$MAIN}\" != \"$PID_COMMAND\" ]; then"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5753": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5753",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "64866059ca4f5357bbdecde3aff2bc5053301b52",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528708242,
            "hunks": 3,
            "message": "Revert \"[KARAF-5776] Upgrade to Aries Blueprint 1.10.0, Blueprint CM 1.3.0, Blueprint Web 1.1.1\" This reverts commit 58fef9d0468ec20245b9422627cfe15ffa8f6608.",
            "diff": [
                "diff --git a/assemblies/features/standard/src/main/feature/feature.xml b/assemblies/features/standard/src/main/feature/feature.xml",
                "index 63204637cf..6e963255d5 100644",
                "--- a/assemblies/features/standard/src/main/feature/feature.xml",
                "+++ b/assemblies/features/standard/src/main/feature/feature.xml",
                "@@ -1431,3 +1431,3 @@",
                "         <feature>aries-blueprint</feature>",
                "-        <bundle>mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.webosgi/${aries.blueprint.webosgi.version}</bundle>",
                "+        <bundle>mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.webosgi/${aries.blueprint.web.version}</bundle>",
                "     </feature>",
                "diff --git a/pom.xml b/pom.xml",
                "index 0569ebfbea..1d9b10abd9 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -218,7 +218,6 @@",
                "         <aries.blueprint.api.version>1.0.1</aries.blueprint.api.version>",
                "-        <aries.blueprint.core.version>1.10.0</aries.blueprint.core.version>",
                "+        <aries.blueprint.core.version>1.9.0</aries.blueprint.core.version>",
                "         <aries.blueprint.core.compatibility.version>1.0.0</aries.blueprint.core.compatibility.version>",
                "-        <aries.blueprint.cm.version>1.3.0</aries.blueprint.cm.version>",
                "-        <aries.blueprint.web.version>1.1.1</aries.blueprint.web.version>",
                "-        <aries.blueprint.webosgi.version>1.0.1</aries.blueprint.webosgi.version>",
                "+        <aries.blueprint.cm.version>1.2.0</aries.blueprint.cm.version>",
                "+        <aries.blueprint.web.version>1.0.1</aries.blueprint.web.version>",
                "         <aries.blueprint.spring.version>0.6.0</aries.blueprint.spring.version>"
            ],
            "changed_files": [
                "assemblies/features/standard/src/main/feature/feature.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5776": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5776",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "932d864c88c00e048befaadeb7fdf19cab6330b2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531682591,
            "hunks": 1,
            "message": "[KARAF-5836] Upgrade to maven-war-plugin 3.2.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c1ba21f339..ba2f378003 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1962,3 +1962,3 @@",
                "                     <artifactId>maven-war-plugin</artifactId>",
                "-                    <version>3.2.1</version>",
                "+                    <version>3.2.2</version>",
                "                 </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5836": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5836",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ace2d61f675e57e68130ca325c491e1f666906a8",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525690897,
            "hunks": 1,
            "message": "[KARAF-5739] Use plugin management version in manual for maven-bundle-plugin",
            "diff": [
                "diff --git a/manual/pom.xml b/manual/pom.xml",
                "index 43036f5972..1c7e1feab0 100644",
                "--- a/manual/pom.xml",
                "+++ b/manual/pom.xml",
                "@@ -243,3 +243,2 @@",
                " \t\t\t\t<artifactId>maven-bundle-plugin</artifactId>",
                "-\t\t\t\t<version>3.3.0</version>",
                " \t\t\t\t<configuration>"
            ],
            "changed_files": [
                "manual/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5739": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, version, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5739",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "914c322d6611dbdc3834072c8ddd3a1754feef31",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527257652,
            "hunks": 6,
            "message": "[KARAF-5737] Upgrade to Aries JPA 2.7.0",
            "diff": [
                "diff --git a/assemblies/features/enterprise-legacy/src/main/feature/feature.xml b/assemblies/features/enterprise-legacy/src/main/feature/feature.xml",
                "index 56cd7aee22..56e6312ad0 100644",
                "--- a/assemblies/features/enterprise-legacy/src/main/feature/feature.xml",
                "+++ b/assemblies/features/enterprise-legacy/src/main/feature/feature.xml",
                "@@ -39,4 +39,4 @@",
                "         <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.aries/org.apache.aries.util/${aries.util.version}</bundle>",
                "-        <bundle start-level=\"30\">mvn:org.apache.aries.jpa/org.apache.aries.jpa.api/${aries.jpa.api.version}</bundle>",
                "-        <bundle start-level=\"30\">mvn:org.apache.aries.jpa/org.apache.aries.jpa.container/${aries.jpa.container.version}</bundle>",
                "+        <bundle start-level=\"30\">mvn:org.apache.aries.jpa/org.apache.aries.jpa.api/${aries.jpa.version}</bundle>",
                "+        <bundle start-level=\"30\">mvn:org.apache.aries.jpa/org.apache.aries.jpa.container/${aries.jpa.version}</bundle>",
                "         <bundle start-level=\"30\">mvn:org.apache.aries.jpa/org.apache.aries.jpa.container.context/${aries.jpa.container.context.version}</bundle>",
                "diff --git a/assemblies/features/enterprise/src/main/feature/feature.xml b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "index 20120d3c29..050142f780 100644",
                "--- a/assemblies/features/enterprise/src/main/feature/feature.xml",
                "+++ b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "@@ -195,2 +195,3 @@",
                "         <details>Eclipselink persistence engine.</details>",
                "+        <feature version=\"[2,3)\">jpa</feature>",
                "         <bundle dependency=\"true\">mvn:org.eclipse.persistence/javax.persistence/2.2.0</bundle>",
                "diff --git a/pom.xml b/pom.xml",
                "index 53bf3fd0b7..c577b80750 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -229,6 +229,4 @@",
                "         <aries.jmx.whiteboard.version>1.2.0</aries.jmx.whiteboard.version>",
                "-        <aries.jpa.version>2.6.1</aries.jpa.version>",
                "+        <aries.jpa.version>2.7.0</aries.jpa.version>",
                "         <aries.jpa.blueprint.aries.version>1.0.4</aries.jpa.blueprint.aries.version>",
                "-        <aries.jpa.api.version>1.0.2</aries.jpa.api.version>",
                "-        <aries.jpa.container.version>1.0.4</aries.jpa.container.version>",
                "         <aries.jpa.container.context.version>1.0.4</aries.jpa.container.context.version>",
                "@@ -1609,3 +1607,3 @@",
                "                 <artifactId>org.apache.aries.jpa.api</artifactId>",
                "-                <version>${aries.jpa.api.version}</version>",
                "+                <version>${aries.jpa.version}</version>",
                "             </dependency>",
                "@@ -1619,3 +1617,3 @@",
                "                 <artifactId>org.apache.aries.jpa.container</artifactId>",
                "-                <version>${aries.jpa.container.version}</version>",
                "+                <version>${aries.jpa.version}</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "assemblies/features/enterprise-legacy/src/main/feature/feature.xml",
                "assemblies/features/enterprise/src/main/feature/feature.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5737": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5737",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9e550d8a654a08eae6ae487578bec8d545b1f6db",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523549541,
            "hunks": 1,
            "message": "[KARAF-5698] Upgrade to Felix Gogo Runtime / JLine 1.0.12",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 4f17cbdacb..41448b9a30 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -196,4 +196,4 @@",
                "         <felix.framework.security.version>2.6.0</felix.framework.security.version>",
                "-        <felix.gogo.runtime.version>1.0.10</felix.gogo.runtime.version>",
                "-        <felix.gogo.jline.version>1.0.10</felix.gogo.jline.version>",
                "+        <felix.gogo.runtime.version>1.0.12</felix.gogo.runtime.version>",
                "+        <felix.gogo.jline.version>1.0.12</felix.gogo.jline.version>",
                "         <felix.httplite.version>0.1.6</felix.httplite.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5698": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: gogo, line",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5698",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d2b5978bd056e49b2461bd050a212e28672aac53",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523577817,
            "hunks": 1,
            "message": "[KARAF-5694]don't mess with the wrap URI (cherry picked from commit 9786364d514f15e57d6723d2a5205fbb9f8790a3)",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "index c9ca654479..fb5e4dd8f6 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java",
                "@@ -52,4 +52,4 @@ public final class DownloadManagerHelper {",
                "         }",
                "-        if (strippedUrl.contains(\";\")) {",
                "-            strippedUrl = strippedUrl.substring(0, strippedUrl.indexOf(';'));",
                "+        if (strippedUrl.contains(\";start-level=\")) {",
                "+            strippedUrl = strippedUrl.substring(0, strippedUrl.indexOf(\";start-level=\"));",
                "         }"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/download/impl/DownloadManagerHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5694": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5694",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5991086df4b63c335fc34632ebd2d01b4626800f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525688031,
            "hunks": 1,
            "message": "Revert \"[KARAF-5729] Karaf won't start on Solaris 11 and AIX 7.2\" This reverts commit e6cf8b5c23704ab2d9a0cbb761bc4c648e38aa45.",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index be5f240730..58c3ce3693 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -210,3 +210,3 @@ detectJVM() {",
                " checkJvmVersion() {",
                "-    VERSION=$(\"${JAVA}\" -version 2>&1 | grep -i version | sed 's/.*version \".*\\.\\(.*\\)\\..*\"/\\1/; 1q')",
                "+    VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g ; s/\\..*//g; s/-.*//g;')",
                "     if [ \"${VERSION}\" -lt \"8\" ]; then"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5729": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5729",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "58fef9d0468ec20245b9422627cfe15ffa8f6608",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528695947,
            "hunks": 3,
            "message": "[KARAF-5776] Upgrade to Aries Blueprint 1.10.0, Blueprint CM 1.3.0, Blueprint Web 1.1.1",
            "diff": [
                "diff --git a/assemblies/features/standard/src/main/feature/feature.xml b/assemblies/features/standard/src/main/feature/feature.xml",
                "index 6e963255d5..63204637cf 100644",
                "--- a/assemblies/features/standard/src/main/feature/feature.xml",
                "+++ b/assemblies/features/standard/src/main/feature/feature.xml",
                "@@ -1431,3 +1431,3 @@",
                "         <feature>aries-blueprint</feature>",
                "-        <bundle>mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.webosgi/${aries.blueprint.web.version}</bundle>",
                "+        <bundle>mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.webosgi/${aries.blueprint.webosgi.version}</bundle>",
                "     </feature>",
                "diff --git a/pom.xml b/pom.xml",
                "index 1d9b10abd9..0569ebfbea 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -218,6 +218,7 @@",
                "         <aries.blueprint.api.version>1.0.1</aries.blueprint.api.version>",
                "-        <aries.blueprint.core.version>1.9.0</aries.blueprint.core.version>",
                "+        <aries.blueprint.core.version>1.10.0</aries.blueprint.core.version>",
                "         <aries.blueprint.core.compatibility.version>1.0.0</aries.blueprint.core.compatibility.version>",
                "-        <aries.blueprint.cm.version>1.2.0</aries.blueprint.cm.version>",
                "-        <aries.blueprint.web.version>1.0.1</aries.blueprint.web.version>",
                "+        <aries.blueprint.cm.version>1.3.0</aries.blueprint.cm.version>",
                "+        <aries.blueprint.web.version>1.1.1</aries.blueprint.web.version>",
                "+        <aries.blueprint.webosgi.version>1.0.1</aries.blueprint.webosgi.version>",
                "         <aries.blueprint.spring.version>0.6.0</aries.blueprint.spring.version>"
            ],
            "changed_files": [
                "assemblies/features/standard/src/main/feature/feature.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5776": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5776",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4d7906be33513505e1ce276f56907875d15c29b1",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531804061,
            "hunks": 1,
            "message": "[KARAF-5831] Upgrade to maven-enforcer-plugin 3.0.0-M2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 98321c7485..551f637eed 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1819,3 +1819,3 @@",
                "                     <artifactId>maven-enforcer-plugin</artifactId>",
                "-                    <version>3.0.0-M1</version>",
                "+                    <version>3.0.0-M2</version>",
                "                 </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5831": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5831",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0237ca8a31406ebeb9d69a44c763b79f92db54ea",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531728284,
            "hunks": 2,
            "message": "[KARAF-5835] Upgrade to maven-surefire-plugin 2.22.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ba2f378003..9f51f37afc 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1880,3 +1880,3 @@",
                "                     <artifactId>maven-surefire-plugin</artifactId>",
                "-                    <version>2.21.0</version>",
                "+                    <version>2.22.0</version>",
                "                     <configuration>",
                "@@ -2157,3 +2157,3 @@",
                "                 <artifactId>maven-surefire-report-plugin</artifactId>",
                "-                <version>2.18.1</version>",
                "+                <version>2.22.0</version>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5835": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5835",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fe0c4aa432381f5912ab3a33711f1329cb15918d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531803974,
            "hunks": 1,
            "message": "[KARAF-5832] Upgrade to maven-jar-plugin 3.1.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 98321c7485..34459ee6fa 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1834,3 +1834,3 @@",
                "                     <artifactId>maven-jar-plugin</artifactId>",
                "-                    <version>3.0.2</version>",
                "+                    <version>3.1.0</version>",
                "                 </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5832": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5832",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7ade54f70ba5e389970b5d014427eff6a0f60fa",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533100955,
            "hunks": 1,
            "message": "[KARAF-5829] Fix xerces bundle version",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 4a93fa1f3f..deaed76a09 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -305,3 +305,3 @@",
                "         <xbean.version>4.9</xbean.version>",
                "-        <xerces.version>2.12.0</xerces.version>",
                "+        <xerces.version>2.12.0_1</xerces.version>",
                "         <xalan.bundle.version>2.7.2_3</xalan.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5829": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5829",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b34d624a6bc73c2d2e605ff7bb60828f91de046b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527141566,
            "hunks": 1,
            "message": "[KARAF-5738] Upgrade to maven-resources-plugin 3.1.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index b00eb7b773..a0f6b66c69 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1891,3 +1891,3 @@",
                "                     <artifactId>maven-resources-plugin</artifactId>",
                "-                    <version>3.0.2</version>",
                "+                    <version>3.1.0</version>",
                "                 </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5738": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5738",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "90f7dbaeea58a78b68bd994a50f7382fc6adbf4e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531919090,
            "hunks": 1,
            "message": "[KARAF-5827] Upgrade to jline 3.9.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..b32f30f9fb 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -262,3 +262,3 @@",
                "         <jetty.version>9.4.10.v20180503</jetty.version>",
                "-        <jline.version>3.7.1</jline.version>",
                "+        <jline.version>3.9.0</jline.version>",
                "         <junit.version>4.12</junit.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5827": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: line",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5827",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7d53d9a8836ce4408de2a8ca7057b47b1b1ef2d7",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523595371,
            "hunks": 2,
            "message": "[KARAF-5700]handle \\* scope specifically for ACL match",
            "diff": [
                "diff --git a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/secured/SecuredSessionFactoryImpl.java b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/secured/SecuredSessionFactoryImpl.java",
                "index 3f7f8f056d..9b658266c2 100644",
                "--- a/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/secured/SecuredSessionFactoryImpl.java",
                "+++ b/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/secured/SecuredSessionFactoryImpl.java",
                "@@ -335,3 +335,6 @@ public class SecuredSessionFactoryImpl extends SessionFactoryImpl implements Con",
                "         synchronized (scopes) {",
                "-            scopes.put(scope, config.getProperties());",
                "+            if (scope.endsWith(\"*\")) {",
                "+                scope = \"star\";",
                "+            }",
                "+            scopes.put(scope, config.getProperties());                ",
                "         }",
                "@@ -347,2 +350,5 @@ public class SecuredSessionFactoryImpl extends SessionFactoryImpl implements Con",
                "         synchronized (scopes) {",
                "+            if (scope.equals(\"*\")) {",
                "+                scope = \"star\";",
                "+            }",
                "             return scopes.get(scope);"
            ],
            "changed_files": [
                "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/secured/SecuredSessionFactoryImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5700": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, secure, console",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5700",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0c3bdf45797239643d54110e15e1d511c32e730a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530604179,
            "hunks": 1,
            "message": "[KARAF-5800] Upgrade to Felix Gogo 1.1.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index b874e10443..2640fa354e 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -196,4 +196,4 @@",
                "         <felix.framework.security.version>2.6.0</felix.framework.security.version>",
                "-        <felix.gogo.runtime.version>1.1.0-SNAPSHOT</felix.gogo.runtime.version>",
                "-        <felix.gogo.jline.version>1.1.0-SNAPSHOT</felix.gogo.jline.version>",
                "+        <felix.gogo.runtime.version>1.1.0</felix.gogo.runtime.version>",
                "+        <felix.gogo.jline.version>1.1.0</felix.gogo.jline.version>",
                "         <felix.httplite.version>0.1.6</felix.httplite.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5800": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: gogo",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5800",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f30ead49394cc473c1d14780f51b1d54e235c86d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529591940,
            "hunks": 38,
            "message": "[KARAF-5190] Enhance realpath() function to better manage awk on Solaris",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/client b/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "index c4d1d429be..dc48f77d90 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index bbdd495732..f9b7050d2a 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -220,13 +220,13 @@ checkJvmVersion() {",
                "     # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated ",
                "+    AWK=awk",
                "     if ${solaris}; then",
                "         if [ -x /usr/xpg4/bin/awk ]; then",
                "-            VERSION=$(\"${JAVA}\" -version 2>&1 | /usr/xpg4/bin/awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+            AWK=/usr/xpg4/bin/awk",
                "         elif [ -x /usr/bin/nawk ]; then",
                "-            VERSION=$(\"${JAVA}\" -version 2>&1 | /usr/bin/nawk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "-        else ",
                "-            VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+            AWK=/usr/bin/nawk",
                "         fi",
                "-    else    ",
                "-        VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "     fi",
                "+    ",
                "+    VERSION=$(\"${JAVA}\" -version 2>&1 | ${AWK} -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g; s/\\..*//g; s/-.*//g;')",
                "+    ",
                "     # java must be at least version 8 ",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/instance b/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "index 89e9ef3323..733ef7461b 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index c144365658..c79a40b0a9 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -19,2 +19,12 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "@@ -23,3 +33,3 @@ realpath() {",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/shell b/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "index f5d473a725..3f833f88d8 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/start b/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "index b1b384481c..047ed1bec1 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/status b/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "index 53e10a7268..ab05b60519 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/stop b/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "index 60b498df49..014e71aadc 100755",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/stop",
                "@@ -19,7 +19,17 @@",
                " realpath() {",
                "+  # Use in priority xpg4 awk or nawk on SunOS as standard awk is outdated",
                "+  AWK=awk",
                "+  if ${solaris}; then",
                "+      if [ -x /usr/xpg4/bin/awk ]; then",
                "+          AWK=/usr/xpg4/bin/awk",
                "+      elif [ -x /usr/bin/nawk ]; then",
                "+          AWK=/usr/bin/nawk",
                "+      fi",
                "+  fi",
                "+",
                "   READLINK_EXISTS=$(command -v readlink &> /dev/null)",
                "-  if [ -z \"${READLINK_EXISTS}\" ]; then",
                "+  if [ -z \"$READLINK_EXISTS\" ]; then",
                "     OURPWD=${PWD}",
                "     cd \"$(dirname \"${1}\")\" || exit 2",
                "-    LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+    LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     while [ \"${LINK}\" ]; do",
                "@@ -27,3 +37,3 @@ realpath() {",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2",
                "-        LINK=$(ls -l \"$(basename \"${1}\")\" | awk -F\"-> \" '{print $2}')",
                "+        LINK=$(ls -l \"$(basename \"${1}\")\" | ${AWK} -F\"-> \" '{print $2}')",
                "     done",
                "@@ -37,3 +47,3 @@ realpath() {",
                "     while [ \"${LINK}\" ]; do",
                "-\t    echo \"link: ${LINK}\" >&2",
                "+            echo \"link: ${LINK}\" >&2",
                "         cd \"$(dirname \"${LINK}\")\" || exit 2"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/client",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/instance",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/shell",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/start",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/status",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/stop"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5190": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: shell, feature, stop",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5190",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e6cf8b5c23704ab2d9a0cbb761bc4c648e38aa45",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524829302,
            "hunks": 1,
            "message": "[KARAF-5729] Karaf won't start on Solaris 11 and AIX 7.2",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index 58c3ce3693..be5f240730 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -210,3 +210,3 @@ detectJVM() {",
                " checkJvmVersion() {",
                "-    VERSION=$(\"${JAVA}\" -version 2>&1 | awk -F '\"' '/version/ {print $2}' | sed -e 's/_.*//g; s/^1\\.//g ; s/\\..*//g; s/-.*//g;')",
                "+    VERSION=$(\"${JAVA}\" -version 2>&1 | grep -i version | sed 's/.*version \".*\\.\\(.*\\)\\..*\"/\\1/; 1q')",
                "     if [ \"${VERSION}\" -lt \"8\" ]; then"
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5729": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5729",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "68f7c5c74b9306df85ae1d3a3497525c4bfd7354",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525430865,
            "hunks": 21,
            "message": "[KARAF-5721] Upgrade to PAX JMS 1.0.1 [KARAF-5723] Upgrade to PAX JDBC 1.3.0 [KARAF-5771] Upgrade to Pax Transx 0.3.0",
            "diff": [
                "diff --git a/assemblies/features/enterprise/src/main/feature/feature.xml b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "index b12a5e1ae7..20120d3c29 100644",
                "--- a/assemblies/features/enterprise/src/main/feature/feature.xml",
                "+++ b/assemblies/features/enterprise/src/main/feature/feature.xml",
                "@@ -232,2 +232,4 @@",
                "         <feature>pax-jms-pool</feature>",
                "+        <feature>pax-jms-config</feature>",
                "+        <feature>pax-jms-pool-transx</feature>",
                "         <feature>transaction</feature>",
                "diff --git a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "index 2e6ea47422..9dc9b7dd49 100644",
                "--- a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "+++ b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "@@ -35,2 +35,3 @@ public class KarafTestWatcher extends TestWatcher {",
                "         LOG.error(\">>>>>> FAILED: {} , cause: {}\", description.getDisplayName(), e.getMessage());",
                "+        e.printStackTrace();",
                "     }",
                "diff --git a/jms/src/main/java/org/apache/karaf/jms/JmsMBean.java b/jms/src/main/java/org/apache/karaf/jms/JmsMBean.java",
                "index d62a9baf89..ff5b2d73d7 100644",
                "--- a/jms/src/main/java/org/apache/karaf/jms/JmsMBean.java",
                "+++ b/jms/src/main/java/org/apache/karaf/jms/JmsMBean.java",
                "@@ -54,5 +54,6 @@ public interface JmsMBean {",
                "      * @param password The JMS connection factory authentication password.",
                "+     * @param pool The JMS connection factory pooling to use.",
                "      * @throws MBeanException If the MBean fails.",
                "      */",
                "-    void create(String name, String type, String url, String username, String password) throws MBeanException;",
                "+    void create(String name, String type, String url, String username, String password, String pool) throws MBeanException;",
                "diff --git a/jms/src/main/java/org/apache/karaf/jms/JmsService.java b/jms/src/main/java/org/apache/karaf/jms/JmsService.java",
                "index 0902e33d45..1a4237c3d0 100644",
                "--- a/jms/src/main/java/org/apache/karaf/jms/JmsService.java",
                "+++ b/jms/src/main/java/org/apache/karaf/jms/JmsService.java",
                "@@ -60,5 +60,6 @@ public interface JmsService {",
                "      * @param password The password to use.",
                "+     * @param pool Kind of pool to use.",
                "      * @throws Exception If the service fails.",
                "      */",
                "-    void create(String name, String type, String url, String username, String password) throws Exception;",
                "+    void create(String name, String type, String url, String username, String password, String pool) throws Exception;",
                "diff --git a/jms/src/main/java/org/apache/karaf/jms/command/CreateCommand.java b/jms/src/main/java/org/apache/karaf/jms/command/CreateCommand.java",
                "index 64ccf02f5d..015be0d1d9 100644",
                "--- a/jms/src/main/java/org/apache/karaf/jms/command/CreateCommand.java",
                "+++ b/jms/src/main/java/org/apache/karaf/jms/command/CreateCommand.java",
                "@@ -34,3 +34,3 @@ public class CreateCommand extends JmsCommandSupport {",
                "     @Completion(value = StringsCompleter.class, values = { \"activemq\", \"artemis\", \"webspheremq\" })",
                "-    String type = \"ActiveMQ\";",
                "+    String type = \"activemq\";",
                "@@ -39,2 +39,6 @@ public class CreateCommand extends JmsCommandSupport {",
                "+    @Option(name = \"--pool\", description = \"The pool mechanism to use for this connection factory\", required = false, multiValued = false)",
                "+    @Completion(value = StringsCompleter.class, values = { \"pooledjms\", \"narayama\", \"transx\" })",
                "+    String pool = \"pooledjms\";",
                "+",
                "     @Option(name = \"-u\", aliases = { \"--username\" }, description = \"Username to connect to the JMS broker\", required = false, multiValued = false)",
                "@@ -47,3 +51,3 @@ public class CreateCommand extends JmsCommandSupport {",
                "     public Object execute() throws Exception {",
                "-        getJmsService().create(name, type, url, username, password);",
                "+        getJmsService().create(name, type, url, username, password, pool);",
                "         return null;",
                "diff --git a/jms/src/main/java/org/apache/karaf/jms/internal/JmsMBeanImpl.java b/jms/src/main/java/org/apache/karaf/jms/internal/JmsMBeanImpl.java",
                "index e3b7801eb0..5c6a7947d4 100644",
                "--- a/jms/src/main/java/org/apache/karaf/jms/internal/JmsMBeanImpl.java",
                "+++ b/jms/src/main/java/org/apache/karaf/jms/internal/JmsMBeanImpl.java",
                "@@ -53,5 +53,5 @@ public class JmsMBeanImpl implements JmsMBean {",
                "     @Override",
                "-    public void create(String name, String type, String url, String username, String password) throws MBeanException {",
                "+    public void create(String name, String type, String url, String username, String password, String pool) throws MBeanException {",
                "         try {",
                "-            jmsService.create(name, type, url, username, password);",
                "+            jmsService.create(name, type, url, username, password, pool);",
                "         } catch (Throwable t) {",
                "diff --git a/jms/src/main/java/org/apache/karaf/jms/internal/JmsServiceImpl.java b/jms/src/main/java/org/apache/karaf/jms/internal/JmsServiceImpl.java",
                "index 8dcbf94922..98b209141b 100644",
                "--- a/jms/src/main/java/org/apache/karaf/jms/internal/JmsServiceImpl.java",
                "+++ b/jms/src/main/java/org/apache/karaf/jms/internal/JmsServiceImpl.java",
                "@@ -53,3 +53,3 @@ public class JmsServiceImpl implements JmsService {",
                "     public void create(String name, String type, String url) throws Exception {",
                "-        create(name, type, url, null, null);",
                "+        create(name, type, url, null, null, \"jmspooled\");",
                "     }",
                "@@ -57,3 +57,3 @@ public class JmsServiceImpl implements JmsService {",
                "     @Override",
                "-    public void create(String name, String type, String url, String username, String password) throws Exception {",
                "+    public void create(String name, String type, String url, String username, String password, String pool) throws Exception {",
                "         if (type == null) {",
                "@@ -73,2 +73,8 @@ public class JmsServiceImpl implements JmsService {",
                "         put(properties, ConnectionFactoryFactory.JMS_PASSWORD, password);",
                "+        if (pool.equals(\"narayana\")) {",
                "+            put(properties, \"pool\", \"narayana\");",
                "+        }",
                "+        if (pool.equals(\"transx\") || type.equalsIgnoreCase(\"activemq\")) {",
                "+            put(properties, \"pool\", \"transx\");",
                "+        }",
                "         Configuration config = configAdmin.createFactoryConfiguration(\"org.ops4j.connectionfactory\", null);",
                "diff --git a/manual/src/main/asciidoc/user-guide/jms.adoc b/manual/src/main/asciidoc/user-guide/jms.adoc",
                "index 174fa63d77..9ee93a7057 100644",
                "--- a/manual/src/main/asciidoc/user-guide/jms.adoc",
                "+++ b/manual/src/main/asciidoc/user-guide/jms.adoc",
                "@@ -77,2 +77,3 @@ ARGUMENTS",
                "                 The JMS connection factory name",
                "+                (required)",
                "@@ -80,7 +81,7 @@ OPTIONS",
                "         -t, --type",
                "-                The JMS connection factory type (ActiveMQ or WebsphereMQ)",
                "-                (defaults to ActiveMQ)",
                "-        -u, --username",
                "-                Username to connect to the JMS broker",
                "-                (defaults to karaf)",
                "+                The JMS connection factory type (ActiveMQ, Artemis or WebsphereMQ)",
                "+                (defaults to activemq)",
                "+        --pool",
                "+                The pool mechanism to use for this connection factory",
                "+                (defaults to pooledjms)",
                "         --help",
                "@@ -93,2 +94,6 @@ OPTIONS",
                "                 (defaults to karaf)",
                "+        -u, --username",
                "+                Username to connect to the JMS broker",
                "+                (defaults to karaf)",
                "+",
                "@@ -101,2 +106,4 @@ OPTIONS",
                " * the `-p` (`--password`) option is optional (karaf by default). In the case of the broker requires authentication, it's the password used.",
                "+* the `--pool` option is optional (`pooledjms` by default). It allows you to define the pooling framework you want to use: pooledjms, narayana, transx.",
                "+",
                "@@ -105,2 +112,3 @@ For instance, to create a JMS connection factory for a Apache ActiveMQ broker, y",
                " ----",
                "+karaf@root()> feature:install pax-jms-activemq",
                " karaf@root()> jms:create -t activemq --url tcp://localhost:61616 test",
                "@@ -108,2 +116,7 @@ karaf@root()> jms:create -t activemq --url tcp://localhost:61616 test",
                "+[NOTE]",
                "+====",
                "+When you use ActiveMQ, Karaf uses `transx` as connection factory pooling framework.",
                "+====",
                "+",
                " [NOTE]",
                "diff --git a/pom.xml b/pom.xml",
                "index f5ffbd870e..ba2be3067f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -283,5 +283,5 @@",
                "         <pax.tinybundle.version>3.0.0</pax.tinybundle.version>",
                "-        <pax.jdbc.version>1.2.0</pax.jdbc.version>",
                "-        <pax.jms.version>0.3.0</pax.jms.version>",
                "-        <pax.transx.version>0.2.0</pax.transx.version>",
                "+        <pax.jdbc.version>1.3.0</pax.jdbc.version>",
                "+        <pax.jms.version>1.0.1</pax.jms.version>",
                "+        <pax.transx.version>0.3.0</pax.transx.version>"
            ],
            "changed_files": [
                "assemblies/features/enterprise/src/main/feature/feature.xml",
                "itests/common/src/main/java/org/apache/karaf/itests/KarafTestWatcher.java",
                "jms/src/main/java/org/apache/karaf/jms/JmsMBean.java",
                "jms/src/main/java/org/apache/karaf/jms/JmsService.java",
                "jms/src/main/java/org/apache/karaf/jms/command/CreateCommand.java",
                "jms/src/main/java/org/apache/karaf/jms/internal/JmsMBeanImpl.java",
                "jms/src/main/java/org/apache/karaf/jms/internal/JmsServiceImpl.java",
                "manual/src/main/asciidoc/user-guide/jms.adoc",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5721": "",
                "KARAF-5723": "",
                "KARAF-5771": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command, feature, user",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5721, KARAF-5723, KARAF-5771",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3d4cb39f6ce8b9f80d1c8d5f6fd2c7ebbd725002",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526210225,
            "hunks": 0,
            "message": "Merge pull request #502 from xipki/master Extend the completion method of shell:source",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "502": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: shell",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 502",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8697588d6920d084a046478b260864d9905cfcff",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529265560,
            "hunks": 1,
            "message": "[KARAF-5720] Upgrade to JLine 3.7.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index b227cee682..472041ebb8 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -261,3 +261,3 @@",
                "         <jetty.version>9.4.10.v20180503</jetty.version>",
                "-        <jline.version>3.7.0</jline.version>",
                "+        <jline.version>3.7.1</jline.version>",
                "         <junit.version>4.12</junit.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5720": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: line",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5720",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2033568acecb22bf2cfd8c282ea535e5d571367f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525336759,
            "hunks": 0,
            "message": "Merge pull request #493 from jbonofre/KARAF-5713 [KARAF-5713] Upgrade to Maven 3.5.3",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5713": ""
            },
            "ghissue_refs": {
                "493": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5713",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 493",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cffa8250da16c9be9023ea5abeaddfc3bae4e746",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529731386,
            "hunks": 0,
            "message": "Merge pull request #533 from usu-fr/KARAF-5190 [KARAF-5190] Enhance realpath() function to better manage awk on Solaris",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5190": ""
            },
            "ghissue_refs": {
                "533": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5190",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 533",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e8a1a2a24860900deab27134001ab44002d5f8dd",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525352009,
            "hunks": 0,
            "message": "Merge pull request #495 from jbonofre/KARAF-5716 [KARAF-5716] Upgrade to awaitability 3.1.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5716": ""
            },
            "ghissue_refs": {
                "495": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5716",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 495",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1cf063fcf3891e93bfa2dd6d180da49903440649",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525065814,
            "hunks": 1,
            "message": "[KARAF-5710] Upgrade to Felix Resolver 1.16.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 447c5fa85c..fab585f034 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -212,3 +212,3 @@",
                "         <felix.scr.annotation.version>1.12.0</felix.scr.annotation.version>",
                "-        <felix.resolver.version>1.14.0</felix.resolver.version>",
                "+        <felix.resolver.version>1.16.0</felix.resolver.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5710": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a325fe9700fc9b86dbba3098471ec336b6e98faf"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5710",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "21c2a935cd1a6b5d762f2fb9b39e21b3eae91c00",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531369566,
            "hunks": 0,
            "message": "Merge pull request #543 from seeburger-ag/topic/KARAF-5809 [KARAF-5809] fallback for 'simple' host.key",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5809": ""
            },
            "ghissue_refs": {
                "543": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5809",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 543",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "78cfd9dd4ee8f10edf1348a2d05f56008a961069",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533192857,
            "hunks": 1,
            "message": "[KARAF-5829] Upgrade to Xerces 2.12.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 348ca78ed2..136e23380b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1008,4 +1008,4 @@",
                "             <dependency>",
                "-                <groupId>xerces</groupId>",
                "-                <artifactId>xercesImpl</artifactId>",
                "+                <groupId>org.apache.servicemix.bundles</groupId>",
                "+                <artifactId>org.apache.servicemix.bundles.xercesImpl</artifactId>",
                "                 <version>${xerces.version}</version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5829": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "022dd6240e2c98313108a2b920ce08fb94045b5b"
                ],
                [
                    "no-tag",
                    "480139a2fe44e704397b502fc38143edfcbb5656"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5829",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6a0e2e1fac3108f606c21bfb485c6fe1607adf73",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525357227,
            "hunks": 0,
            "message": "Merge pull request #496 from jbonofre/KARAF-5717 [KARAF-5717] Upgrade to easymock 3.6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5717": ""
            },
            "ghissue_refs": {
                "496": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5717",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 496",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "07f3b3d8be6fdd2ff32b1a4c9151a9540a70df92",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528294466,
            "hunks": 0,
            "message": "Merge pull request #518 from jbonofre/KARAF-5737 [KARAF-5737] Upgrade to Aries JPA 2.7.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5737": ""
            },
            "ghissue_refs": {
                "518": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5737",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 518",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bcd77244abe113e5e04f0d1e28de9b520ee55622",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532172480,
            "hunks": 0,
            "message": "Merge pull request #562 from jbonofre/KARAF-5838 [KARAF-5838] Upgrade to eclipselink 2.7.2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5838": ""
            },
            "ghissue_refs": {
                "562": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5838",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 562",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5d1db7bee88dafc40152a245c181acc8dbf521fb",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527254057,
            "hunks": 0,
            "message": "Merge pull request #505 from usu-fr/KARAF-5729 [KARAF-5729] Improve usage of awk on Solaris + delete blank space in \u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5729": ""
            },
            "ghissue_refs": {
                "505": "[KARAF-5768] Add AIX platform detection when installing karaf as a sy\u2026 #517"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5729",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 505",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3d93c01f299bca3b85a57f77177f34bcd243248a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528463030,
            "hunks": 0,
            "message": "Merge pull request #524 from jbonofre/KARAF-5779 [KARAF-5779] Upgrade to Spring 4.3.17.RELEASE and 5.0.6.RELEASE",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5779": ""
            },
            "ghissue_refs": {
                "524": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5779",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 524",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0edcbb92afa95160e049ca22e8a26adb004c39ad",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532971115,
            "hunks": 0,
            "message": "Merge pull request #582 from jbonofre/KARAF-4996 [KARAF-4996] Fix instance resources to expose same packages as the root instance",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-4996": ""
            },
            "ghissue_refs": {
                "582": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-4996",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 582",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fdf6cd5065edf0f0a95beac5ca88fde236ee84eb",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525430449,
            "hunks": 1,
            "message": "[KARAF-5718] Upgrade to equinox 3.12.100",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 5ec1951429..81c3ec5226 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -184,3 +184,3 @@",
                "         <equinox.artifactId>org.eclipse.osgi</equinox.artifactId>",
                "-        <equinox.version>3.12.50</equinox.version>",
                "+        <equinox.version>3.12.100</equinox.version>",
                "         <bndlib.version>2.4.0</bndlib.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5718": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c3ccac83a30d28abd2d7fef4c5ecc24eb81a6a28"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5718",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e064d6a2effecf314d742166cbac34da587e5dc5",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527668789,
            "hunks": 0,
            "message": "Merge pull request #521 from jbonofre/KARAF-5736 [KARAF-5736] Upgrade to Narayana 5.8.1.Final",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5736": ""
            },
            "ghissue_refs": {
                "521": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5736",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 521",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e03232bacc2eca372dc87d8ca3b5df1c74a1a8db",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526192357,
            "hunks": 1,
            "message": "[KARAF-5699] Upgrade to Jolokia 1.5.0. This closes #487",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 314257ffee..753ba8503b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -170,3 +170,3 @@",
                "         <jasypt.bundle.version>1.9.2_1</jasypt.bundle.version>",
                "-        <jolokia.version>1.3.5</jolokia.version>",
                "+        <jolokia.version>1.5.0</jolokia.version>",
                "         <serp.bundle.version>1.14.1_1</serp.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5699": ""
            },
            "ghissue_refs": {
                "487": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5699",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 487",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ab09133bced508cc8b8bc493bebb761ba636bf6f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528706459,
            "hunks": 0,
            "message": "Merge pull request #525 from jbonofre/KARAF-5776 [KARAF-5776] Upgrade to Aries Blueprint 1.10.0, Blueprint CM 1.3.0, Blueprint Web 1.1.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5776": ""
            },
            "ghissue_refs": {
                "525": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5776",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 525",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d6c6b9891d9d07969cf8d13abd42058811a4155c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524741104,
            "hunks": 4,
            "message": "Enable bundles with custom deployers to be installed. Enable assembly property edits to change featuresBoot.",
            "diff": [
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "index 27aac7de1e..be327d1f61 100644",
                "--- a/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java",
                "@@ -561,11 +561,2 @@ public class Builder {",
                "-        // 'improve' configuration files.",
                "-        if (propertyEdits != null) {",
                "-            KarafPropertiesEditor editor = new KarafPropertiesEditor();",
                "-            editor.setInputEtc(etcDirectory.toFile())",
                "-                    .setOutputEtc(etcDirectory.toFile())",
                "-                    .setEdits(propertyEdits);",
                "-            editor.run();",
                "-        }",
                "-",
                "         //",
                "@@ -619,2 +610,11 @@ public class Builder {",
                "         installStage(installedProfile, allBootFeatures);",
                "+",
                "+        // 'improve' configuration files.",
                "+        if (propertyEdits != null) {",
                "+            KarafPropertiesEditor editor = new KarafPropertiesEditor();",
                "+            editor.setInputEtc(etcDirectory.toFile())",
                "+                .setOutputEtc(etcDirectory.toFile())",
                "+                .setEdits(propertyEdits);",
                "+            editor.run();",
                "+        }",
                "     }",
                "@@ -1025,2 +1025,7 @@ public class Builder {",
                "             for (String location : new TreeSet<>(entry.getValue())) {",
                "+                // remove any custom deployer prefix",
                "+                int mvnIndex = location.indexOf(\"mvn:\");",
                "+                if (mvnIndex > 0) {",
                "+                    location = location.substring(mvnIndex);",
                "+                }",
                "                 if (useReferenceUrls) {",
                "@@ -1047,2 +1052,7 @@ public class Builder {",
                "         location = DownloadManagerHelper.stripUrl(location);",
                "+        // remove any custom deployer prefix",
                "+        int mvnIndex = location.indexOf(\"mvn:\");",
                "+        if (mvnIndex > 0) {",
                "+            location = location.substring(mvnIndex);",
                "+        }",
                "         if (location.startsWith(\"mvn:\")) {"
            ],
            "changed_files": [
                "profile/src/main/java/org/apache/karaf/profile/assembly/Builder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: bundle, feature, instal",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3eeae9c6f779a6113983812e73823c8fa68a7405",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530696324,
            "hunks": 136,
            "message": "Switch to OSGi Core r7 (Felix Framework 6.0.0 and Resolver 2.0.0)",
            "diff": [
                "diff --git a/archetypes/bundle/src/main/resources/archetype-resources/pom.xml b/archetypes/bundle/src/main/resources/archetype-resources/pom.xml",
                "index 0a8badce39..5eacc212db 100644",
                "--- a/archetypes/bundle/src/main/resources/archetype-resources/pom.xml",
                "+++ b/archetypes/bundle/src/main/resources/archetype-resources/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <version>${osgi.version}</version>",
                "diff --git a/archetypes/command/src/main/resources/archetype-resources/pom.xml b/archetypes/command/src/main/resources/archetype-resources/pom.xml",
                "index dd7077f5ce..88cd3797c9 100644",
                "--- a/archetypes/command/src/main/resources/archetype-resources/pom.xml",
                "+++ b/archetypes/command/src/main/resources/archetype-resources/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <version>^osgi.version^</version>",
                "@@ -46,3 +46,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <version>^osgi.compendium.version^</version>",
                "diff --git a/assemblies/features/base/pom.xml b/assemblies/features/base/pom.xml",
                "index bcfbd9850c..cd14f88b3e 100644",
                "--- a/assemblies/features/base/pom.xml",
                "+++ b/assemblies/features/base/pom.xml",
                "@@ -163,3 +163,3 @@",
                "                                     <groupId>org.osgi</groupId>",
                "-                                    <artifactId>org.osgi.core</artifactId>",
                "+                                    <artifactId>osgi.core</artifactId>",
                "                                     <outputDirectory>target/classes/resources/lib/boot</outputDirectory>",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties b/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "index 142691881e..3243790e25 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "@@ -59,23 +59,23 @@ karaf.framework.felix=mvn\\:org.apache.felix/org.apache.felix.framework/@@felix.f",
                " org.osgi.framework.system.packages= \\",
                "- org.osgi.dto;version=\"1.0\",\\",
                "- org.osgi.resource;version=\"1.0\",\\",
                "- org.osgi.resource.dto;version=\"1.0\";uses:=\"org.osgi.dto\",\\",
                "- org.osgi.framework;version=\"1.8\",\\",
                "- org.osgi.framework.dto;version=\"1.8\";uses:=\"org.osgi.dto\",\\",
                "- org.osgi.framework.hooks.bundle;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "- org.osgi.framework.hooks.resolver;version=\"1.0\";uses:=\"org.osgi.framework.wiring\",\\",
                "- org.osgi.framework.hooks.service;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "- org.osgi.framework.hooks.weaving;version=\"1.1\";uses:=\"org.osgi.framework.wiring\",\\",
                "- org.osgi.framework.launch;version=\"1.2\";uses:=\"org.osgi.framework\",\\",
                "- org.osgi.framework.namespace;version=\"1.1\";uses:=\"org.osgi.resource\",\\",
                "- org.osgi.framework.startlevel;version=\"1.0\";uses:=\"org.osgi.framework\",\\",
                "- org.osgi.framework.startlevel.dto;version=\"1.0\";uses:=\"org.osgi.dto\",\\",
                "- org.osgi.framework.wiring;version=\"1.2\";uses:=\"org.osgi.framework,org.osgi.resource\",\\",
                "- org.osgi.framework.wiring.dto;version=\"1.2\";uses:=\"org.osgi.dto,org.osgi.resource.dto\",\\",
                "+ org.osgi.framework;version=\"1.9\", \\",
                "+ org.osgi.framework.dto;version=\"1.8\";uses:=\"org.osgi.dto\", \\",
                "+ org.osgi.framework.hooks.bundle;version=\"1.1\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.framework.hooks.resolver;version=\"1.0\";uses:=\"org.osgi.framework.wiring\", \\",
                "+ org.osgi.framework.hooks.service;version=\"1.1\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.framework.hooks.weaving;version=\"1.1\";uses:=\"org.osgi.framework.wiring\", \\",
                "+ org.osgi.framework.launch;version=\"1.2\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.framework.namespace;version=\"1.1\";uses:=\"org.osgi.resource\", \\",
                "+ org.osgi.framework.startlevel;version=\"1.0\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.framework.startlevel.dto;version=\"1.0\";uses:=\"org.osgi.dto\", \\",
                "+ org.osgi.framework.wiring;version=\"1.2\";uses:=\"org.osgi.framework,org.osgi.resource\", \\",
                "+ org.osgi.framework.wiring.dto;version=\"1.3\";uses:=\"org.osgi.dto,org.osgi.resource.dto\", \\",
                "+ org.osgi.resource;version=\"1.0\", \\",
                "+ org.osgi.resource.dto;version=\"1.0\";uses:=\"org.osgi.dto\", \\",
                "  org.osgi.service.condpermadmin;version=\"1.1.1\";uses:=\"org.osgi.framework,org.osgi.service.permissionadmin\",\\",
                "  org.osgi.service.packageadmin;version=\"1.2\";uses:=\"org.osgi.framework\",org.osgi.service.permissionadmin;version=\"1.2\",\\",
                "- org.osgi.service.resolver;version=\"1.0\";uses:=\"org.osgi.resource\",\\",
                "- org.osgi.service.startlevel;version=\"1.1\";uses:=\"org.osgi.framework\",\\",
                "- org.osgi.service.url;version=\"1.0\",\\",
                "- org.osgi.util.tracker;version=\"1.5.1\";uses:=\"org.osgi.framework\",\\",
                "+ org.osgi.service.startlevel;version=\"1.1\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.service.url;version=\"1.0\", \\",
                "+ org.osgi.service.resolver;version=\"1.1\";uses:=\"org.osgi.resource\", \\",
                "+ org.osgi.util.tracker;version=\"1.5.2\";uses:=\"org.osgi.framework\", \\",
                "+ org.osgi.dto;version=\"1.1\", \\",
                "  org.apache.karaf.version;version=\"@@karaf.osgi.version@@\",\\",
                "diff --git a/audit/pom.xml b/audit/pom.xml",
                "index b2f9bbf129..96c5031746 100644",
                "--- a/audit/pom.xml",
                "+++ b/audit/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/bundle/blueprintstate/pom.xml b/bundle/blueprintstate/pom.xml",
                "index d5b6a6d733..38a38b3368 100644",
                "--- a/bundle/blueprintstate/pom.xml",
                "+++ b/bundle/blueprintstate/pom.xml",
                "@@ -49,3 +49,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/bundle/core/pom.xml b/bundle/core/pom.xml",
                "index f3f7fb5589..3a511bfd1a 100644",
                "--- a/bundle/core/pom.xml",
                "+++ b/bundle/core/pom.xml",
                "@@ -49,3 +49,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -54,3 +54,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/bundle/springstate/pom.xml b/bundle/springstate/pom.xml",
                "index f9d4d36561..ffebba32f7 100644",
                "--- a/bundle/springstate/pom.xml",
                "+++ b/bundle/springstate/pom.xml",
                "@@ -49,3 +49,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/config/pom.xml b/config/pom.xml",
                "index 2889c1432e..b645fe48b5 100644",
                "--- a/config/pom.xml",
                "+++ b/config/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/demos/command/pom.xml b/demos/command/pom.xml",
                "index 5fb8526ba2..2eaf164d3e 100644",
                "--- a/demos/command/pom.xml",
                "+++ b/demos/command/pom.xml",
                "@@ -38,3 +38,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/demos/deployer/bundle/pom.xml b/demos/deployer/bundle/pom.xml",
                "index 843bb96e7d..36d6d1cf7f 100644",
                "--- a/demos/deployer/bundle/pom.xml",
                "+++ b/demos/deployer/bundle/pom.xml",
                "@@ -41,3 +41,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/demos/web/pom.xml b/demos/web/pom.xml",
                "index 7de42e44ad..09ffe62903 100644",
                "--- a/demos/web/pom.xml",
                "+++ b/demos/web/pom.xml",
                "@@ -45,3 +45,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>runtime</scope>",
                "diff --git a/deployer/blueprint/pom.xml b/deployer/blueprint/pom.xml",
                "index f28d4b2108..2dcc596338 100644",
                "--- a/deployer/blueprint/pom.xml",
                "+++ b/deployer/blueprint/pom.xml",
                "@@ -58,3 +58,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/deployer/features/pom.xml b/deployer/features/pom.xml",
                "index b71ee420b4..85adf6ea1c 100644",
                "--- a/deployer/features/pom.xml",
                "+++ b/deployer/features/pom.xml",
                "@@ -52,3 +52,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -57,3 +57,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/deployer/kar/pom.xml b/deployer/kar/pom.xml",
                "index 6d9d98f063..96d5c49cc5 100644",
                "--- a/deployer/kar/pom.xml",
                "+++ b/deployer/kar/pom.xml",
                "@@ -52,3 +52,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -57,3 +57,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/deployer/spring/pom.xml b/deployer/spring/pom.xml",
                "index e42de9e6bf..9d53b321cb 100644",
                "--- a/deployer/spring/pom.xml",
                "+++ b/deployer/spring/pom.xml",
                "@@ -57,3 +57,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/deployer/wrap/pom.xml b/deployer/wrap/pom.xml",
                "index 1ff6b62ef0..01d50f11fe 100644",
                "--- a/deployer/wrap/pom.xml",
                "+++ b/deployer/wrap/pom.xml",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/diagnostic/boot/pom.xml b/diagnostic/boot/pom.xml",
                "index 1b61df87f7..a127969f5d 100644",
                "--- a/diagnostic/boot/pom.xml",
                "+++ b/diagnostic/boot/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/diagnostic/core/pom.xml b/diagnostic/core/pom.xml",
                "index 6faa13b485..5b169b6065 100644",
                "--- a/diagnostic/core/pom.xml",
                "+++ b/diagnostic/core/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -49,3 +49,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/event/pom.xml b/event/pom.xml",
                "index 4fca15d373..185389c247 100644",
                "--- a/event/pom.xml",
                "+++ b/event/pom.xml",
                "@@ -56,3 +56,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -66,3 +66,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/features/command/pom.xml b/features/command/pom.xml",
                "index 3c7046f8ec..08efea28bf 100644",
                "--- a/features/command/pom.xml",
                "+++ b/features/command/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/features/core/pom.xml b/features/core/pom.xml",
                "index 9b585e23c8..6ca91bf262 100644",
                "--- a/features/core/pom.xml",
                "+++ b/features/core/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/features/extension/pom.xml b/features/extension/pom.xml",
                "index 166775c11c..b5f9247644 100644",
                "--- a/features/extension/pom.xml",
                "+++ b/features/extension/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/http/pom.xml b/http/pom.xml",
                "index 3e1d3092c8..162475652c 100644",
                "--- a/http/pom.xml",
                "+++ b/http/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/instance/pom.xml b/instance/pom.xml",
                "index fb8f38d599..521c2a6a27 100644",
                "--- a/instance/pom.xml",
                "+++ b/instance/pom.xml",
                "@@ -44,3 +44,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -50,3 +50,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/itests/common/pom.xml b/itests/common/pom.xml",
                "index 5708e6c5bc..36e851bc43 100644",
                "--- a/itests/common/pom.xml",
                "+++ b/itests/common/pom.xml",
                "@@ -74,3 +74,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -79,3 +79,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jaas/blueprint/config/pom.xml b/jaas/blueprint/config/pom.xml",
                "index d07f7bbb98..cda32bebd5 100644",
                "--- a/jaas/blueprint/config/pom.xml",
                "+++ b/jaas/blueprint/config/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jaas/blueprint/jasypt/pom.xml b/jaas/blueprint/jasypt/pom.xml",
                "index dae49f5d1e..c8acc62660 100644",
                "--- a/jaas/blueprint/jasypt/pom.xml",
                "+++ b/jaas/blueprint/jasypt/pom.xml",
                "@@ -70,3 +70,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>test</scope>",
                "@@ -76,3 +76,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>test</scope>",
                "diff --git a/jaas/boot/pom.xml b/jaas/boot/pom.xml",
                "index 481b77ac10..5fdc22868d 100644",
                "--- a/jaas/boot/pom.xml",
                "+++ b/jaas/boot/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jaas/command/pom.xml b/jaas/command/pom.xml",
                "index f0ed5fa0fd..a11e158ced 100644",
                "--- a/jaas/command/pom.xml",
                "+++ b/jaas/command/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jaas/config/pom.xml b/jaas/config/pom.xml",
                "index 0657b9fe2c..09610fec2d 100644",
                "--- a/jaas/config/pom.xml",
                "+++ b/jaas/config/pom.xml",
                "@@ -57,3 +57,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jaas/jasypt/pom.xml b/jaas/jasypt/pom.xml",
                "index a6bc82183e..ee80d3fb37 100644",
                "--- a/jaas/jasypt/pom.xml",
                "+++ b/jaas/jasypt/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -80,3 +80,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>test</scope>",
                "diff --git a/jaas/modules/pom.xml b/jaas/modules/pom.xml",
                "index 5d760fcf5d..96b1662cb3 100644",
                "--- a/jaas/modules/pom.xml",
                "+++ b/jaas/modules/pom.xml",
                "@@ -64,3 +64,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -70,3 +70,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jdbc/pom.xml b/jdbc/pom.xml",
                "index fce3b54e1e..cff159be71 100644",
                "--- a/jdbc/pom.xml",
                "+++ b/jdbc/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jms/pom.xml b/jms/pom.xml",
                "index c985a4b7ce..b5bef5c20d 100644",
                "--- a/jms/pom.xml",
                "+++ b/jms/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/jndi/pom.xml b/jndi/pom.xml",
                "index 44449f50dd..1e06ac32d2 100644",
                "--- a/jndi/pom.xml",
                "+++ b/jndi/pom.xml",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "diff --git a/jpa/hibernate/pom.xml b/jpa/hibernate/pom.xml",
                "index d3949d8b7f..fc504cd948 100644",
                "--- a/jpa/hibernate/pom.xml",
                "+++ b/jpa/hibernate/pom.xml",
                "@@ -37,3 +37,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "diff --git a/kar/pom.xml b/kar/pom.xml",
                "index a2e1629538..a344752ae4 100644",
                "--- a/kar/pom.xml",
                "+++ b/kar/pom.xml",
                "@@ -53,3 +53,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -58,3 +58,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/log/pom.xml b/log/pom.xml",
                "index 0b02cd99c4..3d88509e51 100644",
                "--- a/log/pom.xml",
                "+++ b/log/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/main/pom.xml b/main/pom.xml",
                "index c79c87dfa4..0f012dde93 100644",
                "--- a/main/pom.xml",
                "+++ b/main/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/management/server/pom.xml b/management/server/pom.xml",
                "index 0997275da0..149081fa4a 100644",
                "--- a/management/server/pom.xml",
                "+++ b/management/server/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -48,3 +48,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/manual/pom.xml b/manual/pom.xml",
                "index 1c7e1feab0..bae32ae415 100644",
                "--- a/manual/pom.xml",
                "+++ b/manual/pom.xml",
                "@@ -187,3 +187,3 @@",
                " \t\t\t\t\t\t<groupId>org.osgi</groupId>",
                "-\t\t\t\t\t\t<artifactId>org.osgi.core</artifactId>",
                "+\t\t\t\t\t\t<artifactId>osgi.core</artifactId>",
                " \t\t\t\t\t\t<version>${osgi.version}</version>",
                "@@ -192,3 +192,3 @@",
                " \t\t\t\t\t\t<groupId>org.osgi</groupId>",
                "-\t\t\t\t\t\t<artifactId>org.osgi.compendium</artifactId>",
                "+\t\t\t\t\t\t<artifactId>osgi.cmpn</artifactId>",
                " \t\t\t\t\t\t<version>${osgi.compendium.version}</version>",
                "diff --git a/maven/core/pom.xml b/maven/core/pom.xml",
                "index 0c5bcd3bf4..c098bde9f3 100644",
                "--- a/maven/core/pom.xml",
                "+++ b/maven/core/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/obr/pom.xml b/obr/pom.xml",
                "index 2cc45ef67c..c3c2971e06 100644",
                "--- a/obr/pom.xml",
                "+++ b/obr/pom.xml",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/package/pom.xml b/package/pom.xml",
                "index 972182b216..7a87a94227 100644",
                "--- a/package/pom.xml",
                "+++ b/package/pom.xml",
                "@@ -50,3 +50,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/pom.xml b/pom.xml",
                "index b874e10443..dd2620a75f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -194,3 +194,3 @@",
                "         <felix.fileinstall.version>3.6.4</felix.fileinstall.version>",
                "-        <felix.framework.version>5.6.10</felix.framework.version>",
                "+        <felix.framework.version>6.0.0</felix.framework.version>",
                "         <felix.framework.security.version>2.6.0</felix.framework.security.version>",
                "@@ -212,3 +212,3 @@",
                "         <felix.scr.annotation.version>1.12.0</felix.scr.annotation.version>",
                "-        <felix.resolver.version>1.16.0</felix.resolver.version>",
                "+        <felix.resolver.version>2.0.0</felix.resolver.version>",
                "@@ -270,3 +270,3 @@",
                "         <org.osgi.service.jpa.version>1.0.0</org.osgi.service.jpa.version>",
                "-        <osgi.version>6.0.0</osgi.version>",
                "+        <osgi.version>7.0.0</osgi.version>",
                "         <osgi.compendium.version>5.0.0</osgi.compendium.version>",
                "@@ -371,3 +371,3 @@",
                "                 <groupId>org.osgi</groupId>",
                "-                <artifactId>org.osgi.core</artifactId>",
                "+                <artifactId>osgi.core</artifactId>",
                "                 <version>${osgi.version}</version>",
                "@@ -826,3 +826,3 @@",
                "                         <groupId>org.apache.felix</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -837,3 +837,3 @@",
                "                         <groupId>org.apache.felix</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -853,3 +853,3 @@",
                "                 <groupId>org.osgi</groupId>",
                "-                <artifactId>org.osgi.compendium</artifactId>",
                "+                <artifactId>osgi.cmpn</artifactId>",
                "                 <version>${osgi.compendium.version}</version>",
                "@@ -886,3 +886,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.core</artifactId>",
                "+                        <artifactId>osgi.core</artifactId>",
                "                     </exclusion>",
                "@@ -901,3 +901,3 @@",
                "                         <groupId>org.apache.felix</groupId>",
                "-                        <artifactId>org.osgi.core</artifactId>",
                "+                        <artifactId>osgi.core</artifactId>",
                "                     </exclusion>",
                "@@ -905,3 +905,3 @@",
                "                         <groupId>org.apache.felix</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -920,3 +920,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.core</artifactId>",
                "+                        <artifactId>osgi.core</artifactId>",
                "                     </exclusion>",
                "@@ -924,3 +924,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -955,3 +955,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.core</artifactId>",
                "+                        <artifactId>osgi.core</artifactId>",
                "                     </exclusion>",
                "@@ -959,3 +959,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -975,3 +975,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.core</artifactId>",
                "+                        <artifactId>osgi.core</artifactId>",
                "                     </exclusion>",
                "@@ -979,3 +979,3 @@",
                "                         <groupId>org.osgi</groupId>",
                "-                        <artifactId>org.osgi.compendium</artifactId>",
                "+                        <artifactId>osgi.cmpn</artifactId>",
                "                     </exclusion>",
                "@@ -996,2 +996,8 @@",
                "                 <version>${felix.resolver.version}</version>",
                "+                <exclusions>",
                "+                    <exclusion>",
                "+                        <groupId>org.osgi</groupId>",
                "+                        <artifactId>org.osgi.core</artifactId>",
                "+                    </exclusion>",
                "+                </exclusions>",
                "             </dependency>",
                "diff --git a/profile/pom.xml b/profile/pom.xml",
                "index e6dfb11894..3e0f582917 100644",
                "--- a/profile/pom.xml",
                "+++ b/profile/pom.xml",
                "@@ -44,3 +44,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -50,3 +50,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/scheduler/pom.xml b/scheduler/pom.xml",
                "index 080f9fb260..a27b2a3b3b 100644",
                "--- a/scheduler/pom.xml",
                "+++ b/scheduler/pom.xml",
                "@@ -96,3 +96,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -101,3 +101,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/scr/examples/component-factory/pom.xml b/scr/examples/component-factory/pom.xml",
                "index c702dae2ec..f184e3b7c9 100644",
                "--- a/scr/examples/component-factory/pom.xml",
                "+++ b/scr/examples/component-factory/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "         </dependency>",
                "diff --git a/scr/examples/managed-service/pom.xml b/scr/examples/managed-service/pom.xml",
                "index c561016ea5..9111d69dca 100644",
                "--- a/scr/examples/managed-service/pom.xml",
                "+++ b/scr/examples/managed-service/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "         </dependency>",
                "diff --git a/scr/examples/service/pom.xml b/scr/examples/service/pom.xml",
                "index 3363bdebbb..33ad05b577 100644",
                "--- a/scr/examples/service/pom.xml",
                "+++ b/scr/examples/service/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "         </dependency>",
                "diff --git a/scr/management/pom.xml b/scr/management/pom.xml",
                "index c4e05df392..ebdf1eefb1 100644",
                "--- a/scr/management/pom.xml",
                "+++ b/scr/management/pom.xml",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/scr/state/pom.xml b/scr/state/pom.xml",
                "index d587d415b2..d44fa3f0f8 100644",
                "--- a/scr/state/pom.xml",
                "+++ b/scr/state/pom.xml",
                "@@ -44,3 +44,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/service/core/pom.xml b/service/core/pom.xml",
                "index e75df60246..4a98d5e37e 100644",
                "--- a/service/core/pom.xml",
                "+++ b/service/core/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/service/guard/pom.xml b/service/guard/pom.xml",
                "index 5586f9aff4..877dd21cda 100644",
                "--- a/service/guard/pom.xml",
                "+++ b/service/guard/pom.xml",
                "@@ -57,3 +57,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -62,3 +62,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/services/coordinator/pom.xml b/services/coordinator/pom.xml",
                "index 590ba9f8af..65d0d84a7c 100644",
                "--- a/services/coordinator/pom.xml",
                "+++ b/services/coordinator/pom.xml",
                "@@ -39,3 +39,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/services/eventadmin/pom.xml b/services/eventadmin/pom.xml",
                "index 3965f244ba..5b87d741a0 100644",
                "--- a/services/eventadmin/pom.xml",
                "+++ b/services/eventadmin/pom.xml",
                "@@ -97,3 +97,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -107,3 +107,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/services/staticcm/pom.xml b/services/staticcm/pom.xml",
                "index 4dc26e6dc5..ef433a6b2f 100644",
                "--- a/services/staticcm/pom.xml",
                "+++ b/services/staticcm/pom.xml",
                "@@ -76,3 +76,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -81,3 +81,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/shell/commands/pom.xml b/shell/commands/pom.xml",
                "index fb1d14a0c2..0941d8a885 100644",
                "--- a/shell/commands/pom.xml",
                "+++ b/shell/commands/pom.xml",
                "@@ -55,3 +55,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "@@ -60,3 +60,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/shell/console/pom.xml b/shell/console/pom.xml",
                "index 499cca6978..e2b64d27a3 100644",
                "--- a/shell/console/pom.xml",
                "+++ b/shell/console/pom.xml",
                "@@ -55,3 +55,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -60,3 +60,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/shell/core/pom.xml b/shell/core/pom.xml",
                "index 0a84ce7c54..fea1564eb6 100644",
                "--- a/shell/core/pom.xml",
                "+++ b/shell/core/pom.xml",
                "@@ -51,3 +51,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -56,3 +56,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/shell/ssh/pom.xml b/shell/ssh/pom.xml",
                "index 670914b0e4..d194429a00 100644",
                "--- a/shell/ssh/pom.xml",
                "+++ b/shell/ssh/pom.xml",
                "@@ -55,3 +55,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -61,3 +61,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/specs/activator/pom.xml b/specs/activator/pom.xml",
                "index 7e80640cdf..8cd768076a 100644",
                "--- a/specs/activator/pom.xml",
                "+++ b/specs/activator/pom.xml",
                "@@ -38,3 +38,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/specs/locator/pom.xml b/specs/locator/pom.xml",
                "index ff81b79956..e2c9278677 100644",
                "--- a/specs/locator/pom.xml",
                "+++ b/specs/locator/pom.xml",
                "@@ -34,3 +34,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/subsystem/pom.xml b/subsystem/pom.xml",
                "index 71aa940210..fbdd3f082f 100644",
                "--- a/subsystem/pom.xml",
                "+++ b/subsystem/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -54,3 +54,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/system/pom.xml b/system/pom.xml",
                "index 77fae7a0f4..0d400320eb 100644",
                "--- a/system/pom.xml",
                "+++ b/system/pom.xml",
                "@@ -45,3 +45,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/tooling/karaf-maven-plugin/pom.xml b/tooling/karaf-maven-plugin/pom.xml",
                "index 287212259f..fde3e1974c 100644",
                "--- a/tooling/karaf-maven-plugin/pom.xml",
                "+++ b/tooling/karaf-maven-plugin/pom.xml",
                "@@ -133,2 +133,6 @@",
                "                 </exclusion>",
                "+                <exclusion>",
                "+                    <groupId>org.osgi</groupId>",
                "+                    <artifactId>org.osgi.core</artifactId>",
                "+                </exclusion>",
                "             </exclusions>",
                "@@ -214,3 +218,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>compile</scope>",
                "diff --git a/tooling/karaf-services-maven-plugin/pom.xml b/tooling/karaf-services-maven-plugin/pom.xml",
                "index 814680bcd8..50fb806867 100644",
                "--- a/tooling/karaf-services-maven-plugin/pom.xml",
                "+++ b/tooling/karaf-services-maven-plugin/pom.xml",
                "@@ -97,3 +97,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>compile</scope>",
                "diff --git a/util/pom.xml b/util/pom.xml",
                "index f3845ecc86..5f98edcb26 100644",
                "--- a/util/pom.xml",
                "+++ b/util/pom.xml",
                "@@ -38,3 +38,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -43,3 +43,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/web/pom.xml b/web/pom.xml",
                "index 33caa6a603..c866da89dd 100644",
                "--- a/web/pom.xml",
                "+++ b/web/pom.xml",
                "@@ -45,3 +45,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/webconsole/console/pom.xml b/webconsole/console/pom.xml",
                "index 408bc89ee2..3fc4d5520c 100644",
                "--- a/webconsole/console/pom.xml",
                "+++ b/webconsole/console/pom.xml",
                "@@ -46,3 +46,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>",
                "@@ -50,3 +50,3 @@",
                "           <groupId>org.osgi</groupId>",
                "-          <artifactId>org.osgi.compendium</artifactId>",
                "+          <artifactId>osgi.cmpn</artifactId>",
                "         </dependency>",
                "diff --git a/webconsole/features/pom.xml b/webconsole/features/pom.xml",
                "index 3a5d19014c..2813af2688 100644",
                "--- a/webconsole/features/pom.xml",
                "+++ b/webconsole/features/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/webconsole/gogo/pom.xml b/webconsole/gogo/pom.xml",
                "index b52f84ed67..ba139a5b0c 100644",
                "--- a/webconsole/gogo/pom.xml",
                "+++ b/webconsole/gogo/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/webconsole/http/pom.xml b/webconsole/http/pom.xml",
                "index 4b640871a4..0be6d23cec 100644",
                "--- a/webconsole/http/pom.xml",
                "+++ b/webconsole/http/pom.xml",
                "@@ -42,3 +42,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "             <scope>provided</scope>",
                "@@ -47,3 +47,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.compendium</artifactId>",
                "+            <artifactId>osgi.cmpn</artifactId>",
                "             <scope>provided</scope>",
                "diff --git a/webconsole/instance/pom.xml b/webconsole/instance/pom.xml",
                "index 14e8bd98a5..7df751815e 100644",
                "--- a/webconsole/instance/pom.xml",
                "+++ b/webconsole/instance/pom.xml",
                "@@ -47,3 +47,3 @@",
                " \t\t\t<groupId>org.osgi</groupId>",
                "-\t\t\t<artifactId>org.osgi.core</artifactId>",
                "+\t\t\t<artifactId>osgi.core</artifactId>",
                " \t\t\t<scope>provided</scope>",
                "@@ -52,3 +52,3 @@",
                " \t\t\t<groupId>org.osgi</groupId>",
                "-\t\t\t<artifactId>org.osgi.compendium</artifactId>",
                "+\t\t\t<artifactId>osgi.cmpn</artifactId>",
                " \t\t\t<scope>provided</scope>",
                "diff --git a/wrapper/pom.xml b/wrapper/pom.xml",
                "index 3867a482b1..e878aad64f 100644",
                "--- a/wrapper/pom.xml",
                "+++ b/wrapper/pom.xml",
                "@@ -46,3 +46,3 @@",
                "             <groupId>org.osgi</groupId>",
                "-            <artifactId>org.osgi.core</artifactId>",
                "+            <artifactId>osgi.core</artifactId>",
                "         </dependency>"
            ],
            "changed_files": [
                "archetypes/bundle/src/main/resources/archetype-resources/pom.xml",
                "archetypes/command/src/main/resources/archetype-resources/pom.xml",
                "assemblies/features/base/pom.xml",
                "assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "audit/pom.xml",
                "bundle/blueprintstate/pom.xml",
                "bundle/core/pom.xml",
                "bundle/springstate/pom.xml",
                "config/pom.xml",
                "demos/command/pom.xml",
                "demos/deployer/bundle/pom.xml",
                "demos/web/pom.xml",
                "deployer/blueprint/pom.xml",
                "deployer/features/pom.xml",
                "deployer/kar/pom.xml",
                "deployer/spring/pom.xml",
                "deployer/wrap/pom.xml",
                "diagnostic/boot/pom.xml",
                "diagnostic/core/pom.xml",
                "event/pom.xml",
                "features/command/pom.xml",
                "features/core/pom.xml",
                "features/extension/pom.xml",
                "http/pom.xml",
                "instance/pom.xml",
                "itests/common/pom.xml",
                "jaas/blueprint/config/pom.xml",
                "jaas/blueprint/jasypt/pom.xml",
                "jaas/boot/pom.xml",
                "jaas/command/pom.xml",
                "jaas/config/pom.xml",
                "jaas/jasypt/pom.xml",
                "jaas/modules/pom.xml",
                "jdbc/pom.xml",
                "jms/pom.xml",
                "jndi/pom.xml",
                "jpa/hibernate/pom.xml",
                "kar/pom.xml",
                "log/pom.xml",
                "main/pom.xml",
                "management/server/pom.xml",
                "manual/pom.xml",
                "maven/core/pom.xml",
                "obr/pom.xml",
                "package/pom.xml",
                "pom.xml",
                "profile/pom.xml",
                "scheduler/pom.xml",
                "scr/examples/component-factory/pom.xml",
                "scr/examples/managed-service/pom.xml",
                "scr/examples/service/pom.xml",
                "scr/management/pom.xml",
                "scr/state/pom.xml",
                "service/core/pom.xml",
                "service/guard/pom.xml",
                "services/coordinator/pom.xml",
                "services/eventadmin/pom.xml",
                "services/staticcm/pom.xml",
                "shell/commands/pom.xml",
                "shell/console/pom.xml",
                "shell/core/pom.xml",
                "shell/ssh/pom.xml",
                "specs/activator/pom.xml",
                "specs/locator/pom.xml",
                "subsystem/pom.xml",
                "system/pom.xml",
                "tooling/karaf-maven-plugin/pom.xml",
                "tooling/karaf-services-maven-plugin/pom.xml",
                "util/pom.xml",
                "web/pom.xml",
                "webconsole/console/pom.xml",
                "webconsole/features/pom.xml",
                "webconsole/gogo/pom.xml",
                "webconsole/http/pom.xml",
                "webconsole/instance/pom.xml",
                "wrapper/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: command, component, webconsole, bundle, shell, gogo, console, feature, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "fc897bacd6de8d54a0ff636bbd5e95396f8486a5",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530222972,
            "hunks": 2,
            "message": "[KARAF-5796] Use .hprof extension for heap dump",
            "diff": [
                "diff --git a/diagnostic/boot/src/main/java/org/apache/karaf/diagnostic/core/providers/HeapDumpProvider.java b/diagnostic/boot/src/main/java/org/apache/karaf/diagnostic/core/providers/HeapDumpProvider.java",
                "index cff6bfa2a8..1675c53245 100644",
                "--- a/diagnostic/boot/src/main/java/org/apache/karaf/diagnostic/core/providers/HeapDumpProvider.java",
                "+++ b/diagnostic/boot/src/main/java/org/apache/karaf/diagnostic/core/providers/HeapDumpProvider.java",
                "@@ -43,3 +43,3 @@ public class HeapDumpProvider implements DumpProvider {",
                "-            heapDumpFile = File.createTempFile(\"heapdump\", \".txt\");",
                "+            heapDumpFile = File.createTempFile(\"heapdump\", \".hprof\");",
                "             heapDumpFile.delete();",
                "@@ -51,3 +51,3 @@ public class HeapDumpProvider implements DumpProvider {",
                "             in = new FileInputStream(heapDumpFile);",
                "-            out = destination.add(\"heapdump.txt\");",
                "+            out = destination.add(\"heapdump.hprof\");",
                "             byte[] buffer = new byte[2048];"
            ],
            "changed_files": [
                "diagnostic/boot/src/main/java/org/apache/karaf/diagnostic/core/providers/HeapDumpProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5796": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "733b950f6ba86542bfbdbdbda8f03633661e0f05"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5796",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5342d4bba2eb393d068b072274a8ca3e2552b90a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526575653,
            "hunks": 0,
            "message": "Merge pull request #506 from gsmet/KARAF-5758 [KARAF-5758] Upgrade Hibernate Validator to 6.0.10.Final",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5758": ""
            },
            "ghissue_refs": {
                "506": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5758",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 506",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b034d1eb1b8a4fe6e2c913e0db2ec1e712b866cb",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531454763,
            "hunks": 0,
            "message": "Merge pull request #548 from jbonofre/KARAF-5813 [KARAF-5813] Upgrade to Spring 5.0.7.RELEASE",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5813": ""
            },
            "ghissue_refs": {
                "548": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5813",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 548",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5301b447f280db6b49b0cf632a036103ff64ede4",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525430660,
            "hunks": 1,
            "message": "[KARAF-5719] Upgrade to jansi 1.17.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c2a7540b74..bb2ab5c90d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -248,3 +248,3 @@",
                "         <hibernate.validator.version>5.3.4.Final</hibernate.validator.version>",
                "-        <jansi.version>1.17</jansi.version>",
                "+        <jansi.version>1.17.1</jansi.version>",
                "         <javassist.version>3.9.0.GA</javassist.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5719": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "02d5f6ee4c63d1371150d4f098bdf3cef3c77d22"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5719",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "20b774ee9d1aa40ee5b45d20d5faa9d3c0dad549",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530804208,
            "hunks": 0,
            "message": "[KARAF-5805] This closes #540",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5805": ""
            },
            "ghissue_refs": {
                "540": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5805",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 540",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c7d633e2a67f099736c5cff3d625f5c5df9fb01c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532029839,
            "hunks": 0,
            "message": "Merge pull request #564 from jbonofre/KARAF-5830 [KARAF-5830] Upgrade to tagsoup 1.2.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5830": ""
            },
            "ghissue_refs": {
                "564": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5830",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 564",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71d49d49a6a50a8b2bdd9ea0056db1d3ae8ce658",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532029878,
            "hunks": 0,
            "message": "Merge pull request #563 from jbonofre/KARAF-5841 [KARAF-5841] Upgrade to Pax Web 7.2.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5841": ""
            },
            "ghissue_refs": {
                "563": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5841",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 563",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2ab541be2fe267de473df15f13587f2792b18129",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532181294,
            "hunks": 0,
            "message": "Merge pull request #576 from jbonofre/KARAF-5846 [KARAF-5846] Add a test on configuration in order to identify potential racing condition",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5846": ""
            },
            "ghissue_refs": {
                "576": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5846",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 576",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c4009b5d44da2fc33cb16e9588456a33c32137a7",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527162475,
            "hunks": 0,
            "message": "Merge pull request #504 from usu-fr/KARAF-5753 [KARAF-5753] Support HP-UX for the scritpts",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5753": ""
            },
            "ghissue_refs": {
                "504": "[KARAF-5729] Improve usage of awk on Solaris + delete blank space in \u2026 #505"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5753",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 504",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "89d342c8417a00b47314e459bb8e644212cf890b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532172535,
            "hunks": 0,
            "message": "Merge pull request #575 from jbonofre/KARAF-5839 [KARAF-5839] Expose more method in KarafTestSupport and provide assertServiceAvailable()",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5839": ""
            },
            "ghissue_refs": {
                "575": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5839",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 575",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e15f005f5c26f3186be3c1863fdcac13cd774845",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532060072,
            "hunks": 0,
            "message": "Merge pull request #568 from jbonofre/KARAF-5824 [KARAF-5824] Upgrade to awaitility 3.1.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5824": ""
            },
            "ghissue_refs": {
                "568": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5824",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 568",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5cf33a3a69069b0df5d5428577f1b9ce9ebced89",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530791702,
            "hunks": 2,
            "message": "disable RunMojoTest with jdk11",
            "diff": [
                "diff --git a/tooling/karaf-maven-plugin/pom.xml b/tooling/karaf-maven-plugin/pom.xml",
                "index cea70c316d..53b6c17354 100644",
                "--- a/tooling/karaf-maven-plugin/pom.xml",
                "+++ b/tooling/karaf-maven-plugin/pom.xml",
                "@@ -416,5 +416,22 @@",
                "         </profile>",
                "+        <profile>",
                "+            <id>java11</id>",
                "+            <activation>",
                "+                <jdk>[11,)</jdk>",
                "+            </activation>",
                "+            <build>",
                "+                <plugins>",
                "+                    <plugin>",
                "+                        <groupId>org.apache.maven.plugins</groupId>",
                "+                        <artifactId>maven-surefire-plugin</artifactId>",
                "+                        <configuration>",
                "+                            <excludes>",
                "+                                <exclude>**/*RunMojoTest.java</exclude>",
                "+                            </excludes>",
                "+                        </configuration>",
                "+                    </plugin>",
                "+                </plugins>",
                "+            </build>",
                "+        </profile>",
                "     </profiles>",
                "-",
                "-",
                " </project>"
            ],
            "changed_files": [
                "tooling/karaf-maven-plugin/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "16a091a7cafeee7734e7efcf12bd8721187f9717",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532413002,
            "hunks": 0,
            "message": "Merge pull request #578 from grgrzybek/KARAF-5847 [KARAF-5847] Add felix.coordinator to prevent refreshes of felix.conf\u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5847": ""
            },
            "ghissue_refs": {
                "578": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5847",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 578",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a245576a2f9879db0e7e07863467af2bd02db240",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525331403,
            "hunks": 0,
            "message": "Merge pull request #492 from jbonofre/KARAF-5710 [KARAF-5710] Upgrade to Felix Resolver 1.16.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5710": ""
            },
            "ghissue_refs": {
                "492": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5710",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 492",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c407fae2977cd81d522aaeefe3180be6a06ffe14",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525722903,
            "hunks": 0,
            "message": "Merge pull request #490 from gnodet/KARAF-5706 [KARAF-5706] Upgrade to Felix Utils 1.11.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5706": ""
            },
            "ghissue_refs": {
                "490": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5706",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 490",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "87f4a9c1295bcf215d5e2afb4048522fd6f1be5f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527782482,
            "hunks": 0,
            "message": "Merge pull request #509 from jbonofre/KARAF-5735 [KARAF-5735] Upgrade to Felix SCR 2.1.0 | [KARAF-5732] Upgrade to Felix ConfigAdmin 1.9.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5735": "",
                "KARAF-5732": ""
            },
            "ghissue_refs": {
                "509": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5735, KARAF-5732",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 509",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3b6bbeeb3a68f3f0a0bb9ff4daa0f1c14f75550d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531743554,
            "hunks": 0,
            "message": "Merge pull request #551 from jbonofre/KARAF-5816 [KARAF-5816] Upgrade to Aries Transaction Blueprint 2.2.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5816": ""
            },
            "ghissue_refs": {
                "551": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5816",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 551",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "796cba8aa09d115d6bbd806f6f76ef6aa9b755ad",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531168327,
            "hunks": 7,
            "message": "[KARAF-5798] use a consistent way to get the Karaf process ID; write the pid file when the process launches so that it contains an accurate value for either a master or slave instance; only update the instance PID for the current running master (i.e. once lock is acquired)",
            "diff": [
                "diff --git a/main/src/main/java/org/apache/karaf/main/InstanceHelper.java b/main/src/main/java/org/apache/karaf/main/InstanceHelper.java",
                "index deeb739586..d610a2db5f 100644",
                "--- a/main/src/main/java/org/apache/karaf/main/InstanceHelper.java",
                "+++ b/main/src/main/java/org/apache/karaf/main/InstanceHelper.java",
                "@@ -27,3 +27,2 @@ import java.io.Writer;",
                " import java.lang.management.ManagementFactory;",
                "-import java.lang.management.RuntimeMXBean;",
                " import java.net.InetAddress;",
                "@@ -114,23 +113,22 @@ public class InstanceHelper {",
                "+    /* KARAF-5798: consistent way to obtain the process ID */",
                "     private static String getPid() {",
                "-        String pid = ManagementFactory.getRuntimeMXBean().getName();",
                "-        if (pid.indexOf('@') > 0) {",
                "-            pid = pid.substring(0, pid.indexOf('@'));",
                "-        }",
                "-        return pid;",
                "-    }",
                "+        String name = ManagementFactory.getRuntimeMXBean().getName();",
                "+        /*",
                "+         * RuntimeMXBean#getName() makes no guarantees about the name, so use a",
                "+         * regex to match the common(?) \"pid@host\" format",
                "+         */",
                "+        Pattern pattern = Pattern.compile(\"^([0-9]+)@.+$\");",
                "+        Matcher matcher = pattern.matcher(name);",
                "+        return matcher.matches() ? matcher.group(1) : name;",
                "+     }",
                "-    private static void writePid(String pidFile) {",
                "+    /* KARAF-5798: now called by Main#launch() */",
                "+    static void writePid(String pidFile) {",
                "         try {",
                "             if (pidFile != null) {",
                "-                RuntimeMXBean rtb = ManagementFactory.getRuntimeMXBean();",
                "-                String processName = rtb.getName();",
                "-                Pattern pattern = Pattern.compile(\"^([0-9]+)@.+$\", Pattern.CASE_INSENSITIVE);",
                "-                Matcher matcher = pattern.matcher(processName);",
                "-                if (matcher.matches()) {",
                "-                    int pid = Integer.parseInt(matcher.group(1));",
                "-                    Writer w = new OutputStreamWriter(new FileOutputStream(pidFile));",
                "-                    w.write(Integer.toString(pid));",
                "-                    w.close();",
                "-                }",
                "+                int pid = Integer.parseInt(getPid());",
                "+                Writer w = new OutputStreamWriter(new FileOutputStream(pidFile));",
                "+                w.write(Integer.toString(pid));",
                "+                w.close();",
                "             }",
                "@@ -142,3 +140,2 @@ public class InstanceHelper {",
                "     static void setupShutdown(ConfigProperties config, Framework framework) {",
                "-        writePid(config.pidFile);",
                "         try {",
                "diff --git a/main/src/main/java/org/apache/karaf/main/Main.java b/main/src/main/java/org/apache/karaf/main/Main.java",
                "index 66b6a81d93..817a30dca4 100644",
                "--- a/main/src/main/java/org/apache/karaf/main/Main.java",
                "+++ b/main/src/main/java/org/apache/karaf/main/Main.java",
                "@@ -242,3 +242,4 @@ public class Main {",
                "         BootstrapLogManager.setProperties(config.props, log4jConfigPath);",
                "-        InstanceHelper.updateInstancePid(config.karafHome, config.karafBase, true);",
                "+        /* KARAF-5798: write the PID whether or not the lock has been acquired */",
                "+        InstanceHelper.writePid(config.pidFile);",
                "         BootstrapLogManager.configureLogger(LOG);",
                "@@ -719,2 +720,4 @@ public class Main {",
                "             LOG.info(\"Lock acquired. Setting startlevel to \" + config.defaultStartLevel);",
                "+            /* KARAF-5798: instance PID should reflect the current running master */",
                "+            InstanceHelper.updateInstancePid(config.karafHome, config.karafBase, true);",
                "             InstanceHelper.setupShutdown(config, framework);"
            ],
            "changed_files": [
                "main/src/main/java/org/apache/karaf/main/InstanceHelper.java",
                "main/src/main/java/org/apache/karaf/main/Main.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5798": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "efa4ffdc420a318d9c926dabd2357ce958a1ffb3"
                ]
            ],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5798",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b087f17e5435c88f819554d73f94b2c491a3e950",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530853840,
            "hunks": 0,
            "message": "Merge pull request #541 from jbonofre/KARAF-5807 [KARAF-5807] Upgrade to Pax Exam 4.12.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5807": ""
            },
            "ghissue_refs": {
                "541": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5807",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 541",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e6b1c27187092b30dab77c0d0c22ed2d125d3738",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525670972,
            "hunks": 0,
            "message": "Merge pull request #498 from jbonofre/KARAF-5719 [KARAF-5719] Upgrade to jansi 1.17.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5719": ""
            },
            "ghissue_refs": {
                "498": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5719",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 498",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3da7a998d38e213c83d4542083edde588c4e6331",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527253491,
            "hunks": 0,
            "message": "Merge pull request #499 from jbonofre/KARAF-5721 [KARAF-5721] Upgrade to PAX JMS 1.0.1",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5721": ""
            },
            "ghissue_refs": {
                "499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5721",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c939a2a2c47c729c21766eeec4b372a313f64dfc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532895000,
            "hunks": 0,
            "message": "Merge pull request #544 from vanSabben/KARAF-5781 [KARAF-5781] Properties edit doesn't conserve the existing ones. (On karaf-4.1.x)",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5781": ""
            },
            "ghissue_refs": {
                "544": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5781",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 544",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0612d75b7fcfb98314a19d157710f4b8446310ad",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530770852,
            "hunks": 0,
            "message": "[KARAF-5796] This closes #537",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5796": ""
            },
            "ghissue_refs": {
                "537": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5796",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 537",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6b70c121a1c01a5592c4575c4df6855d84d1b17b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529412559,
            "hunks": 0,
            "message": "Merge pull request #532 from jbonofre/KARAF-5714 [KARAF-5714] Upgrade to ServiceMix Spec Locator 2.10 and prepare individual spec update",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5714": ""
            },
            "ghissue_refs": {
                "532": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5714",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 532",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "20694706b3c440da559871c4595fc7e7cfd5050c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532179500,
            "hunks": 0,
            "message": "Merge pull request #572 from jbonofre/KARAF-5818 [KARAF-5818] Upgrade to Felix ConfigAdmin 1.9.2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5818": ""
            },
            "ghissue_refs": {
                "572": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5818",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 572",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a65388afb145314bc6537e0edb2e68f2288cccda",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526987449,
            "hunks": 0,
            "message": "Merge pull request #510 from gnodet/KARAF-5422 [KARAF-5422] Add properties for karaf URI",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5422": ""
            },
            "ghissue_refs": {
                "510": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5422",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 510",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2c45df88f166fa0892a71f30e347a0072e6f07f2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523437306,
            "hunks": 6,
            "message": "Avoid intern() to reuse commons tring in SimpleFilter",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "index 02635d43b1..c33bda99b6 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "@@ -21,3 +21,2 @@ import java.util.Collections;",
                " import java.util.Deque;",
                "-import java.util.HashSet;",
                " import java.util.LinkedList;",
                "@@ -26,3 +25,3 @@ import java.util.Map;",
                " import java.util.Map.Entry;",
                "-import java.util.Set;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "@@ -45,11 +44,11 @@ public class SimpleFilter {",
                "      */",
                "-    private static final Set<String> COMMON_STRINGS;",
                "+    private static final ConcurrentHashMap<String, String> COMMON_STRINGS;",
                "     static {",
                "-        Set<String> s = new HashSet<>(8);",
                "-        s.add(\"optional\");",
                "-        s.add(\"osgi.ee\");",
                "-        s.add(\"resolution\");",
                "-        s.add(\"uses\");",
                "-        s.add(\"version\");",
                "+        ConcurrentHashMap<String, String> s = new ConcurrentHashMap<>(8);",
                "+        s.put(\"optional\", \"optional\");",
                "+        s.put(\"osgi.ee\", \"osgi.ee\");",
                "+        s.put(\"resolution\", \"resolution\");",
                "+        s.put(\"uses\", \"uses\");",
                "+        s.put(\"version\", \"version\");",
                "         COMMON_STRINGS = s;",
                "@@ -64,3 +63,3 @@ public class SimpleFilter {",
                "     SimpleFilter(String name, Object value, int op) {",
                "-        this.name = internIfCommon(name);",
                "+        this.name = reuseCommonString(name);",
                "         this.value = value;",
                "@@ -146,4 +145,10 @@ public class SimpleFilter {",
                "-    private static String internIfCommon(String str) {",
                "-        return str != null && COMMON_STRINGS.contains(str) ? str.intern() : str;",
                "+    private static String reuseCommonString(String str) {",
                "+        if (str != null) {",
                "+            String commonString = COMMON_STRINGS.get(str);",
                "+            if (commonString != null) {",
                "+                return commonString;",
                "+            }",
                "+        }",
                "+        return str;",
                "     }"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0e907b781295ca9cdf4375cae613a235be3ad59a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527065342,
            "hunks": 0,
            "message": "Merge pull request #501 from jbonofre/KARAF-5733 [KARAF-5733] Upgrade to Felix EventAdmin 1.5.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5733": ""
            },
            "ghissue_refs": {
                "501": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5733",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 501",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3a06611e3b1562088ca40a50198158c6e8d48fcd",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531455849,
            "hunks": 0,
            "message": "Merge pull request #550 from jbonofre/KARAF-5815 [KARAF-5815] Upgrade to commons-compress 1.17",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5815": ""
            },
            "ghissue_refs": {
                "550": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5815",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 550",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e8a96efa8f064ca448c46ef7f93114c71cc1a306",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526106415,
            "hunks": 0,
            "message": "Merge pull request #503 from jbonofre/KARAF-5745 [KARAF-5745] Upgrade to Spring 5.0.5.RELEASE",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5745": ""
            },
            "ghissue_refs": {
                "503": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5745",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e0069e55a2189009c50cf9fcd8faa0e5812fae04",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531333702,
            "hunks": 1,
            "message": "NO-JIRA: Fix small typo in documentation",
            "diff": [
                "diff --git a/manual/src/main/asciidoc/user-guide/directory-structure.adoc b/manual/src/main/asciidoc/user-guide/directory-structure.adoc",
                "index fd4a5951d0..ec4e8fbb47 100644",
                "--- a/manual/src/main/asciidoc/user-guide/directory-structure.adoc",
                "+++ b/manual/src/main/asciidoc/user-guide/directory-structure.adoc",
                "@@ -28,3 +28,3 @@ The directory layout of a Karaf installation is as follows:",
                " * `/lib`: contains libraries",
                "-** `/lib/boot`: contains the syste\u00c3\u00b9 libraries used at Karaf bootstrap",
                "+** `/lib/boot`: contains the system libraries used at Karaf bootstrap",
                " ** `/lib/endorsed`: directory for endorsed libraries"
            ],
            "changed_files": [
                "manual/src/main/asciidoc/user-guide/directory-structure.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: user",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "fa5b564e78b00f10f067bbd2ef7e222af2e3a468",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528365590,
            "hunks": 4,
            "message": "Updating some maven plugin versions",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ba2be3067f..a5b4176db0 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1831,3 +1831,3 @@",
                "                     <artifactId>maven-javadoc-plugin</artifactId>",
                "-                    <version>3.0.0</version>",
                "+                    <version>3.0.1</version>",
                "                 </plugin>",
                "@@ -1949,3 +1949,3 @@",
                "                     <artifactId>maven-dependency-plugin</artifactId>",
                "-                    <version>3.0.2</version>",
                "+                    <version>3.1.1</version>",
                "                 </plugin>",
                "@@ -1964,3 +1964,3 @@",
                "                     <artifactId>maven-war-plugin</artifactId>",
                "-                    <version>3.2.0</version>",
                "+                    <version>3.2.1</version>",
                "                 </plugin>",
                "@@ -2144,3 +2144,3 @@",
                "                 <artifactId>maven-javadoc-plugin</artifactId>",
                "-                <version>3.0.0</version>",
                "+                <version>3.0.1</version>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "04eb0044136c292507be3546d2f5ca944cf212db",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529487557,
            "hunks": 34,
            "message": "ensure Karaf can build and run with JDK11/JDK10",
            "diff": [
                "diff --git a/assemblies/features/base/pom.xml b/assemblies/features/base/pom.xml",
                "index bcfbd9850c..e81f3ab6b5 100644",
                "--- a/assemblies/features/base/pom.xml",
                "+++ b/assemblies/features/base/pom.xml",
                "@@ -39,2 +39,55 @@",
                "     <dependencies>",
                "+                    <dependency>",
                "+                        <groupId>javax.xml.bind</groupId>",
                "+                        <artifactId>jaxb-api</artifactId>",
                "+                        <version>2.3.0</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>javax.activation</groupId>",
                "+                        <artifactId>activation</artifactId>",
                "+                        <version>1.1.1</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-core</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>jaxb-core</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>txw2</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-impl</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jsr173_api</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml</groupId>",
                "+                                <artifactId>jsr173</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.activation</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jaxb-api</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+",
                "         <dependency>",
                "@@ -137,21 +190,22 @@",
                "                                 <artifactItem>",
                "-                                    <groupId>org.apache.karaf.specs</groupId>",
                "-                                    <artifactId>org.apache.karaf.specs.locator</artifactId>",
                "-                                    <outputDirectory>target/classes/resources/lib/endorsed</outputDirectory>",
                "+                                    <groupId>javax.xml.bind</groupId>",
                "+                                    <artifactId>jaxb-api</artifactId>",
                "+                                    <outputDirectory>target/classes/resources/lib/boot</outputDirectory>",
                "                                 </artifactItem>",
                "                                 <artifactItem>",
                "-                                    <groupId>org.apache.karaf.specs</groupId>",
                "-                                    <artifactId>org.apache.karaf.specs.java.xml</artifactId>",
                "-                                    <outputDirectory>target/classes/resources/lib/endorsed</outputDirectory>",
                "+                                    <groupId>javax.activation</groupId>",
                "+                                    <artifactId>activation</artifactId>",
                "+                                    <outputDirectory>target/classes/resources/lib/boot</outputDirectory>",
                "                                 </artifactItem>",
                "                                 <artifactItem>",
                "-                                    <groupId>org.apache.karaf.specs</groupId>",
                "-                                    <artifactId>org.apache.karaf.specs.java.xml.ws</artifactId>",
                "-                                    <outputDirectory>target/classes/resources/lib/endorsed</outputDirectory>",
                "+                                    <groupId>com.sun.xml.bind</groupId>",
                "+                                    <artifactId>jaxb-core</artifactId>",
                "+                                    <outputDirectory>target/classes/resources/lib/boot</outputDirectory>",
                "                                 </artifactItem>",
                "                                 <artifactItem>",
                "-                                    <groupId>org.apache.karaf.specs</groupId>",
                "-                                    <artifactId>org.apache.karaf.specs.activator</artifactId>",
                "+                                    <groupId>com.sun.xml.bind</groupId>",
                "+                                    <artifactId>jaxb-impl</artifactId>",
                "                                     <outputDirectory>target/classes/resources/lib/boot</outputDirectory>",
                "                                 </artifactItem>",
                "+               ",
                "                                 <artifactItem>",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index c79a40b0a9..69f9a5851a 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -286,7 +286,2 @@ run() {",
                "                 ${KARAF_EXEC} \"${JAVA}\" ${JAVA_OPTS} \\",
                "-                    --add-reads=java.xml=java.logging \\",
                "-                    --add-exports=java.base/org.apache.karaf.specs.locator=java.xml,java.xml.ws,ALL-UNNAMED \\",
                "-                    --patch-module java.base=lib/endorsed/org.apache.karaf.specs.locator-@@project.version@@.jar \\",
                "-                    --patch-module java.xml=lib/endorsed/org.apache.karaf.specs.java.xml-@@project.version@@.jar \\",
                "-                    --patch-module java.xml.ws=lib/endorsed/org.apache.karaf.specs.java.xml.ws-@@project.version@@.jar \\",
                "                     --add-opens java.base/java.security=ALL-UNNAMED \\",
                "@@ -300,6 +295,4 @@ run() {",
                "                     --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED \\",
                "-                    --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED \\",
                "                     --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED \\",
                "                     --add-exports=jdk.naming.rmi/com.sun.jndi.url.rmi=ALL-UNNAMED \\",
                "-                    --add-modules java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws \\",
                "                     -Dkaraf.instances=\"${KARAF_HOME}/instances\" \\",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties b/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "index 142691881e..7e8cbeb687 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "@@ -124,2 +124,8 @@ equinox-capabilities= \\",
                "+eecap-11= osgi.ee; osgi.ee=\"OSGi/Minimum\"; version:List<Version>=\"1.0,1.1,1.2\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE\"; version:List<Version>=\"1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,9.0,10.0,11.0\", \\",
                "+ osgi.ee; osgi.ee=\"JRE\"; version:List<Version>=\"1.0,1.1\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact1\"; version:List<Version>=\"1.8,9.0,10.0,11.0\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact2\"; version:List<Version>=\"1.8,9.0,10.0,11.0\", \\",
                "+ osgi.ee; osgi.ee=\"JavaSE/compact3\"; version:List<Version>=\"1.8,9.0,10.0,11.0\"",
                " eecap-10= osgi.ee; osgi.ee=\"OSGi/Minimum\"; version:List<Version>=\"1.0,1.1,1.2\", \\",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/etc/jre.properties b/assemblies/features/base/src/main/filtered-resources/resources/etc/jre.properties",
                "index d3d9898889..a7ac0c522a 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/etc/jre.properties",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/etc/jre.properties",
                "@@ -295,10 +295,2 @@ jre-1.7= \\",
                "  javax.xml.validation, \\",
                "- javax.xml.ws;version=\"2.2\", \\",
                "- javax.xml.ws.handler;version=\"2.2\", \\",
                "- javax.xml.ws.handler.soap;version=\"2.2\", \\",
                "- javax.xml.ws.http;version=\"2.2\", \\",
                "- javax.xml.ws.soap;version=\"2.2\", \\",
                "- javax.xml.ws.spi;version=\"2.2\", \\",
                "- javax.xml.ws.wsaddressing;version=\"2.2\", \\",
                "- javax.xml.ws.spi.http;version=\"2.2\", \\",
                "  javax.xml.xpath, \\",
                "@@ -552,3 +544,2 @@ jre-9= \\",
                "  javax.activity, \\",
                "- javax.annotation;version=\"1.0\", \\",
                "  javax.annotation.processing;version=\"1.0\", \\",
                "@@ -564,4 +555,2 @@ jre-9= \\",
                "  javax.imageio.stream, \\",
                "- javax.jws, \\",
                "- javax.jws.soap, \\",
                "  javax.lang.model, \\",
                "@@ -645,3 +634,2 @@ jre-9= \\",
                "  javax.xml.parsers, \\",
                "- javax.xml.soap;version=\"1.3\", \\",
                "  javax.xml.stream;version=\"1.2\", \\",
                "@@ -655,10 +643,2 @@ jre-9= \\",
                "  javax.xml.validation, \\",
                "- javax.xml.ws;version=\"2.2\", \\",
                "- javax.xml.ws.handler;version=\"2.2\", \\",
                "- javax.xml.ws.handler.soap;version=\"2.2\", \\",
                "- javax.xml.ws.http;version=\"2.2\", \\",
                "- javax.xml.ws.soap;version=\"2.2\", \\",
                "- javax.xml.ws.spi;version=\"2.2\", \\",
                "- javax.xml.ws.wsaddressing;version=\"2.2\", \\",
                "- javax.xml.ws.spi.http;version=\"2.2\", \\",
                "  javax.xml.xpath, \\",
                "@@ -746 +726,2 @@ jre-9= \\",
                " jre-10 = ${jre-9}",
                "+jre-11 = ${jre-10}",
                "diff --git a/assemblies/features/framework/src/main/feature/feature.xml b/assemblies/features/framework/src/main/feature/feature.xml",
                "index ffd7b3344b..134285e3ee 100644",
                "--- a/assemblies/features/framework/src/main/feature/feature.xml",
                "+++ b/assemblies/features/framework/src/main/feature/feature.xml",
                "@@ -38,2 +38,5 @@",
                "         <bundle start-level=\"15\">mvn:org.apache.karaf.features/org.apache.karaf.features.core/${project.version}</bundle>",
                "+        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/2.5.0</bundle>",
                "+        <bundle start-level=\"20\">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.11_1</bundle>",
                "+        <bundle dependency=\"true\" start-level=\"30\">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.5.0</bundle>",
                "     </feature>",
                "diff --git a/features/core/pom.xml b/features/core/pom.xml",
                "index 9b585e23c8..f94a1dfa33 100644",
                "--- a/features/core/pom.xml",
                "+++ b/features/core/pom.xml",
                "@@ -189,2 +189,68 @@",
                "     </build>",
                "+    <profiles>",
                "+        <profile>",
                "+\t        <id>java9-plus</id>",
                "+\t        <properties>",
                "+                <plexus-utils.version>3.1.0</plexus-utils.version>",
                "+                <mvn.opts>--add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED -Djava.io.tmpdir=${project.build.directory}</mvn.opts>",
                "+\t        </properties>",
                "+                <dependencies>",
                "+                    <dependency>",
                "+                        <groupId>javax.xml.bind</groupId>",
                "+                        <artifactId>jaxb-api</artifactId>",
                "+                         <version>${jaxb.version}</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>javax.activation</groupId>",
                "+                        <artifactId>activation</artifactId>",
                "+                        <version>1.1.1</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-core</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>jaxb-core</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>txw2</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-impl</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jsr173_api</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml</groupId>",
                "+                                <artifactId>jsr173</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.activation</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jaxb-api</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                </dependencies>",
                "+\t        <activation>",
                "+        \t    <jdk>[9,)</jdk>",
                "+            </activation>",
                "+\t</profile>",
                "+    </profiles>",
                "diff --git a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "index f31cc2aa70..150ae67e0c 100644",
                "--- a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "+++ b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "@@ -59,2 +59,3 @@ import org.junit.runners.model.Statement;",
                " import org.ops4j.pax.exam.*;",
                "+import org.ops4j.pax.exam.karaf.container.internal.JavaVersionUtil;",
                " import org.ops4j.pax.exam.karaf.options.KarafDistributionOption;",
                "@@ -62,2 +63,3 @@ import org.ops4j.pax.exam.karaf.options.LogLevelOption.LogLevel;",
                " import org.ops4j.pax.exam.options.MavenArtifactUrlReference;",
                "+import org.ops4j.pax.exam.options.extra.VMOption;",
                " import org.osgi.framework.Bundle;",
                "@@ -181,3 +183,56 @@ public class KarafTestSupport {",
                "-        return new Option[]{",
                "+        if (JavaVersionUtil.getMajorVersion() >= 9) {",
                "+",
                "+            return new Option[]{",
                "+                //debugConfiguration(\"8889\", true),",
                "+                KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(karafUrl).name(\"Apache Karaf\").unpackDirectory(new File(\"target/exam\")),",
                "+                // enable JMX RBAC security, thanks to the KarafMBeanServerBuilder",
                "+                KarafDistributionOption.configureSecurity().disableKarafMBeanServerBuilder(),",
                "+                KarafDistributionOption.configureConsole().ignoreLocalConsole(),",
                "+                KarafDistributionOption.keepRuntimeFolder(),",
                "+                KarafDistributionOption.logLevel(LogLevel.INFO),",
                "+                CoreOptions.mavenBundle().groupId(\"org.awaitility\").artifactId(\"awaitility\").versionAsInProject(),",
                "+                CoreOptions.mavenBundle().groupId(\"org.apache.servicemix.bundles\").artifactId(\"org.apache.servicemix.bundles.hamcrest\").versionAsInProject(),",
                "+                CoreOptions.mavenBundle().groupId(\"org.apache.karaf.itests\").artifactId(\"common\").versionAsInProject(),",
                "+                CoreOptions.mavenBundle().groupId(\"javax.annotation\").artifactId(\"javax.annotation-api\").versionAsInProject(),",
                "+                KarafDistributionOption.replaceConfigurationFile(\"etc/org.ops4j.pax.logging.cfg\", getConfigFile(\"/etc/org.ops4j.pax.logging.cfg\")),",
                "+                //replaceConfigurationFile(\"etc/host.key\", getConfigFile(\"/etc/host.key\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.features.cfg\", \"updateSnapshots\", \"none\"),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.ops4j.pax.web.cfg\", \"org.osgi.service.http.port\", httpPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.management.cfg\", \"rmiRegistryPort\", rmiRegistryPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.management.cfg\", \"rmiServerPort\", rmiServerPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.karaf.shell.cfg\", \"sshPort\", sshPort),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/org.ops4j.pax.url.mvn.cfg\", \"org.ops4j.pax.url.mvn.localRepository\", localRepository),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring31.version\", System.getProperty(\"spring31.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring32.version\", System.getProperty(\"spring32.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring40.version\", System.getProperty(\"spring40.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring41.version\", System.getProperty(\"spring41.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring42.version\", System.getProperty(\"spring42.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring43.version\", System.getProperty(\"spring43.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring50.version\", System.getProperty(\"spring50.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring.security31.version\", System.getProperty(\"spring.security31.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"spring.security42.version\", System.getProperty(\"spring.security42.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/system.properties\", \"activemq.version\", System.getProperty(\"activemq.version\")),",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/branding.properties\", \"welcome\", \"\"), // No welcome banner",
                "+                KarafDistributionOption.editConfigurationFilePut(\"etc/branding-ssh.properties\", \"welcome\", \"\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.base/java.security=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.base/java.net=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.base/java.lang=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.base/java.util=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.naming/javax.naming.spi=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-opens\"),",
                "+                new VMOption(\"java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED\"),",
                "+                new VMOption(\"--add-exports=jdk.naming.rmi/com.sun.jndi.url.rmi=ALL-UNNAMED\")",
                "+            };",
                "+        } else {",
                "+                ",
                "+            return new Option[]{",
                "                 //debugConfiguration(\"8889\", true),",
                "@@ -212,3 +267,5 @@ public class KarafTestSupport {",
                "                 KarafDistributionOption.editConfigurationFilePut(\"etc/branding-ssh.properties\", \"welcome\", \"\")",
                "-        };",
                "+            };  ",
                "+                                ",
                "+        }",
                "     }",
                "diff --git a/jaas/modules/pom.xml b/jaas/modules/pom.xml",
                "index 5d760fcf5d..ac152e8b20 100644",
                "--- a/jaas/modules/pom.xml",
                "+++ b/jaas/modules/pom.xml",
                "@@ -182,2 +182,68 @@",
                "+    <profiles>",
                "+        <profile>",
                "+\t        <id>java9-plus</id>",
                "+\t        <properties>",
                "+                <plexus-utils.version>3.1.0</plexus-utils.version>",
                "+                <mvn.opts>--add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED --add-modules java.activation,java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws -Djava.io.tmpdir=${project.build.directory}</mvn.opts>",
                "+\t        </properties>",
                "+                <dependencies>",
                "+                    <dependency>",
                "+                        <groupId>javax.xml.bind</groupId>",
                "+                        <artifactId>jaxb-api</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>javax.activation</groupId>",
                "+                        <artifactId>activation</artifactId>",
                "+                        <version>1.1.1</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-core</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>jaxb-core</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>txw2</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-impl</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jsr173_api</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml</groupId>",
                "+                                <artifactId>jsr173</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.activation</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jaxb-api</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                </dependencies>",
                "+\t        <activation>",
                "+        \t    <jdk>[9,)</jdk>",
                "+            </activation>",
                "+\t</profile>",
                "+    </profiles>",
                " </project>",
                "diff --git a/pom.xml b/pom.xml",
                "index e6b3cc3ac3..9d42419a93 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -148,2 +148,3 @@",
                "         <asm.version>6.2</asm.version>",
                "+        <javax.annotation.version>1.2</javax.annotation.version>",
                "         <awaitility.version>3.1.0</awaitility.version>",
                "@@ -180,3 +181,3 @@",
                "-        <easymock.version>3.6</easymock.version>",
                "+        <easymock.version>3.7-SNAPSHOT</easymock.version>",
                "         <objenesis.version>2.6</objenesis.version>",
                "@@ -274,3 +275,3 @@",
                "         <pax.cdi.version>1.0.0</pax.cdi.version>",
                "-        <pax.exam.version>4.11.0</pax.exam.version>",
                "+        <pax.exam.version>4.12.0-SNAPSHOT</pax.exam.version>",
                "         <pax.logging.version>1.10.1</pax.logging.version>",
                "@@ -303,3 +304,3 @@",
                "         <struts.bundle.version>1.3.10_1</struts.bundle.version>",
                "-        <xbean.version>4.8</xbean.version>",
                "+        <xbean.version>4.9</xbean.version>",
                "         <xerces.version>2.11.0_1</xerces.version>",
                "@@ -2378,6 +2379,6 @@",
                "         <profile>",
                "-            <id>java9</id>",
                "+            <id>java9-plus</id>",
                "             <properties>",
                "-                <easymock.version>3.5</easymock.version>",
                "-                <surefire.argLine>--add-opens java.base/java.security=ALL-UNNAMED",
                "+                <surefire.argLine>",
                "+                                  --add-opens java.base/java.security=ALL-UNNAMED",
                "                                   --add-opens java.base/java.net=ALL-UNNAMED ",
                "@@ -2387,7 +2388,61 @@",
                "                                   --add-opens java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED",
                "-                                  --add-modules java.activation,java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws</surefire.argLine>",
                "+                </surefire.argLine>",
                "             </properties>",
                "             <activation>",
                "-                <jdk>9</jdk>",
                "+                <jdk>[9,)</jdk>",
                "             </activation>",
                "+            <!--dependencies>",
                "+                    <dependency>",
                "+                        <groupId>javax.xml.bind</groupId>",
                "+                        <artifactId>jaxb-api</artifactId>",
                "+                        <version>2.3.0</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>javax.activation</groupId>",
                "+                        <artifactId>activation</artifactId>",
                "+                        <version>1.1.1</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-core</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>jaxb-core</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>txw2</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-impl</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jsr173_api</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml</groupId>",
                "+                                <artifactId>jsr173</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.activation</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jaxb-api</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                </dependencies-->",
                "         </profile>",
                "diff --git a/scheduler/pom.xml b/scheduler/pom.xml",
                "index 080f9fb260..d97b0f5bdf 100644",
                "--- a/scheduler/pom.xml",
                "+++ b/scheduler/pom.xml",
                "@@ -126,2 +126,68 @@",
                "     </dependencies>",
                "+    <profiles>",
                "+        <profile>",
                "+\t        <id>java9-plus</id>",
                "+\t        <properties>",
                "+                <plexus-utils.version>3.1.0</plexus-utils.version>",
                "+                <mvn.opts>--add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED --add-modules java.activation,java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws -Djava.io.tmpdir=${project.build.directory}</mvn.opts>",
                "+\t        </properties>",
                "+                <dependencies>",
                "+                    <dependency>",
                "+                        <groupId>javax.xml.bind</groupId>",
                "+                        <artifactId>jaxb-api</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>javax.activation</groupId>",
                "+                        <artifactId>activation</artifactId>",
                "+                        <version>1.1.1</version>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-core</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>jaxb-core</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>org.glassfish.jaxb</groupId>",
                "+                                <artifactId>txw2</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                    <dependency>",
                "+                        <groupId>com.sun.xml.bind</groupId>",
                "+                        <artifactId>jaxb-impl</artifactId>",
                "+                        <version>${jaxb.version}</version>",
                "+                        <exclusions>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jsr173_api</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml</groupId>",
                "+                                <artifactId>jsr173</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.activation</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>activation</artifactId>",
                "+                            </exclusion>",
                "+                            <exclusion>",
                "+                                <groupId>javax.xml.bind</groupId>",
                "+                                <artifactId>jaxb-api</artifactId>",
                "+                            </exclusion>",
                "+                        </exclusions>",
                "+                    </dependency>",
                "+                </dependencies>",
                "+\t        <activation>",
                "+        \t    <jdk>[9,)</jdk>",
                "+            </activation>",
                "+\t</profile>",
                "+    </profiles>",
                "diff --git a/tooling/karaf-maven-plugin/pom.xml b/tooling/karaf-maven-plugin/pom.xml",
                "index 287212259f..cea70c316d 100644",
                "--- a/tooling/karaf-maven-plugin/pom.xml",
                "+++ b/tooling/karaf-maven-plugin/pom.xml",
                "@@ -393,66 +393,2 @@",
                "     <profiles>",
                "-        <profile>",
                "-\t        <id>java9</id>",
                "-\t        <properties>",
                "-                <plexus-utils.version>3.1.0</plexus-utils.version>",
                "-                <mvn.opts>--add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED --add-modules java.activation,java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws -Djava.io.tmpdir=${project.build.directory}</mvn.opts>",
                "-\t        </properties>",
                "-                <dependencies>",
                "-                    <dependency>",
                "-                        <groupId>javax.xml.bind</groupId>",
                "-                        <artifactId>jaxb-api</artifactId>",
                "-                        <version>2.3.0</version>",
                "-                    </dependency>",
                "-                    <dependency>",
                "-                        <groupId>javax.activation</groupId>",
                "-                        <artifactId>activation</artifactId>",
                "-                        <version>1.1.1</version>",
                "-                    </dependency>",
                "-                    <dependency>",
                "-                        <groupId>com.sun.xml.bind</groupId>",
                "-                        <artifactId>jaxb-core</artifactId>",
                "-                        <version>${jaxb.version}</version>",
                "-                        <exclusions>",
                "-                            <exclusion>",
                "-                                <groupId>org.glassfish.jaxb</groupId>",
                "-                                <artifactId>jaxb-core</artifactId>",
                "-                            </exclusion>",
                "-                            <exclusion>",
                "-                                <groupId>org.glassfish.jaxb</groupId>",
                "-                                <artifactId>txw2</artifactId>",
                "-                            </exclusion>",
                "-                        </exclusions>",
                "-                    </dependency>",
                "-                    <dependency>",
                "-                        <groupId>com.sun.xml.bind</groupId>",
                "-                        <artifactId>jaxb-impl</artifactId>",
                "-                        <version>${jaxb.version}</version>",
                "-                        <exclusions>",
                "-                            <exclusion>",
                "-                                <groupId>javax.xml.bind</groupId>",
                "-                                <artifactId>jsr173_api</artifactId>",
                "-                            </exclusion>",
                "-                            <exclusion>",
                "-                                <groupId>javax.xml</groupId>",
                "-                                <artifactId>jsr173</artifactId>",
                "-                            </exclusion>",
                "-                            <exclusion>",
                "-                                <groupId>javax.activation</groupId>",
                "-                                <artifactId>activation</artifactId>",
                "-                            </exclusion>",
                "-                            <exclusion>",
                "-                                <groupId>javax.xml.bind</groupId>",
                "-                                <artifactId>activation</artifactId>",
                "-                            </exclusion>",
                "-                            <exclusion>",
                "-                                <groupId>javax.xml.bind</groupId>",
                "-                                <artifactId>jaxb-api</artifactId>",
                "-                            </exclusion>",
                "-                        </exclusions>",
                "-                    </dependency>",
                "-                </dependencies>",
                "-\t        <activation>",
                "-        \t    <jdk>9</jdk>",
                "-            </activation>",
                "-\t</profile>",
                "         <profile>"
            ],
            "changed_files": [
                "assemblies/features/base/pom.xml",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "assemblies/features/base/src/main/filtered-resources/resources/etc/config.properties",
                "assemblies/features/base/src/main/filtered-resources/resources/etc/jre.properties",
                "assemblies/features/framework/src/main/feature/feature.xml",
                "features/core/pom.xml",
                "itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "jaas/modules/pom.xml",
                "pom.xml",
                "scheduler/pom.xml",
                "tooling/karaf-maven-plugin/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "49bd5393371c99e3dc4ea8fbdda14db1c3397f18",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532503993,
            "hunks": 6,
            "message": "add the --patch-module if those modules are available in JDK by default",
            "diff": [
                "diff --git a/assemblies/features/base/pom.xml b/assemblies/features/base/pom.xml",
                "index e81f3ab6b5..40d5afd08d 100644",
                "--- a/assemblies/features/base/pom.xml",
                "+++ b/assemblies/features/base/pom.xml",
                "@@ -189,2 +189,12 @@",
                "                             <artifactItems>",
                "+                                <artifactItem>",
                "+                                    <groupId>org.apache.karaf.specs</groupId>",
                "+                                    <artifactId>org.apache.karaf.specs.locator</artifactId>",
                "+                                    <outputDirectory>target/classes/resources/lib/endorsed</outputDirectory>",
                "+                                </artifactItem>",
                "+                                <artifactItem>",
                "+                                    <groupId>org.apache.karaf.specs</groupId>",
                "+                                    <artifactId>org.apache.karaf.specs.java.xml</artifactId>",
                "+                                    <outputDirectory>target/classes/resources/lib/endorsed</outputDirectory>",
                "+                                </artifactItem>",
                "                                 <artifactItem>",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "index 69f9a5851a..73e7f002d9 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "@@ -286,2 +286,5 @@ run() {",
                "                 ${KARAF_EXEC} \"${JAVA}\" ${JAVA_OPTS} \\",
                "+                    --add-reads=java.xml=java.logging \\",
                "+                    --patch-module java.base=lib/endorsed/org.apache.karaf.specs.locator-@@project.version@@.jar \\",
                "+                    --patch-module java.xml=lib/endorsed/org.apache.karaf.specs.java.xml-@@project.version@@.jar \\",
                "                     --add-opens java.base/java.security=ALL-UNNAMED \\",
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "index f62f21f82f..b8c2a6b542 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat",
                "@@ -407,6 +407,4 @@ if \"%KARAF_PROFILER%\" == \"\" goto :RUN",
                "                 --add-reads=java.xml=java.logging ^",
                "-                --add-exports=java.base/org.apache.karaf.specs.locator=java.xml,java.xml.ws,ALL-UNNAMED ^",
                "                 --patch-module java.base=lib/endorsed/org.apache.karaf.specs.locator-@@project.version@@.jar ^",
                "                 --patch-module java.xml=lib/endorsed/org.apache.karaf.specs.java.xml-@@project.version@@.jar ^",
                "-                --patch-module java.xml.ws=lib/endorsed/org.apache.karaf.specs.java.xml.ws-@@project.version@@.jar ^",
                "                 --add-opens java.base/java.security=ALL-UNNAMED ^",
                "@@ -420,6 +418,4 @@ if \"%KARAF_PROFILER%\" == \"\" goto :RUN",
                "                 --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED ^",
                "-                --add-exports=java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED ^",
                "                 --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED ^",
                "                 --add-exports=jdk.naming.rmi/com.sun.jndi.url.rmi=ALL-UNNAMED ^",
                "-                --add-modules java.xml.ws.annotation,java.corba,java.transaction,java.xml.bind,java.xml.ws ^",
                "                 -classpath \"%CLASSPATH%\" ^"
            ],
            "changed_files": [
                "assemblies/features/base/pom.xml",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf",
                "assemblies/features/base/src/main/filtered-resources/resources/bin/karaf.bat"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a30f91fef8ad6a54fe87845116aebc682c8e0657",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532926415,
            "hunks": 0,
            "message": "Merge pull request #581 from jbonofre/KARAF-5840 [KARAF-5840] Add endorsed and ext dirs by default in wrapper",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5840": ""
            },
            "ghissue_refs": {
                "581": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5840",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 581",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "50a8c7c33ceaa55b5e7c20b6fc381c407818d240",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532894640,
            "hunks": 0,
            "message": "Merge pull request #552 from vanSabben/KARAF-5781_master [KARAF-5781] Properties edit doesn't conserve the existing ones. (On master)",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5781": ""
            },
            "ghissue_refs": {
                "552": "[KARAF-5781] Properties edit doesn't conserve the existing ones. (On karaf-4.1.x) #544"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5781",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6deb2f241bc154c98354f30ada3e1ce34a61599c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529325594,
            "hunks": 0,
            "message": "Merge pull request #530 from jbonofre/KARAF-5685 [KARAF-5685] Add ProfileMBean",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5685": ""
            },
            "ghissue_refs": {
                "530": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5685",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 530",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94f9bbbc4c152e3067ca59854626983e4851bef2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531454676,
            "hunks": 0,
            "message": "Merge pull request #547 from jbonofre/KARAF-5812 [KARAF-5812] Upgrade to Spring 4.3.18.RELEASE",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5812": ""
            },
            "ghissue_refs": {
                "547": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5812",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 547",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2666a2f3c632dbf8338ce02e46676d93e6e693a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531987562,
            "hunks": 0,
            "message": "Merge pull request #570 from jbonofre/KARAF-5821 [KARAF-5821] Upgrade to Maven API 3.5.4",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5821": ""
            },
            "ghissue_refs": {
                "570": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5821",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 570",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "51139fbbb32422525e9f186be997b403afc75e6f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533282762,
            "hunks": 0,
            "message": "Merge pull request #584 from jbonofre/KARAF-5856 [KARAF-5856] Upgrade to Pax Web 7.2.2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5856": ""
            },
            "ghissue_refs": {
                "584": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5856",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 584",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eef0cd61f150e9e286b6295e76d238cd5e521b88",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525352096,
            "hunks": 1,
            "message": "[KARAF-5717] Upgrade to easymock 3.6",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index b6f9179c42..5ec1951429 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -180,3 +180,3 @@",
                "-        <easymock.version>3.5.1</easymock.version>",
                "+        <easymock.version>3.6</easymock.version>",
                "         <objenesis.version>2.6</objenesis.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5717": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "91c3b2f8b28edccf84d19549436fd269567df41e"
                ]
            ],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5717",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fd280a13794da4a7e3a42ec0b295b1a3c1d09b05",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527139231,
            "hunks": 0,
            "message": "Merge pull request #513 from usu-fr/KARAF-5765 [KARAF-5765] Enhance karaf-service on HP-UX",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5765": ""
            },
            "ghissue_refs": {
                "513": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5765",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 513",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b435d60f4834c0cc4ac73f58741c783b12a23ae2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528637765,
            "hunks": 0,
            "message": "Merge pull request #500 from jbonofre/KARAF-5722 [KARAF-5722] Upgrade to ASM 6.2 and Aries Proxy Impl 1.1.2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5722": ""
            },
            "ghissue_refs": {
                "500": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5722",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 500",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "77d11a601be54b2627fa86819256f5295c01e1ae",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533288572,
            "hunks": 0,
            "message": "Merge pull request #542 from mzipay/KARAF-5798 [KARAF-5798] use a consistent way to get the Karaf process ID; write \u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5798": ""
            },
            "ghissue_refs": {
                "542": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5798",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 542",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1ced72f660b205103169d39b070a7490188073c0",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532060939,
            "hunks": 0,
            "message": "Merge pull request #569 from jbonofre/KARAF-5822 [KARAF-5822] Upgrade to Maven Wagon 3.1.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5822": ""
            },
            "ghissue_refs": {
                "569": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5822",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 569",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4ae579b55bea4bf8834ee507d157d2011ebb09dc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526313908,
            "hunks": 1,
            "message": "Updating indentation in inc file Updating indentation",
            "diff": [
                "diff --git a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "index be0322ffd4..7e90d480a5 100644",
                "--- a/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "+++ b/assemblies/features/base/src/main/filtered-resources/resources/bin/inc",
                "@@ -57,3 +57,3 @@ detectOS() {",
                "             # For HP-UX, set an environment variable",
                "-\t    export PS_PREFIX=\"UNIX95= \"",
                "+            export PS_PREFIX=\"UNIX95= \"",
                "             echo \"${PS_PREFIX}\""
            ],
            "changed_files": [
                "assemblies/features/base/src/main/filtered-resources/resources/bin/inc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3554879531aea04eb08c584dfc5d7b4bbe31d7cc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523446305,
            "hunks": 1,
            "message": "Simplify String reusing in SimpleFilter",
            "diff": [
                "diff --git a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "index c33bda99b6..c9d4e46cb8 100644",
                "--- a/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "+++ b/features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java",
                "@@ -146,9 +146,3 @@ public class SimpleFilter {",
                "     private static String reuseCommonString(String str) {",
                "-        if (str != null) {",
                "-            String commonString = COMMON_STRINGS.get(str);",
                "-            if (commonString != null) {",
                "-                return commonString;",
                "-            }",
                "-        }",
                "-        return str;",
                "+        return str != null ? COMMON_STRINGS.getOrDefault(str, str) : null;",
                "     }"
            ],
            "changed_files": [
                "features/core/src/main/java/org/apache/karaf/features/internal/resolver/SimpleFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: feature",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f36d89b5f3b88594c39b5a7fb94ed320716011d0",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525351892,
            "hunks": 0,
            "message": "Merge pull request #494 from jbonofre/KARAF-5715 [KARAF-5715] Upgrade to XBean 4.8",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5715": ""
            },
            "ghissue_refs": {
                "494": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5715",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 494",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d19b776ee002b64565bccc39b5f4dbd21e275376",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527176392,
            "hunks": 0,
            "message": "Merge pull request #515 from jbonofre/KARAF-5734 [KARAF-5734] Upgrade to Felix Metatype 1.2.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5734": ""
            },
            "ghissue_refs": {
                "515": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5734",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 515",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "16b8a7764fbe91a29906d54199ffd22ce2d1bcd1",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526969006,
            "hunks": 0,
            "message": "[KARAF-5761] This closes #508",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5761": ""
            },
            "ghissue_refs": {
                "508": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5761",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 508",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eaeded8991bd144a33a2832c0b63fc646fbb05f6",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525437061,
            "hunks": 0,
            "message": "Merge pull request #497 from jbonofre/KARAF-5718 [KARAF-5718] Upgrade to equinox 3.12.100",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5718": ""
            },
            "ghissue_refs": {
                "497": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5718",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 497",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "00fb78f2f55bf6d9533a2facad7ca217590246e3",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530182284,
            "hunks": 2,
            "message": "Update surefire + apache parent versions",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 1d9b10abd9..037ad63b27 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>apache</artifactId>",
                "-        <version>18</version>",
                "+        <version>19</version>",
                "         <relativePath />",
                "@@ -1880,3 +1880,3 @@",
                "                     <artifactId>maven-surefire-plugin</artifactId>",
                "-                    <version>2.20.1</version>",
                "+                    <version>2.21.0</version>",
                "                     <configuration>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "5a2b00d3bb3f98757f8106d37ae744e2af417b3b",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532415601,
            "hunks": 0,
            "message": "[KARAF-5849] This closes #579",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5849": ""
            },
            "ghissue_refs": {
                "579": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5849",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 579",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9250a76c6ed6370cd5aa0c8023203418e02a28d4",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530771808,
            "hunks": 1,
            "message": "Fix manual parent version",
            "diff": [
                "diff --git a/manual/pom.xml b/manual/pom.xml",
                "index 94b92d40ed..a977c3338c 100644",
                "--- a/manual/pom.xml",
                "+++ b/manual/pom.xml",
                "@@ -19,3 +19,3 @@",
                " \t\t<artifactId>karaf</artifactId>",
                "-\t\t<version>4.1.5-SNAPSHOT</version>",
                "+\t\t<version>4.1.6-SNAPSHOT</version>",
                " \t\t<relativePath>../pom.xml</relativePath>"
            ],
            "changed_files": [
                "manual/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b28390013b83fd3c624f44f42b76422e5e3c0158",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529073572,
            "hunks": 0,
            "message": "Merge pull request #516 from jbonofre/KARAF-5728 [KARAF-5728] Upgrade to Pax Web 7.1.1-SNAPSHOT and Jetty 9.4.10.v20180503",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5728": ""
            },
            "ghissue_refs": {
                "516": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5728",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 516",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e3b1fff12477fbb854ca87498e0260369ac5a115",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532059727,
            "hunks": 0,
            "message": "Merge pull request #565 from jbonofre/KARAF-5829 [KARAF-5829] Upgrade to xerces 2.12.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5829": ""
            },
            "ghissue_refs": {
                "565": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5829",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 565",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e88300f7b55cd00d8fcbf1f35fb6e067132c6a1d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530799253,
            "hunks": 0,
            "message": "[KARAF-5804] This closes #539",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5804": ""
            },
            "ghissue_refs": {
                "539": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5804",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 539",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c6c0148ad45ce19222e17bc60d4b85e951ad23fe",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532059848,
            "hunks": 0,
            "message": "Merge pull request #567 from jbonofre/KARAF-5826 [KARAF-5826] Upgrade to narayana 5.9.0.Final",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5826": ""
            },
            "ghissue_refs": {
                "567": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5826",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 567",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "20dfe43da5de5ff3034daadc723d16cab0ed7c31",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531944439,
            "hunks": 1,
            "message": "[KARAF-5818] Upgrade to Felix ConfigAdmin 1.9.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..8d2ced8f06 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -191,3 +191,3 @@",
                "         <felix.bundlerepository.version>2.0.10</felix.bundlerepository.version>",
                "-        <felix.configadmin.version>1.9.0</felix.configadmin.version>",
                "+        <felix.configadmin.version>1.9.2</felix.configadmin.version>",
                "         <felix.connect.version>0.2.0</felix.connect.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5818": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5818",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0b6a6736cb461f098e9d59f1986e25e2a480c460",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528283305,
            "hunks": 3,
            "message": "[KARAF-5778] NPE in the ssh client if TERM is null",
            "diff": [
                "diff --git a/client/src/main/java/org/apache/karaf/client/Main.java b/client/src/main/java/org/apache/karaf/client/Main.java",
                "index 987516cbcd..3e90b1a9f6 100644",
                "--- a/client/src/main/java/org/apache/karaf/client/Main.java",
                "+++ b/client/src/main/java/org/apache/karaf/client/Main.java",
                "@@ -53,4 +53,2 @@ import org.apache.sshd.client.future.ConnectFuture;",
                " import org.apache.sshd.client.session.ClientSession;",
                "-import org.apache.sshd.common.FactoryManager;",
                "-import org.apache.sshd.common.PropertyResolverUtils;",
                " import org.apache.sshd.common.RuntimeSshException;",
                "@@ -180,4 +178,12 @@ public class Main {",
                "             int exitStatus = 0;",
                "+            String type = System.getProperty(TerminalBuilder.PROP_TYPE);",
                "+            if (type == null) {",
                "+                type = System.getenv(\"TERM\");",
                "+            }",
                "+            if (type == null) {",
                "+                type = Terminal.TYPE_DUMB;",
                "+            }",
                "             try (Terminal terminal = TerminalBuilder.builder()",
                "                         .nativeSignals(true)",
                "+                        .type(type)",
                "                         .signalHandler(Terminal.SignalHandler.SIG_IGN)"
            ],
            "changed_files": [
                "client/src/main/java/org/apache/karaf/client/Main.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5778": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5778",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a53d68ccdc617f9bd29a8739d89fc8ce114c731e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526569581,
            "hunks": 1,
            "message": "[KARAF-5758] Upgrade Hibernate Validator to 6.0.10.Final",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a29075a6ad..88684c420f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -259,3 +259,3 @@",
                "         <hibernate.version>5.2.9.Final</hibernate.version>",
                "-        <hibernate.validator.version>6.0.9.Final</hibernate.validator.version>",
                "+        <hibernate.validator.version>6.0.10.Final</hibernate.validator.version>",
                "         <jansi.version>1.17.1</jansi.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5758": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5758",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "224aae43dc3b9303f8f69d0a876d500e06f98107",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526931422,
            "hunks": 2,
            "message": "[KARAF-5735] Upgrade to Felix SCR 2.1.0 [KARAF-5732] Upgrade to Felix ConfigAdmin 1.9.0 [KARAF-5766] Upgrade to Felix Connect 0.2.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index b19058bb1a..53bf3fd0b7 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -190,4 +190,4 @@",
                "         <felix.bundlerepository.version>2.0.10</felix.bundlerepository.version>",
                "-        <felix.configadmin.version>1.8.16</felix.configadmin.version>",
                "-        <felix.connect.version>0.1.0</felix.connect.version>",
                "+        <felix.configadmin.version>1.9.0</felix.configadmin.version>",
                "+        <felix.connect.version>0.2.0</felix.connect.version>",
                "         <felix.coordinator.version>1.0.2</felix.coordinator.version>",
                "@@ -209,3 +209,3 @@",
                "         <felix.obr.version>1.0.2</felix.obr.version>",
                "-        <felix.scr.version>2.0.14</felix.scr.version>",
                "+        <felix.scr.version>2.1.0</felix.scr.version>",
                "         <felix.scr.webconsole.plugin.version>2.0.8</felix.scr.webconsole.plugin.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5735": "",
                "KARAF-5732": "",
                "KARAF-5766": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5735, KARAF-5732, KARAF-5766",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a0904f4bad11080e4404367c998629d807211f62",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530816963,
            "hunks": 1,
            "message": "[KARAF-5807] Upgrade to Pax Exam 4.12.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index fbbc8bfe00..944dc867fd 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -275,3 +275,3 @@",
                "         <pax.cdi.version>1.0.0</pax.cdi.version>",
                "-        <pax.exam.version>4.12.0-SNAPSHOT</pax.exam.version>",
                "+        <pax.exam.version>4.12.0</pax.exam.version>",
                "         <pax.logging.version>1.10.1</pax.logging.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5807": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5807",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "db4608a6c0675dddd66d2c90a0e130c15780e3d3",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531908096,
            "hunks": 1,
            "message": "[KARAF-5829] Upgrade to xerces 2.12.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..454cd8375a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -305,3 +305,3 @@",
                "         <xbean.version>4.9</xbean.version>",
                "-        <xerces.version>2.11.0_1</xerces.version>",
                "+        <xerces.version>2.12.0</xerces.version>",
                "         <xalan.bundle.version>2.7.2_3</xalan.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5829": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5829",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bf36a131e0ad85534edb68dccbc06099ec531dfe",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531923795,
            "hunks": 1,
            "message": "[KARAF-5821] Upgrade to Maven API 3.5.4",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..7b4f26376c 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -266,3 +266,3 @@",
                "         <log4j.version>1.2.17</log4j.version>",
                "-        <maven.version>3.5.3</maven.version>",
                "+        <maven.version>3.5.4</maven.version>",
                "         <maven.wagon.version>3.0.0</maven.wagon.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5821": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5821",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f3c66bf0b5d09a49cc3c37753d895bb4ef53105e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1528383779,
            "hunks": 1,
            "message": "[KARAF-5779] Upgrade to Spring 4.3.17.RELEASE and 5.0.6.RELEASE",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c577b80750..e852899f93 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -295,4 +295,4 @@",
                "         <spring42.version>4.2.9.RELEASE_1</spring42.version>",
                "-        <spring43.version>4.3.14.RELEASE_1</spring43.version>",
                "-        <spring50.version>5.0.5.RELEASE_1</spring50.version>",
                "+        <spring43.version>4.3.17.RELEASE_1</spring43.version>",
                "+        <spring50.version>5.0.6.RELEASE_1</spring50.version>",
                "         <spring.security31.version>3.1.4.RELEASE</spring.security31.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bbef2fba3783310bef110b79e795fa48f3f995c4",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526057341,
            "hunks": 1,
            "message": "[KARAF-5745] Upgrade to Spring 5.0.5.RELEASE",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 561437809c..314257ffee 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -297,3 +297,3 @@",
                "         <spring43.version>4.3.14.RELEASE_1</spring43.version>",
                "-        <spring50.version>5.0.4.RELEASE_1</spring50.version>",
                "+        <spring50.version>5.0.5.RELEASE_1</spring50.version>",
                "         <spring.security31.version>3.1.4.RELEASE</spring.security31.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5745": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5745",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7e2750739c0b180ebfe6ddf5c31d1c0bad04fd0d",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1529301697,
            "hunks": 5,
            "message": "[KARAF-5685] Add ProfileMBean",
            "diff": [
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/ProfileMBean.java b/profile/src/main/java/org/apache/karaf/profile/ProfileMBean.java",
                "new file mode 100644",
                "index 0000000000..89fba64719",
                "--- /dev/null",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/ProfileMBean.java",
                "@@ -0,0 +1,52 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.karaf.profile;",
                "+",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+",
                "+/**",
                "+ * MBean to manipulate profiles.",
                "+ */",
                "+public interface ProfileMBean {",
                "+",
                "+    /**",
                "+     * List profile IDs with parents.",
                "+     */",
                "+    Map<String, String> getProfiles();",
                "+",
                "+    /**",
                "+     * Rename a profile.",
                "+     */",
                "+    void rename(String name, String newName);",
                "+",
                "+    /**",
                "+     * Delete a profile.",
                "+     */",
                "+    void delete(String name);",
                "+",
                "+    /**",
                "+     * Create a new profile.",
                "+     */",
                "+    void create(String name, List<String> parents);",
                "+",
                "+    /**",
                "+     * Copy a profile definition on another one.",
                "+     */",
                "+    void copy(String source, String target);",
                "+",
                "+}",
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/impl/ProfileMBeanImpl.java b/profile/src/main/java/org/apache/karaf/profile/impl/ProfileMBeanImpl.java",
                "new file mode 100644",
                "index 0000000000..3c9a4a5014",
                "--- /dev/null",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/impl/ProfileMBeanImpl.java",
                "@@ -0,0 +1,87 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.karaf.profile.impl;",
                "+",
                "+import org.apache.karaf.profile.Profile;",
                "+import org.apache.karaf.profile.ProfileBuilder;",
                "+import org.apache.karaf.profile.ProfileMBean;",
                "+import org.apache.karaf.profile.ProfileService;",
                "+",
                "+import javax.management.NotCompliantMBeanException;",
                "+import javax.management.StandardMBean;",
                "+import java.util.*;",
                "+",
                "+import static org.apache.karaf.profile.impl.Utils.join;",
                "+",
                "+public class ProfileMBeanImpl extends StandardMBean implements ProfileMBean {",
                "+",
                "+    private ProfileService profileService;",
                "+",
                "+    public ProfileMBeanImpl() throws NotCompliantMBeanException {",
                "+        super(ProfileMBean.class);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Map<String, String> getProfiles() {",
                "+        List<String> ids = new ArrayList<>(profileService.getProfiles());",
                "+        HashMap<String, String> results = new HashMap<>();",
                "+        Collections.sort(ids);",
                "+        for (String id : ids) {",
                "+            Profile profile = profileService.getProfile(id);",
                "+            if (profile != null) {",
                "+                String parents = join(\" \", profile.getParentIds());",
                "+                results.put(id, parents);",
                "+            }",
                "+        }",
                "+        return results;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void rename(String name, String newName) {",
                "+        Profile profile = ProfileBuilder.Factory.createFrom(profileService.getProfile(name))",
                "+                .identity(newName)",
                "+                .getProfile();",
                "+        profileService.createProfile(profile);",
                "+        profileService.deleteProfile(name);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void delete(String name) {",
                "+        profileService.deleteProfile(name);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void create(String name, List<String> parents) {",
                "+        Profile profile = ProfileBuilder.Factory.create(name)",
                "+                .setParents(parents)",
                "+                .getProfile();",
                "+        profileService.createProfile(profile);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void copy(String source, String target) {",
                "+        Profile profile = ProfileBuilder.Factory.createFrom(profileService.getProfile(source))",
                "+                .identity(target)",
                "+                .getProfile();",
                "+        profileService.createProfile(profile);",
                "+    }",
                "+",
                "+    public void setProfileService(ProfileService profileService) {",
                "+        this.profileService = profileService;",
                "+    }",
                "+",
                "+}",
                "diff --git a/profile/src/main/java/org/apache/karaf/profile/impl/osgi/Activator.java b/profile/src/main/java/org/apache/karaf/profile/impl/osgi/Activator.java",
                "index 33a9403fa2..7ed1b2f027 100644",
                "--- a/profile/src/main/java/org/apache/karaf/profile/impl/osgi/Activator.java",
                "+++ b/profile/src/main/java/org/apache/karaf/profile/impl/osgi/Activator.java",
                "@@ -21,3 +21,5 @@ import java.nio.file.Paths;",
                "+import org.apache.karaf.profile.ProfileMBean;",
                " import org.apache.karaf.profile.ProfileService;",
                "+import org.apache.karaf.profile.impl.ProfileMBeanImpl;",
                " import org.apache.karaf.profile.impl.ProfileServiceImpl;",
                "@@ -40,2 +42,6 @@ public class Activator extends BaseActivator implements ManagedService {",
                "         register(ProfileService.class, service);",
                "+",
                "+        ProfileMBeanImpl profileMBean = new ProfileMBeanImpl();",
                "+        profileMBean.setProfileService(service);",
                "+        registerMBean(profileMBean, \"type=profile\");",
                "     }"
            ],
            "changed_files": [
                "profile/src/main/java/org/apache/karaf/profile/ProfileMBean.java",
                "profile/src/main/java/org/apache/karaf/profile/impl/ProfileMBeanImpl.java",
                "profile/src/main/java/org/apache/karaf/profile/impl/osgi/Activator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5685": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5685",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "877b44578dcbf55b9fe298b1e0c921f0f5f2834c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532894433,
            "hunks": 3,
            "message": "[KARAF-5840] Add endorsed and ext dirs by default in wrapper",
            "diff": [
                "diff --git a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-wrapper.conf b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-wrapper.conf",
                "index 2b2f2a05be..aea1487546 100644",
                "--- a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-wrapper.conf",
                "+++ b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-wrapper.conf",
                "@@ -39,13 +39,15 @@ wrapper.java.library.path.1=%KARAF_BASE%/lib/wrapper/",
                " # note that n is the parameter number starting from 1.",
                "-wrapper.java.additional.1=-Dkaraf.home=%KARAF_HOME%",
                "-wrapper.java.additional.2=-Dkaraf.base=%KARAF_BASE%",
                "-wrapper.java.additional.3=-Dkaraf.data=%KARAF_DATA%",
                "-wrapper.java.additional.4=-Dkaraf.etc=%KARAF_ETC%",
                "-wrapper.java.additional.5=-Dcom.sun.management.jmxremote",
                "-wrapper.java.additional.6=-Dkaraf.startLocalConsole=false",
                "-wrapper.java.additional.7=-Dkaraf.startRemoteShell=true",
                "-wrapper.java.additional.8=-Djava.io.tmpdir=%KARAF_DATA%/tmp",
                "-# Uncomment if you need libraries on Java 8",
                "-#wrapper.java.additional.9=-Djava.endorsed.dirs=%JAVA_HOME%/jre/lib/endorsed:%JAVA_HOME%/lib/endorsed:%KARAF_HOME%/lib/endorsed",
                "-#wrapper.java.additional.10=-Djava.ext.dirs=%JAVA_HOME%/jre/lib/ext:%JAVA_HOME%/lib/ext:%KARAF_HOME%/lib/ext",
                "+wrapper.java.additional.1=-Djava.endorsed.dirs=%JAVA_HOME%/jre/lib/endorsed:%JAVA_HOME%/lib/endorsed:%KARAF_HOME%/lib/endorsed",
                "+wrapper.java.additional.2=-Djava.ext.dirs=%JAVA_HOME%/jre/lib/ext:%JAVA_HOME%/lib/ext:%KARAF_HOME%/lib/ext",
                "+wrapper.java.additional.3=-Dkaraf.instances=%KARAF_HOME%/instances",
                "+wrapper.java.additional.4=-Dkaraf.home=%KARAF_HOME%",
                "+wrapper.java.additional.5=-Dkaraf.base=%KARAF_BASE%",
                "+wrapper.java.additional.6=-Dkaraf.data=%KARAF_DATA%",
                "+wrapper.java.additional.7=-Dkaraf.etc=%KARAF_ETC%",
                "+wrapper.java.additional.8=-Dkaraf.restart.jvm.supported=true",
                "+wrapper.java.additional.9=-Djava.io.tmpdir=%KARAF_DATA%/tmp",
                "+wrapper.java.additional.10=-Djava.util.logging.config.file=%KARAF_BASE%/etc/java.util.logging.properties",
                "+wrapper.java.additional.11=-Dcom.sun.management.jmxremote",
                "+wrapper.java.additional.12=-Dkaraf.startLocalConsole=false",
                "+wrapper.java.additional.13=-Dkaraf.startRemoteShell=true",
                "diff --git a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows/karaf-wrapper.conf b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows/karaf-wrapper.conf",
                "index 51a18772fb..b528acd0ae 100644",
                "--- a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows/karaf-wrapper.conf",
                "+++ b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows/karaf-wrapper.conf",
                "@@ -39,13 +39,15 @@ wrapper.java.library.path.1=%KARAF_BASE%/lib/wrapper/",
                " # note that n is the parameter number starting from 1.",
                "-wrapper.java.additional.1=-Dkaraf.home=\"%KARAF_HOME%\"",
                "-wrapper.java.additional.2=-Dkaraf.base=\"%KARAF_BASE%\"",
                "-wrapper.java.additional.3=-Dkaraf.data=\"%KARAF_DATA%\"",
                "-wrapper.java.additional.4=-Dkaraf.etc=\"%KARAF_ETC%\"",
                "-wrapper.java.additional.5=-Dcom.sun.management.jmxremote",
                "-wrapper.java.additional.6=-Dkaraf.startLocalConsole=false",
                "-wrapper.java.additional.7=-Dkaraf.startRemoteShell=true",
                "-wrapper.java.additional.8=-Djava.io.tmpdir=\"%KARAF_DATA%/tmp\"",
                "-# Uncomment if you need libraries on Java 8",
                "-#wrapper.java.additional.9=-Djava.endorsed.dirs=\"%JAVA_HOME%/jre/lib/endorsed;%JAVA_HOME%/lib/endorsed;%KARAF_HOME%/lib/endorsed\"",
                "-#wrapper.java.additional.10=-Djava.ext.dirs=\"%JAVA_HOME%/jre/lib/ext;%JAVA_HOME%/lib/ext;%KARAF_HOME%/lib/ext\"",
                "+wrapper.java.additional.1=-Djava.endorsed.dirs=%JAVA_HOME%/jre/lib/endorsed;%JAVA_HOME%/lib/endorsed;%KARAF_HOME%/lib/endorsed",
                "+wrapper.java.additional.2=-Djava.ext.dirs=%JAVA_HOME%/jre/lib/ext;%JAVA_HOME%/lib/ext;%KARAF_HOME%/lib/ext",
                "+wrapper.java.additional.3=-Dkaraf.instances=%KARAF_HOME%/instances",
                "+wrapper.java.additional.4=-Dkaraf.home=%KARAF_HOME%",
                "+wrapper.java.additional.5=-Dkaraf.base=%KARAF_BASE%",
                "+wrapper.java.additional.6=-Dkaraf.data=%KARAF_DATA%",
                "+wrapper.java.additional.7=-Dkaraf.etc=%KARAF_ETC%",
                "+wrapper.java.additional.8=-Dkaraf.restart.jvm.supported=true",
                "+wrapper.java.additional.9=-Djava.io.tmpdir=%KARAF_DATA%/tmp",
                "+wrapper.java.additional.10=-Djava.util.logging.config.file=%KARAF_BASE%/etc/java.util.logging.properties",
                "+wrapper.java.additional.11=-Dcom.sun.management.jmxremote",
                "+wrapper.java.additional.12=-Dkaraf.startLocalConsole=false",
                "+wrapper.java.additional.13=-Dkaraf.startRemoteShell=true",
                "diff --git a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows64/karaf-wrapper.conf b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows64/karaf-wrapper.conf",
                "index 51a18772fb..b528acd0ae 100644",
                "--- a/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows64/karaf-wrapper.conf",
                "+++ b/wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows64/karaf-wrapper.conf",
                "@@ -39,13 +39,15 @@ wrapper.java.library.path.1=%KARAF_BASE%/lib/wrapper/",
                " # note that n is the parameter number starting from 1.",
                "-wrapper.java.additional.1=-Dkaraf.home=\"%KARAF_HOME%\"",
                "-wrapper.java.additional.2=-Dkaraf.base=\"%KARAF_BASE%\"",
                "-wrapper.java.additional.3=-Dkaraf.data=\"%KARAF_DATA%\"",
                "-wrapper.java.additional.4=-Dkaraf.etc=\"%KARAF_ETC%\"",
                "-wrapper.java.additional.5=-Dcom.sun.management.jmxremote",
                "-wrapper.java.additional.6=-Dkaraf.startLocalConsole=false",
                "-wrapper.java.additional.7=-Dkaraf.startRemoteShell=true",
                "-wrapper.java.additional.8=-Djava.io.tmpdir=\"%KARAF_DATA%/tmp\"",
                "-# Uncomment if you need libraries on Java 8",
                "-#wrapper.java.additional.9=-Djava.endorsed.dirs=\"%JAVA_HOME%/jre/lib/endorsed;%JAVA_HOME%/lib/endorsed;%KARAF_HOME%/lib/endorsed\"",
                "-#wrapper.java.additional.10=-Djava.ext.dirs=\"%JAVA_HOME%/jre/lib/ext;%JAVA_HOME%/lib/ext;%KARAF_HOME%/lib/ext\"",
                "+wrapper.java.additional.1=-Djava.endorsed.dirs=%JAVA_HOME%/jre/lib/endorsed;%JAVA_HOME%/lib/endorsed;%KARAF_HOME%/lib/endorsed",
                "+wrapper.java.additional.2=-Djava.ext.dirs=%JAVA_HOME%/jre/lib/ext;%JAVA_HOME%/lib/ext;%KARAF_HOME%/lib/ext",
                "+wrapper.java.additional.3=-Dkaraf.instances=%KARAF_HOME%/instances",
                "+wrapper.java.additional.4=-Dkaraf.home=%KARAF_HOME%",
                "+wrapper.java.additional.5=-Dkaraf.base=%KARAF_BASE%",
                "+wrapper.java.additional.6=-Dkaraf.data=%KARAF_DATA%",
                "+wrapper.java.additional.7=-Dkaraf.etc=%KARAF_ETC%",
                "+wrapper.java.additional.8=-Dkaraf.restart.jvm.supported=true",
                "+wrapper.java.additional.9=-Djava.io.tmpdir=%KARAF_DATA%/tmp",
                "+wrapper.java.additional.10=-Djava.util.logging.config.file=%KARAF_BASE%/etc/java.util.logging.properties",
                "+wrapper.java.additional.11=-Dcom.sun.management.jmxremote",
                "+wrapper.java.additional.12=-Dkaraf.startLocalConsole=false",
                "+wrapper.java.additional.13=-Dkaraf.startRemoteShell=true"
            ],
            "changed_files": [
                "wrapper/src/main/resources/org/apache/karaf/wrapper/internal/unix/karaf-wrapper.conf",
                "wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows/karaf-wrapper.conf",
                "wrapper/src/main/resources/org/apache/karaf/wrapper/internal/windows64/karaf-wrapper.conf"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5840": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5840",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d811947f52086b025c0fd94246d1fa04de9ffe5e",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532186280,
            "hunks": 0,
            "message": "Merge pull request #577 from jbonofre/LDAPS_TEST_IMP Use localhost CN in SSL test mykey to work with any JVM",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "577": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 577",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d5f3edfe44f78bf0e71d588eb48da57a92d62a9a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525751813,
            "hunks": 7,
            "message": "[KARAF-5733] Upgrade to Felix EventAdmin 1.5.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 0043a6cdd3..b00eb7b773 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -206,3 +206,3 @@",
                "         <felix.metatype.version>1.1.6</felix.metatype.version>",
                "-        <felix.eventadmin.version>1.4.10</felix.eventadmin.version>",
                "+        <felix.eventadmin.version>1.5.0</felix.eventadmin.version>",
                "         <felix.eventadmin.webconsole.plugin.version>1.1.8</felix.eventadmin.webconsole.plugin.version>",
                "diff --git a/services/eventadmin/src/main/java/org/apache/felix/eventadmin/impl/handler/EventAdminImpl.java b/services/eventadmin/src/main/java/org/apache/felix/eventadmin/impl/handler/EventAdminImpl.java",
                "index 0b9f481426..b583b6ca56 100644",
                "--- a/services/eventadmin/src/main/java/org/apache/felix/eventadmin/impl/handler/EventAdminImpl.java",
                "+++ b/services/eventadmin/src/main/java/org/apache/felix/eventadmin/impl/handler/EventAdminImpl.java",
                "@@ -25,3 +25,2 @@ import javax.security.auth.Subject;",
                "-import org.apache.felix.eventadmin.impl.handler.EventHandlerTracker.Matcher;",
                " import org.apache.felix.eventadmin.impl.tasks.AsyncDeliverTasks;",
                "@@ -29,2 +28,3 @@ import org.apache.felix.eventadmin.impl.tasks.DefaultThreadPool;",
                " import org.apache.felix.eventadmin.impl.tasks.SyncDeliverTasks;",
                "+import org.apache.felix.eventadmin.impl.util.Matchers;",
                " import org.osgi.framework.BundleContext;",
                "@@ -59,3 +59,3 @@ public class EventAdminImpl implements EventAdmin",
                "     // matchers for ignore topics",
                "-    private Matcher[] m_ignoreTopics;",
                "+    private Matchers.Matcher[] m_ignoreTopics;",
                "@@ -98,3 +98,3 @@ public class EventAdminImpl implements EventAdmin",
                "         m_postManager = new AsyncDeliverTasks(asyncPool, m_sendManager);",
                "-        m_ignoreTopics = EventHandlerTracker.createMatchers(ignoreTopics);",
                "+        m_ignoreTopics = Matchers.createEventTopicMatchers(ignoreTopics);",
                "     }",
                "@@ -126,3 +126,3 @@ public class EventAdminImpl implements EventAdmin",
                "         {",
                "-            for(final Matcher m : this.m_ignoreTopics)",
                "+            for(final Matchers.Matcher m : this.m_ignoreTopics)",
                "             {",
                "@@ -231,3 +231,3 @@ public class EventAdminImpl implements EventAdmin",
                "         this.tracker.open();",
                "-        this.m_ignoreTopics = EventHandlerTracker.createMatchers(ignoreTopics);",
                "+        this.m_ignoreTopics = Matchers.createEventTopicMatchers(ignoreTopics);",
                "     }"
            ],
            "changed_files": [
                "pom.xml",
                "services/eventadmin/src/main/java/org/apache/felix/eventadmin/impl/handler/EventAdminImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5733": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5733",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cc46476d28280e29440d3cc0a7ea16ccc468f175",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533151276,
            "hunks": 1,
            "message": "[KARAF-5856] Upgrade to Pax Web 7.2.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index deaed76a09..12d12bc3f7 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -280,3 +280,3 @@",
                "         <pax.url.version>2.5.4</pax.url.version>",
                "-        <pax.web.version>7.2.1</pax.web.version>",
                "+        <pax.web.version>7.2.2</pax.web.version>",
                "         <pax.tinybundle.version>3.0.0</pax.tinybundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5856": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5856",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4d399fede5bfccdfe7dac1b3ab57b798fbd969d9",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525332516,
            "hunks": 1,
            "message": "[KARAF-5713] Upgrade to Maven 3.5.3",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index fab585f034..38ddf316af 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -266,3 +266,3 @@",
                "         <log4j.version>1.2.17</log4j.version>",
                "-        <maven.version>3.5.2</maven.version>",
                "+        <maven.version>3.5.3</maven.version>",
                "         <maven.wagon.version>3.0.0</maven.wagon.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5713": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5713",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9c73a4e457da4bb35991c4edee47e9378ae7f4c3",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525336618,
            "hunks": 1,
            "message": "[KARAF-5715] Upgrade to XBean 4.8",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index fab585f034..6aa18eaaba 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -305,3 +305,3 @@",
                "         <struts.bundle.version>1.3.10_1</struts.bundle.version>",
                "-        <xbean.version>4.7</xbean.version>",
                "+        <xbean.version>4.8</xbean.version>",
                "         <xerces.version>2.11.0_1</xerces.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5715": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5715",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3461912a2d969a500714fc424cbb5545863869bc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526192357,
            "hunks": 1,
            "message": "[KARAF-5699] Upgrade to Jolokia 1.5.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index bb2ab5c90d..c087086c9d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -163,3 +163,3 @@",
                "         <jasypt.bundle.version>1.9.2_1</jasypt.bundle.version>",
                "-        <jolokia.version>1.3.5</jolokia.version>",
                "+        <jolokia.version>1.5.0</jolokia.version>",
                "         <serp.bundle.version>1.14.1_1</serp.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5699": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5699",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7cfa2d0a504b778d22cd870d6897d87e0c16e9b3",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531389261,
            "hunks": 1,
            "message": "[KARAF-5815] Upgrade to commons-compress 1.17",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 944dc867fd..0449777559 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -157,3 +157,3 @@",
                "         <commons-codec.version>1.10</commons-codec.version>",
                "-        <commons-compress.version>1.16.1</commons-compress.version>",
                "+        <commons-compress.version>1.17</commons-compress.version>",
                "         <commons-collections.version>3.2.2</commons-collections.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5815": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5815",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3336158547c33407658a14364a5f0557756a5925",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531338137,
            "hunks": 0,
            "message": "Merge pull request #545 from graben/master Fix small typo in documentation",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "545": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 545",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "abcdeb05fce0e21417f1f253842b2c78531d4bdf",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531923040,
            "hunks": 1,
            "message": "[KARAF-5822] Upgrade to Maven Wagon 3.1.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index f551236e3f..f623f2e609 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -267,3 +267,3 @@",
                "         <maven.version>3.5.4</maven.version>",
                "-        <maven.wagon.version>3.0.0</maven.wagon.version>",
                "+        <maven.wagon.version>3.1.0</maven.wagon.version>",
                "         <maven-plugin-annotations.version>3.5</maven-plugin-annotations.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5822": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5822",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b1176700aaa382090e5b07e2ada20411abe5b9a2",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1524979666,
            "hunks": 0,
            "message": "Merge pull request #488 from ryandgoulding/fix-formatting Fix formatting in pom.xml",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "488": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 488",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1aa77819d46bdfa6fc6a16cbb8afd86fa8b9a4f1",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531827524,
            "hunks": 1,
            "message": "[KARAF-5838] Upgrade to eclipselink 2.7.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c724130d2f..936b730ab9 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -169,3 +169,3 @@",
                "         <dom4j.bundle.version>1.6.1_5</dom4j.bundle.version>",
                "-        <eclipselink.version>2.7.1</eclipselink.version>",
                "+        <eclipselink.version>2.7.2</eclipselink.version>",
                "         <jasypt.bundle.version>1.9.2_1</jasypt.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5838": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5838",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb4e7bb9ac736e5c8bfb0d21f3cb04b4eb6c04b7",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527658618,
            "hunks": 1,
            "message": "[KARAF-5736] Upgrade to Narayana 5.8.1.Final",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ba2be3067f..b19058bb1a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -251,3 +251,3 @@",
                "         <guava.version>20.0</guava.version>",
                "-        <narayana.version>5.7.2.Final</narayana.version>",
                "+        <narayana.version>5.8.1.Final</narayana.version>",
                "         <hibernate.annotations.common.version>3.3.0.ga</hibernate.annotations.common.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5736": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5736",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9600b329de8b8ca1aa723d0664db263f8cadab74",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531389436,
            "hunks": 1,
            "message": "[KARAF-5816] Upgrade to Aries Transaction Blueprint 2.2.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 944dc867fd..c14bdd842a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -244,3 +244,3 @@",
                "         <aries.transaction.blueprint.version>1.1.1</aries.transaction.blueprint.version>",
                "-        <aries.transaction.blueprint.version2>2.1.0</aries.transaction.blueprint.version2>",
                "+        <aries.transaction.blueprint.version2>2.2.0</aries.transaction.blueprint.version2>",
                "         <aries.util.version>1.1.3</aries.util.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5816": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5816",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "22098bcaaf5d9ad1492c628057f4e0afaf501d10",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527139171,
            "hunks": 0,
            "message": "Merge pull request #512 from vorburger/gitignore-apt_generated_tests add Eclipse's .apt_generated_tests/ directory to .gitignore",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "512": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 512",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c37d5a7020e03edd93190217cda0d38a5642abaa",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1532151139,
            "hunks": 15,
            "message": "[KARAF-5839] Expose more method in KarafTestSupport and provide assertServiceAvailable()",
            "diff": [
                "diff --git a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "index 150ae67e0c..efa65ad05a 100644",
                "--- a/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "+++ b/itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java",
                "@@ -292,3 +292,3 @@ public class KarafTestSupport {",
                "      */",
                "-    protected String executeCommand(final String command, Principal ... principals) {",
                "+    public String executeCommand(final String command, Principal ... principals) {",
                "         return executeCommand(command, COMMAND_TIMEOUT, false, principals);",
                "@@ -306,3 +306,3 @@ public class KarafTestSupport {",
                "      */",
                "-    protected String executeCommand(final String command, final Long timeout, final Boolean silent, final Principal ... principals) {",
                "+    public String executeCommand(final String command, final Long timeout, final Boolean silent, final Principal ... principals) {",
                "         waitForCommandService(command);",
                "@@ -358,4 +358,15 @@ public class KarafTestSupport {",
                "+    public void assertServiceAvailable(Class type) {",
                "+        Assert.assertNotNull(getOsgiService(type));",
                "+    }",
                "+",
                "+    public void assertServiceAvailable(Class type, long timeout) {",
                "+        Assert.assertNotNull(getOsgiService(type, timeout));",
                "+    }",
                "+",
                "+    public void assertServiceAvailable(Class type, String filter, long timeout) {",
                "+        Assert.assertNotNull(getOsgiService(type, filter, timeout));",
                "+    }",
                "-    protected <T> T getOsgiService(Class<T> type, long timeout) {",
                "+    public <T> T getOsgiService(Class<T> type, long timeout) {",
                "         return getOsgiService(type, null, timeout);",
                "@@ -363,3 +374,3 @@ public class KarafTestSupport {",
                "-    protected <T> T getOsgiService(Class<T> type) {",
                "+    public <T> T getOsgiService(Class<T> type) {",
                "         return getOsgiService(type, null, SERVICE_TIMEOUT);",
                "@@ -368,3 +379,3 @@ public class KarafTestSupport {",
                "     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })",
                "-    protected <T> T getOsgiService(Class<T> type, String filter, long timeout) {",
                "+    public <T> T getOsgiService(Class<T> type, String filter, long timeout) {",
                "         ServiceTracker tracker = null;",
                "@@ -440,3 +451,3 @@ public class KarafTestSupport {",
                "-    protected void waitForService(String filter, long timeout) throws InvalidSyntaxException, InterruptedException {",
                "+    public void waitForService(String filter, long timeout) throws InvalidSyntaxException, InterruptedException {",
                "         ServiceTracker<Object, Object> st = new ServiceTracker<>(bundleContext, bundleContext.createFilter(filter), null);",
                "@@ -450,3 +461,3 @@ public class KarafTestSupport {",
                "-    protected Bundle waitBundleState(String symbolicName, int state) {",
                "+    public Bundle waitBundleState(String symbolicName, int state) {",
                "         long endTime = System.currentTimeMillis() + BUNDLE_TIMEOUT;",
                "@@ -588,3 +599,3 @@ public class KarafTestSupport {",
                "-    protected void assertBundleInstalled(String name) {",
                "+    public void assertBundleInstalled(String name) {",
                "         Assert.assertNotNull(\"Bundle \" + name + \" should be installed\", findBundleByName(name));",
                "@@ -592,3 +603,3 @@ public class KarafTestSupport {",
                "-    protected void assertBundleNotInstalled(String name) {",
                "+    public void assertBundleNotInstalled(String name) {",
                "         Assert.assertNull(\"Bundle \" + name + \" should not be installed\", findBundleByName(name));",
                "@@ -596,3 +607,3 @@ public class KarafTestSupport {",
                "-    protected Bundle findBundleByName(String symbolicName) {",
                "+    public Bundle findBundleByName(String symbolicName) {",
                "         for (Bundle bundle : bundleContext.getBundles()) {",
                "@@ -605,3 +616,3 @@ public class KarafTestSupport {",
                "-    protected void installAndAssertFeature(String feature) throws Exception {",
                "+    public void installAndAssertFeature(String feature) throws Exception {",
                "         featureService.installFeature(feature, NO_AUTO_REFRESH);",
                "@@ -610,3 +621,3 @@ public class KarafTestSupport {",
                "-    protected void installAssertAndUninstallFeature(String feature, String version) throws Exception {",
                "+    public void installAssertAndUninstallFeature(String feature, String version) throws Exception {",
                "         installAssertAndUninstallFeatures(feature + \"/\" + version);",
                "@@ -614,3 +625,3 @@ public class KarafTestSupport {",
                "-    protected void installAssertAndUninstallFeatures(String... feature) throws Exception {",
                "+    public void installAssertAndUninstallFeatures(String... feature) throws Exception {",
                "         boolean success = false;",
                "@@ -643,3 +654,3 @@ public class KarafTestSupport {",
                "      */",
                "-    protected void uninstallNewFeatures(Set<Feature> featuresBefore) throws Exception {",
                "+    public void uninstallNewFeatures(Set<Feature> featuresBefore) throws Exception {",
                "         Feature[] features = featureService.listInstalledFeatures();",
                "@@ -659,3 +670,3 @@ public class KarafTestSupport {",
                "-    protected void close(Closeable closeAble) {",
                "+    public void close(Closeable closeAble) {",
                "         if (closeAble != null) {"
            ],
            "changed_files": [
                "itests/common/src/main/java/org/apache/karaf/itests/KarafTestSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5839": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5839",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be585db605f3b4bb0ef3d2cc551e140c81921e17",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525337562,
            "hunks": 1,
            "message": "[KARAF-5716] Upgrade to awaitability 3.1.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 38ddf316af..8a48df5e1f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -148,3 +148,3 @@",
                "         <asm.version>6.0</asm.version>",
                "-        <awaitility.version>3.0.0</awaitility.version>",
                "+        <awaitility.version>3.1.0</awaitility.version>",
                "         <cglib.bundle.version>3.2.4_1</cglib.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5716": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5716",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0da3b686e7f7adb5a07c4722adf86da1f98bdfff",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531454748,
            "hunks": 1,
            "message": "Merge branch 'master' into KARAF-5813",
            "diff": [
                "diff --cc pom.xml",
                "index 7ee2361442,0bb28c33a2..abbd32653f",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@@ -295,4 -295,4 +295,4 @@@",
                "          <spring42.version>4.2.9.RELEASE_1</spring42.version>",
                "-         <spring43.version>4.3.17.RELEASE_1</spring43.version>",
                "+         <spring43.version>4.3.18.RELEASE_1</spring43.version>",
                " -        <spring50.version>5.0.6.RELEASE_1</spring50.version>",
                " +        <spring50.version>5.0.7.RELEASE_1</spring50.version>",
                "          <spring.security31.version>3.1.4.RELEASE</spring.security31.version>"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5813": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5813",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a8f9951e2aa5be379d3eb8b37cc8a28987709abd",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527168515,
            "hunks": 2,
            "message": "[KARAF-5728] Upgrade to Pax Web 7.1.1 and Jetty 9.4.10.v20180503",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 1d9b10abd9..b227cee682 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -260,3 +260,3 @@",
                "         <javassist.version>3.9.0.GA</javassist.version>",
                "-        <jetty.version>9.4.6.v20170531</jetty.version>",
                "+        <jetty.version>9.4.10.v20180503</jetty.version>",
                "         <jline.version>3.7.0</jline.version>",
                "@@ -279,3 +279,3 @@",
                "         <pax.url.version>2.5.4</pax.url.version>",
                "-        <pax.web.version>7.0.0</pax.web.version>",
                "+        <pax.web.version>7.1.1</pax.web.version>",
                "         <pax.tinybundle.version>3.0.0</pax.tinybundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5728": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5728",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1b3197b4ff8abe1cc0860a80a4797dfdcc4e2138",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531371041,
            "hunks": 1,
            "message": "[KARAF-5812] Upgrade to Spring 4.3.18.RELEASE",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 944dc867fd..0bb28c33a2 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -295,3 +295,3 @@",
                "         <spring42.version>4.2.9.RELEASE_1</spring42.version>",
                "-        <spring43.version>4.3.17.RELEASE_1</spring43.version>",
                "+        <spring43.version>4.3.18.RELEASE_1</spring43.version>",
                "         <spring50.version>5.0.6.RELEASE_1</spring50.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5812": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5812",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "48c490e33c45568d0363492962ff1451f32264dc",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531371113,
            "hunks": 1,
            "message": "[KARAF-5813] Upgrade to Spring 5.0.7.RELEASE",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 944dc867fd..7ee2361442 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -296,3 +296,3 @@",
                "         <spring43.version>4.3.17.RELEASE_1</spring43.version>",
                "-        <spring50.version>5.0.6.RELEASE_1</spring50.version>",
                "+        <spring50.version>5.0.7.RELEASE_1</spring50.version>",
                "         <spring.security31.version>3.1.4.RELEASE</spring.security31.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5813": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5813",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7f45c996d9347b786eaa7f3cc8500334ed77b229",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531922678,
            "hunks": 1,
            "message": "[KARAF-5824] Upgrade to awaitility 3.1.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..e2edae6648 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -149,3 +149,3 @@",
                "         <javax.annotation.version>1.2</javax.annotation.version>",
                "-        <awaitility.version>3.1.0</awaitility.version>",
                "+        <awaitility.version>3.1.1</awaitility.version>",
                "         <cglib.bundle.version>3.2.4_1</cglib.bundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5824": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5824",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fac8b68d3d58445df62deee53170ce61c43428b1",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523012047,
            "hunks": 1,
            "message": "[KARAF-5692] Fix config:edit for factory PID with alias",
            "diff": [
                "diff --git a/config/src/main/java/org/apache/karaf/config/core/impl/ConfigRepositoryImpl.java b/config/src/main/java/org/apache/karaf/config/core/impl/ConfigRepositoryImpl.java",
                "index 898c88c9e9..04757bb871 100644",
                "--- a/config/src/main/java/org/apache/karaf/config/core/impl/ConfigRepositoryImpl.java",
                "+++ b/config/src/main/java/org/apache/karaf/config/core/impl/ConfigRepositoryImpl.java",
                "@@ -156,3 +156,8 @@ public class ConfigRepositoryImpl implements ConfigRepository {",
                "         TypedProperties props = new TypedProperties();",
                "-        File file = File.createTempFile(factoryPid + \"-\", \".cfg\", new File(System.getProperty(\"karaf.etc\")));",
                "+        File file = null;",
                "+        if (alias != null && !\"\".equals(alias.trim())) {",
                "+            file = new File(new File(System.getProperty(\"karaf.etc\")), factoryPid + \"-\" + alias + \".cfg\");",
                "+        } else {",
                "+            file = File.createTempFile(factoryPid + \"-\", \".cfg\", new File(System.getProperty(\"karaf.etc\")));",
                "+        }",
                "         props.putAll(properties);"
            ],
            "changed_files": [
                "config/src/main/java/org/apache/karaf/config/core/impl/ConfigRepositoryImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8114779cc75596e095165afb7e1837276205017f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531921305,
            "hunks": 1,
            "message": "[KARAF-5826] Upgrade to narayana 5.9.0.Final",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c37596e355..3b5576a759 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -250,3 +250,3 @@",
                "         <guava.version>20.0</guava.version>",
                "-        <narayana.version>5.8.1.Final</narayana.version>",
                "+        <narayana.version>5.9.0.Final</narayana.version>",
                "         <hibernate.annotations.common.version>3.3.0.ga</hibernate.annotations.common.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5826": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5826",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b06b77a1bbb75284789a381b5f48034a6481813c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531831015,
            "hunks": 1,
            "message": "[KARAF-5841] Upgrade to Pax Web 7.2.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c724130d2f..8e6e3e177b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -280,3 +280,3 @@",
                "         <pax.url.version>2.5.4</pax.url.version>",
                "-        <pax.web.version>7.1.1</pax.web.version>",
                "+        <pax.web.version>7.2.1</pax.web.version>",
                "         <pax.tinybundle.version>3.0.0</pax.tinybundle.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5841": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5841",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1ef84125d293d221969d9e24efff68e948d6d433",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1531889845,
            "hunks": 1,
            "message": "[KARAF-5830] Upgrade to tagsoup 1.2.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e63deb8d31..0a0a0d2d37 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -1935,3 +1935,3 @@",
                "                             <artifactId>tagsoup</artifactId>",
                "-                            <version>1.2</version>",
                "+                            <version>1.2.1</version>",
                "                         </dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5830": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5830",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c5b66951e16f817f164cd87534d1e9e0d062ec66",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527158376,
            "hunks": 1,
            "message": "[KARAF-5734] Upgrade to Felix Metatype 1.2.0",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a0f6b66c69..f5ffbd870e 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -205,3 +205,3 @@",
                "         <felix.memoryusage.webconsole.plugin.version>1.0.8</felix.memoryusage.webconsole.plugin.version>",
                "-        <felix.metatype.version>1.1.6</felix.metatype.version>",
                "+        <felix.metatype.version>1.2.0</felix.metatype.version>",
                "         <felix.eventadmin.version>1.5.0</felix.eventadmin.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5734": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5734",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "10926e12d4768c2703bda9d9a9c95956f89f70ec",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1525431359,
            "hunks": 2,
            "message": "[KARAF-5722] Upgrade to ASM 6.2 and Aries Proxy Impl 1.1.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index e852899f93..20aba85319 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -147,3 +147,3 @@",
                "         <antlr.bundle.version>2.7.7_5</antlr.bundle.version>",
                "-        <asm.version>6.0</asm.version>",
                "+        <asm.version>6.2</asm.version>",
                "         <awaitility.version>3.1.0</awaitility.version>",
                "@@ -236,3 +236,3 @@",
                "         <aries.jndi.url.version>1.1.0</aries.jndi.url.version>",
                "-        <aries.proxy.version>1.1.1</aries.proxy.version>",
                "+        <aries.proxy.version>1.1.2</aries.proxy.version>",
                "         <aries.proxy.api.version>1.1.0</aries.proxy.api.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "KARAF-5722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: KARAF-5722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "33b617b374e6c2db5e469e7046e6a7ce327f2a8f",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1526141617,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'upstream/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ab6737411c10b781349ccd1328200cdf8afbfa7c",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1533290135,
            "hunks": 1,
            "message": "Upgrade RELEASE-NOTES in preparation for the release",
            "diff": [
                "diff --git a/RELEASE-NOTES b/RELEASE-NOTES",
                "index da18b684bf..0c655f7a2b 100644",
                "--- a/RELEASE-NOTES",
                "+++ b/RELEASE-NOTES",
                "@@ -17,2 +17,50 @@",
                "+\t\t    Apache Karaf 4.1.6",
                "+\t\t    ==================",
                "+ Apache Karaf 4.1.6 is a maintenance release on the 4.1.x series, bringing bug fixes, updates and some improvements.",
                "+",
                "+ ChangeLog:",
                "+ ----------",
                "+** Bug",
                "+    * [KARAF-4996] - Missing packages in created instances ",
                "+    * [KARAF-5422] - Feature Repository with Spaces in Path",
                "+    * [KARAF-5642] - karaf:deploy goal broken",
                "+    * [KARAF-5645] - Karaf crashes when using the character ']' in the console",
                "+    * [KARAF-5646] - Support env:XXX subtitution missing for system.properties",
                "+    * [KARAF-5647] - start, stop, shell, status and client fail on Solaris Sparc 11",
                "+    * [KARAF-5657] - client.bat doesn't work on Windows",
                "+    * [KARAF-5671] - Demo profiles still use \"old style\" pax-logging configuration",
                "+    * [KARAF-5683] - Completion is \"weird\" on Windows 8",
                "+    * [KARAF-5689] - Console is broken after Ctrl+C",
                "+    * [KARAF-5694] - strip url to ensure it's a valid one which could download",
                "+    * [KARAF-5699] - Upgrade to jolokia 1.5.0",
                "+    * [KARAF-5781] - Properties edit doesn't conserve the existing ones",
                "+    * [KARAF-5798] - Karaf slave instance does not write pid or port file until it becomes master",
                "+    * [KARAF-5851] - Remove heading spaces in the cfg files",
                "+",
                "+** New Feature",
                "+    * [KARAF-5665] - Sometimes the command description does not show when listing commands with \"TAB\"",
                "+",
                "+** Improvement",
                "+    * [KARAF-5363] - Add --no-start option to kar:install, kar cfg and kar MBean",
                "+    * [KARAF-5677] - deploy goal throws NPE with artifactLocations is not provided",
                "+    * [KARAF-5742] - Possibility to configure colors for karaf shell",
                "+    * [KARAF-5759] - Add an option to config:list to list only the PIDs",
                "+    * [KARAF-5787] - Improve scheduler whiteboard to avoid ClassCastException",
                "+    * [KARAF-5796] - Heap dump needs to end in .hprof w/ newer JDK",
                "+",
                "+** Dependency upgrade",
                "+    * [KARAF-5602] - Upgrade to Spring Security 4.2.4.RELEASE",
                "+    * [KARAF-5616] - Upgrade to SCR 2.0.14",
                "+    * [KARAF-5618] - Upgrade to Aries JMX Blueprint 1.2.0",
                "+    * [KARAF-5619] - Upgrade to Aries JMX Core 1.1.8 & JMX Whiteboard 1.2.0",
                "+    * [KARAF-5623] - Upgrade to maven-bundle-plugin 3.5.0",
                "+    * [KARAF-5624] - Upgrade to jline 3.6.1",
                "+    * [KARAF-5668] - Upgrade to JLine 3.6.2",
                "+    * [KARAF-5710] - Upgrade to Felix Resolver 1.16.0",
                "+    * [KARAF-5717] - Upgrade to easymock 3.6",
                "+    * [KARAF-5718] - Upgrade to Equinox 3.12.100",
                "+    * [KARAF-5719] - Upgrade to Jansi 1.17.1",
                "+    * [KARAF-5829] - Upgrade to Xerces 2.12.0",
                "+",
                " \t\t    Apache Karaf 4.1.5"
            ],
            "changed_files": [
                "RELEASE-NOTES"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.1.6",
                "karaf-4.1.7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6d06d72c2cfb7ced7a0b22fb59a6c67e21f4191a",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523550188,
            "hunks": 1,
            "message": "Fix formatting in pom.xml The karaf-core pom.xml had a few properties indented improperly. This change realigns these anomalies appropriately. Signed-off-by: Ryan Goulding <ryandgoulding@gmail.com>",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ddd76b273d..fc3dc39ff5 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -165,4 +165,4 @@",
                "         <servlet.spec.groupId>javax.servlet</servlet.spec.groupId>",
                "-\t    <servlet.spec.artifactId>javax.servlet-api</servlet.spec.artifactId>",
                "-\t    <servlet.spec.version>3.1.0</servlet.spec.version>",
                "+\t<servlet.spec.artifactId>javax.servlet-api</servlet.spec.artifactId>",
                "+\t<servlet.spec.version>2.1.0</servlet.spec.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a49bd420a693b8b950af3af2e0c78eed2a755638",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523577844,
            "hunks": 0,
            "message": "Merge branch 'master' of github.com:apache/karaf",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b151c21f7bec397b0717b1b5191745d82b3b2cee",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530790440,
            "hunks": 1,
            "message": "Downgrade to easymock 3.6 (instead of 3.7-SNAPSHOT)",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 9d42419a93..fbbc8bfe00 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -181,3 +181,3 @@",
                "-        <easymock.version>3.7-SNAPSHOT</easymock.version>",
                "+        <easymock.version>3.6</easymock.version>",
                "         <objenesis.version>2.6</objenesis.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "331f181d0960628e5ab4d088309c3c1c1680cba7",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1527072131,
            "hunks": 1,
            "message": "add Eclipse's .apt_generated_tests/ directory to .gitignore",
            "diff": [
                "diff --git a/.gitignore b/.gitignore",
                "index 44dfa6c05e..18a1529980 100644",
                "--- a/.gitignore",
                "+++ b/.gitignore",
                "@@ -10,2 +10,3 @@ bin",
                " dependency-reduced-pom.xml",
                "+.apt_generated_tests"
            ],
            "changed_files": [
                ".gitignore"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8a02b1ccd42bcb15853fa458a4da5abda4ae2841",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1523550496,
            "hunks": 1,
            "message": "Update pom.xml",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index fc3dc39ff5..86bccbd4b8 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -166,3 +166,3 @@",
                " \t<servlet.spec.artifactId>javax.servlet-api</servlet.spec.artifactId>",
                "-\t<servlet.spec.version>2.1.0</servlet.spec.version>",
                "+\t<servlet.spec.version>3.1.0</servlet.spec.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d96685fd2e770c3677c0528d82bb259e2d8453aa",
            "repository": "https://github.com/apache/karaf",
            "timestamp": 1530773270,
            "hunks": 0,
            "message": "Merge branch 'master' of github.com:apache/karaf",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "karaf-4.2.1",
                "karaf-4.2.10",
                "karaf-4.2.11",
                "karaf-4.2.12",
                "karaf-4.2.13",
                "karaf-4.2.14",
                "karaf-4.2.15",
                "karaf-4.2.16",
                "karaf-4.2.2",
                "karaf-4.2.3",
                "karaf-4.2.4",
                "karaf-4.2.5",
                "karaf-4.2.6",
                "karaf-4.2.7",
                "karaf-4.2.8",
                "karaf-4.2.9",
                "karaf-4.3.0",
                "karaf-4.3.0.RC1",
                "karaf-4.3.1",
                "karaf-4.3.10",
                "karaf-4.3.2",
                "karaf-4.3.3",
                "karaf-4.3.4",
                "karaf-4.3.5",
                "karaf-4.3.6",
                "karaf-4.3.7",
                "karaf-4.3.8",
                "karaf-4.3.9",
                "karaf-4.4.0",
                "karaf-4.4.1",
                "karaf-4.4.2",
                "karaf-4.4.3",
                "karaf-4.4.4",
                "karaf-4.4.5",
                "karaf-4.4.6"
            ],
            "matched_rules": []
        }
    ]
}
