{
    "advisory_record": {
        "cve_id": "CVE-2018-17197",
        "description": "A carefully crafted or corrupt sqlite file can cause an infinite loop in Apache Tika's SQLite3Parser in versions 1.8-1.19.1 of Apache Tika.",
        "reserved_timestamp": 1537315200,
        "published_timestamp": 1545660000,
        "updated_timestamp": 1586984804,
        "repository_url": null,
        "references": {
            "": 99,
            "https://access.redhat.com/support/": 11,
            "https://access.redhat.com/downloads/": 9,
            "https://access.redhat.com/labs/": 7,
            "https://access.redhat.com/support/policy/updates/jboss_notes": 6,
            "https://access.redhat.com/errata/": 6,
            "https://access.redhat.com/management/": 4,
            "https://access.redhat.com/": 4,
            "https://access.redhat.com/documentation": 4,
            "https://access.redhat.com/product-life-cycles/": 4,
            "https://access.redhat.com/security": 4,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 4,
            "https://access.redhat.com/security/security-updates/#/cve": 4,
            "https://access.redhat.com/support/contact/": 4,
            "https://status.redhat.com": 4,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 3,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 3,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 3,
            "https://access.redhat.com/products/": 3,
            "http://www.securityfocus.com/bid/106293": 2,
            "https://lists.apache.org/thread.html/7c021a4ea2037e52e74628e17e8e0e2acab1f447160edc8be0eae6d3%40%3Cdev.tika.apache.org%3E": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html": 2,
            "https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5%40%3Csolr-user.lucene.apache.org%3E": 2,
            "https://www.oracle.com/security-alerts/cpuapr2020.html": 2,
            "https://www.openwall.com/lists/oss-security/2018/12/22/2": 2,
            "https://lists.apache.org/thread.html/7c021a4ea2037e52e74628e17e8e0e2acab1f447160edc8be0eae6d3@%3Cdev.tika.apache.org%3E": 2,
            "https://access.redhat.com/security/cve/cve-2018-17197": 2,
            "https://access.redhat.com/downloads/content/package-browser": 2,
            "https://catalog.redhat.com/software/containers/explore/": 2,
            "https://access.redhat.com/articles/1202803": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 2,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 2,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 2,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 2,
            "https://access.redhat.com/documentation/": 2,
            "https://access.redhat.com/security/": 2,
            "https://access.redhat.com/security/vulnerabilities": 2,
            "https://access.redhat.com/security/data": 2,
            "https://access.redhat.com/security/security-updates/#/security-labs": 2,
            "https://access.redhat.com/security/updates/backporting/": 2,
            "https://access.redhat.com/support/cases/": 2,
            "https://access.redhat.com/support/cases/#/troubleshoot": 2,
            "https://access.redhat.com/community": 2,
            "https://access.redhat.com/community/": 2,
            "https://access.redhat.com/discussions/": 2,
            "https://access.redhat.com/announcements/": 2,
            "https://access.redhat.com/accelerators/": 2,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 2,
            "https://cloud.redhat.com/insights": 2,
            "https://access.redhat.com/changeLanguage?language=en": 2,
            "https://access.redhat.com/changeLanguage?language=ko": 2,
            "https://access.redhat.com/changeLanguage?language=ja": 2,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 2,
            "https://access.redhat.com/support/policy/updates/red_hat_build_of_quarkus_notes": 2,
            "https://access.redhat.com/articles/7060671": 2,
            "https://redhat.com/en": 2,
            "https://twitter.com/RedHat": 2,
            "https://access.redhat.com/management": 2,
            "https://access.redhat.com/support": 2,
            "https://access.redhat.com/support/customer-service": 2,
            "https://access.redhat.com/articles/33844": 2,
            "https://access.redhat.com/help/login_assistance": 2,
            "https://www.redhat.com/en/trust": 2,
            "https://www.redhat.com/en/about/browser-support": 2,
            "https://www.redhat.com/en/about/digital-accessibility": 2,
            "https://access.redhat.com/recognition/": 2,
            "https://access.redhat.com/help/colophon/": 2,
            "https://www.redhat.com/": 2,
            "http://developers.redhat.com/": 2,
            "https://connect.redhat.com/": 2,
            "https://cloud.redhat.com/": 2,
            "https://access.redhat.com/subscription-value": 2,
            "https://www.redhat.com/about/": 2,
            "http://jobs.redhat.com": 2,
            "https://redhat.com/en/about/company": 2,
            "https://redhat.com/en/jobs": 2,
            "https://redhat.com/en/events": 2,
            "https://redhat.com/en/about/office-locations": 2,
            "https://redhat.com/en/contact": 2,
            "https://redhat.com/en/blog": 2,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 2,
            "https://coolstuff.redhat.com/": 2,
            "https://www.redhat.com/en/summit": 2,
            "https://redhat.com/en/about/privacy-policy": 2,
            "https://redhat.com/en/about/terms-use": 2,
            "https://redhat.com/en/about/all-policies-guidelines": 2,
            "https://redhat.com/en/about/digital-accessibility": 2,
            "https://access.redhat.com/product-life-cycles": 1,
            "https://access.redhat.com/articles/7019023": 1,
            "https://access.redhat.com/articles/6200982": 1,
            "https://access.redhat.com/search/#/knowledgebase": 1,
            "https://access.redhat.com/search/#/discussions": 1,
            "https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes": 1,
            "https://access.redhat.com/articles/7037218": 1,
            "https://github.com/nodejs/Release": 1,
            "https://access.redhat.com/articles/4544981": 1,
            "https://access.redhat.com/support/policy/updates/jboss_notes#p_rhbocamel": 1,
            "https://access.redhat.com/solutions/6342381": 1,
            "https://access.redhat.com/solutions/5941551": 1,
            "https://access.redhat.com/support/policy/updates/service-interconnect": 1,
            "https://access.redhat.com/articles/6975608": 1,
            "https://access.redhat.com/articles/6999674": 1,
            "https://access.redhat.com/articles/6371801": 1,
            "https://access.redhat.com/changeLanguage?language=fr": 1,
            "https://access.redhat.com/products/red-hat-satellite/": 1,
            "https://access.redhat.com/products/red-hat-subscription-management/": 1,
            "https://access.redhat.com/products/red-hat-insights/": 1,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 1,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-quay/": 1,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 1,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 1,
            "https://access.redhat.com/products/red-hat-storage/": 1,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 1,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 1,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 1,
            "https://access.redhat.com/products/red-hat-runtimes/": 1,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 1,
            "https://access.redhat.com/products/red-hat-data-grid/": 1,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 1,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 1,
            "https://access.redhat.com/products/spring-boot/": 1,
            "https://access.redhat.com/products/nodejs/": 1,
            "https://access.redhat.com/products/quarkus/": 1,
            "https://access.redhat.com/products/red-hat-application-foundations/": 1,
            "https://access.redhat.com/products/red-hat-fuse/": 1,
            "https://access.redhat.com/products/red-hat-amq/": 1,
            "https://access.redhat.com/products/red-hat-3scale/": 1
        },
        "affected_products": [
            "Apache",
            "Tika",
            "Apache Tika"
        ],
        "versions": {
            "status": "affected",
            "version": "Apache Tika 1.8-1.19.1"
        },
        "files": [
            "SQLite3Parser"
        ],
        "keywords": [
            "file",
            "cause",
            "craft",
            "tika",
            "version",
            "apache",
            "loop"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "4d4817bef686efc739a60cd724d8a252221dff1a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541702880,
            "hunks": 22,
            "message": "TIKA-2773 upgrade sqlite version",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/exception/CorruptedFileException.java b/tika-core/src/main/java/org/apache/tika/exception/CorruptedFileException.java",
                "new file mode 100644",
                "index 000000000..5ebad6d3a",
                "--- /dev/null",
                "+++ b/tika-core/src/main/java/org/apache/tika/exception/CorruptedFileException.java",
                "@@ -0,0 +1,31 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.exception;",
                "+",
                "+/**",
                "+ * This exception should be thrown when the parse absolutely, positively has to stop.",
                "+ * This exception must not be caught and swallowed if an embedded parser throws it.",
                "+ */",
                "+public class CorruptedFileException extends TikaException {",
                "+    public CorruptedFileException(String msg) {",
                "+        super(msg);",
                "+    }",
                "+",
                "+    public CorruptedFileException(String msg, Throwable cause) {",
                "+        super(msg, cause);",
                "+    }",
                "+}",
                "diff --git a/tika-core/src/main/java/org/apache/tika/extractor/ParsingEmbeddedDocumentExtractor.java b/tika-core/src/main/java/org/apache/tika/extractor/ParsingEmbeddedDocumentExtractor.java",
                "index d8e6519e8..efe5fbc2c 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/extractor/ParsingEmbeddedDocumentExtractor.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/extractor/ParsingEmbeddedDocumentExtractor.java",
                "@@ -24,4 +24,6 @@ import java.io.InputStream;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "+import org.apache.tika.exception.CorruptedFileException;",
                " import org.apache.tika.exception.TikaException;",
                " import org.apache.tika.io.CloseShieldInputStream;",
                "+import org.apache.tika.io.IOExceptionWithCause;",
                " import org.apache.tika.io.TemporaryResources;",
                "@@ -109,2 +111,4 @@ public class ParsingEmbeddedDocumentExtractor implements EmbeddedDocumentExtract",
                "             // For now, just skip the content",
                "+        } catch (CorruptedFileException e) {",
                "+            throw new IOExceptionWithCause(e);",
                "         } catch (TikaException e) {",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java",
                "index f1b27a66d..f2c9c19e7 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java",
                "@@ -19,2 +19,3 @@ package org.apache.tika.parser;",
                "+import org.apache.tika.exception.CorruptedFileException;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -149,3 +150,4 @@ public class RecursiveParserWrapper extends ParserDecorator {",
                "      *                                If set to <code>false</code>, embedded exceptions will be thrown and",
                "-     *                                the rest of the file will not be parsed",
                "+     *                                the rest of the file will not be parsed. The following will not be ignored:",
                "+     *                                  {@link CorruptedFileException}, {@link RuntimeException}",
                "      */",
                "@@ -379,2 +381,4 @@ public class RecursiveParserWrapper extends ParserDecorator {",
                "                 }",
                "+            } catch(CorruptedFileException e) {",
                "+                throw e;",
                "             } catch (TikaException e) {",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index f2cf2d117..4a284eccc 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -377,3 +377,3 @@",
                "       <artifactId>sqlite-jdbc</artifactId>",
                "-      <version>3.19.3</version>",
                "+      <version>3.25.2</version>",
                "       <scope>provided</scope>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java",
                "index e9e82fca3..e30b7bd11 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java",
                "@@ -27,3 +27,5 @@ import java.util.Set;",
                " import org.apache.commons.io.IOExceptionWithCause;",
                "+import org.apache.tika.exception.CorruptedFileException;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.metadata.Database;",
                "@@ -56,2 +58,3 @@ abstract class AbstractDBParser extends AbstractParser {",
                "         List<String> tableNames = null;",
                "+        EmbeddedDocumentUtil embeddedDocumentUtil = new EmbeddedDocumentUtil(context);",
                "         try {",
                "@@ -64,2 +67,7 @@ abstract class AbstractDBParser extends AbstractParser {",
                "             }",
                "+            if (e.getClass().toString().contains(\"SQLiteException\") && e.getMessage() != null",
                "+                && (e.getMessage().contains(\"[SQLITE_ERROR]\") || e.getMessage().contains(\"[SQLITE_CORRUPT]\"))) {",
                "+                throw new CorruptedFileException(\"Corrupt SQLITE\", e);",
                "+            }",
                "+",
                "             throw new IOExceptionWithCause(e);",
                "@@ -75,3 +83,3 @@ abstract class AbstractDBParser extends AbstractParser {",
                "             for (String tableName : tableNames) {",
                "-                JDBCTableReader tableReader = getTableReader(connection, tableName, context);",
                "+                JDBCTableReader tableReader = getTableReader(connection, tableName, embeddedDocumentUtil);",
                "                 xHandler.startElement(\"table\", \"name\", tableReader.getTableName());",
                "@@ -182,6 +190,20 @@ abstract class AbstractDBParser extends AbstractParser {",
                "      * @param tableName",
                "-     * @return",
                "+     * @return a reader",
                "+     * @deprecated use {@link #getTableReader(Connection, String, EmbeddedDocumentUtil)}",
                "      */",
                "+    @Deprecated",
                "     abstract protected JDBCTableReader getTableReader(Connection connection, String tableName, ParseContext parseContext);",
                "+    /**",
                "+     * Given a connection and a table name, return the JDBCTableReader for this db.",
                "+     *",
                "+     * @param connection",
                "+     * @param tableName",
                "+     * @param embeddedDocumentUtil embedded doc util",
                "+     * @return",
                "+     */",
                "+    abstract protected JDBCTableReader getTableReader(Connection connection,",
                "+                                                      String tableName,",
                "+                                                      EmbeddedDocumentUtil embeddedDocumentUtil);",
                "+",
                " }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "index af8d1d8d6..7c7d41ee5 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "@@ -64,6 +64,7 @@ class JDBCTableReader {",
                "     private final EmbeddedDocumentUtil embeddedDocumentUtil;",
                "-    public JDBCTableReader(Connection connection, String tableName, ParseContext context) {",
                "+    public JDBCTableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {",
                "+        System.out.println(\"new table: \"+tableName);",
                "         this.connection = connection;",
                "         this.tableName = tableName;",
                "-        embeddedDocumentUtil = new EmbeddedDocumentUtil(context);",
                "+        this.embeddedDocumentUtil = embeddedDocumentUtil;",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java",
                "index 3d86b0538..b2da6176e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java",
                "@@ -32,2 +32,3 @@ import java.util.Set;",
                " import org.apache.commons.io.IOExceptionWithCause;",
                "+import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.io.TikaInputStream;",
                "@@ -132,3 +133,8 @@ class SQLite3DBParser extends AbstractDBParser {",
                "     public JDBCTableReader getTableReader(Connection connection, String tableName, ParseContext context) {",
                "-        return new SQLite3TableReader(connection, tableName, context);",
                "+        return new SQLite3TableReader(connection, tableName, new EmbeddedDocumentUtil(context));",
                "+    }",
                "+",
                "+    @Override",
                "+    protected JDBCTableReader getTableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {",
                "+        return new SQLite3TableReader(connection, tableName, embeddedDocumentUtil);",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java",
                "index ae6cb139d..fd5f9d4aa 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java",
                "@@ -25,2 +25,3 @@ import java.sql.SQLException;",
                "+import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -41,4 +42,4 @@ class SQLite3TableReader extends JDBCTableReader {",
                "-    public SQLite3TableReader(Connection connection, String tableName, ParseContext context) {",
                "-        super(connection, tableName, context);",
                "+    public SQLite3TableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {",
                "+        super(connection, tableName, embeddedDocumentUtil);",
                "     }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/exception/CorruptedFileException.java",
                "tika-core/src/main/java/org/apache/tika/extractor/ParsingEmbeddedDocumentExtractor.java",
                "tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2773": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0c49c851979163334ea05cbebdd11ff87feba62d"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2773",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b899ed2084da5e55e6f6f67f9ed6320942e4fd6d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541787303,
            "hunks": 11,
            "message": "TIKA-2777 -- improve inefficient regex performance in Optimaize in tika-eval",
            "diff": [
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "index 322a1f67f..0b41acb01 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "@@ -179,2 +179,3 @@ public abstract class AbstractProfiler extends FileResourceConsumer {",
                "         langIder = new LanguageIDWrapper();",
                "+        LanguageIDWrapper.setMaxTextLength(maxContentLengthForLangId);",
                "         initAnalyzersAndTokenCounter(maxTokens);",
                "@@ -207,2 +208,3 @@ public abstract class AbstractProfiler extends FileResourceConsumer {",
                "         this.maxContentLengthForLangId = maxContentLengthForLangId;",
                "+        LanguageIDWrapper.setMaxTextLength(maxContentLengthForLangId);",
                "     }",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/util/LanguageIDWrapper.java b/tika-eval/src/main/java/org/apache/tika/eval/util/LanguageIDWrapper.java",
                "index 59d032af3..2f3d42b06 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/util/LanguageIDWrapper.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/util/LanguageIDWrapper.java",
                "@@ -20,3 +20,5 @@ import java.io.IOException;",
                " import java.nio.file.Path;",
                "+import java.util.ArrayList;",
                " import java.util.List;",
                "+import java.util.regex.Pattern;",
                "@@ -30,3 +32,6 @@ import com.optimaize.langdetect.profiles.LanguageProfile;",
                " import com.optimaize.langdetect.profiles.LanguageProfileReader;",
                "-import com.optimaize.langdetect.text.CommonTextObjectFactories;",
                "+import com.optimaize.langdetect.text.MultiTextFilter;",
                "+import com.optimaize.langdetect.text.RemoveMinorityScriptsTextFilter;",
                "+import com.optimaize.langdetect.text.TextFilter;",
                "+import com.optimaize.langdetect.text.TextObject;",
                " import com.optimaize.langdetect.text.TextObjectFactory;",
                "@@ -39,2 +44,4 @@ public class LanguageIDWrapper {",
                "+    static int MAX_TEXT_LENGTH = 50000;",
                "+",
                "     public static void loadBuiltInModels() throws IOException {",
                "@@ -45,3 +52,3 @@ public class LanguageIDWrapper {",
                "                 .build();",
                "-        textObjectFactory = CommonTextObjectFactories.forDetectingOnLargeText();",
                "+        textObjectFactory = buildTextObjectFactory();",
                "     }",
                "@@ -54,5 +61,11 @@ public class LanguageIDWrapper {",
                "                 .build();",
                "-        textObjectFactory = CommonTextObjectFactories.forDetectingOnLargeText();",
                "+        textObjectFactory = buildTextObjectFactory();",
                "     }",
                "+    private static TextObjectFactory buildTextObjectFactory() {",
                "+        List<TextFilter> textFilters = new ArrayList<>();",
                "+        textFilters.add(TikasUrlTextFilter.getInstance());",
                "+        textFilters.add(RemoveMinorityScriptsTextFilter.forThreshold(0.3));",
                "+        return new TextObjectFactory(new MultiTextFilter(textFilters), MAX_TEXT_LENGTH);",
                "+    }",
                "@@ -64,6 +77,29 @@ public class LanguageIDWrapper {",
                "     public static List<DetectedLanguage> getProbabilities(String s) {",
                "+        TextObject textObject = textObjectFactory.forText(s);",
                "+        return detector.getProbabilities(textObject);",
                "+    }",
                "-        return detector.getProbabilities(textObjectFactory.forText(s));",
                "+    public static void setMaxTextLength(int maxTextLength) {",
                "+        MAX_TEXT_LENGTH = maxTextLength;",
                "     }",
                "+    private static class TikasUrlTextFilter implements TextFilter {",
                "+        //use this custom copy/paste of optimaize to avoid long, long hang with mail_regex",
                "+        //TIKA-2777",
                "+        private static final Pattern URL_REGEX = Pattern.compile(\"https?://[-_.?&~;+=/#0-9A-Za-z]{10,10000}\");",
                "+        private static final Pattern MAIL_REGEX = Pattern.compile(\"[-_.0-9A-Za-z]{1,100}@[-_0-9A-Za-z]{1,100}[-_.0-9A-Za-z]{1,100}\");",
                "+        private static final TikasUrlTextFilter INSTANCE = new TikasUrlTextFilter();",
                "+",
                "+        public static TikasUrlTextFilter getInstance() {",
                "+            return INSTANCE;",
                "+        }",
                "+",
                "+        private TikasUrlTextFilter() {",
                "+        }",
                "+",
                "+        public String filter(CharSequence text) {",
                "+            String modified = URL_REGEX.matcher(text).replaceAll(\" \");",
                "+            return MAIL_REGEX.matcher(modified).replaceAll(\" \");",
                "+        }",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "tika-eval/src/main/java/org/apache/tika/eval/util/LanguageIDWrapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2777": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4c564bdd2bd296586acbee3526e0e3dd0e6e55c8"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2777",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e301ee7a6a92dd901600c627e1f2ce10ac308a59",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541983176,
            "hunks": 4,
            "message": "fix for TIKA-2770 conversion for UTM only",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "index ec5f92c55..4eb26ae25 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "@@ -119,19 +119,16 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "         if(line.length() < 300) {",
                "-            String[] keyValue = line.split(\"=\");",
                "+            String[] keyValue = line.split(\"=\", 2);",
                "             if(keyValue.length != 1) {",
                "                 if (keyValue[0].trim().equals(\"map info\")) {",
                "-                    StringBuilder mapInfoValueStringBuilder = new StringBuilder();",
                "-                    String mapInfoValue = keyValue[1];",
                "-                    for (int i = 0; i < keyValue[1].length(); ++i) {",
                "-                        if (mapInfoValue.charAt(i) != '{' || mapInfoValue.charAt(i) != '}' || mapInfoValue.charAt(i) != ' ') {",
                "-                            mapInfoValueStringBuilder.append(mapInfoValue.charAt(i));",
                "-                        }",
                "+                    String[] mapInfoValues = parseMapInfoContents(keyValue[1]);",
                "+                    if (mapInfoValues[0].equals(\"UTM\")) {",
                "+                        metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "+                        String [] latLonStringArray = convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                        String xhtmlLatLongLine = \"lat/lon = { \" + latLonStringArray[0] + \", \" + latLonStringArray[1] + \" }\";",
                "+                        xhtml.startElement(\"p\");",
                "+                        xhtml.characters(xhtmlLatLongLine);",
                "+                        xhtml.endElement(\"p\");",
                "+                    } else {",
                "+                        metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "                     }",
                "-                    String[] mapInfoValues = mapInfoValueStringBuilder.toString().split(\",\");",
                "-                    metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "-                    String [] latLonStringArray = convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "-                    String xhtmlLatLongLine = \"lat/lon = { \" + latLonStringArray[0] + \", \" + latLonStringArray[1] + \" }\";",
                "-                    xhtml.startElement(\"p\");",
                "-                    xhtml.characters(xhtmlLatLongLine);",
                "-                    xhtml.endElement(\"p\");",
                "                 } else {",
                "@@ -146,2 +143,13 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "+    private String[] parseMapInfoContents(String mapInfoValue) {",
                "+        StringBuilder mapInfoValueStringBuilder = new StringBuilder();",
                "+        for (int i = 0; i < mapInfoValue.length(); ++i) {",
                "+            if (mapInfoValue.charAt(i) != '{' && mapInfoValue.charAt(i) != '}' && mapInfoValue.charAt(i) != ' ') {",
                "+                mapInfoValueStringBuilder.append(mapInfoValue.charAt(i));",
                "+            }",
                "+        }",
                "+        String[] mapInfoValues = mapInfoValueStringBuilder.toString().split(\",\");",
                "+        return mapInfoValues;",
                "+    }",
                "+",
                "     // Conversion logic taken from https://stackoverflow.com/questions/343865/how-to-convert-from-utm-to-latlng-in-python-or-javascript/344083#344083"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2770": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f136f97f991320d6ee2b65cf82d5a50141d3d2bf"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2770",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3d5d4d8b9667a31e3cb30a9d02543347feefbcc7",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536177487,
            "hunks": 0,
            "message": "Merge pull request #239 from wowselim/master TIKA-2658: add olympus raw file magic numbers",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2658": ""
            },
            "ghissue_refs": {
                "239": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2658",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 239",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "58dadac9131184e74c468771244595f7daee36c8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536362192,
            "hunks": 11,
            "message": "TIKA-2725 -- checkpoint commit ... basic child process is started...need to integrate actual statuswatcher, etc. # Conflicts: #\ttika-parsers/src/test/resources/test-documents/testPST.pst #\ttika-parsers/src/test/resources/test-documents/testPST_variousBodyTypes.pst",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java b/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "new file mode 100644",
                "index 000000000..9920556e5",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "@@ -0,0 +1,9 @@",
                "+package org.apache.tika.server;",
                "+",
                "+/**",
                "+ * Exception thrown by ServerStatusWatcher if tika-server exceeds",
                "+ * the maximum number of files to process.",
                "+ */",
                "+public class FileCountExceededException extends Exception {",
                "+",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "new file mode 100644",
                "index 000000000..861007d29",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "@@ -0,0 +1,98 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.server;",
                "+",
                "+import java.time.Instant;",
                "+import java.util.HashMap;",
                "+import java.util.Map;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+import java.util.concurrent.atomic.AtomicInteger;",
                "+",
                "+public class ServerStatus {",
                "+",
                "+    enum STATUS {",
                "+        OPEN(0),",
                "+        HIT_MAX(1),",
                "+        TIMEOUT(2),",
                "+        ERROR(3),",
                "+        PARENT_REQUESTED_SHUTDOWN(4);",
                "+",
                "+        private final int shutdownCode;",
                "+        STATUS(int shutdownCode) {",
                "+            this.shutdownCode = shutdownCode;",
                "+        }",
                "+        int getShutdownCode() {",
                "+            return shutdownCode;",
                "+        }",
                "+    }",
                "+    enum TASK {",
                "+        PARSE,",
                "+        UNZIP,",
                "+        DETECT,",
                "+        METADATA",
                "+    };",
                "+",
                "+    private final int maxFilesToProcess;",
                "+    private AtomicInteger counter = new AtomicInteger(0);",
                "+    private Map<Integer, TaskStatus> tasks = new HashMap<>();",
                "+",
                "+    private STATUS status = STATUS.OPEN;",
                "+    public ServerStatus(int maxFilesToProcess) {",
                "+        this.maxFilesToProcess = maxFilesToProcess;",
                "+    }",
                "+    public synchronized int start(TASK task, String fileName) throws FileCountExceededException {",
                "+        int i = counter.incrementAndGet();",
                "+        if (i == Integer.MAX_VALUE ||",
                "+                (maxFilesToProcess > 0 && i >= maxFilesToProcess)) {",
                "+            setStatus(STATUS.HIT_MAX);",
                "+            throw new FileCountExceededException();",
                "+        }",
                "+        tasks.put(i, new TaskStatus(task, Instant.now(), fileName));",
                "+        return i;",
                "+    }",
                "+",
                "+    /**",
                "+     * Removes the task from the collection of currently running tasks.",
                "+     *",
                "+     * @param taskId",
                "+     * @throws IllegalArgumentException if there is no task by that taskId in the collection",
                "+     */",
                "+    public synchronized void complete(int taskId) throws IllegalArgumentException {",
                "+        TaskStatus status = tasks.remove(taskId);",
                "+        if (status == null) {",
                "+            throw new IllegalArgumentException(\"TaskId is not in map:\"+taskId);",
                "+        }",
                "+    }",
                "+",
                "+    public synchronized void setStatus(STATUS status) {",
                "+        this.status = status;",
                "+    }",
                "+",
                "+    public synchronized STATUS getStatus() {",
                "+        return status;",
                "+    }",
                "+",
                "+    public synchronized Map<Integer, TaskStatus> getTasks() {",
                "+        Map<Integer, TaskStatus> ret = new HashMap<>();",
                "+        ret.putAll(tasks);",
                "+        return ret;",
                "+    }",
                "+",
                "+    public synchronized int getFilesProcessed() {",
                "+        return counter.get();",
                "+    }",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "new file mode 100644",
                "index 000000000..24b1ddb99",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "@@ -0,0 +1,76 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.tika.server;",
                "+",
                "+import org.apache.tika.server.resource.TranslateResource;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.time.Duration;",
                "+import java.time.Instant;",
                "+import java.util.concurrent.Callable;",
                "+",
                "+public class ServerStatusWatcher implements Runnable {",
                "+",
                "+",
                "+    private static final Logger LOG = LoggerFactory.getLogger(ServerStatusWatcher.class);",
                "+",
                "+    private final ServerStatus serverStatus;",
                "+    private final long timeoutMillis;",
                "+    private final long pulseMillis;",
                "+",
                "+    public ServerStatusWatcher(ServerStatus serverStatus, long timeoutMillis, long pulseMillis) {",
                "+        this.serverStatus = serverStatus;",
                "+        this.timeoutMillis = timeoutMillis;",
                "+        this.pulseMillis = pulseMillis;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void run() {",
                "+        ServerStatus.STATUS status = serverStatus.getStatus();",
                "+        while (status.equals(ServerStatus.STATUS.OPEN)) {",
                "+            try {",
                "+                Thread.sleep(pulseMillis);",
                "+            } catch (InterruptedException e) {",
                "+            }",
                "+            checkForTimeouts();",
                "+            status = serverStatus.getStatus();",
                "+        }",
                "+        if (! status.equals(ServerStatus.STATUS.OPEN)) {",
                "+            LOG.warn(\"child process shutting down with status: {}\", status);",
                "+            System.exit(status.getShutdownCode());",
                "+        }",
                "+    }",
                "+",
                "+    private void checkForTimeouts() {",
                "+        Instant now = Instant.now();",
                "+        for (TaskStatus status : serverStatus.getTasks().values()) {",
                "+            long millisElapsed = Duration.between(now, status.started).toMillis();",
                "+            if (millisElapsed > timeoutMillis) {",
                "+                serverStatus.setStatus(ServerStatus.STATUS.TIMEOUT);",
                "+                if (status.fileName.isPresent()) {",
                "+                    LOG.error(\"Timeout task {}, millis elapsed {}, file {}\",",
                "+                            status.task.toString(), Long.toString(millisElapsed), status.fileName.get());",
                "+                } else {",
                "+                    LOG.error(\"Timeout task {}, millis elapsed {}\",",
                "+                            status.task.toString(), Long.toString(millisElapsed));",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TaskStatus.java b/tika-server/src/main/java/org/apache/tika/server/TaskStatus.java",
                "new file mode 100644",
                "index 000000000..1637d7d39",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TaskStatus.java",
                "@@ -0,0 +1,41 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.server;",
                "+",
                "+import java.time.Instant;",
                "+import java.util.Optional;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+import java.util.concurrent.atomic.AtomicInteger;",
                "+",
                "+public class TaskStatus {",
                "+    final ServerStatus.TASK task;",
                "+    final Instant started;",
                "+    final Optional<String> fileName;",
                "+",
                "+    TaskStatus(ServerStatus.TASK task, Instant started, String fileName) {",
                "+        this.task = task;",
                "+        this.started = started;",
                "+        this.fileName = Optional.ofNullable(fileName);",
                "+    }",
                "+",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+        return \"\";",
                "+    }",
                "+",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index 03d582e66..af8fd8fc9 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -19,2 +19,3 @@ package org.apache.tika.server;",
                "+import java.io.IOException;",
                " import java.util.ArrayList;",
                "@@ -64,2 +65,12 @@ import org.slf4j.LoggerFactory;",
                " public class TikaServerCli {",
                "+",
                "+",
                "+    //used in spawn-child mode",
                "+    private static final long PULSE_MILLIS = 100;",
                "+    private static final int DEFAULT_MAX_FILES = -1;",
                "+    private static final long DEFAULT_TIME_OUT_MS = 60000;",
                "+    private static final long DEFAULT_PULSE_MS = 500;",
                "+    private static Thread SHUTDOWN_HOOK = null;",
                "+",
                "+",
                "     public static final int DEFAULT_PORT = 9998;",
                "@@ -90,3 +101,4 @@ public class TikaServerCli {",
                "         options.addOption(\"enableFileUrl\", false, \"allows user to pass in fileUrl instead of InputStream.\");",
                "-",
                "+        options.addOption(\"spawnChild\", false, \"whether or not to spawn a child process for robustness\");",
                "+        options.addOption(\"maxFiles\", false, \"shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "         return options;",
                "@@ -96,4 +108,103 @@ public class TikaServerCli {",
                "         LOG.info(\"Starting {} server\", new Tika());",
                "+        try {",
                "+            execute(args);",
                "+        } catch (Exception e) {",
                "+            e.printStackTrace();",
                "+            LOG.error(\"Can't start\", e);",
                "+            System.exit(-1);",
                "+        }",
                "+    }",
                "+",
                "+    private static void execute(String[] args) throws Exception {",
                "+        boolean spawnChild = false;",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (\"-spawnChild\".equals(args[i]) || \"--spawnChild\".equals(args[i])) {",
                "+                spawnChild = true;",
                "+                break;",
                "+            }",
                "+        }",
                "+        if (spawnChild) {",
                "+            spawnChild(args);",
                "+        } else {",
                "+            executeLegacy(args);",
                "+        }",
                "+    }",
                "+    private static void spawnChild(String[] args) throws Exception {",
                "+        Process child = start(args);",
                "         try {",
                "+            while (true) {",
                "+                Thread.sleep(PULSE_MILLIS);",
                "+",
                "+                int exitValue = Integer.MAX_VALUE;",
                "+                try {",
                "+                    exitValue = child.exitValue();",
                "+                } catch (IllegalThreadStateException e) {",
                "+                    //process is still running",
                "+                }",
                "+                if (exitValue != Integer.MAX_VALUE) {",
                "+                    if (exitValue != ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN.getShutdownCode()) {",
                "+                        LOG.warn(\"child exited with code ({}) -- restarting, now\", Integer.toString(exitValue));",
                "+                        child.destroyForcibly();",
                "+                        child = start(args);",
                "+                    }",
                "+                }",
                "+            }",
                "+        } catch (InterruptedException e) {",
                "+            //interrupted...shutting down",
                "+        } finally {",
                "+            child.destroyForcibly();",
                "+        }",
                "+    }",
                "+",
                "+    private static Process start(String[] args) throws IOException {",
                "+        ProcessBuilder builder = new ProcessBuilder();",
                "+        builder.inheritIO();",
                "+        List<String> argList = new ArrayList<>();",
                "+        List<String> jvmArgs = extractJVMArgs(args);",
                "+        List<String> childArgs = extractArgs(args);",
                "+        argList.add(\"java\");",
                "+            if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "+                String cp = System.getProperty(\"java.class.path\");",
                "+                jvmArgs.add(\"-cp\");",
                "+                jvmArgs.add(cp);",
                "+            }",
                "+        argList.addAll(jvmArgs);",
                "+        argList.add(\"org.apache.tika.server.TikaServerCli\");",
                "+        argList.addAll(childArgs);",
                "+",
                "+        builder.command(argList);",
                "+",
                "+        Process process = builder.start();",
                "+",
                "+        if (SHUTDOWN_HOOK != null) {",
                "+            Runtime.getRuntime().removeShutdownHook(SHUTDOWN_HOOK);",
                "+        }",
                "+        SHUTDOWN_HOOK = new Thread(() -> process.destroy());",
                "+        Runtime.getRuntime().addShutdownHook(SHUTDOWN_HOOK);",
                "+        return process;",
                "+    }",
                "+",
                "+    private static List<String> extractArgs(String[] args) {",
                "+        List<String> argList = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\") || args[i].equals(\"-spawnChild\") || args[i].equals(\"--spawnChild\")) {",
                "+                continue;",
                "+            }",
                "+            argList.add(args[i]);",
                "+        }",
                "+        return argList;",
                "+    }",
                "+",
                "+    private static List<String> extractJVMArgs(String[] args) {",
                "+        List<String> jvmArgs = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\")) {",
                "+                jvmArgs.add(\"-\"+args[i].substring(2));",
                "+            }",
                "+        }",
                "+        return jvmArgs;",
                "+    }",
                "+",
                "+    private static void executeLegacy(String[] args) throws Exception {",
                "             Options options = getOptions();",
                "@@ -198,2 +309,17 @@ public class TikaServerCli {",
                "+            int maxFiles = DEFAULT_MAX_FILES;",
                "+            if (line.hasOption(\"maxFiles\")) {",
                "+                maxFiles = Integer.parseInt(line.getOptionValue(\"maxFiles\"));",
                "+            }",
                "+",
                "+            long timeoutMS = DEFAULT_TIME_OUT_MS;",
                "+            if (line.hasOption(\"timeoutMS\")) {",
                "+                timeoutMS = Long.parseLong(line.getOptionValue(\"timeoutMS\"));",
                "+            }",
                "+            long pulseMS = DEFAULT_PULSE_MS;",
                "+            if (line.hasOption(\"pulseMS\")) {",
                "+                pulseMS = Long.parseLong(line.getOptionValue(\"pulseMS\"));",
                "+            }",
                "+            ServerStatus serverStatus = new ServerStatus(maxFiles);",
                "+            new Thread(new ServerStatusWatcher(serverStatus, timeoutMS, pulseMS)).start();",
                "             TikaResource.init(tika, digester, inputStreamFactory);",
                "@@ -243,6 +369,2 @@ public class TikaServerCli {",
                "             LOG.info(\"Started Apache Tika server at {}\", url);",
                "-        } catch (Exception ex) {",
                "-            LOG.error(\"Can't start\", ex);",
                "-            System.exit(-1);",
                "-        }",
                "     }"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "tika-server/src/main/java/org/apache/tika/server/TaskStatus.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "79213874d24c9d055f5ea76f82ad381d4fb5d55d"
                ],
                [
                    "no-tag",
                    "bf1b2418d47e9fa47e0634825341921d7edd1ee8"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "889c2c99d9a6690fc5bc8b8135ebba66fbdd0772",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539783965,
            "hunks": 1,
            "message": "TIKA-2757 -- add versions plugin",
            "diff": [
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index d77aa149f..7c6dbae28 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -329,2 +329,14 @@",
                "       </plugin>",
                "+      <!--",
                "+        mvn versions:display-plugin-updates",
                "+        mvn versions:display-dependency-updates",
                "+      -->",
                "+      <plugin>",
                "+        <groupId>org.codehaus.mojo</groupId>",
                "+        <artifactId>versions-maven-plugin</artifactId>",
                "+        <version>2.5</version>",
                "+        <configuration>",
                "+          <generateBackupPoms>false</generateBackupPoms>",
                "+        </configuration>",
                "+      </plugin>",
                "       <plugin>"
            ],
            "changed_files": [
                "tika-parent/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2757": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5310f17901f8f6732900472eb20c436bad79779a"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2757",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e7cef357c662a5a52d84c5254c633b9679bf5ff0",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536696994,
            "hunks": 71,
            "message": "TIKA-2725 -- first working draft...ready for commit and future cleanups # Conflicts: #\ttika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java b/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "deleted file mode 100644",
                "index 9920556e5..000000000",
                "--- a/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "+++ /dev/null",
                "@@ -1,9 +0,0 @@",
                "-package org.apache.tika.server;",
                "-",
                "-/**",
                "- * Exception thrown by ServerStatusWatcher if tika-server exceeds",
                "- * the maximum number of files to process.",
                "- */",
                "-public class FileCountExceededException extends Exception {",
                "-",
                "-}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "index 861007d29..ac5fed44b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "@@ -18,2 +18,5 @@ package org.apache.tika.server;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                " import java.time.Instant;",
                "@@ -21,4 +24,3 @@ import java.util.HashMap;",
                " import java.util.Map;",
                "-import java.util.concurrent.ConcurrentHashMap;",
                "-import java.util.concurrent.atomic.AtomicInteger;",
                "+import java.util.concurrent.atomic.AtomicLong;",
                "@@ -26,4 +28,16 @@ public class ServerStatus {",
                "-    enum STATUS {",
                "-        OPEN(0),",
                "+    enum DIRECTIVES {",
                "+        PING((byte)0),",
                "+        PING_ACTIVE_SERVER_TASKS((byte)1),",
                "+        SHUTDOWN((byte)2);",
                "+",
                "+        private final byte b;",
                "+        DIRECTIVES(byte b) {",
                "+            this.b = b;",
                "+        }",
                "+        byte getByte() { return b;}",
                "+    }",
                "+",
                "+    public enum STATUS {",
                "+        OPERATING(0),",
                "         HIT_MAX(1),",
                "@@ -31,5 +45,16 @@ public class ServerStatus {",
                "         ERROR(3),",
                "-        PARENT_REQUESTED_SHUTDOWN(4);",
                "+        PARENT_REQUESTED_SHUTDOWN(4),",
                "+        PARENT_EXCEPTION(5);",
                "         private final int shutdownCode;",
                "+",
                "+        static STATUS lookup(int i) {",
                "+            STATUS[] values = STATUS.values();",
                "+            if (i < 0 || i >= values.length) {",
                "+                throw new ArrayIndexOutOfBoundsException(i +",
                "+                        \" is not acceptable for an array of length \"+values.length);",
                "+            }",
                "+            return STATUS.values()[i];",
                "+        }",
                "+",
                "         STATUS(int shutdownCode) {",
                "@@ -40,27 +65,21 @@ public class ServerStatus {",
                "         }",
                "+        byte getByte() { return (byte) shutdownCode;}",
                "+",
                "     }",
                "-    enum TASK {",
                "+    public enum TASK {",
                "         PARSE,",
                "-        UNZIP,",
                "         DETECT,",
                "-        METADATA",
                "+        TRANSLATE",
                "     };",
                "+    private static final Logger LOG = LoggerFactory.getLogger(ServerStatus.class);",
                "-    private final int maxFilesToProcess;",
                "-    private AtomicInteger counter = new AtomicInteger(0);",
                "-    private Map<Integer, TaskStatus> tasks = new HashMap<>();",
                "+    private AtomicLong counter = new AtomicLong(0);",
                "+    private Map<Long, TaskStatus> tasks = new HashMap<>();",
                "-    private STATUS status = STATUS.OPEN;",
                "-    public ServerStatus(int maxFilesToProcess) {",
                "-        this.maxFilesToProcess = maxFilesToProcess;",
                "-    }",
                "-    public synchronized int start(TASK task, String fileName) throws FileCountExceededException {",
                "-        int i = counter.incrementAndGet();",
                "-        if (i == Integer.MAX_VALUE ||",
                "-                (maxFilesToProcess > 0 && i >= maxFilesToProcess)) {",
                "-            setStatus(STATUS.HIT_MAX);",
                "-            throw new FileCountExceededException();",
                "-        }",
                "-        tasks.put(i, new TaskStatus(task, Instant.now(), fileName));",
                "-        return i;",
                "+    private STATUS status = STATUS.OPERATING;",
                "+",
                "+    public synchronized long start(TASK task, String fileName) {",
                "+        long taskId = counter.incrementAndGet();",
                "+        tasks.put(taskId, new TaskStatus(task, Instant.now(), fileName));",
                "+        return taskId;",
                "     }",
                "@@ -73,3 +92,3 @@ public class ServerStatus {",
                "      */",
                "-    public synchronized void complete(int taskId) throws IllegalArgumentException {",
                "+    public synchronized void complete(long taskId) throws IllegalArgumentException {",
                "         TaskStatus status = tasks.remove(taskId);",
                "@@ -88,4 +107,4 @@ public class ServerStatus {",
                "-    public synchronized Map<Integer, TaskStatus> getTasks() {",
                "-        Map<Integer, TaskStatus> ret = new HashMap<>();",
                "+    public synchronized Map<Long, TaskStatus> getTasks() {",
                "+        Map<Long, TaskStatus> ret = new HashMap<>();",
                "         ret.putAll(tasks);",
                "@@ -94,5 +113,10 @@ public class ServerStatus {",
                "-    public synchronized int getFilesProcessed() {",
                "+    public synchronized long getFilesProcessed() {",
                "         return counter.get();",
                "     }",
                "+",
                "+    public synchronized boolean isOperating() {",
                "+        return status == STATUS.OPERATING;",
                "+    }",
                "+",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "index 24b1ddb99..8023e944b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "@@ -19,3 +19,2 @@ package org.apache.tika.server;",
                "-import org.apache.tika.server.resource.TranslateResource;",
                " import org.slf4j.Logger;",
                "@@ -23,5 +22,8 @@ import org.slf4j.LoggerFactory;",
                "+import java.io.DataInputStream;",
                "+import java.io.DataOutputStream;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                " import java.time.Duration;",
                " import java.time.Instant;",
                "-import java.util.concurrent.Callable;",
                "@@ -31,11 +33,24 @@ public class ServerStatusWatcher implements Runnable {",
                "     private static final Logger LOG = LoggerFactory.getLogger(ServerStatusWatcher.class);",
                "-",
                "     private final ServerStatus serverStatus;",
                "-    private final long timeoutMillis;",
                "-    private final long pulseMillis;",
                "+    private final DataInputStream fromParent;",
                "+    private final DataOutputStream toParent;",
                "+    private final long maxFiles;",
                "+    private final ServerTimeouts serverTimeouts;",
                "+",
                "-    public ServerStatusWatcher(ServerStatus serverStatus, long timeoutMillis, long pulseMillis) {",
                "+    private volatile Instant lastPing = null;",
                "+",
                "+    public ServerStatusWatcher(ServerStatus serverStatus,",
                "+                               InputStream inputStream, OutputStream outputStream,",
                "+                               long maxFiles,",
                "+                               ServerTimeouts serverTimeouts) {",
                "         this.serverStatus = serverStatus;",
                "-        this.timeoutMillis = timeoutMillis;",
                "-        this.pulseMillis = pulseMillis;",
                "+        this.maxFiles = maxFiles;",
                "+        this.serverTimeouts = serverTimeouts;",
                "+",
                "+        this.fromParent = new DataInputStream(inputStream);",
                "+        this.toParent = new DataOutputStream(outputStream);",
                "+        Thread statusWatcher = new Thread(new StatusWatcher());",
                "+        statusWatcher.setDaemon(true);",
                "+        statusWatcher.start();",
                "     }",
                "@@ -44,14 +59,58 @@ public class ServerStatusWatcher implements Runnable {",
                "     public void run() {",
                "-        ServerStatus.STATUS status = serverStatus.getStatus();",
                "-        while (status.equals(ServerStatus.STATUS.OPEN)) {",
                "+        //let parent know child is alive",
                "+        try {",
                "+            toParent.writeByte(ServerStatus.STATUS.OPERATING.getByte());",
                "+            toParent.flush();",
                "+        } catch (Exception e) {",
                "+            LOG.warn(\"Exception writing startup ping to parent\", e);",
                "+            serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+            shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+        }",
                "+",
                "+        byte directive = (byte)-1;",
                "+        while (true) {",
                "             try {",
                "-                Thread.sleep(pulseMillis);",
                "-            } catch (InterruptedException e) {",
                "+                directive = fromParent.readByte();",
                "+                lastPing = Instant.now();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception reading from parent\", e);",
                "+                serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "             }",
                "-            checkForTimeouts();",
                "-            status = serverStatus.getStatus();",
                "+            if (directive == ServerStatus.DIRECTIVES.PING.getByte()) {",
                "+                if (serverStatus.getStatus().equals(ServerStatus.STATUS.OPERATING)) {",
                "+                    checkForHitMaxFiles();",
                "+                    checkForTaskTimeouts();",
                "+                }",
                "+                try {",
                "+                    toParent.writeByte(serverStatus.getStatus().getByte());",
                "+                    toParent.flush();",
                "+                } catch (Exception e) {",
                "+                    LOG.warn(\"Exception writing to parent\", e);",
                "+                    serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                }",
                "+            } else if (directive == ServerStatus.DIRECTIVES.SHUTDOWN.getByte()) {",
                "+                LOG.info(\"Parent requested shutdown\");",
                "+                serverStatus.setStatus(ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN);",
                "+                shutdown(ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN);",
                "+            } else if (directive == ServerStatus.DIRECTIVES.PING_ACTIVE_SERVER_TASKS.getByte()) {              try {",
                "+                    toParent.writeInt(serverStatus.getTasks().size());",
                "+                    toParent.flush();",
                "+                } catch (Exception e) {",
                "+                    LOG.warn(\"Exception writing to parent\", e);",
                "+                    serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private void checkForHitMaxFiles() {",
                "+        if (maxFiles < 0) {",
                "+            return;",
                "         }",
                "-        if (! status.equals(ServerStatus.STATUS.OPEN)) {",
                "-            LOG.warn(\"child process shutting down with status: {}\", status);",
                "-            System.exit(status.getShutdownCode());",
                "+        long filesProcessed = serverStatus.getFilesProcessed();",
                "+        if (filesProcessed >= maxFiles) {",
                "+            serverStatus.setStatus(ServerStatus.STATUS.HIT_MAX);",
                "         }",
                "@@ -59,7 +118,7 @@ public class ServerStatusWatcher implements Runnable {",
                "-    private void checkForTimeouts() {",
                "+    private void checkForTaskTimeouts() {",
                "         Instant now = Instant.now();",
                "         for (TaskStatus status : serverStatus.getTasks().values()) {",
                "-            long millisElapsed = Duration.between(now, status.started).toMillis();",
                "-            if (millisElapsed > timeoutMillis) {",
                "+            long millisElapsed = Duration.between(status.started, now).toMillis();",
                "+            if (millisElapsed > serverTimeouts.getTaskTimeoutMillis()) {",
                "                 serverStatus.setStatus(ServerStatus.STATUS.TIMEOUT);",
                "@@ -75,2 +134,37 @@ public class ServerStatusWatcher implements Runnable {",
                "     }",
                "+",
                "+    private void shutdown(ServerStatus.STATUS status) {",
                "+        LOG.info(\"Shutting down child process with status: \" +status.name());",
                "+        System.exit(status.getShutdownCode());",
                "+    }",
                "+",
                "+    //This is an internal thread that pulses every 100MS",
                "+    //within the child to see if the child should die.",
                "+    private class StatusWatcher implements Runnable {",
                "+",
                "+        @Override",
                "+        public void run() {",
                "+            while (true) {",
                "+                ServerStatus.STATUS currStatus = serverStatus.getStatus();",
                "+",
                "+                if (currStatus != ServerStatus.STATUS.OPERATING) {",
                "+                    LOG.warn(\"child process observed \"+currStatus.name()+ \" and is shutting down.\");",
                "+                    shutdown(currStatus);",
                "+                }",
                "+",
                "+                if (lastPing != null) {",
                "+                    long elapsed = Duration.between(lastPing, Instant.now()).toMillis();",
                "+                    if (elapsed > serverTimeouts.getPingTimeoutMillis()) {",
                "+                        serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                        shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    }",
                "+                }",
                "+                try {",
                "+                    Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+                } catch (InterruptedException e) {",
                "+                    return;",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                " }",
                "\\ No newline at end of file",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "new file mode 100644",
                "index 000000000..b85d89c06",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "@@ -0,0 +1,106 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.server;",
                "+",
                "+public class ServerTimeouts {",
                "+",
                "+    /*",
                "+    TODO: integrate these settings:",
                "+     * Number of milliseconds to wait to start child process.",
                "+    public static final long DEFAULT_CHILD_PROCESS_STARTUP_MILLIS = 60000;",
                "+",
                "+     * Maximum number of milliseconds to wait to shutdown child process to allow",
                "+     * for current parses to complete.",
                "+    public static final long DEFAULT_CHILD_PROCESS_SHUTDOWN_MILLIS = 30000;",
                "+",
                "+    private long childProcessStartupMillis = DEFAULT_CHILD_PROCESS_STARTUP_MILLIS;",
                "+",
                "+    private long childProcessShutdownMillis = DEFAULT_CHILD_PROCESS_SHUTDOWN_MILLIS;",
                "+",
                "+     */",
                "+",
                "+",
                "+",
                "+    /**",
                "+     * If the child doesn't receive a ping or the parent doesn't",
                "+     * hear back from a ping in this amount of time, kill and restart the child.",
                "+     */",
                "+    public static final long DEFAULT_PING_TIMEOUT_MILLIS = 30000;",
                "+",
                "+    /**",
                "+     * How often should the parent try to ping the child to check status",
                "+     */",
                "+    public static final long DEFAULT_PING_PULSE_MILLIS = 500;",
                "+",
                "+    /**",
                "+     * Number of milliseconds to wait per server task (parse, detect, unpack, translate,",
                "+     * etc.) before timing out and shutting down the child process.",
                "+     */",
                "+    public static final long DEFAULT_TASK_TIMEOUT_MILLIS = 120000;",
                "+",
                "+    private long taskTimeoutMillis = DEFAULT_TASK_TIMEOUT_MILLIS;",
                "+",
                "+    private long pingTimeoutMillis = DEFAULT_PING_TIMEOUT_MILLIS;",
                "+",
                "+    private long pingPulseMillis = DEFAULT_PING_PULSE_MILLIS;",
                "+",
                "+",
                "+    /**",
                "+     * How long to wait for a task before shutting down the child server process",
                "+     * and restarting it.",
                "+     * @return",
                "+     */",
                "+    public long getTaskTimeoutMillis() {",
                "+        return taskTimeoutMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param taskTimeoutMillis number of milliseconds to allow per task",
                "+     *                          (parse, detection, unzipping, etc.)",
                "+     */",
                "+    public void setTaskTimeoutMillis(long taskTimeoutMillis) {",
                "+        this.taskTimeoutMillis = taskTimeoutMillis;",
                "+    }",
                "+",
                "+    public long getPingTimeoutMillis() {",
                "+        return pingTimeoutMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param pingTimeoutMillis if the parent doesn't receive a response",
                "+     *                          in this amount of time, or",
                "+     *                          if the child doesn't receive a ping",
                "+     *                          in this amount of time, restart the child process",
                "+     */",
                "+    public void setPingTimeoutMillis(long pingTimeoutMillis) {",
                "+        this.pingTimeoutMillis = pingTimeoutMillis;",
                "+    }",
                "+",
                "+    public long getPingPulseMillis() {",
                "+        return pingPulseMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param pingPulseMillis how often to test that the parent and/or child is alive",
                "+     */",
                "+    public void setPingPulseMillis(long pingPulseMillis) {",
                "+        this.pingPulseMillis = pingPulseMillis;",
                "+    }",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index af8fd8fc9..e3242d11b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -19,3 +19,3 @@ package org.apache.tika.server;",
                "-import java.io.IOException;",
                "+import java.io.ByteArrayInputStream;",
                " import java.util.ArrayList;",
                "@@ -68,7 +68,3 @@ public class TikaServerCli {",
                "     //used in spawn-child mode",
                "-    private static final long PULSE_MILLIS = 100;",
                "-    private static final int DEFAULT_MAX_FILES = -1;",
                "-    private static final long DEFAULT_TIME_OUT_MS = 60000;",
                "-    private static final long DEFAULT_PULSE_MS = 500;",
                "-    private static Thread SHUTDOWN_HOOK = null;",
                "+    private static final long DEFAULT_MAX_FILES = 100000;",
                "@@ -88,2 +84,6 @@ public class TikaServerCli {",
                "+    private static final List<String> ONLY_IN_SPAWN_CHILD_MODE =",
                "+            Arrays.asList(new String[] { \"taskTimeoutMillis\", \"taskPulseMillis\",",
                "+            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\"});",
                "+",
                "     private static Options getOptions() {",
                "@@ -102,3 +102,10 @@ public class TikaServerCli {",
                "         options.addOption(\"spawnChild\", false, \"whether or not to spawn a child process for robustness\");",
                "-        options.addOption(\"maxFiles\", false, \"shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"taskTimeoutMillis\", true, \"Only in spawn child mode: how long to wait for a task (e.g. parse) to finish\");",
                "+        options.addOption(\"taskPulseMillis\", true, \"Only in spawn child mode: how often to check if a task has timed out.\");",
                "+        options.addOption(\"pingTimeoutMillis\", true, \"Only in spawn child mode: how long to wait to wait for a ping and/or ping response.\");",
                "+        options.addOption(\"pingPulseMillis\", true, \"Only in spawn child mode: how often to check if a ping has timed out.\");",
                "+",
                "+        options.addOption(\"maxFiles\", false, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"child\", false, \"this process is a child process -- EXPERT -- \" +",
                "+                \"should normally only be invoked by parent process\");",
                "         return options;",
                "@@ -118,33 +125,21 @@ public class TikaServerCli {",
                "     private static void execute(String[] args) throws Exception {",
                "-        boolean spawnChild = false;",
                "-        for (int i = 0; i < args.length; i++) {",
                "-            if (\"-spawnChild\".equals(args[i]) || \"--spawnChild\".equals(args[i])) {",
                "-                spawnChild = true;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spawnChild) {",
                "-            spawnChild(args);",
                "-        } else {",
                "-            executeLegacy(args);",
                "-        }",
                "-    }",
                "+        Options options = getOptions();",
                "-    private static void spawnChild(String[] args) throws Exception {",
                "-        Process child = start(args);",
                "-        try {",
                "-            while (true) {",
                "-                Thread.sleep(PULSE_MILLIS);",
                "+        CommandLineParser cliParser = new GnuParser();",
                "-                int exitValue = Integer.MAX_VALUE;",
                "-                try {",
                "-                    exitValue = child.exitValue();",
                "-                } catch (IllegalThreadStateException e) {",
                "-                    //process is still running",
                "-                }",
                "-                if (exitValue != Integer.MAX_VALUE) {",
                "-                    if (exitValue != ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN.getShutdownCode()) {",
                "-                        LOG.warn(\"child exited with code ({}) -- restarting, now\", Integer.toString(exitValue));",
                "-                        child.destroyForcibly();",
                "-                        child = start(args);",
                "+        //need to strip out -J (child jvm opts) from this parse",
                "+        //they'll be processed correctly in args in the watch dog",
                "+        //and they won't be needed in legacy.",
                "+        CommandLine line = cliParser.parse(options, stripChildArgs(args));",
                "+        if (line.hasOption(\"spawnChild\")) {",
                "+            TikaServerWatchDog watchDog = new TikaServerWatchDog();",
                "+            watchDog.execute(args, configureServerTimeouts(line));",
                "+        } else {",
                "+            if (! line.hasOption(\"child\")) {",
                "+                //make sure the user didn't misunderstand the options",
                "+                for (String childOnly : ONLY_IN_SPAWN_CHILD_MODE) {",
                "+                    if (line.hasOption(childOnly)) {",
                "+                        System.err.println(\"The option '\" + childOnly +",
                "+                                \"' can only be used with '-spawnChild'\");",
                "+                        usage(options);",
                "                     }",
                "@@ -152,68 +147,19 @@ public class TikaServerCli {",
                "             }",
                "-        } catch (InterruptedException e) {",
                "-            //interrupted...shutting down",
                "-        } finally {",
                "-            child.destroyForcibly();",
                "-        }",
                "-    }",
                "-",
                "-    private static Process start(String[] args) throws IOException {",
                "-        ProcessBuilder builder = new ProcessBuilder();",
                "-        builder.inheritIO();",
                "-        List<String> argList = new ArrayList<>();",
                "-        List<String> jvmArgs = extractJVMArgs(args);",
                "-        List<String> childArgs = extractArgs(args);",
                "-        argList.add(\"java\");",
                "-            if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "-                String cp = System.getProperty(\"java.class.path\");",
                "-                jvmArgs.add(\"-cp\");",
                "-                jvmArgs.add(cp);",
                "-            }",
                "-        argList.addAll(jvmArgs);",
                "-        argList.add(\"org.apache.tika.server.TikaServerCli\");",
                "-        argList.addAll(childArgs);",
                "-",
                "-        builder.command(argList);",
                "-",
                "-        Process process = builder.start();",
                "-",
                "-        if (SHUTDOWN_HOOK != null) {",
                "-            Runtime.getRuntime().removeShutdownHook(SHUTDOWN_HOOK);",
                "+            executeLegacy(line, options);",
                "         }",
                "-        SHUTDOWN_HOOK = new Thread(() -> process.destroy());",
                "-        Runtime.getRuntime().addShutdownHook(SHUTDOWN_HOOK);",
                "-        return process;",
                "     }",
                "-    private static List<String> extractArgs(String[] args) {",
                "-        List<String> argList = new ArrayList<>();",
                "+    private static String[] stripChildArgs(String[] args) {",
                "+        List<String> ret = new ArrayList<>();",
                "         for (int i = 0; i < args.length; i++) {",
                "-            if (args[i].startsWith(\"-J\") || args[i].equals(\"-spawnChild\") || args[i].equals(\"--spawnChild\")) {",
                "-                continue;",
                "+            if (! args[i].startsWith(\"-J\")) {",
                "+                ret.add(args[i]);",
                "             }",
                "-            argList.add(args[i]);",
                "         }",
                "-        return argList;",
                "+        return ret.toArray(new String[ret.size()]);",
                "     }",
                "-    private static List<String> extractJVMArgs(String[] args) {",
                "-        List<String> jvmArgs = new ArrayList<>();",
                "-        for (int i = 0; i < args.length; i++) {",
                "-            if (args[i].startsWith(\"-J\")) {",
                "-                jvmArgs.add(\"-\"+args[i].substring(2));",
                "-            }",
                "-        }",
                "-        return jvmArgs;",
                "-    }",
                "-",
                "-    private static void executeLegacy(String[] args) throws Exception {",
                "-            Options options = getOptions();",
                "-",
                "-            CommandLineParser cliParser = new GnuParser();",
                "-            CommandLine line = cliParser.parse(options, args);",
                "-",
                "+    private static void executeLegacy(CommandLine line, Options options) throws Exception {",
                "             if (line.hasOption(\"help\")) {",
                "-                HelpFormatter helpFormatter = new HelpFormatter();",
                "-                helpFormatter.printHelp(\"tikaserver\", options);",
                "-                System.exit(-1);",
                "+                usage(options);",
                "             }",
                "@@ -309,18 +255,19 @@ public class TikaServerCli {",
                "-            int maxFiles = DEFAULT_MAX_FILES;",
                "-            if (line.hasOption(\"maxFiles\")) {",
                "-                maxFiles = Integer.parseInt(line.getOptionValue(\"maxFiles\"));",
                "-            }",
                "+            ServerStatus serverStatus = new ServerStatus();",
                "+            //if this is a child process",
                "+            if (line.hasOption(\"child\")) {",
                "+                long maxFiles = DEFAULT_MAX_FILES;",
                "+                if (line.hasOption(\"maxFiles\")) {",
                "+                    maxFiles = Long.parseLong(line.getOptionValue(\"maxFiles\"));",
                "+                }",
                "-            long timeoutMS = DEFAULT_TIME_OUT_MS;",
                "-            if (line.hasOption(\"timeoutMS\")) {",
                "-                timeoutMS = Long.parseLong(line.getOptionValue(\"timeoutMS\"));",
                "+                ServerTimeouts serverTimeouts = configureServerTimeouts(line);",
                "+                Thread serverThread =",
                "+                new Thread(new ServerStatusWatcher(serverStatus, System.in,",
                "+                        System.out, maxFiles, serverTimeouts));",
                "+                serverThread.start();",
                "+                System.setIn(new ByteArrayInputStream(new byte[0]));",
                "+                System.setOut(System.err);",
                "             }",
                "-            long pulseMS = DEFAULT_PULSE_MS;",
                "-            if (line.hasOption(\"pulseMS\")) {",
                "-                pulseMS = Long.parseLong(line.getOptionValue(\"pulseMS\"));",
                "-            }",
                "-            ServerStatus serverStatus = new ServerStatus(maxFiles);",
                "-            new Thread(new ServerStatusWatcher(serverStatus, timeoutMS, pulseMS)).start();",
                "-            TikaResource.init(tika, digester, inputStreamFactory);",
                "+            TikaResource.init(tika, digester, inputStreamFactory, serverStatus);",
                "             JAXRSServerFactoryBean sf = new JAXRSServerFactoryBean();",
                "@@ -330,5 +277,5 @@ public class TikaServerCli {",
                "             rCoreProviders.add(new SingletonResourceProvider(new RecursiveMetadataResource()));",
                "-            rCoreProviders.add(new SingletonResourceProvider(new DetectorResource()));",
                "+            rCoreProviders.add(new SingletonResourceProvider(new DetectorResource(serverStatus)));",
                "             rCoreProviders.add(new SingletonResourceProvider(new LanguageResource()));",
                "-            rCoreProviders.add(new SingletonResourceProvider(new TranslateResource()));",
                "+            rCoreProviders.add(new SingletonResourceProvider(new TranslateResource(serverStatus)));",
                "             rCoreProviders.add(new SingletonResourceProvider(new TikaResource()));",
                "@@ -370,2 +317,36 @@ public class TikaServerCli {",
                "     }",
                "+",
                "+    private static void usage(Options options) {",
                "+        HelpFormatter helpFormatter = new HelpFormatter();",
                "+        helpFormatter.printHelp(\"tikaserver\", options);",
                "+        System.exit(-1);",
                "+    }",
                "+",
                "+    private static ServerTimeouts configureServerTimeouts(CommandLine line) {",
                "+        ServerTimeouts serverTimeouts = new ServerTimeouts();",
                "+        /*TODO -- add these in",
                "+        if (line.hasOption(\"childProcessStartupMillis\")) {",
                "+            serverTimeouts.setChildProcessStartupMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"childProcessStartupMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"childProcessShutdownMillis\")) {",
                "+            serverTimeouts.setChildProcessShutdownMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"childProcesShutdownMillis\")));",
                "+        }*/",
                "+        if (line.hasOption(\"taskTimeoutMillis\")) {",
                "+            serverTimeouts.setTaskTimeoutMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"taskTimeoutMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"pingTimeoutMillis\")) {",
                "+            serverTimeouts.setPingTimeoutMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"pingTimeoutMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"pingPulseMillis\")) {",
                "+            serverTimeouts.setPingPulseMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"pingPulseMillis\")));",
                "+        }",
                "+",
                "+        return serverTimeouts;",
                "+    }",
                "+",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "new file mode 100644",
                "index 000000000..67007f220",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -0,0 +1,233 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.tika.server;",
                "+",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.io.DataInputStream;",
                "+import java.io.DataOutputStream;",
                "+import java.io.IOException;",
                "+import java.time.Duration;",
                "+import java.time.Instant;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+import java.util.concurrent.TimeUnit;",
                "+",
                "+public class TikaServerWatchDog {",
                "+",
                "+    private static final Logger LOG = LoggerFactory.getLogger(TikaServerWatchDog.class);",
                "+    private volatile Instant lastPing = null;",
                "+    private ChildProcess childProcess = null;",
                "+    int restarts = 0;",
                "+",
                "+    public void execute(String[] args, ServerTimeouts serverTimeouts) throws Exception {",
                "+        //if the child thread is in stop-the-world mode, and isn't",
                "+        //responding to the ping, this thread checks to make sure",
                "+        //that the parent ping is sent and received often enough",
                "+        //If it isn't, this force destroys the child process.",
                "+        Thread pingTimer = new Thread(new Runnable() {",
                "+            @Override",
                "+            public void run() {",
                "+                while (true) {",
                "+                    long tmpLastPing = -1L;",
                "+                    try {",
                "+                        //TODO: clean this up with synchronization/locking",
                "+                        //to avoid potential NPE",
                "+                        tmpLastPing = lastPing.toEpochMilli();",
                "+                    } catch (NullPointerException e) {",
                "+",
                "+                    }",
                "+                    if (tmpLastPing > 0) {",
                "+                        long elapsed = Duration.between(Instant.ofEpochMilli(tmpLastPing), Instant.now()).toMillis();",
                "+                        if (elapsed > serverTimeouts.getPingTimeoutMillis()) {",
                "+                            Process processToDestroy = null;",
                "+                            try {",
                "+                                processToDestroy = childProcess.process;",
                "+                            } catch (NullPointerException e) {",
                "+                                //ignore",
                "+                            }",
                "+                            destroyChildForcibly(processToDestroy);",
                "+                        }",
                "+                    }",
                "+                    try {",
                "+                        Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+                    } catch (InterruptedException e) {",
                "+                        //swallow",
                "+                    }",
                "+                }",
                "+            }",
                "+        }",
                "+        );",
                "+        pingTimer.setDaemon(true);",
                "+        pingTimer.start();",
                "+        try {",
                "+            childProcess = new ChildProcess(args);",
                "+",
                "+            while (true) {",
                "+",
                "+                if (!childProcess.ping()) {",
                "+                    lastPing = null;",
                "+                    childProcess.close();",
                "+                    LOG.info(\"About to restart the child process\");",
                "+                    childProcess = new ChildProcess(args);",
                "+                    LOG.info(\"Successfully restarted child process -- {} restarts so far)\", ++restarts);",
                "+                }",
                "+                Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+            }",
                "+        } catch (InterruptedException e) {",
                "+            //interrupted...shutting down",
                "+        } finally {",
                "+            if (childProcess != null) {",
                "+                childProcess.close();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static List<String> extractArgs(String[] args) {",
                "+        List<String> argList = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\") || args[i].equals(\"-spawnChild\") || args[i].equals(\"--spawnChild\")) {",
                "+                continue;",
                "+            }",
                "+            argList.add(args[i]);",
                "+        }",
                "+        return argList;",
                "+    }",
                "+",
                "+    private static List<String> extractJVMArgs(String[] args) {",
                "+        List<String> jvmArgs = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\")) {",
                "+                jvmArgs.add(\"-\"+args[i].substring(2));",
                "+            }",
                "+        }",
                "+        return jvmArgs;",
                "+    }",
                "+",
                "+    private class ChildProcess {",
                "+        private Thread SHUTDOWN_HOOK = null;",
                "+",
                "+        Process process;",
                "+        DataInputStream fromChild;",
                "+        DataOutputStream toChild;",
                "+",
                "+",
                "+",
                "+        private ChildProcess(String[] args) throws Exception {",
                "+            this.process = startProcess(args);",
                "+",
                "+            this.fromChild = new DataInputStream(process.getInputStream());",
                "+            this.toChild = new DataOutputStream(process.getOutputStream());",
                "+            byte status = fromChild.readByte();",
                "+            if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "+                throw new IOException(\"bad status from child process: \"+",
                "+                        ServerStatus.STATUS.lookup(status));",
                "+            }",
                "+        }",
                "+",
                "+        public boolean ping() {",
                "+            lastPing = Instant.now();",
                "+            try {",
                "+                toChild.writeByte(ServerStatus.DIRECTIVES.PING.getByte());",
                "+                toChild.flush();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception pinging child process\", e);",
                "+                return false;",
                "+            }",
                "+            try {",
                "+                byte status = fromChild.readByte();",
                "+                if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "+                    LOG.warn(\"Received status from child: {}\",",
                "+                            ServerStatus.STATUS.lookup(status));",
                "+                    return false;",
                "+                }",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception receiving status from child\", e);",
                "+                return false;",
                "+            }",
                "+            return true;",
                "+        }",
                "+",
                "+        private void close() {",
                "+            try {",
                "+                toChild.writeByte(ServerStatus.DIRECTIVES.SHUTDOWN.getByte());",
                "+                toChild.flush();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception asking child to shutdown\", e);",
                "+            }",
                "+            //TODO: add a gracefully timed shutdown routine",
                "+            try {",
                "+                fromChild.close();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Problem shutting down reader from child\", e);",
                "+            }",
                "+",
                "+            try {",
                "+                toChild.close();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Problem shutting down writer to child\", e);",
                "+            }",
                "+            destroyChildForcibly(process);",
                "+        }",
                "+",
                "+        private Process startProcess(String[] args) throws IOException {",
                "+            ProcessBuilder builder = new ProcessBuilder();",
                "+            builder.redirectError(ProcessBuilder.Redirect.INHERIT);",
                "+            List<String> argList = new ArrayList<>();",
                "+            List<String> jvmArgs = extractJVMArgs(args);",
                "+            List<String> childArgs = extractArgs(args);",
                "+            argList.add(\"java\");",
                "+            if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "+                String cp = System.getProperty(\"java.class.path\");",
                "+                jvmArgs.add(\"-cp\");",
                "+                jvmArgs.add(cp);",
                "+            }",
                "+            argList.addAll(jvmArgs);",
                "+            argList.add(\"org.apache.tika.server.TikaServerCli\");",
                "+            argList.addAll(childArgs);",
                "+            argList.add(\"-child\");",
                "+",
                "+            builder.command(argList);",
                "+            Process process = builder.start();",
                "+            if (SHUTDOWN_HOOK != null) {",
                "+                Runtime.getRuntime().removeShutdownHook(SHUTDOWN_HOOK);",
                "+            }",
                "+            SHUTDOWN_HOOK = new Thread(() -> process.destroyForcibly());",
                "+            Runtime.getRuntime().addShutdownHook(SHUTDOWN_HOOK);",
                "+",
                "+            return process;",
                "+        }",
                "+    }",
                "+",
                "+    private static synchronized void destroyChildForcibly(Process process) {",
                "+        process = process.destroyForcibly();",
                "+        try {",
                "+            boolean destroyed = process.waitFor(60, TimeUnit.SECONDS);",
                "+            if (! destroyed) {",
                "+                LOG.error(\"Child process still alive after 60 seconds. \" +",
                "+                        \"Shutting down the parent.\");",
                "+                System.exit(1);",
                "+            }",
                "+",
                "+        } catch (InterruptedException e) {",
                "+            //swallow",
                "+        }",
                "+    }",
                "+",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index 8d32fa06b..acbdfaa26 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -31,3 +31,5 @@ import org.apache.tika.io.TikaInputStream;",
                " import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.TikaCoreProperties;",
                " import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.slf4j.Logger;",
                "@@ -38,3 +40,7 @@ public class DetectorResource {",
                "     private static final Logger LOG = LoggerFactory.getLogger(DetectorResource.class);",
                "+    private final ServerStatus serverStatus;",
                "+    public DetectorResource(ServerStatus serverStatus) {",
                "+        this.serverStatus = serverStatus;",
                "+    }",
                "     @PUT",
                "@@ -51,2 +57,4 @@ public class DetectorResource {",
                "         met.add(Metadata.RESOURCE_NAME_KEY, filename);",
                "+        TikaResource.checkIsOperating();",
                "+        long taskId = serverStatus.start(ServerStatus.TASK.DETECT, filename);",
                "         try {",
                "@@ -56,2 +64,7 @@ public class DetectorResource {",
                "             return MediaType.OCTET_STREAM.toString();",
                "+        } catch (OutOfMemoryError e) {",
                "+            serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "+            throw e;",
                "+        } finally {",
                "+            serverStatus.complete(taskId);",
                "         }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 4d8679c28..450c88824 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -45,2 +45,3 @@ import org.apache.tika.sax.RichTextContentHandler;",
                " import org.apache.tika.server.InputStreamFactory;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.apache.tika.server.TikaServerParseException;",
                "@@ -99,5 +100,5 @@ public class TikaResource {",
                "     private static InputStreamFactory inputStreamFactory = null;",
                "-",
                "+    private static ServerStatus SERVER_STATUS = null;",
                "     public static void init(TikaConfig config, DigestingParser.Digester digestr,",
                "-                            InputStreamFactory iSF) {",
                "+                            InputStreamFactory iSF, ServerStatus serverStatus) {",
                "         tikaConfig = config;",
                "@@ -105,2 +106,3 @@ public class TikaResource {",
                "         inputStreamFactory = iSF;",
                "+        SERVER_STATUS = serverStatus;",
                "     }",
                "@@ -393,2 +395,7 @@ public class TikaResource {",
                "                              ContentHandler handler, Metadata metadata, ParseContext parseContext) throws IOException {",
                "+",
                "+        checkIsOperating();",
                "+",
                "+        long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "+                metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY));",
                "         try {",
                "@@ -403,3 +410,7 @@ public class TikaResource {",
                "             throw new TikaServerParseException(e);",
                "+        } catch (OutOfMemoryError e) {",
                "+            SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);",
                "+            throw e;",
                "         } finally {",
                "+            SERVER_STATUS.complete(taskId);",
                "             inputStream.close();",
                "@@ -408,2 +419,9 @@ public class TikaResource {",
                "+    public static void checkIsOperating() {",
                "+        //check that server is not in shutdown mode",
                "+        if (! SERVER_STATUS.isOperating()) {",
                "+            throw new WebApplicationException(Response.Status.SERVICE_UNAVAILABLE);",
                "+        }",
                "+    }",
                "+",
                "     public static void logRequest(Logger logger, UriInfo info, Metadata metadata) {",
                "@@ -419,2 +437,3 @@ public class TikaResource {",
                "     public String getMessage() {",
                "+        checkIsOperating();",
                "         return GREETING;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "index b695940ab..a89271688 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "@@ -35,2 +35,3 @@ public class TikaVersion {",
                "     public String getVersion() {",
                "+        TikaResource.checkIsOperating();",
                "         return tika.toString();",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "index f44ff969b..3408027b2 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "@@ -26,2 +26,4 @@ import javax.ws.rs.Path;",
                " import javax.ws.rs.Produces;",
                "+import javax.ws.rs.WebApplicationException;",
                "+import javax.ws.rs.core.Response;",
                " import java.lang.annotation.Annotation;",
                "@@ -137,2 +139,4 @@ public class TikaWelcome {",
                "     public String getWelcomeHTML() {",
                "+        TikaResource.checkIsOperating();",
                "+",
                "         StringBuffer h = new StringBuffer();",
                "@@ -192,2 +196,3 @@ public class TikaWelcome {",
                "     public String getWelcomePlain() {",
                "+        TikaResource.checkIsOperating();",
                "         StringBuffer text = new StringBuffer();",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "index 0aba6f94b..041707746 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "@@ -31,2 +31,4 @@ import javax.ws.rs.PathParam;",
                " import javax.ws.rs.Produces;",
                "+import javax.ws.rs.WebApplicationException;",
                "+import javax.ws.rs.core.Response;",
                "@@ -39,2 +41,3 @@ import org.apache.tika.language.detect.LanguageResult;",
                " import org.apache.tika.language.translate.Translator;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.slf4j.Logger;",
                "@@ -50,3 +53,4 @@ public class TranslateResource {",
                "-\tpublic TranslateResource() {",
                "+\tprivate final ServerStatus serverStatus;",
                "+\tpublic TranslateResource(ServerStatus serverStatus) {",
                " \t\tthis.loader = new ServiceLoader(ServiceLoader.class.getClassLoader(),",
                "@@ -54,2 +58,3 @@ public class TranslateResource {",
                " \t\tthis.defaultTranslator = TikaResource.getConfig().getTranslator();",
                "+\t\tthis.serverStatus = serverStatus;",
                " \t}",
                "@@ -96,4 +101,12 @@ public class TranslateResource {",
                " \t\t}",
                "-",
                "-\t\treturn translate.translate(content, sLang, dLang);",
                "+        TikaResource.checkIsOperating();",
                "+\t\tlong taskId = serverStatus.start(ServerStatus.TASK.TRANSLATE, null);",
                "+\t\ttry {",
                "+\t\t\treturn translate.translate(content, sLang, dLang);",
                "+\t\t} catch (OutOfMemoryError e) {",
                "+\t\t    serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "+\t\t    throw e;",
                "+        } finally {",
                "+\t\t\tserverStatus.complete(taskId);",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "662160b6d2628ea9f5dc3979b5506f6ad592f6fd"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4bb4ad60c2d6f968b55829d941d5fdb67917cdda",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538594694,
            "hunks": 1,
            "message": "TIKA-2478 -- maxFiles should take an argument...duh",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index 35ee7b5f3..ef95a32ea 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -107,3 +107,3 @@ public class TikaServerCli {",
                "-        options.addOption(\"maxFiles\", false, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"maxFiles\", true, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "         options.addOption(\"child\", false, \"this process is a child process -- EXPERT -- \" +"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2478": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c068479d7ed1734f75e24fad24572b99c9c3a4c6"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2478",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "40028f3c4934b86ddf48a536da2e8191d20a4695",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533840057,
            "hunks": 61,
            "message": "TIKA-2695 -- upgrade Lucene to something more modern",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 39377dbf4..c1e71f3fa 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -37,4 +37,3 @@",
                "         <cli.version>1.4</cli.version> <!--sync version with tika-server or move to parent? -->",
                "-        <!-- upgrade to 6.x or something more modern once Tika requires Java 1.8 -->",
                "-        <lucene.version>5.5.4</lucene.version>",
                "+        <lucene.version>7.4.0</lucene.version>",
                "         <poi.version>3.17</poi.version>",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "index 771322b7d..6991b03e3 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "@@ -21,5 +21,5 @@ import java.util.Map;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.TokenStream;",
                " import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "index 238930909..b9a37b3d6 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "@@ -20,3 +20,2 @@ package org.apache.tika.eval.tokens;",
                " import java.io.IOException;",
                "-import java.io.Reader;",
                " import java.lang.reflect.Type;",
                "@@ -35,10 +34,6 @@ import com.google.gson.JsonParseException;",
                " import org.apache.lucene.analysis.Analyzer;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.analysis.Tokenizer;",
                "-import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilterFactory;",
                "+import org.apache.lucene.analysis.custom.CustomAnalyzer;",
                " import org.apache.lucene.analysis.util.CharFilterFactory;",
                " import org.apache.lucene.analysis.util.ClasspathResourceLoader;",
                "-import org.apache.lucene.analysis.util.ResourceLoaderAware;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "-import org.apache.lucene.analysis.util.TokenizerFactory;",
                "@@ -99,5 +94,3 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         JsonObject aRoot = (JsonObject)value;",
                "-        CharFilterFactory[] charFilters = new CharFilterFactory[0];",
                "-        TokenizerFactory tokenizerFactory = null;",
                "-        TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];",
                "+        CustomAnalyzer.Builder builder = CustomAnalyzer.builder(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "         for ( Map.Entry<String, JsonElement> e : aRoot.entrySet()) {",
                "@@ -105,7 +98,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             if (k.equals(CHAR_FILTERS)) {",
                "-                charFilters = buildCharFilters(e.getValue(), analyzerName);",
                "+                buildCharFilters(e.getValue(), analyzerName, builder);",
                "             } else if (k.equals(TOKEN_FILTERS)) {",
                "-                tokenFilterFactories = buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens);",
                "+                buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens, builder);",
                "             } else if (k.equals(TOKENIZER)) {",
                "-                tokenizerFactory = buildTokenizerFactory(e.getValue(), analyzerName);",
                "+                buildTokenizerFactory(e.getValue(), analyzerName, builder);",
                "             } else if (! k.equals(COMMENT)) {",
                "@@ -118,9 +111,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         }",
                "-        if (tokenizerFactory == null) {",
                "-            throw new IllegalArgumentException(\"Must specify at least a tokenizer factory for an analyzer!\");",
                "-        }",
                "-        return new MyTokenizerChain(charFilters, tokenizerFactory, tokenFilterFactories);",
                "+        return builder.build();",
                "     }",
                "-    private static TokenizerFactory buildTokenizerFactory(JsonElement map, String analyzerName) throws IOException {",
                "+    private static void buildTokenizerFactory(JsonElement map, String analyzerName,",
                "+                                                          CustomAnalyzer.Builder builder) throws IOException {",
                "         if (!(map instanceof JsonObject)) {",
                "@@ -141,29 +132,9 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         Map<String, String> params = mapify(paramsEl);",
                "-        String spiName = \"\";",
                "-        for (String s : TokenizerFactory.availableTokenizers()) {",
                "-            Class clazz = TokenizerFactory.lookupClass(s);",
                "-            if (clazz.getName().equals(factoryName)) {",
                "-                spiName = s;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spiName.equals(\"\")) {",
                "-            throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name\"+",
                "-            \"'\"+factoryName+\"' does not exist.\");",
                "-        }",
                "-        try {",
                "-            TokenizerFactory tokenizerFactory = TokenizerFactory.forName(spiName, params);",
                "-            if (tokenizerFactory instanceof ResourceLoaderAware) {",
                "-                ((ResourceLoaderAware) tokenizerFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-            }",
                "-",
                "-            return tokenizerFactory;",
                "-        } catch (IllegalArgumentException e) {",
                "-            throw new IllegalArgumentException(\"While working on \"+analyzerName, e);",
                "-        }",
                "+        builder.withTokenizer(factoryName, params);",
                "     }",
                "-    private static CharFilterFactory[] buildCharFilters(JsonElement el, String analyzerName) throws IOException {",
                "+    private static void buildCharFilters(JsonElement el,",
                "+                                                        String analyzerName, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -190,36 +161,11 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : CharFilterFactory.availableCharFilters()) {",
                "-                Class clazz = CharFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.CharFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                CharFilterFactory charFilterFactory = CharFilterFactory.forName(spiName, params);",
                "-                if (charFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) charFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(charFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While trying to load \"+",
                "-                        analyzerName + \": \"+ e.getMessage(), e);",
                "-            }",
                "-        }",
                "-        if (ret.size() == 0) {",
                "-            return new CharFilterFactory[0];",
                "+            builder.addCharFilter(factoryName, params);",
                "         }",
                "-        return ret.toArray(new CharFilterFactory[ret.size()]);",
                "     }",
                "-    private static TokenFilterFactory[] buildTokenFilterFactories(JsonElement el,",
                "-                                                                  String analyzerName, int maxTokens) throws IOException {",
                "+    private static void buildTokenFilterFactories(JsonElement el,",
                "+                                                  String analyzerName,",
                "+                                                  int maxTokens, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -244,27 +190,5 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "                     factoryName;",
                "-",
                "             JsonElement paramsEl = ((JsonObject)filterMap).get(PARAMS);",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : TokenFilterFactory.availableTokenFilters()) {",
                "-                Class clazz = TokenFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                TokenFilterFactory tokenFilterFactory = TokenFilterFactory.forName(spiName, params);",
                "-                if (tokenFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) tokenFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(tokenFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While loading \"+analyzerName, e);",
                "-            }",
                "+            builder.addTokenFilter(factoryName, params);",
                "         }",
                "@@ -274,9 +198,6 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             m.put(\"maxTokenCount\", Integer.toString(maxTokens));",
                "-            ret.add(new LimitTokenCountFilterFactory(m));",
                "-        }",
                "-",
                "-        if (ret.size() == 0) {",
                "-            return new TokenFilterFactory[0];",
                "+            builder.addTokenFilter(",
                "+                    \"limittokencount\",",
                "+                    m);",
                "         }",
                "-        return ret.toArray(new TokenFilterFactory[ret.size()]);",
                "     }",
                "@@ -301,60 +222,2 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "     }",
                "-",
                "-    /**",
                "-     * Plagiarized verbatim from Solr!",
                "-     */",
                "-    private static class MyTokenizerChain extends Analyzer {",
                "-",
                "-        final private CharFilterFactory[] charFilters;",
                "-        final private TokenizerFactory tokenizer;",
                "-        final private TokenFilterFactory[] filters;",
                "-",
                "-        public MyTokenizerChain(TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this(null, tokenizer, filters);",
                "-        }",
                "-",
                "-        public MyTokenizerChain(CharFilterFactory[] charFilters, TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this.charFilters = charFilters;",
                "-            this.tokenizer = tokenizer;",
                "-            this.filters = filters;",
                "-        }",
                "-",
                "-        public CharFilterFactory[] getCharFilterFactories() {",
                "-            return charFilters;",
                "-        }",
                "-",
                "-        public TokenizerFactory getTokenizerFactory() {",
                "-            return tokenizer;",
                "-        }",
                "-",
                "-        public TokenFilterFactory[] getTokenFilterFactories() {",
                "-            return filters;",
                "-        }",
                "-",
                "-        @Override",
                "-        public Reader initReader(String fieldName, Reader reader) {",
                "-",
                "-            if (charFilters != null && charFilters.length > 0) {",
                "-                Reader cs = reader;",
                "-                for (CharFilterFactory charFilter : charFilters) {",
                "-                    cs = charFilter.create(cs);",
                "-                }",
                "-                reader = cs;",
                "-            }",
                "-",
                "-            return reader;",
                "-        }",
                "-",
                "-        @Override",
                "-        protected TokenStreamComponents createComponents(String fieldName) {",
                "-            Tokenizer tk = tokenizer.create();",
                "-            TokenStream ts = tk;",
                "-            for (TokenFilterFactory filter : filters) {",
                "-                ts = filter.create(ts);",
                "-            }",
                "-",
                "-            return new TokenStreamComponents(tk, ts);",
                "-        }",
                "-    }",
                "-",
                " }",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "index 215ef9c6e..73c8571cb 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "@@ -25,3 +25,3 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                " import org.apache.lucene.analysis.tokenattributes.TypeAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/resources/lucene-analyzers.json b/tika-eval/src/main/resources/lucene-analyzers.json",
                "index aa24b792c..379bf8425 100644",
                "--- a/tika-eval/src/main/resources/lucene-analyzers.json",
                "+++ b/tika-eval/src/main/resources/lucene-analyzers.json",
                "@@ -5,3 +5,3 @@",
                "         {",
                "-          \"factory\": \"oala.charfilter.MappingCharFilterFactory\",",
                "+          \"factory\": \"mapping\",",
                "           \"params\": {",
                "@@ -12,3 +12,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -17,3 +17,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -21,3 +21,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -32,3 +32,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -37,3 +37,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -41,3 +41,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.AlphaIdeographFilterFactory\",",
                "+          \"factory\": \"alphaideograph\",",
                "           \"params\": {}",
                "@@ -45,3 +45,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -53,3 +53,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -61,3 +61,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -67,3 +67,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.CJKBigramAwareLengthFilterFactory\",",
                "+          \"factory\": \"cjkbigramawarelength\",",
                "           \"params\": {",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index e4ce64f82..4a1ebc525 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -129,3 +129,3 @@",
                "       <artifactId>lucene-core</artifactId>",
                "-      <version>3.5.0</version>",
                "+      <version>7.4.0</version>",
                "     </dependency>",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java b/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "deleted file mode 100755",
                "index 7567bc434..000000000",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "+++ /dev/null",
                "@@ -1,210 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.tika.example;",
                "-",
                "-import java.io.InputStream;",
                "-import java.io.Reader;",
                "-import java.util.concurrent.Executor;",
                "-",
                "-import org.apache.jackrabbit.core.query.lucene.FieldNames;",
                "-import org.apache.jackrabbit.core.value.InternalValue;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.document.AbstractField;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Store;",
                "-import org.apache.lucene.document.Field.TermVector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "-import org.xml.sax.helpers.DefaultHandler;",
                "-",
                "-/**",
                "- * <code>LazyTextExtractorField</code> implements a Lucene field with a String",
                "- * value that is lazily initialized from a given {@link Reader}. In addition",
                "- * this class provides a method to find out whether the purpose of the reader is",
                "- * to extract text and whether the extraction process is already finished.",
                "- *",
                "- * @see #isExtractorFinished()",
                "- */",
                "-@SuppressWarnings(\"serial\")",
                "-public class LazyTextExtractorField extends AbstractField {",
                "-    /**",
                "-     * The logger instance for this class.",
                "-     */",
                "-    private static final Logger LOG = LoggerFactory.getLogger(LazyTextExtractorField.class);",
                "-",
                "-    /**",
                "-     * The exception used to forcibly terminate the extraction process when the",
                "-     * maximum field length is reached.",
                "-     * <p>",
                "-     * Such exceptions shouldn't be used in logging since its stack trace is meaningless.",
                "-     */",
                "-    private static final SAXException STOP = new SAXException(\"max field length reached\");",
                "-",
                "-    /**",
                "-     * The extracted text content of the given binary value. Set to non-null",
                "-     * when the text extraction task finishes.",
                "-     */",
                "-    private volatile String extract = null;",
                "-",
                "-    /**",
                "-     * Creates a new <code>LazyTextExtractorField</code> with the given",
                "-     * <code>name</code>.",
                "-     *",
                "-     * @param name         the name of the field.",
                "-     * @param reader       the reader where to obtain the string from.",
                "-     * @param highlighting set to <code>true</code> to enable result highlighting support",
                "-     */",
                "-    public LazyTextExtractorField(Parser parser, InternalValue value,",
                "-                                  Metadata metadata, Executor executor, boolean highlighting,",
                "-                                  int maxFieldLength) {",
                "-        super(FieldNames.FULLTEXT, highlighting ? Store.YES : Store.NO,",
                "-                Field.Index.ANALYZED, highlighting ? TermVector.WITH_OFFSETS",
                "-                        : TermVector.NO);",
                "-        executor.execute(new ParsingTask(parser, value, metadata,",
                "-                maxFieldLength));",
                "-    }",
                "-",
                "-    /**",
                "-     * Returns the extracted text. This method blocks until the text extraction",
                "-     * task has been completed.",
                "-     *",
                "-     * @return the string value of this field",
                "-     */",
                "-    public synchronized String stringValue() {",
                "-        try {",
                "-            while (!isExtractorFinished()) {",
                "-                wait();",
                "-            }",
                "-            return extract;",
                "-        } catch (InterruptedException e) {",
                "-            LOG.error(\"Text extraction thread was interrupted\", e);",
                "-            return \"\";",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public Reader readerValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public byte[] binaryValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public TokenStream tokenStreamValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * Checks whether the text extraction task has finished.",
                "-     *",
                "-     * @return <code>true</code> if the extracted text is available",
                "-     */",
                "-    public boolean isExtractorFinished() {",
                "-        return extract != null;",
                "-    }",
                "-",
                "-    private synchronized void setExtractedText(String value) {",
                "-        extract = value;",
                "-        notify();",
                "-    }",
                "-",
                "-    /**",
                "-     * Releases all resources associated with this field.",
                "-     */",
                "-    public void dispose() {",
                "-        // TODO: Cause the ContentHandler below to throw an exception",
                "-    }",
                "-",
                "-    /**",
                "-     * The background task for extracting text from a binary value.",
                "-     */",
                "-    private class ParsingTask extends DefaultHandler implements Runnable {",
                "-        private final Parser parser;",
                "-",
                "-        private final InternalValue value;",
                "-",
                "-        private final Metadata metadata;",
                "-",
                "-        private final int maxFieldLength;",
                "-",
                "-        private final StringBuilder builder = new StringBuilder();",
                "-",
                "-        private final ParseContext context = new ParseContext();",
                "-",
                "-        // NOTE: not a part of Jackrabbit code, made",
                "-        private final ContentHandler handler = new DefaultHandler();",
                "-",
                "-        public ParsingTask(Parser parser, InternalValue value,",
                "-                           Metadata metadata, int maxFieldLength) {",
                "-            this.parser = parser;",
                "-            this.value = value;",
                "-            this.metadata = metadata;",
                "-            this.maxFieldLength = maxFieldLength;",
                "-        }",
                "-",
                "-        public void run() {",
                "-            try {",
                "-                try (InputStream stream = value.getStream()) {",
                "-                    parser.parse(stream, handler, metadata, context);",
                "-                }",
                "-            } catch (LinkageError e) {",
                "-                // Capture and ignore",
                "-            } catch (Throwable t) {",
                "-                if (t != STOP) {",
                "-                    LOG.debug(\"Failed to extract text.\", t);",
                "-                    setExtractedText(\"TextExtractionError\");",
                "-                    return;",
                "-                }",
                "-            } finally {",
                "-                value.discard();",
                "-            }",
                "-            setExtractedText(handler.toString());",
                "-",
                "-        }",
                "-",
                "-        @Override",
                "-        public void characters(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            builder.append(ch, start,",
                "-                    Math.min(length, maxFieldLength - builder.length()));",
                "-            if (builder.length() >= maxFieldLength) {",
                "-                throw STOP;",
                "-            }",
                "-        }",
                "-",
                "-        @Override",
                "-        public void ignorableWhitespace(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            characters(ch, start, length);",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "index 2f7cd31f0..1885877ac 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "@@ -22,5 +22,4 @@ import java.io.File;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -40,4 +39,4 @@ public class LuceneIndexer {",
                "         Document document = new Document();",
                "-        document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-        document.add(new Field(\"fulltext\", tika.parseToString(file), Store.NO, Index.ANALYZED));",
                "+        document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+        document.add(new TextField(\"fulltext\", tika.parseToString(file), Store.NO));",
                "         writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "index 2a7fd13a8..06923398f 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "@@ -21,2 +21,3 @@ import java.io.File;",
                " import java.io.Reader;",
                "+import java.nio.file.Paths;",
                "@@ -24,9 +25,7 @@ import org.apache.lucene.analysis.standard.StandardAnalyzer;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "-import org.apache.lucene.index.IndexWriter.MaxFieldLength;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "-import org.apache.lucene.util.Version;",
                "+import org.apache.lucene.index.IndexWriterConfig;",
                "+import org.apache.lucene.store.FSDirectory;",
                " import org.apache.tika.Tika;",
                "@@ -45,6 +44,6 @@ public class LuceneIndexerExtended {",
                "     public static void main(String[] args) throws Exception {",
                "-        try (IndexWriter writer = new IndexWriter(",
                "-                new SimpleFSDirectory(new File(args[0])),",
                "-                new StandardAnalyzer(Version.LUCENE_30),",
                "-                MaxFieldLength.UNLIMITED)) {",
                "+        IndexWriterConfig indexWriterConfig = new IndexWriterConfig(new StandardAnalyzer());",
                "+        try (IndexWriter writer =",
                "+                     new IndexWriter(FSDirectory.open(Paths.get(args[0])),",
                "+                indexWriterConfig)) {",
                "             LuceneIndexer indexer = new LuceneIndexer(new Tika(), writer);",
                "@@ -59,4 +58,4 @@ public class LuceneIndexerExtended {",
                "             Document document = new Document();",
                "-            document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-            document.add(new Field(\"fulltext\", fulltext));",
                "+            document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+            document.add(new TextField(\"fulltext\", fulltext));",
                "             writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "index 23a4d8c91..a353101bb 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "@@ -25,5 +25,4 @@ import java.util.Date;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -57,3 +56,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "@@ -82,3 +81,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "index 88e8a4c6b..f3a10f90d 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "@@ -19,4 +19,4 @@ package org.apache.tika.example;",
                "-import java.io.File;",
                " import java.io.IOException;",
                "+import java.nio.file.Path;",
                " import java.text.SimpleDateFormat;",
                "@@ -30,2 +30,3 @@ import org.apache.lucene.document.Document;",
                " import org.apache.lucene.index.CorruptIndexException;",
                "+import org.apache.lucene.index.DirectoryReader;",
                " import org.apache.lucene.index.IndexReader;",
                "@@ -35,5 +36,5 @@ import org.apache.lucene.search.TermRangeQuery;",
                " import org.apache.lucene.search.TopScoreDocCollector;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "+import org.apache.lucene.store.FSDirectory;",
                "+import org.apache.lucene.util.BytesRef;",
                " import org.apache.tika.metadata.DublinCore;",
                "-import org.apache.tika.metadata.Metadata;",
                " import org.apache.tika.metadata.TikaCoreProperties;",
                "@@ -52,3 +53,3 @@ public class RecentFiles {",
                "-    public String generateRSS(File indexFile) throws CorruptIndexException,",
                "+    public String generateRSS(Path indexFile) throws CorruptIndexException,",
                "             IOException {",
                "@@ -58,3 +59,3 @@ public class RecentFiles {",
                "         try {",
                "-            reader = IndexReader.open(new SimpleFSDirectory(indexFile));",
                "+            reader = DirectoryReader.open(FSDirectory.open(indexFile));",
                "             searcher = new IndexSearcher(reader);",
                "@@ -65,6 +66,7 @@ public class RecentFiles {",
                "             String fiveMinsAgo = ISO8601.format(gc);",
                "-            TermRangeQuery query = new TermRangeQuery(TikaCoreProperties.CREATED.getName(),",
                "-                    fiveMinsAgo, nowDateTime, true, true);",
                "-            TopScoreDocCollector collector = TopScoreDocCollector.create(20,",
                "-                    true);",
                "+            TermRangeQuery query = new TermRangeQuery(",
                "+                    TikaCoreProperties.CREATED.getName(),",
                "+                    new BytesRef(fiveMinsAgo), new BytesRef(nowDateTime),",
                "+                    true, true);",
                "+            TopScoreDocCollector collector = TopScoreDocCollector.create(20);",
                "             searcher.search(query, collector);",
                "@@ -78,3 +80,2 @@ public class RecentFiles {",
                "             if (reader != null) reader.close();",
                "-            if (searcher != null) searcher.close();",
                "         }"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "tika-eval/src/main/resources/lucene-analyzers.json",
                "tika-example/pom.xml",
                "tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/RecentFiles.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2695": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2695",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2cdf627eb854dee878a81fec2c6ededa36132470",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533840057,
            "hunks": 60,
            "message": "TIKA-2695 -- upgrade Lucene to 7.4.0",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 8d21a492a..c7d28fdbe 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -37,4 +37,3 @@",
                "         <cli.version>1.4</cli.version> <!--sync version with tika-server or move to parent? -->",
                "-        <!-- upgrade to 6.x or something more modern once Tika requires Java 1.8 -->",
                "-        <lucene.version>5.5.4</lucene.version>",
                "+        <lucene.version>7.4.0</lucene.version>",
                "         <poi.version>3.17</poi.version>",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "index 771322b7d..6991b03e3 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "@@ -21,5 +21,5 @@ import java.util.Map;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.TokenStream;",
                " import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "index 238930909..b9a37b3d6 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "@@ -20,3 +20,2 @@ package org.apache.tika.eval.tokens;",
                " import java.io.IOException;",
                "-import java.io.Reader;",
                " import java.lang.reflect.Type;",
                "@@ -35,10 +34,6 @@ import com.google.gson.JsonParseException;",
                " import org.apache.lucene.analysis.Analyzer;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.analysis.Tokenizer;",
                "-import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilterFactory;",
                "+import org.apache.lucene.analysis.custom.CustomAnalyzer;",
                " import org.apache.lucene.analysis.util.CharFilterFactory;",
                " import org.apache.lucene.analysis.util.ClasspathResourceLoader;",
                "-import org.apache.lucene.analysis.util.ResourceLoaderAware;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "-import org.apache.lucene.analysis.util.TokenizerFactory;",
                "@@ -99,5 +94,3 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         JsonObject aRoot = (JsonObject)value;",
                "-        CharFilterFactory[] charFilters = new CharFilterFactory[0];",
                "-        TokenizerFactory tokenizerFactory = null;",
                "-        TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];",
                "+        CustomAnalyzer.Builder builder = CustomAnalyzer.builder(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "         for ( Map.Entry<String, JsonElement> e : aRoot.entrySet()) {",
                "@@ -105,7 +98,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             if (k.equals(CHAR_FILTERS)) {",
                "-                charFilters = buildCharFilters(e.getValue(), analyzerName);",
                "+                buildCharFilters(e.getValue(), analyzerName, builder);",
                "             } else if (k.equals(TOKEN_FILTERS)) {",
                "-                tokenFilterFactories = buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens);",
                "+                buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens, builder);",
                "             } else if (k.equals(TOKENIZER)) {",
                "-                tokenizerFactory = buildTokenizerFactory(e.getValue(), analyzerName);",
                "+                buildTokenizerFactory(e.getValue(), analyzerName, builder);",
                "             } else if (! k.equals(COMMENT)) {",
                "@@ -118,9 +111,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         }",
                "-        if (tokenizerFactory == null) {",
                "-            throw new IllegalArgumentException(\"Must specify at least a tokenizer factory for an analyzer!\");",
                "-        }",
                "-        return new MyTokenizerChain(charFilters, tokenizerFactory, tokenFilterFactories);",
                "+        return builder.build();",
                "     }",
                "-    private static TokenizerFactory buildTokenizerFactory(JsonElement map, String analyzerName) throws IOException {",
                "+    private static void buildTokenizerFactory(JsonElement map, String analyzerName,",
                "+                                                          CustomAnalyzer.Builder builder) throws IOException {",
                "         if (!(map instanceof JsonObject)) {",
                "@@ -141,29 +132,9 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         Map<String, String> params = mapify(paramsEl);",
                "-        String spiName = \"\";",
                "-        for (String s : TokenizerFactory.availableTokenizers()) {",
                "-            Class clazz = TokenizerFactory.lookupClass(s);",
                "-            if (clazz.getName().equals(factoryName)) {",
                "-                spiName = s;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spiName.equals(\"\")) {",
                "-            throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name\"+",
                "-            \"'\"+factoryName+\"' does not exist.\");",
                "-        }",
                "-        try {",
                "-            TokenizerFactory tokenizerFactory = TokenizerFactory.forName(spiName, params);",
                "-            if (tokenizerFactory instanceof ResourceLoaderAware) {",
                "-                ((ResourceLoaderAware) tokenizerFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-            }",
                "-",
                "-            return tokenizerFactory;",
                "-        } catch (IllegalArgumentException e) {",
                "-            throw new IllegalArgumentException(\"While working on \"+analyzerName, e);",
                "-        }",
                "+        builder.withTokenizer(factoryName, params);",
                "     }",
                "-    private static CharFilterFactory[] buildCharFilters(JsonElement el, String analyzerName) throws IOException {",
                "+    private static void buildCharFilters(JsonElement el,",
                "+                                                        String analyzerName, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -190,36 +161,11 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : CharFilterFactory.availableCharFilters()) {",
                "-                Class clazz = CharFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.CharFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                CharFilterFactory charFilterFactory = CharFilterFactory.forName(spiName, params);",
                "-                if (charFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) charFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(charFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While trying to load \"+",
                "-                        analyzerName + \": \"+ e.getMessage(), e);",
                "-            }",
                "-        }",
                "-        if (ret.size() == 0) {",
                "-            return new CharFilterFactory[0];",
                "+            builder.addCharFilter(factoryName, params);",
                "         }",
                "-        return ret.toArray(new CharFilterFactory[ret.size()]);",
                "     }",
                "-    private static TokenFilterFactory[] buildTokenFilterFactories(JsonElement el,",
                "-                                                                  String analyzerName, int maxTokens) throws IOException {",
                "+    private static void buildTokenFilterFactories(JsonElement el,",
                "+                                                  String analyzerName,",
                "+                                                  int maxTokens, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -244,27 +190,5 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "                     factoryName;",
                "-",
                "             JsonElement paramsEl = ((JsonObject)filterMap).get(PARAMS);",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : TokenFilterFactory.availableTokenFilters()) {",
                "-                Class clazz = TokenFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                TokenFilterFactory tokenFilterFactory = TokenFilterFactory.forName(spiName, params);",
                "-                if (tokenFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) tokenFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(tokenFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While loading \"+analyzerName, e);",
                "-            }",
                "+            builder.addTokenFilter(factoryName, params);",
                "         }",
                "@@ -274,9 +198,6 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             m.put(\"maxTokenCount\", Integer.toString(maxTokens));",
                "-            ret.add(new LimitTokenCountFilterFactory(m));",
                "-        }",
                "-",
                "-        if (ret.size() == 0) {",
                "-            return new TokenFilterFactory[0];",
                "+            builder.addTokenFilter(",
                "+                    \"limittokencount\",",
                "+                    m);",
                "         }",
                "-        return ret.toArray(new TokenFilterFactory[ret.size()]);",
                "     }",
                "@@ -301,60 +222,2 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "     }",
                "-",
                "-    /**",
                "-     * Plagiarized verbatim from Solr!",
                "-     */",
                "-    private static class MyTokenizerChain extends Analyzer {",
                "-",
                "-        final private CharFilterFactory[] charFilters;",
                "-        final private TokenizerFactory tokenizer;",
                "-        final private TokenFilterFactory[] filters;",
                "-",
                "-        public MyTokenizerChain(TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this(null, tokenizer, filters);",
                "-        }",
                "-",
                "-        public MyTokenizerChain(CharFilterFactory[] charFilters, TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this.charFilters = charFilters;",
                "-            this.tokenizer = tokenizer;",
                "-            this.filters = filters;",
                "-        }",
                "-",
                "-        public CharFilterFactory[] getCharFilterFactories() {",
                "-            return charFilters;",
                "-        }",
                "-",
                "-        public TokenizerFactory getTokenizerFactory() {",
                "-            return tokenizer;",
                "-        }",
                "-",
                "-        public TokenFilterFactory[] getTokenFilterFactories() {",
                "-            return filters;",
                "-        }",
                "-",
                "-        @Override",
                "-        public Reader initReader(String fieldName, Reader reader) {",
                "-",
                "-            if (charFilters != null && charFilters.length > 0) {",
                "-                Reader cs = reader;",
                "-                for (CharFilterFactory charFilter : charFilters) {",
                "-                    cs = charFilter.create(cs);",
                "-                }",
                "-                reader = cs;",
                "-            }",
                "-",
                "-            return reader;",
                "-        }",
                "-",
                "-        @Override",
                "-        protected TokenStreamComponents createComponents(String fieldName) {",
                "-            Tokenizer tk = tokenizer.create();",
                "-            TokenStream ts = tk;",
                "-            for (TokenFilterFactory filter : filters) {",
                "-                ts = filter.create(ts);",
                "-            }",
                "-",
                "-            return new TokenStreamComponents(tk, ts);",
                "-        }",
                "-    }",
                "-",
                " }",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "index 215ef9c6e..73c8571cb 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "@@ -25,3 +25,3 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                " import org.apache.lucene.analysis.tokenattributes.TypeAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/resources/lucene-analyzers.json b/tika-eval/src/main/resources/lucene-analyzers.json",
                "index aa24b792c..379bf8425 100644",
                "--- a/tika-eval/src/main/resources/lucene-analyzers.json",
                "+++ b/tika-eval/src/main/resources/lucene-analyzers.json",
                "@@ -5,3 +5,3 @@",
                "         {",
                "-          \"factory\": \"oala.charfilter.MappingCharFilterFactory\",",
                "+          \"factory\": \"mapping\",",
                "           \"params\": {",
                "@@ -12,3 +12,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -17,3 +17,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -21,3 +21,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -32,3 +32,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -37,3 +37,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -41,3 +41,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.AlphaIdeographFilterFactory\",",
                "+          \"factory\": \"alphaideograph\",",
                "           \"params\": {}",
                "@@ -45,3 +45,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -53,3 +53,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -61,3 +61,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -67,3 +67,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.CJKBigramAwareLengthFilterFactory\",",
                "+          \"factory\": \"cjkbigramawarelength\",",
                "           \"params\": {",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 86f5ceeab..26ec9ec42 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -129,3 +129,3 @@",
                "       <artifactId>lucene-core</artifactId>",
                "-      <version>3.5.0</version>",
                "+      <version>7.4.0</version>",
                "     </dependency>",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java b/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "deleted file mode 100755",
                "index 7567bc434..000000000",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "+++ /dev/null",
                "@@ -1,210 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.tika.example;",
                "-",
                "-import java.io.InputStream;",
                "-import java.io.Reader;",
                "-import java.util.concurrent.Executor;",
                "-",
                "-import org.apache.jackrabbit.core.query.lucene.FieldNames;",
                "-import org.apache.jackrabbit.core.value.InternalValue;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.document.AbstractField;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Store;",
                "-import org.apache.lucene.document.Field.TermVector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "-import org.xml.sax.helpers.DefaultHandler;",
                "-",
                "-/**",
                "- * <code>LazyTextExtractorField</code> implements a Lucene field with a String",
                "- * value that is lazily initialized from a given {@link Reader}. In addition",
                "- * this class provides a method to find out whether the purpose of the reader is",
                "- * to extract text and whether the extraction process is already finished.",
                "- *",
                "- * @see #isExtractorFinished()",
                "- */",
                "-@SuppressWarnings(\"serial\")",
                "-public class LazyTextExtractorField extends AbstractField {",
                "-    /**",
                "-     * The logger instance for this class.",
                "-     */",
                "-    private static final Logger LOG = LoggerFactory.getLogger(LazyTextExtractorField.class);",
                "-",
                "-    /**",
                "-     * The exception used to forcibly terminate the extraction process when the",
                "-     * maximum field length is reached.",
                "-     * <p>",
                "-     * Such exceptions shouldn't be used in logging since its stack trace is meaningless.",
                "-     */",
                "-    private static final SAXException STOP = new SAXException(\"max field length reached\");",
                "-",
                "-    /**",
                "-     * The extracted text content of the given binary value. Set to non-null",
                "-     * when the text extraction task finishes.",
                "-     */",
                "-    private volatile String extract = null;",
                "-",
                "-    /**",
                "-     * Creates a new <code>LazyTextExtractorField</code> with the given",
                "-     * <code>name</code>.",
                "-     *",
                "-     * @param name         the name of the field.",
                "-     * @param reader       the reader where to obtain the string from.",
                "-     * @param highlighting set to <code>true</code> to enable result highlighting support",
                "-     */",
                "-    public LazyTextExtractorField(Parser parser, InternalValue value,",
                "-                                  Metadata metadata, Executor executor, boolean highlighting,",
                "-                                  int maxFieldLength) {",
                "-        super(FieldNames.FULLTEXT, highlighting ? Store.YES : Store.NO,",
                "-                Field.Index.ANALYZED, highlighting ? TermVector.WITH_OFFSETS",
                "-                        : TermVector.NO);",
                "-        executor.execute(new ParsingTask(parser, value, metadata,",
                "-                maxFieldLength));",
                "-    }",
                "-",
                "-    /**",
                "-     * Returns the extracted text. This method blocks until the text extraction",
                "-     * task has been completed.",
                "-     *",
                "-     * @return the string value of this field",
                "-     */",
                "-    public synchronized String stringValue() {",
                "-        try {",
                "-            while (!isExtractorFinished()) {",
                "-                wait();",
                "-            }",
                "-            return extract;",
                "-        } catch (InterruptedException e) {",
                "-            LOG.error(\"Text extraction thread was interrupted\", e);",
                "-            return \"\";",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public Reader readerValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public byte[] binaryValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public TokenStream tokenStreamValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * Checks whether the text extraction task has finished.",
                "-     *",
                "-     * @return <code>true</code> if the extracted text is available",
                "-     */",
                "-    public boolean isExtractorFinished() {",
                "-        return extract != null;",
                "-    }",
                "-",
                "-    private synchronized void setExtractedText(String value) {",
                "-        extract = value;",
                "-        notify();",
                "-    }",
                "-",
                "-    /**",
                "-     * Releases all resources associated with this field.",
                "-     */",
                "-    public void dispose() {",
                "-        // TODO: Cause the ContentHandler below to throw an exception",
                "-    }",
                "-",
                "-    /**",
                "-     * The background task for extracting text from a binary value.",
                "-     */",
                "-    private class ParsingTask extends DefaultHandler implements Runnable {",
                "-        private final Parser parser;",
                "-",
                "-        private final InternalValue value;",
                "-",
                "-        private final Metadata metadata;",
                "-",
                "-        private final int maxFieldLength;",
                "-",
                "-        private final StringBuilder builder = new StringBuilder();",
                "-",
                "-        private final ParseContext context = new ParseContext();",
                "-",
                "-        // NOTE: not a part of Jackrabbit code, made",
                "-        private final ContentHandler handler = new DefaultHandler();",
                "-",
                "-        public ParsingTask(Parser parser, InternalValue value,",
                "-                           Metadata metadata, int maxFieldLength) {",
                "-            this.parser = parser;",
                "-            this.value = value;",
                "-            this.metadata = metadata;",
                "-            this.maxFieldLength = maxFieldLength;",
                "-        }",
                "-",
                "-        public void run() {",
                "-            try {",
                "-                try (InputStream stream = value.getStream()) {",
                "-                    parser.parse(stream, handler, metadata, context);",
                "-                }",
                "-            } catch (LinkageError e) {",
                "-                // Capture and ignore",
                "-            } catch (Throwable t) {",
                "-                if (t != STOP) {",
                "-                    LOG.debug(\"Failed to extract text.\", t);",
                "-                    setExtractedText(\"TextExtractionError\");",
                "-                    return;",
                "-                }",
                "-            } finally {",
                "-                value.discard();",
                "-            }",
                "-            setExtractedText(handler.toString());",
                "-",
                "-        }",
                "-",
                "-        @Override",
                "-        public void characters(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            builder.append(ch, start,",
                "-                    Math.min(length, maxFieldLength - builder.length()));",
                "-            if (builder.length() >= maxFieldLength) {",
                "-                throw STOP;",
                "-            }",
                "-        }",
                "-",
                "-        @Override",
                "-        public void ignorableWhitespace(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            characters(ch, start, length);",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "index 2f7cd31f0..1885877ac 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "@@ -22,5 +22,4 @@ import java.io.File;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -40,4 +39,4 @@ public class LuceneIndexer {",
                "         Document document = new Document();",
                "-        document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-        document.add(new Field(\"fulltext\", tika.parseToString(file), Store.NO, Index.ANALYZED));",
                "+        document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+        document.add(new TextField(\"fulltext\", tika.parseToString(file), Store.NO));",
                "         writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "index 2a7fd13a8..06923398f 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "@@ -21,2 +21,3 @@ import java.io.File;",
                " import java.io.Reader;",
                "+import java.nio.file.Paths;",
                "@@ -24,9 +25,7 @@ import org.apache.lucene.analysis.standard.StandardAnalyzer;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "-import org.apache.lucene.index.IndexWriter.MaxFieldLength;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "-import org.apache.lucene.util.Version;",
                "+import org.apache.lucene.index.IndexWriterConfig;",
                "+import org.apache.lucene.store.FSDirectory;",
                " import org.apache.tika.Tika;",
                "@@ -45,6 +44,6 @@ public class LuceneIndexerExtended {",
                "     public static void main(String[] args) throws Exception {",
                "-        try (IndexWriter writer = new IndexWriter(",
                "-                new SimpleFSDirectory(new File(args[0])),",
                "-                new StandardAnalyzer(Version.LUCENE_30),",
                "-                MaxFieldLength.UNLIMITED)) {",
                "+        IndexWriterConfig indexWriterConfig = new IndexWriterConfig(new StandardAnalyzer());",
                "+        try (IndexWriter writer =",
                "+                     new IndexWriter(FSDirectory.open(Paths.get(args[0])),",
                "+                indexWriterConfig)) {",
                "             LuceneIndexer indexer = new LuceneIndexer(new Tika(), writer);",
                "@@ -59,4 +58,4 @@ public class LuceneIndexerExtended {",
                "             Document document = new Document();",
                "-            document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-            document.add(new Field(\"fulltext\", fulltext));",
                "+            document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+            document.add(new TextField(\"fulltext\", fulltext));",
                "             writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "index 5c6a9d482..dee4d1389 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "@@ -25,5 +25,4 @@ import java.util.Date;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -56,3 +55,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "@@ -81,3 +80,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "index d6a259b8c..8fabd3a34 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "@@ -19,4 +19,4 @@ package org.apache.tika.example;",
                "-import java.io.File;",
                " import java.io.IOException;",
                "+import java.nio.file.Path;",
                " import java.text.SimpleDateFormat;",
                "@@ -30,2 +30,3 @@ import org.apache.lucene.document.Document;",
                " import org.apache.lucene.index.CorruptIndexException;",
                "+import org.apache.lucene.index.DirectoryReader;",
                " import org.apache.lucene.index.IndexReader;",
                "@@ -35,3 +36,4 @@ import org.apache.lucene.search.TermRangeQuery;",
                " import org.apache.lucene.search.TopScoreDocCollector;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "+import org.apache.lucene.store.FSDirectory;",
                "+import org.apache.lucene.util.BytesRef;",
                " import org.apache.tika.metadata.DublinCore;",
                "@@ -51,3 +53,3 @@ public class RecentFiles {",
                "-    public String generateRSS(File indexFile) throws CorruptIndexException,",
                "+    public String generateRSS(Path indexFile) throws CorruptIndexException,",
                "             IOException {",
                "@@ -57,3 +59,3 @@ public class RecentFiles {",
                "         try {",
                "-            reader = IndexReader.open(new SimpleFSDirectory(indexFile));",
                "+            reader = DirectoryReader.open(FSDirectory.open(indexFile));",
                "             searcher = new IndexSearcher(reader);",
                "@@ -64,6 +66,7 @@ public class RecentFiles {",
                "             String fiveMinsAgo = ISO8601.format(gc);",
                "-            TermRangeQuery query = new TermRangeQuery(Metadata.DATE.toString(),",
                "-                    fiveMinsAgo, nowDateTime, true, true);",
                "-            TopScoreDocCollector collector = TopScoreDocCollector.create(20,",
                "-                    true);",
                "+            TermRangeQuery query = new TermRangeQuery(",
                "+                    Metadata.DATE.toString(),",
                "+                    new BytesRef(fiveMinsAgo), new BytesRef(nowDateTime),",
                "+                    true, true);",
                "+            TopScoreDocCollector collector = TopScoreDocCollector.create(20);",
                "             searcher.search(query, collector);",
                "@@ -77,3 +80,2 @@ public class RecentFiles {",
                "             if (reader != null) reader.close();",
                "-            if (searcher != null) searcher.close();",
                "         }"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "tika-eval/src/main/resources/lucene-analyzers.json",
                "tika-example/pom.xml",
                "tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/RecentFiles.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2695": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2695",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "64302aa88bd8de81771712ccafa778a34cefd7c2",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542125744,
            "hunks": 18,
            "message": "prefer System.currentTimeMillis to creating a new Date object, throughout...",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "index 23887af99..82a9c5277 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "@@ -175,3 +175,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "-        state.start = new Date().getTime();",
                "+        state.start = System.currentTimeMillis();",
                "         completionService.submit(interrupter);",
                "@@ -337,3 +337,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "-        double elapsed = ((double) new Date().getTime() - (double) state.start) / 1000.0;",
                "+        double elapsed = ((double)System.currentTimeMillis() - (double) state.start) / 1000.0;",
                "         int processed = 0;",
                "@@ -421,3 +421,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "-        long start = new Date().getTime();",
                "+        long start = System.currentTimeMillis();",
                "         while (countActiveConsumers() > 0) {",
                "@@ -429,3 +429,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "             }",
                "-            long elapsed = new Date().getTime()-start;",
                "+            long elapsed = System.currentTimeMillis()-start;",
                "             if (pauseOnEarlyTerminationMillis > -1 &&",
                "@@ -484,3 +484,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "-        double elapsedSeconds = (double) (new Date().getTime() - started) / (double) 1000;",
                "+        double elapsedSeconds = (double) (System.currentTimeMillis() - started) / (double) 1000;",
                "         return elapsedSeconds > (double) maxAliveTimeSeconds;",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceConsumer.java b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceConsumer.java",
                "index 6e9d314eb..f6193973a 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceConsumer.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceConsumer.java",
                "@@ -314,3 +314,3 @@ public abstract class FileResourceConsumer implements Callable<IFileProcessorFut",
                "         FileResource fileResource = null;",
                "-        long start = new Date().getTime();",
                "+        long start = System.currentTimeMillis();",
                "         while (fileResource == null) {",
                "@@ -340,3 +340,3 @@ public abstract class FileResourceConsumer implements Callable<IFileProcessorFut",
                "-            long elapsed = new Date().getTime() - start;",
                "+            long elapsed = System.currentTimeMillis() - start;",
                "             if (maxConsecWaitInMillis > 0 && elapsed > maxConsecWaitInMillis) {",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "index fe1fd1ab7..7f6057b0f 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "@@ -148,3 +148,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "         int i = 0;",
                "-        long start = new Date().getTime();",
                "+        long start = System.currentTimeMillis();",
                "         while (queue.offer(new PoisonFileResource(), 1L, TimeUnit.SECONDS)) {",
                "@@ -158,3 +158,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "             }",
                "-            long elapsed = new Date().getTime() - start;",
                "+            long elapsed = System.currentTimeMillis() - start;",
                "             if (maxConsecWaitInMillis > -1 && elapsed > maxConsecWaitInMillis) {",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/FileStarted.java b/tika-batch/src/main/java/org/apache/tika/batch/FileStarted.java",
                "index 3a8d4f405..53ea0874c 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/FileStarted.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/FileStarted.java",
                "@@ -36,3 +36,3 @@ class FileStarted {",
                "     public FileStarted(String resourceId) {",
                "-        this(resourceId, new Date().getTime());",
                "+        this(resourceId, System.currentTimeMillis());",
                "     }",
                "@@ -64,3 +64,3 @@ class FileStarted {",
                "     public long getElapsedMillis() {",
                "-        long now = new Date().getTime();",
                "+        long now = System.currentTimeMillis();",
                "         return now - started;",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/StatusReporter.java b/tika-batch/src/main/java/org/apache/tika/batch/StatusReporter.java",
                "index 7772d6cff..0147ac5f4 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/StatusReporter.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/StatusReporter.java",
                "@@ -60,3 +60,3 @@ public class StatusReporter implements Callable<IFileProcessorFutureResult> {",
                "         this.crawler = crawler;",
                "-        start = new Date().getTime();",
                "+        start = System.currentTimeMillis();",
                "     }",
                "@@ -84,3 +84,3 @@ public class StatusReporter implements Callable<IFileProcessorFutureResult> {",
                "                 int exceptions = getRoughCountExceptions();",
                "-                long elapsed = new Date().getTime() - start;",
                "+                long elapsed = System.currentTimeMillis() - start;",
                "                 double elapsedSecs = (double) elapsed / (double) 1000;",
                "@@ -88,3 +88,3 @@ public class StatusReporter implements Callable<IFileProcessorFutureResult> {",
                "-                String elapsedString = DurationFormatUtils.formatMillis(new Date().getTime() - start);",
                "+                String elapsedString = DurationFormatUtils.formatMillis(System.currentTimeMillis() - start);",
                "                 String docsPerSec = avg > -1 ? String.format(Locale.ROOT,",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java b/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "index 4fef6c88a..1814e871c 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "@@ -173,3 +173,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "     public Integer call() throws Exception {",
                "-        long start = new Date().getTime();",
                "+        long start = System.currentTimeMillis();",
                "         TikaVisitor v = new TikaVisitor();",
                "@@ -197,3 +197,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "         int processed = v.getProcessed();",
                "-        double elapsedSecs = ((double)new Date().getTime()-(double)start)/(double)1000;",
                "+        double elapsedSecs = ((double)System.currentTimeMillis()-(double)start)/(double)1000;",
                "         LOG.info(\"Finished processing {} files in {} seconds.\", processed, elapsedSecs);",
                "@@ -213,3 +213,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "     public static void main(String[] args) {",
                "-        long start = new Date().getTime();",
                "+        long start = System.currentTimeMillis();",
                "         if (args.length < 6) {",
                "@@ -255,3 +255,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "         }",
                "-        double elapsedSeconds = (double)(new Date().getTime() - start) / (double)1000;",
                "+        double elapsedSeconds = (double)(System.currentTimeMillis() - start) / (double)1000;",
                "         LOG.info(\"Processed {} in {} seconds\", totalFilesProcessed, elapsedSeconds);"
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "tika-batch/src/main/java/org/apache/tika/batch/FileResourceConsumer.java",
                "tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "tika-batch/src/main/java/org/apache/tika/batch/FileStarted.java",
                "tika-batch/src/main/java/org/apache/tika/batch/StatusReporter.java",
                "tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "41dda342ca4ce521c5e9f824e4956449e41028a0"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2d19fe0ad26f68c6cc2caeaed713cd28179dede7",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524782596,
            "hunks": 2,
            "message": "TIKA-2462 Initial parser for SAS7BDAT files powered by Parso (now ASLv2). Still to do: Metadata, Unit Tests, Consistency with similar format tests",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "new file mode 100644",
                "index 000000000..1cef3cd6d",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -0,0 +1,100 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.sas;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.util.Collections;",
                "+import java.util.Set;",
                "+",
                "+import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.TikaCoreProperties;",
                "+import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.parser.AbstractParser;",
                "+import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.sax.XHTMLContentHandler;",
                "+import org.xml.sax.ContentHandler;",
                "+import org.xml.sax.SAXException;",
                "+",
                "+import com.epam.parso.Column;",
                "+import com.epam.parso.DataWriterUtil;",
                "+import com.epam.parso.SasFileReader;",
                "+import com.epam.parso.impl.SasFileReaderImpl;",
                "+",
                "+/**",
                "+ * Processes the SAS7BDAT data columnar database file used by SAS and ",
                "+ *  other similar languages.",
                "+ */",
                "+public class SAS7BDATParser extends AbstractParser {",
                "+    private static final long serialVersionUID = -2775485539937983150L;",
                "+    ",
                "+    private static final MediaType TYPE_SAS7BDAT =",
                "+            MediaType.application(\"x-sas-data\");",
                "+    private static final Set<MediaType> SUPPORTED_TYPES =",
                "+            Collections.singleton(TYPE_SAS7BDAT);",
                "+",
                "+    @Override",
                "+    public Set<MediaType> getSupportedTypes(ParseContext context) {",
                "+        return SUPPORTED_TYPES;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void parse(InputStream stream, ContentHandler handler,",
                "+            Metadata metadata, ParseContext context)",
                "+            throws IOException, SAXException, TikaException {",
                "+        metadata.set(Metadata.CONTENT_TYPE, TYPE_SAS7BDAT.toString());",
                "+",
                "+        XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);",
                "+        xhtml.startDocument();",
                "+        ",
                "+        SasFileReader sas = new SasFileReaderImpl(stream);",
                "+        ",
                "+        // TODO Metadata",
                "+",
                "+        // Output as a table",
                "+        xhtml.startElement(\"table\");",
                "+        xhtml.newline();",
                "+        ",
                "+        // Do the column headings",
                "+        xhtml.startElement(\"tr\");",
                "+        for (Column c : sas.getColumns()) {",
                "+            xhtml.startElement(\"th\", \"title\", c.getName());",
                "+            xhtml.characters(c.getLabel());",
                "+            xhtml.endElement(\"th\");",
                "+        }",
                "+        xhtml.endElement(\"tr\");",
                "+        xhtml.newline();",
                "+        ",
                "+        // Process each row in turn",
                "+        Object[] row = null;",
                "+        while ((row = sas.readNext()) != null) {",
                "+            xhtml.startElement(\"tr\");",
                "+            for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "+                xhtml.startElement(\"td\");",
                "+                xhtml.characters(val);",
                "+                xhtml.endElement(\"td\");",
                "+            }",
                "+            xhtml.endElement(\"tr\");",
                "+            xhtml.newline();",
                "+        }",
                "+",
                "+        // Finish",
                "+        xhtml.endElement(\"table\");",
                "+        xhtml.newline();",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser b/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "index aa8725eab..a33a5780b 100644",
                "--- a/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "+++ b/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "@@ -60,2 +60,3 @@ org.apache.tika.parser.pkg.RarParser",
                " org.apache.tika.parser.rtf.RTFParser",
                "+org.apache.tika.parser.sas.SAS7BDATParser",
                " org.apache.tika.parser.txt.TXTParser"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2462": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2462",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5a4a0eecf61d7ced2a708d0184df5179c125dd4b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537278806,
            "hunks": 84,
            "message": "Fixed javadocs",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "index 7a8fcd4b4..23887af99 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "@@ -532,3 +532,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "      * <p/>",
                "-     * If the value is < 0, the process will run until completion, interruption or exception.",
                "+     * If the value is &lt; 0, the process will run until completion, interruption or exception.",
                "      *",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java b/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "index a4f3b8207..5c830189c 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "@@ -71,6 +71,5 @@ public abstract class ConsumersManager {",
                "     /**",
                "-     * {@see #getConsumersManagerMaxMillis()}",
                "-     *",
                "      * @param consumersManagerMaxMillis maximum number of milliseconds",
                "      *                                  to allow for init() or shutdown()",
                "+     * @see #getConsumersManagerMaxMillis()",
                "      */",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "index c02b053db..fe1fd1ab7 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "@@ -197,3 +197,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "     /**",
                "-     * Maximum number of files to add.  If {@link #maxFilesToAdd} < 0 (default),",
                "+     * Maximum number of files to add.  If {@link #maxFilesToAdd} &lt; 0 (default),",
                "      * then this crawler will add all documents.",
                "@@ -211,3 +211,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "      * <p/>",
                "-     * If {@link #maxFilesToConsider} < 0 (default), then this crawler",
                "+     * If {@link #maxFilesToConsider} &lt; 0 (default), then this crawler",
                "      * will add all documents.",
                "@@ -262,4 +262,2 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "      * where the crawler is trying to add to the queue, but it is full.",
                "-     *",
                "-     * @return",
                "      */",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "index 314ea76f6..0ebfd15c0 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "@@ -185,3 +185,3 @@ public class BatchProcessBuilder {",
                "      * <p>",
                "-     * If the value is \"default\", not a parseable integer or has a value < 1,",
                "+     * If the value is \"default\", not a parseable integer or has a value &lt; 1,",
                "      * then <code>AbstractConsumersBuilder</code>'s <code>getDefaultNumConsumers()</code>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java b/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "index 84dc5da5a..25581be76 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "@@ -109,3 +109,3 @@ public class ExternalEmbedder implements Embedder {",
                "      * Gets the command to be run. This can include either of",
                "-     * {@link #INPUT_FILE_TOKEN} or {@link #OUTPUT_FILE_TOKEN} if the command",
                "+     * {@link ExternalParser#INPUT_FILE_TOKEN} or {@link ExternalParser#OUTPUT_FILE_TOKEN} if the command",
                "      * needs filenames.",
                "@@ -120,3 +120,3 @@ public class ExternalEmbedder implements Embedder {",
                "      * Sets the command to be run. This can include either of",
                "-     * {@link #INPUT_FILE_TOKEN} or {@link #OUTPUT_FILE_TOKEN} if the command",
                "+     * {@link ExternalParser#INPUT_FILE_TOKEN} or {@link ExternalParser#OUTPUT_FILE_TOKEN} if the command",
                "      * needs filenames.",
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index c7b51ac67..c6412d5e8 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -193,4 +193,4 @@ public class ForkParser extends AbstractParser {",
                "      * The given command line is split on whitespace and the arguments",
                "-2    * \"-jar\" and \"/path/to/bootstrap.jar\" are appended to it when starting",
                "-2    * the process. The default setting is \"java -Xmx32m\".",
                "+     * \"-jar\" and \"/path/to/bootstrap.jar\" are appended to it when starting",
                "+     * the process. The default setting is \"java -Xmx32m\".",
                "      *",
                "@@ -214,3 +214,3 @@ public class ForkParser extends AbstractParser {",
                "      * <p>",
                "-     * If using a RecursiveParserWrapper, there are two options:",
                "+     * If using a {@link org.apache.tika.parser.RecursiveParserWrapper}, there are two options:",
                "      * </p>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java b/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "index dbb05f991..17db9d345 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "@@ -147,3 +147,3 @@ public class LanguageIdentifier {",
                "      * WARNING: Will never return true for small amount of input texts. ",
                "-     * @return <code>true</code> if the distance is smaller then {@value #CERTAINTY_LIMIT}, <code>false</code> otherwise",
                "+     * @return <code>true</code> if the distance is smaller then {@value LanguageIdentifier#CERTAINTY_LIMIT}, <code>false</code> otherwise",
                "      */",
                "diff --git a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "index 420badf56..f9af2e1a4 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "@@ -210,3 +210,3 @@ public interface TikaCoreProperties {",
                "     /**",
                "-     * @see DublinCore#SUBJECT; should include both subject and keywords",
                "+     * {@link DublinCore#SUBJECT}; should include both subject and keywords",
                "      *  if a document format has both.  See also {@link Office#KEYWORDS}",
                "@@ -280,3 +280,3 @@ public interface TikaCoreProperties {",
                "     /**",
                "-     * See {@link #EMBEDDED_RESOURCE_TYPE}",
                "+     * Embedded resource type property",
                "      */",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/Parser.java b/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "index 352b8d3ab..3ac2d1fad 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "@@ -31,3 +31,2 @@ import org.xml.sax.SAXException;",
                "  * Tika parser interface.",
                "- * @see ConfigurableParser for parsers which adopts to runtime params",
                "  */",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java b/tika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java",
                "index 0bb1a53fd..809ddf039 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java",
                "@@ -34,3 +34,3 @@ import org.xml.sax.ContentHandler;",
                "  * Can optionally keep Metadata from failed parsers when",
                "- *  trying the next one, depending on the {@link MetadataPolicy}",
                "+ *  trying the next one, depending on the {@link AbstractMultipleParser.MetadataPolicy}",
                "  *  chosen.",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java b/tika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java",
                "index 67766da9f..60e647d94 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java",
                "@@ -33,3 +33,3 @@ import org.xml.sax.ContentHandler;",
                "  *  merging the metadata from them based on the",
                "- *  {@link MetadataPolicy} chosen.",
                "+ *  {@link AbstractMultipleParser.MetadataPolicy} chosen.",
                "  *  ",
                "diff --git a/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "index b560f9e2d..bb1081eb9 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "@@ -58,3 +58,3 @@ public class LinkContentHandler extends DefaultHandler {",
                "      *",
                "-     * @boolean collapseWhitespaceInAnchor",
                "+     * @param collapseWhitespaceInAnchor",
                "      */",
                "diff --git a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "index 897d0729c..7cb7b064e 100644",
                "--- a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "+++ b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "@@ -299,3 +299,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "      * @param stream label index stream",
                "-     * @return Map of integer -> label name",
                "+     * @return Map of integer -&gt; label name",
                "      * @throws IOException    when the stream breaks unexpectedly",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "index 0a67ad037..322a1f67f 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "@@ -210,3 +210,3 @@ public abstract class AbstractProfiler extends FileResourceConsumer {",
                "     /**",
                "-     * Add a LimitTokenCountFilterFactory if > -1",
                "+     * Add a LimitTokenCountFilterFactory if &gt; -1",
                "      *",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java b/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "index 9aadf5813..d134fdec8 100644",
                "--- a/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "@@ -38,3 +38,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  * <p>",
                "- * {@link InterruptingContentHandler} throws special exception as soon as",
                "+ * {@link InterruptableParsingExample.InterruptingContentHandler} throws special exception as soon as",
                "  * find {@code query} string in parsed file.",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java b/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "index e6fef0466..adc24849e 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "@@ -44,3 +44,3 @@ import org.xml.sax.ContentHandler;",
                "  * {@link Detector} framework (aka MIME identification and repository), its",
                "- * {@link Parser} interface, its {@link LanguageIdentifier} and other goodies.",
                "+ * {@link Parser} interface, its {@link org.apache.tika.language.LanguageIdentifier} and other goodies.",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "index 2c4dc4e67..e4f9ee521 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "@@ -37,7 +37,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * not there and the content section starts immediately after the directory.",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1}",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "index 10b00aeb0..28e2ff3ef 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "@@ -40,7 +40,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * DWORD -1 (unknown)",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1}",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "index 17a2e2fcb..1bd0c4f5f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "@@ -34,7 +34,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * 001C: DWORD 0 (unknown)",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?page=2 }",
                "- * ",
                "  */",
                "@@ -93,3 +88,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param current_place",
                "+     * @param currentPlace",
                "      */",
                "@@ -183,3 +178,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param window_size",
                "+     * @param windowSize",
                "      */",
                "@@ -201,3 +196,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param windows_per_reset",
                "+     * @param windowsPerReset",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "index 5823f67b1..be57c3d68 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "@@ -30,7 +30,2 @@ import org.apache.tika.parser.chm.exception.ChmParsingException;",
                "  * .",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?page=2 }",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "index 97eaf4620..a98ae67e0 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "@@ -37,3 +37,3 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * indicates \"continued to the next byte\". Bytes are stored most significant to",
                "- * least significant. So, for example, $EA $15 is (((0xEA&0x7F)<<7)|0x15) =",
                "+ * least significant. So, for example, $EA $15 is (((0xEA&amp;0x7F)&lt;&lt;7)|0x15) =",
                "  * 0x3515.",
                "@@ -42,6 +42,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * Note: This class is not in use",
                "- * ",
                "- * {@link http://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original/?show-translation-form=1 }",
                "- * ",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "index abb71754a..0bfb95a0f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "@@ -36,3 +36,3 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * area is written backwards from the end of the chunk. One quickref entry",
                "- * exists for every n entries in the file, where n is calculated as 1 + (1 <<",
                "+ * exists for every n entries in the file, where n is calculated as 1 + (1 &lt;&lt;",
                "  * quickref density). So for density = 2, n = 5 Chunklen-0002: WORD Number of",
                "@@ -49,9 +49,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * names which begin with \"/\".",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1 }",
                "- * ",
                "- * @author olegt",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "index c413e0761..5f9567504 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "@@ -31,3 +31,2 @@ import org.apache.tika.parser.chm.core.ChmCommons;",
                "  * the user data files have names which begin with \"/\".",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "index cdedc3e70..0c736e8fe 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "@@ -88,3 +88,3 @@ public class ChmAssert {",
                "      * @param data",
                "-     * @param chmItsfHeader",
                "+     * @param chmAccessor",
                "      * @param count",
                "@@ -112,3 +112,3 @@ public class ChmAssert {",
                "      * ",
                "-     * @param ChmAccessor",
                "+     * @param chmAccessor",
                "      * @throws ChmParsingException ",
                "@@ -158,3 +158,3 @@ public class ChmAssert {",
                "     /**",
                "-     * Checks if int param is greater than zero In case param <=0 throws an",
                "+     * Checks if int param is greater than zero In case param &lt;= 0 throws an",
                "      * exception",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "index e6d261d93..1c1be0297 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "@@ -21,3 +21,3 @@ import org.apache.ctakes.typesystem.type.textsem.IdentifiedAnnotation;",
                " /**",
                "- * This enumeration includes the properties that an {@see IdentifiedAnnotation} object can provide.",
                "+ * This enumeration includes the properties that an {@link IdentifiedAnnotation} object can provide.",
                "  *",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "index 67ba9930a..cc202731e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "@@ -27,3 +27,3 @@ import static org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM;",
                " /**",
                "- * Configuration for {@see CTAKESContentHandler}.",
                "+ * Configuration for {@link CTAKESContentHandler}.",
                "  * ",
                "@@ -79,3 +79,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Loads properties from InputStream and then tries to close InputStream.",
                "-     * @param stream {@see InputStream} object used to read properties.",
                "+     * @param stream {@link InputStream} object used to read properties.",
                "      */",
                "@@ -155,4 +155,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns an {@see OutputStream} object used write the CAS.",
                "-     * @return {@see OutputStream} object used write the CAS.",
                "+     * Returns an {@link OutputStream} object used write the CAS.",
                "+     * @return {@link OutputStream} object used write the CAS.",
                "      */",
                "@@ -205,4 +205,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns an array of {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @return an array of {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * Returns an array of {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @return an array of {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "@@ -213,3 +213,3 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns a string containing a comma-separated list of {@see CTAKESAnnotationProperty} names that will be included into cTAKES metadata.",
                "+     * Returns a string containing a comma-separated list of {@link CTAKESAnnotationProperty} names that will be included into cTAKES metadata.",
                "      * @return",
                "@@ -262,3 +262,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables the formatted output for serializer.",
                "-     * @param prettyPrint {@true} to enable formatted output, {@code false} otherwise.",
                "+     * @param prettyPrint {@code true} to enable formatted output, {@code false} otherwise.",
                "      */",
                "@@ -277,4 +277,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Sets the {@see OutputStream} object used to write the CAS.",
                "-     * @param stream the {@see OutputStream} object used to write the CAS.",
                "+     * Sets the {@link OutputStream} object used to write the CAS.",
                "+     * @param stream the {@link OutputStream} object used to write the CAS.",
                "      */",
                "@@ -286,3 +286,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables CAS serialization.",
                "-     * @param serialize {@true} to enable CAS serialization, {@code false} otherwise.",
                "+     * @param serialize {@code true} to enable CAS serialization, {@code false} otherwise.",
                "      */",
                "@@ -294,3 +294,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables content text analysis using cTAKES.",
                "-     * @param text {@true} to enable content text analysis, {@code false} otherwise.",
                "+     * @param text {@code true} to enable content text analysis, {@code false} otherwise.",
                "      */",
                "@@ -309,4 +309,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Sets the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @param annotationProps the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * Sets the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @param annotationProps the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "@@ -317,4 +317,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * ets the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @param annotationProps the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * ets the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @param annotationProps the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "index 38326e3b3..422b4b520 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "@@ -60,12 +60,11 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t/**",
                "-\t * Creates a new {@see CTAKESContentHandler} for the given {@see",
                "-\t * ContentHandler} and Metadata objects.",
                "+\t * Creates a new {@link CTAKESContentHandler} for the given {@link ContentHandler} and Metadata objects.",
                " \t * ",
                " \t * @param handler",
                "-\t *            the {@see ContentHandler} object to be decorated.",
                "+\t *            the {@link ContentHandler} object to be decorated.",
                " \t * @param metadata",
                "-\t *            the {@see Metadata} object that will be populated using",
                "+\t *            the {@link Metadata} object that will be populated using",
                " \t *            biomedical information extracted by cTAKES.",
                " \t * @param config",
                "-\t *            the {@see CTAKESConfig} object used to configure the handler.",
                "+\t *            the {@link CTAKESConfig} object used to configure the handler.",
                " \t */",
                "@@ -80,3 +79,3 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t/**",
                "-\t * Creates a new {@see CTAKESContentHandler} for the given {@see",
                "+\t * Creates a new {@link CTAKESContentHandler} for the given {@link",
                " \t * ContentHandler} and Metadata objects.",
                "@@ -84,5 +83,5 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t * @param handler",
                "-\t *            the {@see ContentHandler} object to be decorated.",
                "+\t *            the {@link ContentHandler} object to be decorated.",
                " \t * @param metadata",
                "-\t *            the {@see Metadata} object that will be populated using",
                "+\t *            the {@link Metadata} object that will be populated using",
                " \t *            biomedical information extracted by cTAKES.",
                "@@ -170,3 +169,3 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t * ",
                "-\t * @return {@Metadata} object that includes cTAKES annotations.",
                "+\t * @return {@link Metadata} object that includes cTAKES annotations.",
                " \t */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "index acd196502..dc92502ff 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "@@ -32,4 +32,4 @@ import org.xml.sax.SAXException;",
                " /**",
                "- * CTAKESParser decorates a {@see Parser} and leverages on ",
                "- * {@see CTAKESContentHandler} to extract biomedical information from ",
                "+ * CTAKESParser decorates a {@link Parser} and leverages on",
                "+ * {@link CTAKESContentHandler} to extract biomedical information from",
                "  * clinical text using Apache cTAKES.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "index c8cc8ce12..94ebefae2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "@@ -40,3 +40,3 @@ import org.xml.sax.SAXException;",
                "  * This class provides methods to extract biomedical information from plain text",
                "- * using {@see CTAKESContentHandler} that relies on Apache cTAKES.",
                "+ * using {@link CTAKESContentHandler} that relies on Apache cTAKES.",
                "  * ",
                "@@ -154,3 +154,3 @@ public class CTAKESUtils {",
                " \t * @param stream",
                "-\t *            {@see OutputStream} object used to print out information",
                "+\t *            {@link OutputStream} object used to print out information",
                " \t *            extracted by using cTAKES.",
                "@@ -178,5 +178,5 @@ public class CTAKESUtils {",
                " \t * @param annotation",
                "-\t *            {@see IdentifiedAnnotation} object.",
                "+\t *            {@link IdentifiedAnnotation} object.",
                " \t * @param property",
                "-\t *            {@see CTAKESAnnotationProperty} enum used to identify the",
                "+\t *            {@link CTAKESAnnotationProperty} enum used to identify the",
                " \t *            annotation type.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "index 1cf268609..1fac1598b 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "@@ -102,4 +102,4 @@ public class MailUtil {",
                "      * If the chunk looks like it contains an email",
                "-     * @param chunk",
                "-     * @return",
                "+     * @param chunk to analyse",
                "+     * @return {@code true} if chunk looks like it contains an email",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "index ef8aedf10..f8100d030 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "@@ -46,3 +46,3 @@ import org.xml.sax.SAXException;",
                "  * Parser that handles Microsoft Access files via",
                "- * <a href=\"http://jackcess.sourceforge.net/>Jackcess</a>",
                "+ * <a href=\"http://jackcess.sourceforge.net/\">Jackcess</a>",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "index c4424538f..ad8dd59c1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "@@ -40,3 +40,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  *",
                "- * @see {@url https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats}",
                "+ * See <a href=\"https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats\">https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats</a>",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "index a10157404..3b5a5fd96 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "@@ -48,3 +48,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  *",
                "- * @see {@url https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats}",
                "+ * See <a href=\"https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats\">https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats</a>",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "index 98ef5040c..63577e672 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "@@ -34,3 +34,3 @@ public interface ID3Tags {",
                "      *",
                "-     * @see http://www.id3.org/id3v2-00",
                "+     * See <a href=\"http://www.id3.org/id3v2-00\">http://www.id3.org/id3v2-00</a>",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "index c4693eb17..27d58dae7 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "@@ -54,3 +54,3 @@ public interface NERecogniser {",
                "      * @param text text with possibly contains names",
                "-     * @return map of entityType -> set of names",
                "+     * @return map of entityType -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "index 05ef89f61..18b3d1a67 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "@@ -125,3 +125,3 @@ public class CoreNLPNERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "index cf971949c..696836e33 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "@@ -151,3 +151,3 @@ public class GrobidNERecogniser implements NERecogniser{",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "index 85935e3e4..9157aaa6f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "@@ -100,3 +100,3 @@ public class MITIENERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "index e7b36385b..0e3d2d777 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "@@ -116,3 +116,3 @@ public class NLTKNERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "index 8d2d9538e..de93f8c80 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "@@ -113,3 +113,3 @@ public class OpenNLPNERecogniser implements NERecogniser {",
                "      * Creates a chain of Named Entity recognisers",
                "-     * @param models map of entityType -> model path",
                "+     * @param models map of entityType -&gt; model path",
                "      * NOTE: the model path should be known to class loader.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "index a1e19ae88..457aa0021 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "@@ -99,3 +99,3 @@ public class OpenNLPNameFinder implements NERecogniser {",
                "      * @param tokens the tokens array",
                "-     * @return map of EntityType -> set of entity names",
                "+     * @return map of EntityType -&gt; set of entity names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "index 0bb659094..b525d548c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "@@ -41,3 +41,3 @@ public class AccessChecker implements Serializable {",
                "      * <p/>",
                "-     * This constructor is available to allow for Tika's legacy ( <= v1.7) behavior.",
                "+     * This constructor is available to allow for Tika's legacy (&lt;= v1.7) behavior.",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "index a305c4cae..b0327af37 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "@@ -321,3 +321,3 @@ public class PDFParserConfig implements Serializable {",
                "      * <b>Beware:</b> some PDF documents of modest size (~4MB) can contain",
                "-     * thousands of embedded images totaling > 2.5 GB.  Also, at least as of PDFBox 1.8.5,",
                "+     * thousands of embedded images totaling &gt; 2.5 GB.  Also, at least as of PDFBox 1.8.5,",
                "      * there can be surprisingly large memory consumption and/or out of memory errors.",
                "@@ -327,5 +327,6 @@ public class PDFParserConfig implements Serializable {",
                "      * <p/>",
                "-     * See also: {@see #setExtractUniqueInlineImagesOnly(boolean)};",
                "      *",
                "      * @param extractInlineImages",
                "+     *",
                "+     * @see #setExtractUniqueInlineImagesOnly(boolean)",
                "      */",
                "@@ -641,3 +642,2 @@ public class PDFParserConfig implements Serializable {",
                "      * This does not apply to all image formats",
                "-     * @return",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "index 16d9e5388..f3ff9660f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "@@ -22,3 +22,3 @@ import org.apache.tika.metadata.Metadata;",
                "  * Interface for setting options for the {@link CompressorParser} by passing",
                "- * via the {@link ParseContext}.",
                "+ * via the {@link org.apache.tika.parser.ParseContext}.",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "index 65242ab53..518e5ede2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "@@ -36,4 +36,4 @@ import java.util.Set;",
                " /**",
                "- *  This is a contract for object recognisers used by {@link ObjectRecognitionParser}",
                "- *  @see {@link TensorflowImageRecParser} for an example",
                "+ * This is a contract for object recognisers used by {@link ObjectRecognitionParser}",
                "+ * @see TensorflowImageRecParser",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "index da9deab10..d3724a37e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "@@ -50,4 +50,3 @@ public class FileConfig implements Serializable {",
                " \t * ",
                "-\t * @param path",
                "-\t *            the \"file\" installation folder.",
                "+\t * @param filePath the \"file\" installation folder.",
                " \t */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "index 9183f2ef8..ec893a14a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "@@ -117,3 +117,3 @@ public class StringsConfig implements Serializable {",
                " \t * ",
                "-\t * @return {@see StringsEncoding} enum that represents the character",
                "+\t * @return {@link StringsEncoding} enum that represents the character",
                " \t *         encoding of the strings that are to be found.",
                "@@ -165,3 +165,3 @@ public class StringsConfig implements Serializable {",
                " \t * @param encoding",
                "-\t *            {@see StringsEncoding} enum that represents the character",
                "+\t *            {@link StringsEncoding} enum that represents the character",
                " \t *            encoding of the strings that are to be found."
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "tika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java",
                "tika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java",
                "tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "231fbb0f79212de698316f7b89f37ebf7c85b78f"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5a0f3b26ec3520c0a6bfef393d951ae296411646",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537294590,
            "hunks": 0,
            "message": "Merge pull request #249 from uschindler/features/forbiddenUpdate2.6 Update forbiddenApis to version 2.6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "249": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 249",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c6cacece933b2a1a73bc69139f7b019bc3a25950",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539361135,
            "hunks": 8,
            "message": "TIKA-2754 -- include filename in logging in tika-server",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index acbdfaa26..ec8103ec6 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -62,5 +62,7 @@ public class DetectorResource {",
                "         } catch (IOException e) {",
                "-            LOG.warn(\"Unable to detect MIME type for file. Reason: {}\", e.getMessage(), e);",
                "+            LOG.warn(\"Unable to detect MIME type for file. Reason: {} ({})\",",
                "+                    e.getMessage(), filename, e);",
                "             return MediaType.OCTET_STREAM.toString();",
                "         } catch (OutOfMemoryError e) {",
                "+            LOG.error(\"OOM while detecting: ({})\", filename, e);",
                "             serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 150241190..d832aa9d0 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -83,3 +83,2 @@ import java.util.regex.Pattern;",
                "-",
                " import static java.nio.charset.StandardCharsets.UTF_8;",
                "@@ -397,5 +396,5 @@ public class TikaResource {",
                "         checkIsOperating();",
                "-",
                "+        String fileName = metadata.get(Metadata.RESOURCE_NAME_KEY);",
                "         long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "-                metadata.get(Metadata.RESOURCE_NAME_KEY));",
                "+                fileName);",
                "         try {",
                "@@ -405,9 +404,9 @@ public class TikaResource {",
                "         } catch (EncryptedDocumentException e) {",
                "-            logger.warn(\"{}: Encrypted document\", path, e);",
                "+            logger.warn(\"{}: Encrypted document ({})\", path, fileName, e);",
                "             throw new TikaServerParseException(e);",
                "         } catch (Exception e) {",
                "-            logger.warn(\"{}: Text extraction failed\", path, e);",
                "+            logger.warn(\"{}: Text extraction failed ({})\", path, fileName, e);",
                "             throw new TikaServerParseException(e);",
                "         } catch (OutOfMemoryError e) {",
                "-            logger.error(\"{}: OOM\", path, e);",
                "+            logger.warn(\"{}: OOM ({})\", path, fileName, e);",
                "             SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2754": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2754",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f5a2faefd17936e1ad2c9b6b8c9b0ea3d3c30d99",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533316253,
            "hunks": 14,
            "message": "TIKA-2648 detect interpreted server-side script languages mime detection based on resource name used to detect the mime-type of \"http://example.com/test.php\" as being \"text/x-php\" whereas given such an URL, the file extension doesn't give us any information about the mime type that will be returned by the server",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeType.java b/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "index b4d651e42..d52c20b3d 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "@@ -112,2 +112,8 @@ public final class MimeType implements Comparable<MimeType>, Serializable {",
                "+    /**",
                "+     * Whether this mime-type is used for server-side scripts,",
                "+     * and thus cannot reliably be used for filename-based type detection",
                "+     */",
                "+    private boolean isInterpreted = false;",
                "+",
                "     /**",
                "@@ -304,2 +310,13 @@ public final class MimeType implements Comparable<MimeType>, Serializable {",
                "+    /**",
                "+     * whether the type is used as a server-side scripting technology",
                "+     */",
                "+    boolean isInterpreted() {",
                "+        return isInterpreted;",
                "+    }",
                "+",
                "+    void setInterpreted(boolean interpreted) {",
                "+        isInterpreted = interpreted;",
                "+    }",
                "+",
                "     /**",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "index 705ad3d1a..38c2eccf6 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "@@ -502,2 +502,3 @@ public final class MimeTypes implements Detector, Serializable {",
                "             String name = null;",
                "+            boolean isHttp = false;",
                "@@ -506,2 +507,4 @@ public final class MimeTypes implements Detector, Serializable {",
                "                 URI uri = new URI(resourceName);",
                "+                String scheme = uri.getScheme();",
                "+                isHttp = scheme != null && scheme.startsWith(\"http\"); // http or https",
                "                 String path = uri.getPath();",
                "@@ -519,7 +522,10 @@ public final class MimeTypes implements Detector, Serializable {",
                "                 MimeType hint = getMimeType(name);",
                "-                ",
                "-                // If we have some types based on mime magic, try to specialise",
                "-                //  and/or select the type based on that",
                "-                // Otherwise, use the type identified from the name",
                "-                possibleTypes = applyHint(possibleTypes, hint);",
                "+",
                "+                // For server-side scripting languages, we cannot rely on the filename to detect the mime type",
                "+                if (!(isHttp && hint.isInterpreted())) {",
                "+                    // If we have some types based on mime magic, try to specialise",
                "+                    //  and/or select the type based on that",
                "+                    // Otherwise, use the type identified from the name",
                "+                    possibleTypes = applyHint(possibleTypes, hint);",
                "+                }",
                "             }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "index ad7bd8078..cfc030fb6 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "@@ -171,4 +171,7 @@ public class MimeTypesReader extends DefaultHandler implements MimeTypesReaderMe",
                "                 String name = attributes.getValue(MIME_TYPE_TYPE_ATTR);",
                "+                String interpretedAttr = attributes.getValue(INTERPRETED_ATTR);",
                "+                boolean interpreted = \"true\".equals(interpretedAttr);",
                "                 try {",
                "                     type = types.forName(name);",
                "+                    type.setInterpreted(interpreted);",
                "                 } catch (MimeTypeException e) {",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "index 98bfee5cc..c77cc5c43 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "@@ -29,2 +29,4 @@ public interface MimeTypesReaderMetKeys {",
                "+    String INTERPRETED_ATTR = \"interpreted\";",
                "+",
                "     String ACRONYM_TAG = \"acronym\";",
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 3c4b4ca78..61a1634e3 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -5934,3 +5934,3 @@",
                "-  <mime-type type=\"text/asp\">",
                "+  <mime-type type=\"text/asp\" interpreted=\"true\">",
                "     <_comment>Active Server Page</_comment>",
                "@@ -5940,3 +5940,3 @@",
                "-  <mime-type type=\"text/aspdotnet\">",
                "+  <mime-type type=\"text/aspdotnet\" interpreted=\"true\">",
                "     <_comment>ASP .NET</_comment>",
                "@@ -6329,3 +6329,3 @@",
                "-  <mime-type type=\"text/x-cgi\">",
                "+  <mime-type type=\"text/x-cgi\" interpreted=\"true\">",
                "     <_comment>CGI script</_comment>",
                "@@ -6383,3 +6383,3 @@",
                "-  <mime-type type=\"text/x-coldfusion\">",
                "+  <mime-type type=\"text/x-coldfusion\" interpreted=\"true\">",
                "     <_comment>ColdFusion source code</_comment>",
                "@@ -6499,3 +6499,3 @@",
                "-  <mime-type type=\"text/x-jsp\">",
                "+  <mime-type type=\"text/x-jsp\" interpreted=\"true\">",
                "     <_comment>Java Server Page</_comment>",
                "@@ -6622,3 +6622,3 @@",
                "-  <mime-type type=\"text/x-php\">",
                "+  <mime-type type=\"text/x-php\" interpreted=\"true\">",
                "     <_comment>PHP script</_comment>"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2648": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2648",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b6399c65a70b768c41febbc228c1cdcdd8ed04b4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525857789,
            "hunks": 1,
            "message": "Handle .epub files using .htm rather than .html extensions for the embedded contents (TIKA-1288) # Conflicts: #\tCHANGES.txt",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "index c4f72debe..775b3195c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "@@ -107,3 +107,4 @@ public class EpubParser extends AbstractParser {",
                "                 meta.parse(zip, new DefaultHandler(), metadata, context);",
                "-            } else if (entry.getName().endsWith(\".html\") || ",
                "+            } else if (entry.getName().endsWith(\".htm\") || ",
                "+                           entry.getName().endsWith(\".html\") || ",
                "             \t\t   entry.getName().endsWith(\".xhtml\")) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-1288": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-1288",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "49d1e8224ff2281fe7cc43b38c5d1a681e3d959c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537278806,
            "hunks": 113,
            "message": "Fixed javadocs # Conflicts: #\ttika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java #\ttika-core/src/main/java/org/apache/tika/parser/multiple/FallbackParser.java #\ttika-core/src/main/java/org/apache/tika/parser/multiple/SupplementingParser.java",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "index 7a8fcd4b4..23887af99 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "@@ -532,3 +532,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "      * <p/>",
                "-     * If the value is < 0, the process will run until completion, interruption or exception.",
                "+     * If the value is &lt; 0, the process will run until completion, interruption or exception.",
                "      *",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java b/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "index a4f3b8207..5c830189c 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "@@ -71,6 +71,5 @@ public abstract class ConsumersManager {",
                "     /**",
                "-     * {@see #getConsumersManagerMaxMillis()}",
                "-     *",
                "      * @param consumersManagerMaxMillis maximum number of milliseconds",
                "      *                                  to allow for init() or shutdown()",
                "+     * @see #getConsumersManagerMaxMillis()",
                "      */",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "index c02b053db..fe1fd1ab7 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "@@ -197,3 +197,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "     /**",
                "-     * Maximum number of files to add.  If {@link #maxFilesToAdd} < 0 (default),",
                "+     * Maximum number of files to add.  If {@link #maxFilesToAdd} &lt; 0 (default),",
                "      * then this crawler will add all documents.",
                "@@ -211,3 +211,3 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "      * <p/>",
                "-     * If {@link #maxFilesToConsider} < 0 (default), then this crawler",
                "+     * If {@link #maxFilesToConsider} &lt; 0 (default), then this crawler",
                "      * will add all documents.",
                "@@ -262,4 +262,2 @@ public abstract class FileResourceCrawler implements Callable<IFileProcessorFutu",
                "      * where the crawler is trying to add to the queue, but it is full.",
                "-     *",
                "-     * @return",
                "      */",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "index 314ea76f6..0ebfd15c0 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "@@ -185,3 +185,3 @@ public class BatchProcessBuilder {",
                "      * <p>",
                "-     * If the value is \"default\", not a parseable integer or has a value < 1,",
                "+     * If the value is \"default\", not a parseable integer or has a value &lt; 1,",
                "      * then <code>AbstractConsumersBuilder</code>'s <code>getDefaultNumConsumers()</code>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java b/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "index 84dc5da5a..25581be76 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "@@ -109,3 +109,3 @@ public class ExternalEmbedder implements Embedder {",
                "      * Gets the command to be run. This can include either of",
                "-     * {@link #INPUT_FILE_TOKEN} or {@link #OUTPUT_FILE_TOKEN} if the command",
                "+     * {@link ExternalParser#INPUT_FILE_TOKEN} or {@link ExternalParser#OUTPUT_FILE_TOKEN} if the command",
                "      * needs filenames.",
                "@@ -120,3 +120,3 @@ public class ExternalEmbedder implements Embedder {",
                "      * Sets the command to be run. This can include either of",
                "-     * {@link #INPUT_FILE_TOKEN} or {@link #OUTPUT_FILE_TOKEN} if the command",
                "+     * {@link ExternalParser#INPUT_FILE_TOKEN} or {@link ExternalParser#OUTPUT_FILE_TOKEN} if the command",
                "      * needs filenames.",
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index c7b51ac67..c6412d5e8 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -193,4 +193,4 @@ public class ForkParser extends AbstractParser {",
                "      * The given command line is split on whitespace and the arguments",
                "-2    * \"-jar\" and \"/path/to/bootstrap.jar\" are appended to it when starting",
                "-2    * the process. The default setting is \"java -Xmx32m\".",
                "+     * \"-jar\" and \"/path/to/bootstrap.jar\" are appended to it when starting",
                "+     * the process. The default setting is \"java -Xmx32m\".",
                "      *",
                "@@ -214,3 +214,3 @@ public class ForkParser extends AbstractParser {",
                "      * <p>",
                "-     * If using a RecursiveParserWrapper, there are two options:",
                "+     * If using a {@link org.apache.tika.parser.RecursiveParserWrapper}, there are two options:",
                "      * </p>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java b/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "index dbb05f991..17db9d345 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "@@ -147,3 +147,3 @@ public class LanguageIdentifier {",
                "      * WARNING: Will never return true for small amount of input texts. ",
                "-     * @return <code>true</code> if the distance is smaller then {@value #CERTAINTY_LIMIT}, <code>false</code> otherwise",
                "+     * @return <code>true</code> if the distance is smaller then {@value LanguageIdentifier#CERTAINTY_LIMIT}, <code>false</code> otherwise",
                "      */",
                "diff --git a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "index e97562d89..f88369998 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "@@ -117,3 +117,3 @@ public interface TikaCoreProperties {",
                "      */",
                "-    public static final Property FORMAT = Property.composite(DublinCore.FORMAT, ",
                "+    public static final Property FORMAT = Property.composite(DublinCore.FORMAT,",
                "             new Property[] { Property.internalText(Metadata.FORMAT) });",
                "@@ -123,3 +123,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-   public static final Property IDENTIFIER = Property.composite(DublinCore.IDENTIFIER, ",
                "+   public static final Property IDENTIFIER = Property.composite(DublinCore.IDENTIFIER,",
                "             new Property[] { Property.internalText(Metadata.IDENTIFIER) });",
                "@@ -129,3 +129,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property CONTRIBUTOR = Property.composite(DublinCore.CONTRIBUTOR, ",
                "+    public static final Property CONTRIBUTOR = Property.composite(DublinCore.CONTRIBUTOR,",
                "             new Property[] { Property.internalText(Metadata.CONTRIBUTOR) });",
                "@@ -135,3 +135,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property COVERAGE = Property.composite(DublinCore.COVERAGE, ",
                "+    public static final Property COVERAGE = Property.composite(DublinCore.COVERAGE,",
                "             new Property[] { Property.internalText(Metadata.COVERAGE) });",
                "@@ -141,3 +141,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property CREATOR = Property.composite(DublinCore.CREATOR, ",
                "+    public static final Property CREATOR = Property.composite(DublinCore.CREATOR,",
                "             new Property[] { ",
                "@@ -151,3 +151,3 @@ public interface TikaCoreProperties {",
                "      */",
                "-     public static final Property MODIFIER = Property.composite(Office.LAST_AUTHOR, ",
                "+     public static final Property MODIFIER = Property.composite(Office.LAST_AUTHOR,",
                "              new Property[] { Property.internalText(Metadata.LAST_AUTHOR) });",
                "@@ -162,3 +162,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property LANGUAGE = Property.composite(DublinCore.LANGUAGE, ",
                "+    public static final Property LANGUAGE = Property.composite(DublinCore.LANGUAGE,",
                "             new Property[] { Property.internalText(Metadata.LANGUAGE) });",
                "@@ -168,3 +168,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property PUBLISHER = Property.composite(DublinCore.PUBLISHER, ",
                "+    public static final Property PUBLISHER = Property.composite(DublinCore.PUBLISHER,",
                "             new Property[] { Property.internalText(Metadata.PUBLISHER) });",
                "@@ -174,5 +174,5 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property RELATION = Property.composite(DublinCore.RELATION, ",
                "+    public static final Property RELATION = Property.composite(DublinCore.RELATION,",
                "             new Property[] { Property.internalText(Metadata.RELATION) });",
                "-    ",
                "+",
                "    /**",
                "@@ -180,3 +180,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property RIGHTS = Property.composite(DublinCore.RIGHTS, ",
                "+    public static final Property RIGHTS = Property.composite(DublinCore.RIGHTS,",
                "             new Property[] { Property.internalText(Metadata.RIGHTS) });",
                "@@ -186,3 +186,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property SOURCE = Property.composite(DublinCore.SOURCE, ",
                "+    public static final Property SOURCE = Property.composite(DublinCore.SOURCE,",
                "             new Property[] { Property.internalText(Metadata.SOURCE) });",
                "@@ -192,3 +192,3 @@ public interface TikaCoreProperties {",
                "     */",
                "-    public static final Property TYPE = Property.composite(DublinCore.TYPE, ",
                "+    public static final Property TYPE = Property.composite(DublinCore.TYPE,",
                "             new Property[] { Property.internalText(Metadata.TYPE) });",
                "@@ -201,3 +201,3 @@ public interface TikaCoreProperties {",
                "      */",
                "-    public static final Property TITLE = Property.composite(DublinCore.TITLE, ",
                "+    public static final Property TITLE = Property.composite(DublinCore.TITLE,",
                "             new Property[] { Property.internalText(Metadata.TITLE) });",
                "@@ -207,3 +207,3 @@ public interface TikaCoreProperties {",
                "      */",
                "-    public static final Property DESCRIPTION = Property.composite(DublinCore.DESCRIPTION, ",
                "+    public static final Property DESCRIPTION = Property.composite(DublinCore.DESCRIPTION,",
                "             new Property[] { Property.internalText(Metadata.DESCRIPTION) });",
                "@@ -211,8 +211,9 @@ public interface TikaCoreProperties {",
                "     /**",
                "-     * @see DublinCore#SUBJECT",
                "-     * @see Office#KEYWORDS",
                "+     * {@link DublinCore#SUBJECT}; should include both subject and keywords",
                "+     *  if a document format has both.  See also {@link Office#KEYWORDS}",
                "+     *  and {@link OfficeOpenXMLCore#SUBJECT}.",
                "      */",
                "     public static final Property KEYWORDS = Property.composite(DublinCore.SUBJECT,",
                "-            new Property[] { ",
                "-                Office.KEYWORDS, ",
                "+            new Property[] {",
                "+                Office.KEYWORDS,",
                "                 Property.internalTextBag(MSOffice.KEYWORDS),",
                "@@ -220,3 +221,3 @@ public interface TikaCoreProperties {",
                "             });",
                "-    ",
                "+",
                "     // Date related properties",
                "@@ -236,3 +237,3 @@ public interface TikaCoreProperties {",
                "       * @see Metadata#DATE",
                "-      * @see Office#SAVE_DATE ",
                "+      * @see Office#SAVE_DATE",
                "       */",
                "@@ -241,4 +242,4 @@ public interface TikaCoreProperties {",
                "                      Metadata.DATE,",
                "-                     Office.SAVE_DATE, ",
                "-                     MSOffice.LAST_SAVED, ",
                "+                     Office.SAVE_DATE,",
                "+                     MSOffice.LAST_SAVED,",
                "                      Property.internalText(Metadata.MODIFIED),",
                "@@ -248,3 +249,3 @@ public interface TikaCoreProperties {",
                "      /** @see Office#PRINT_DATE */",
                "-     public static final Property PRINT_DATE = Property.composite(Office.PRINT_DATE, ",
                "+     public static final Property PRINT_DATE = Property.composite(Office.PRINT_DATE,",
                "              new Property[] { MSOffice.LAST_PRINTED });",
                "@@ -285,3 +286,3 @@ public interface TikaCoreProperties {",
                "      */",
                "-    public static final Property COMMENTS = Property.composite(OfficeOpenXMLExtended.COMMENTS, ",
                "+    public static final Property COMMENTS = Property.composite(OfficeOpenXMLExtended.COMMENTS,",
                "             new Property[] { ",
                "@@ -290,7 +291,7 @@ public interface TikaCoreProperties {",
                "             });",
                "-    ",
                "+",
                "     // TODO: Remove transition properties in Tika 2.0",
                "-    ",
                "-    /** ",
                "-     * @see DublinCore#SUBJECT ",
                "+",
                "+    /**",
                "+     * @see DublinCore#SUBJECT",
                "      * @deprecated use TikaCoreProperties#KEYWORDS",
                "@@ -298,7 +299,7 @@ public interface TikaCoreProperties {",
                "     @Deprecated",
                "-    public static final Property TRANSITION_KEYWORDS_TO_DC_SUBJECT = Property.composite(DublinCore.SUBJECT, ",
                "+    public static final Property TRANSITION_KEYWORDS_TO_DC_SUBJECT = Property.composite(DublinCore.SUBJECT,",
                "             new Property[] { Property.internalTextBag(MSOffice.KEYWORDS) });",
                "-    ",
                "-    /** ",
                "-     * @see OfficeOpenXMLExtended#COMMENTS ",
                "+",
                "+    /**",
                "+     * @see OfficeOpenXMLExtended#COMMENTS",
                "      * @deprecated use TikaCoreProperties#DESCRIPTION",
                "@@ -306,7 +307,7 @@ public interface TikaCoreProperties {",
                "     @Deprecated",
                "-    public static final Property TRANSITION_SUBJECT_TO_DC_DESCRIPTION = Property.composite(DublinCore.DESCRIPTION, ",
                "+    public static final Property TRANSITION_SUBJECT_TO_DC_DESCRIPTION = Property.composite(DublinCore.DESCRIPTION,",
                "             new Property[] { Property.internalText(Metadata.SUBJECT) });",
                "-    ",
                "-    /** ",
                "-     * @see DublinCore#TITLE ",
                "+",
                "+    /**",
                "+     * @see DublinCore#TITLE",
                "      * @deprecated use TikaCoreProperties#TITLE",
                "@@ -314,7 +315,7 @@ public interface TikaCoreProperties {",
                "     @Deprecated",
                "-    public static final Property TRANSITION_SUBJECT_TO_DC_TITLE = Property.composite(DublinCore.TITLE, ",
                "+    public static final Property TRANSITION_SUBJECT_TO_DC_TITLE = Property.composite(DublinCore.TITLE,",
                "             new Property[] { Property.internalText(Metadata.SUBJECT) });",
                "-    ",
                "-    /** ",
                "-     * @see OfficeOpenXMLCore#SUBJECT ",
                "+",
                "+    /**",
                "+     * @see OfficeOpenXMLCore#SUBJECT",
                "      * @deprecated use OfficeOpenXMLCore#SUBJECT",
                "@@ -322,3 +323,3 @@ public interface TikaCoreProperties {",
                "     @Deprecated",
                "-    public static final Property TRANSITION_SUBJECT_TO_OO_SUBJECT = Property.composite(OfficeOpenXMLCore.SUBJECT, ",
                "+    public static final Property TRANSITION_SUBJECT_TO_OO_SUBJECT = Property.composite(OfficeOpenXMLCore.SUBJECT,",
                "             new Property[] { Property.internalText(Metadata.SUBJECT) });",
                "@@ -326,6 +327,6 @@ public interface TikaCoreProperties {",
                "     /**",
                "-     * See {@link #EMBEDDED_RESOURCE_TYPE}",
                "+     * Embedded resource type property",
                "      */",
                "-    public static final Property EMBEDDED_RESOURCE_TYPE = ",
                "-            Property.internalClosedChoise(TikaMetadataKeys.EMBEDDED_RESOURCE_TYPE, ",
                "+    public static final Property EMBEDDED_RESOURCE_TYPE =",
                "+            Property.internalClosedChoise(TikaMetadataKeys.EMBEDDED_RESOURCE_TYPE,",
                "                     new String[]{EmbeddedResourceType.ATTACHMENT.toString(), EmbeddedResourceType.INLINE.toString()});",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/Parser.java b/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "index 352b8d3ab..3ac2d1fad 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "@@ -31,3 +31,2 @@ import org.xml.sax.SAXException;",
                "  * Tika parser interface.",
                "- * @see ConfigurableParser for parsers which adopts to runtime params",
                "  */",
                "diff --git a/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "index b560f9e2d..bb1081eb9 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "@@ -58,3 +58,3 @@ public class LinkContentHandler extends DefaultHandler {",
                "      *",
                "-     * @boolean collapseWhitespaceInAnchor",
                "+     * @param collapseWhitespaceInAnchor",
                "      */",
                "diff --git a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "index abe65ffad..c45f1924d 100644",
                "--- a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "+++ b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "@@ -299,3 +299,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "      * @param stream label index stream",
                "-     * @return Map of integer -> label name",
                "+     * @return Map of integer -&gt; label name",
                "      * @throws IOException    when the stream breaks unexpectedly",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "index 0a67ad037..322a1f67f 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "@@ -210,3 +210,3 @@ public abstract class AbstractProfiler extends FileResourceConsumer {",
                "     /**",
                "-     * Add a LimitTokenCountFilterFactory if > -1",
                "+     * Add a LimitTokenCountFilterFactory if &gt; -1",
                "      *",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java b/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "index 9aadf5813..d134fdec8 100644",
                "--- a/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "@@ -38,3 +38,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  * <p>",
                "- * {@link InterruptingContentHandler} throws special exception as soon as",
                "+ * {@link InterruptableParsingExample.InterruptingContentHandler} throws special exception as soon as",
                "  * find {@code query} string in parsed file.",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java b/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "index fe0c8d982..554342c17 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "@@ -43,3 +43,3 @@ import org.xml.sax.ContentHandler;",
                "  * {@link Detector} framework (aka MIME identification and repository), its",
                "- * {@link Parser} interface, its {@link LanguageIdentifier} and other goodies.",
                "+ * {@link Parser} interface, its {@link org.apache.tika.language.LanguageIdentifier} and other goodies.",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "index 2c4dc4e67..e4f9ee521 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "@@ -37,7 +37,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * not there and the content section starts immediately after the directory.",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1}",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "index 10b00aeb0..28e2ff3ef 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "@@ -40,7 +40,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * DWORD -1 (unknown)",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1}",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "index 17a2e2fcb..1bd0c4f5f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "@@ -34,7 +34,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * 001C: DWORD 0 (unknown)",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?page=2 }",
                "- * ",
                "  */",
                "@@ -93,3 +88,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param current_place",
                "+     * @param currentPlace",
                "      */",
                "@@ -183,3 +178,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param window_size",
                "+     * @param windowSize",
                "      */",
                "@@ -201,3 +196,3 @@ public class ChmLzxcControlData implements ChmAccessor<ChmLzxcControlData> {",
                "      * ",
                "-     * @param windows_per_reset",
                "+     * @param windowsPerReset",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "index 5823f67b1..be57c3d68 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "@@ -30,7 +30,2 @@ import org.apache.tika.parser.chm.exception.ChmParsingException;",
                "  * .",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?page=2 }",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "index 97eaf4620..a98ae67e0 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "@@ -37,3 +37,3 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * indicates \"continued to the next byte\". Bytes are stored most significant to",
                "- * least significant. So, for example, $EA $15 is (((0xEA&0x7F)<<7)|0x15) =",
                "+ * least significant. So, for example, $EA $15 is (((0xEA&amp;0x7F)&lt;&lt;7)|0x15) =",
                "  * 0x3515.",
                "@@ -42,6 +42,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * Note: This class is not in use",
                "- * ",
                "- * {@link http://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original/?show-translation-form=1 }",
                "- * ",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "index abb71754a..0bfb95a0f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "@@ -36,3 +36,3 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * area is written backwards from the end of the chunk. One quickref entry",
                "- * exists for every n entries in the file, where n is calculated as 1 + (1 <<",
                "+ * exists for every n entries in the file, where n is calculated as 1 + (1 &lt;&lt;",
                "  * quickref density). So for density = 2, n = 5 Chunklen-0002: WORD Number of",
                "@@ -49,9 +49,2 @@ import static java.nio.charset.StandardCharsets.UTF_8;",
                "  * names which begin with \"/\".",
                "- * ",
                "- * {@link http",
                "- * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original",
                "- * /?show-translation-form=1 }",
                "- * ",
                "- * @author olegt",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "index c413e0761..5f9567504 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "@@ -31,3 +31,2 @@ import org.apache.tika.parser.chm.core.ChmCommons;",
                "  * the user data files have names which begin with \"/\".",
                "- * ",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "index cdedc3e70..0c736e8fe 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "@@ -88,3 +88,3 @@ public class ChmAssert {",
                "      * @param data",
                "-     * @param chmItsfHeader",
                "+     * @param chmAccessor",
                "      * @param count",
                "@@ -112,3 +112,3 @@ public class ChmAssert {",
                "      * ",
                "-     * @param ChmAccessor",
                "+     * @param chmAccessor",
                "      * @throws ChmParsingException ",
                "@@ -158,3 +158,3 @@ public class ChmAssert {",
                "     /**",
                "-     * Checks if int param is greater than zero In case param <=0 throws an",
                "+     * Checks if int param is greater than zero In case param &lt;= 0 throws an",
                "      * exception",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "index e6d261d93..1c1be0297 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "@@ -21,3 +21,3 @@ import org.apache.ctakes.typesystem.type.textsem.IdentifiedAnnotation;",
                " /**",
                "- * This enumeration includes the properties that an {@see IdentifiedAnnotation} object can provide.",
                "+ * This enumeration includes the properties that an {@link IdentifiedAnnotation} object can provide.",
                "  *",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "index 67ba9930a..cc202731e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "@@ -27,3 +27,3 @@ import static org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM;",
                " /**",
                "- * Configuration for {@see CTAKESContentHandler}.",
                "+ * Configuration for {@link CTAKESContentHandler}.",
                "  * ",
                "@@ -79,3 +79,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Loads properties from InputStream and then tries to close InputStream.",
                "-     * @param stream {@see InputStream} object used to read properties.",
                "+     * @param stream {@link InputStream} object used to read properties.",
                "      */",
                "@@ -155,4 +155,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns an {@see OutputStream} object used write the CAS.",
                "-     * @return {@see OutputStream} object used write the CAS.",
                "+     * Returns an {@link OutputStream} object used write the CAS.",
                "+     * @return {@link OutputStream} object used write the CAS.",
                "      */",
                "@@ -205,4 +205,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns an array of {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @return an array of {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * Returns an array of {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @return an array of {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "@@ -213,3 +213,3 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Returns a string containing a comma-separated list of {@see CTAKESAnnotationProperty} names that will be included into cTAKES metadata.",
                "+     * Returns a string containing a comma-separated list of {@link CTAKESAnnotationProperty} names that will be included into cTAKES metadata.",
                "      * @return",
                "@@ -262,3 +262,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables the formatted output for serializer.",
                "-     * @param prettyPrint {@true} to enable formatted output, {@code false} otherwise.",
                "+     * @param prettyPrint {@code true} to enable formatted output, {@code false} otherwise.",
                "      */",
                "@@ -277,4 +277,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Sets the {@see OutputStream} object used to write the CAS.",
                "-     * @param stream the {@see OutputStream} object used to write the CAS.",
                "+     * Sets the {@link OutputStream} object used to write the CAS.",
                "+     * @param stream the {@link OutputStream} object used to write the CAS.",
                "      */",
                "@@ -286,3 +286,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables CAS serialization.",
                "-     * @param serialize {@true} to enable CAS serialization, {@code false} otherwise.",
                "+     * @param serialize {@code true} to enable CAS serialization, {@code false} otherwise.",
                "      */",
                "@@ -294,3 +294,3 @@ public class CTAKESConfig implements Serializable {",
                "      * Enables content text analysis using cTAKES.",
                "-     * @param text {@true} to enable content text analysis, {@code false} otherwise.",
                "+     * @param text {@code true} to enable content text analysis, {@code false} otherwise.",
                "      */",
                "@@ -309,4 +309,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * Sets the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @param annotationProps the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * Sets the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @param annotationProps the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "@@ -317,4 +317,4 @@ public class CTAKESConfig implements Serializable {",
                "     /**",
                "-     * ets the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "-     * @param annotationProps the {@see CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * ets the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "+     * @param annotationProps the {@link CTAKESAnnotationProperty}'s that will be included into cTAKES metadata.",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "index 38326e3b3..422b4b520 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "@@ -60,12 +60,11 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t/**",
                "-\t * Creates a new {@see CTAKESContentHandler} for the given {@see",
                "-\t * ContentHandler} and Metadata objects.",
                "+\t * Creates a new {@link CTAKESContentHandler} for the given {@link ContentHandler} and Metadata objects.",
                " \t * ",
                " \t * @param handler",
                "-\t *            the {@see ContentHandler} object to be decorated.",
                "+\t *            the {@link ContentHandler} object to be decorated.",
                " \t * @param metadata",
                "-\t *            the {@see Metadata} object that will be populated using",
                "+\t *            the {@link Metadata} object that will be populated using",
                " \t *            biomedical information extracted by cTAKES.",
                " \t * @param config",
                "-\t *            the {@see CTAKESConfig} object used to configure the handler.",
                "+\t *            the {@link CTAKESConfig} object used to configure the handler.",
                " \t */",
                "@@ -80,3 +79,3 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t/**",
                "-\t * Creates a new {@see CTAKESContentHandler} for the given {@see",
                "+\t * Creates a new {@link CTAKESContentHandler} for the given {@link",
                " \t * ContentHandler} and Metadata objects.",
                "@@ -84,5 +83,5 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t * @param handler",
                "-\t *            the {@see ContentHandler} object to be decorated.",
                "+\t *            the {@link ContentHandler} object to be decorated.",
                " \t * @param metadata",
                "-\t *            the {@see Metadata} object that will be populated using",
                "+\t *            the {@link Metadata} object that will be populated using",
                " \t *            biomedical information extracted by cTAKES.",
                "@@ -170,3 +169,3 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {",
                " \t * ",
                "-\t * @return {@Metadata} object that includes cTAKES annotations.",
                "+\t * @return {@link Metadata} object that includes cTAKES annotations.",
                " \t */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "index acd196502..dc92502ff 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "@@ -32,4 +32,4 @@ import org.xml.sax.SAXException;",
                " /**",
                "- * CTAKESParser decorates a {@see Parser} and leverages on ",
                "- * {@see CTAKESContentHandler} to extract biomedical information from ",
                "+ * CTAKESParser decorates a {@link Parser} and leverages on",
                "+ * {@link CTAKESContentHandler} to extract biomedical information from",
                "  * clinical text using Apache cTAKES.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "index c8cc8ce12..94ebefae2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "@@ -40,3 +40,3 @@ import org.xml.sax.SAXException;",
                "  * This class provides methods to extract biomedical information from plain text",
                "- * using {@see CTAKESContentHandler} that relies on Apache cTAKES.",
                "+ * using {@link CTAKESContentHandler} that relies on Apache cTAKES.",
                "  * ",
                "@@ -154,3 +154,3 @@ public class CTAKESUtils {",
                " \t * @param stream",
                "-\t *            {@see OutputStream} object used to print out information",
                "+\t *            {@link OutputStream} object used to print out information",
                " \t *            extracted by using cTAKES.",
                "@@ -178,5 +178,5 @@ public class CTAKESUtils {",
                " \t * @param annotation",
                "-\t *            {@see IdentifiedAnnotation} object.",
                "+\t *            {@link IdentifiedAnnotation} object.",
                " \t * @param property",
                "-\t *            {@see CTAKESAnnotationProperty} enum used to identify the",
                "+\t *            {@link CTAKESAnnotationProperty} enum used to identify the",
                " \t *            annotation type.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "index 1cf268609..1fac1598b 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "@@ -102,4 +102,4 @@ public class MailUtil {",
                "      * If the chunk looks like it contains an email",
                "-     * @param chunk",
                "-     * @return",
                "+     * @param chunk to analyse",
                "+     * @return {@code true} if chunk looks like it contains an email",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "index f37949121..784a2441c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "@@ -45,3 +45,3 @@ import org.xml.sax.SAXException;",
                "  * Parser that handles Microsoft Access files via",
                "- * <a href=\"http://jackcess.sourceforge.net/>Jackcess</a>",
                "+ * <a href=\"http://jackcess.sourceforge.net/\">Jackcess</a>",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "index c4424538f..ad8dd59c1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "@@ -40,3 +40,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  *",
                "- * @see {@url https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats}",
                "+ * See <a href=\"https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats\">https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats</a>",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "index e9890c83c..8c18d1c95 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "@@ -48,3 +48,3 @@ import org.xml.sax.helpers.DefaultHandler;",
                "  *",
                "- * @see {@url https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats}",
                "+ * See <a href=\"https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats\">https://en.wikipedia.org/wiki/Microsoft_Office_XML_formats</a>",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "index 98ef5040c..63577e672 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "@@ -34,3 +34,3 @@ public interface ID3Tags {",
                "      *",
                "-     * @see http://www.id3.org/id3v2-00",
                "+     * See <a href=\"http://www.id3.org/id3v2-00\">http://www.id3.org/id3v2-00</a>",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "index c4693eb17..27d58dae7 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "@@ -54,3 +54,3 @@ public interface NERecogniser {",
                "      * @param text text with possibly contains names",
                "-     * @return map of entityType -> set of names",
                "+     * @return map of entityType -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "index 05ef89f61..18b3d1a67 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "@@ -125,3 +125,3 @@ public class CoreNLPNERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "index cf971949c..696836e33 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "@@ -151,3 +151,3 @@ public class GrobidNERecogniser implements NERecogniser{",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "index 85935e3e4..9157aaa6f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "@@ -100,3 +100,3 @@ public class MITIENERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "index e7b36385b..0e3d2d777 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "@@ -116,3 +116,3 @@ public class NLTKNERecogniser implements NERecogniser {",
                "      * @param text text which possibly contains names",
                "-     * @return map of entity type -> set of names",
                "+     * @return map of entity type -&gt; set of names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "index 8d2d9538e..de93f8c80 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "@@ -113,3 +113,3 @@ public class OpenNLPNERecogniser implements NERecogniser {",
                "      * Creates a chain of Named Entity recognisers",
                "-     * @param models map of entityType -> model path",
                "+     * @param models map of entityType -&gt; model path",
                "      * NOTE: the model path should be known to class loader.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "index a1e19ae88..457aa0021 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "@@ -99,3 +99,3 @@ public class OpenNLPNameFinder implements NERecogniser {",
                "      * @param tokens the tokens array",
                "-     * @return map of EntityType -> set of entity names",
                "+     * @return map of EntityType -&gt; set of entity names",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "index 0bb659094..b525d548c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "@@ -41,3 +41,3 @@ public class AccessChecker implements Serializable {",
                "      * <p/>",
                "-     * This constructor is available to allow for Tika's legacy ( <= v1.7) behavior.",
                "+     * This constructor is available to allow for Tika's legacy (&lt;= v1.7) behavior.",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "index a305c4cae..b0327af37 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "@@ -321,3 +321,3 @@ public class PDFParserConfig implements Serializable {",
                "      * <b>Beware:</b> some PDF documents of modest size (~4MB) can contain",
                "-     * thousands of embedded images totaling > 2.5 GB.  Also, at least as of PDFBox 1.8.5,",
                "+     * thousands of embedded images totaling &gt; 2.5 GB.  Also, at least as of PDFBox 1.8.5,",
                "      * there can be surprisingly large memory consumption and/or out of memory errors.",
                "@@ -327,5 +327,6 @@ public class PDFParserConfig implements Serializable {",
                "      * <p/>",
                "-     * See also: {@see #setExtractUniqueInlineImagesOnly(boolean)};",
                "      *",
                "      * @param extractInlineImages",
                "+     *",
                "+     * @see #setExtractUniqueInlineImagesOnly(boolean)",
                "      */",
                "@@ -641,3 +642,2 @@ public class PDFParserConfig implements Serializable {",
                "      * This does not apply to all image formats",
                "-     * @return",
                "      */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "index 16d9e5388..f3ff9660f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "@@ -22,3 +22,3 @@ import org.apache.tika.metadata.Metadata;",
                "  * Interface for setting options for the {@link CompressorParser} by passing",
                "- * via the {@link ParseContext}.",
                "+ * via the {@link org.apache.tika.parser.ParseContext}.",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "index 65242ab53..518e5ede2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "@@ -36,4 +36,4 @@ import java.util.Set;",
                " /**",
                "- *  This is a contract for object recognisers used by {@link ObjectRecognitionParser}",
                "- *  @see {@link TensorflowImageRecParser} for an example",
                "+ * This is a contract for object recognisers used by {@link ObjectRecognitionParser}",
                "+ * @see TensorflowImageRecParser",
                "  */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "index da9deab10..d3724a37e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "@@ -50,4 +50,3 @@ public class FileConfig implements Serializable {",
                " \t * ",
                "-\t * @param path",
                "-\t *            the \"file\" installation folder.",
                "+\t * @param filePath the \"file\" installation folder.",
                " \t */",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "index 9183f2ef8..ec893a14a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java",
                "@@ -117,3 +117,3 @@ public class StringsConfig implements Serializable {",
                " \t * ",
                "-\t * @return {@see StringsEncoding} enum that represents the character",
                "+\t * @return {@link StringsEncoding} enum that represents the character",
                " \t *         encoding of the strings that are to be found.",
                "@@ -165,3 +165,3 @@ public class StringsConfig implements Serializable {",
                " \t * @param encoding",
                "-\t *            {@see StringsEncoding} enum that represents the character",
                "+\t *            {@link StringsEncoding} enum that represents the character",
                " \t *            encoding of the strings that are to be found."
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "tika-batch/src/main/java/org/apache/tika/batch/ConsumersManager.java",
                "tika-batch/src/main/java/org/apache/tika/batch/FileResourceCrawler.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java",
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java",
                "tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "tika-core/src/main/java/org/apache/tika/parser/Parser.java",
                "tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java",
                "tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "tika-eval/src/main/java/org/apache/tika/eval/AbstractProfiler.java",
                "tika-example/src/main/java/org/apache/tika/example/InterruptableParsingExample.java",
                "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcControlData.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/chm/assertion/ChmAssert.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESAnnotationProperty.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mail/MailUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/NERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/grobid/GrobidNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/mitie/MITIENERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/nltk/NLTKNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNERecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ner/opennlp/OpenNLPNameFinder.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/AccessChecker.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParserOptions.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/strings/FileConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/strings/StringsConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e36fafefa989706741f15e4a92dcb788b38edc3d"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f10c8fe884987920c5332885f414ecd8c06ddc05",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536696994,
            "hunks": 69,
            "message": "TIKA-2725 -- further cleanups and merge conflicts",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java b/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "deleted file mode 100644",
                "index 9920556e5..000000000",
                "--- a/tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "+++ /dev/null",
                "@@ -1,9 +0,0 @@",
                "-package org.apache.tika.server;",
                "-",
                "-/**",
                "- * Exception thrown by ServerStatusWatcher if tika-server exceeds",
                "- * the maximum number of files to process.",
                "- */",
                "-public class FileCountExceededException extends Exception {",
                "-",
                "-}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "index 861007d29..ac5fed44b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "@@ -18,2 +18,5 @@ package org.apache.tika.server;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                " import java.time.Instant;",
                "@@ -21,4 +24,3 @@ import java.util.HashMap;",
                " import java.util.Map;",
                "-import java.util.concurrent.ConcurrentHashMap;",
                "-import java.util.concurrent.atomic.AtomicInteger;",
                "+import java.util.concurrent.atomic.AtomicLong;",
                "@@ -26,4 +28,16 @@ public class ServerStatus {",
                "-    enum STATUS {",
                "-        OPEN(0),",
                "+    enum DIRECTIVES {",
                "+        PING((byte)0),",
                "+        PING_ACTIVE_SERVER_TASKS((byte)1),",
                "+        SHUTDOWN((byte)2);",
                "+",
                "+        private final byte b;",
                "+        DIRECTIVES(byte b) {",
                "+            this.b = b;",
                "+        }",
                "+        byte getByte() { return b;}",
                "+    }",
                "+",
                "+    public enum STATUS {",
                "+        OPERATING(0),",
                "         HIT_MAX(1),",
                "@@ -31,5 +45,16 @@ public class ServerStatus {",
                "         ERROR(3),",
                "-        PARENT_REQUESTED_SHUTDOWN(4);",
                "+        PARENT_REQUESTED_SHUTDOWN(4),",
                "+        PARENT_EXCEPTION(5);",
                "         private final int shutdownCode;",
                "+",
                "+        static STATUS lookup(int i) {",
                "+            STATUS[] values = STATUS.values();",
                "+            if (i < 0 || i >= values.length) {",
                "+                throw new ArrayIndexOutOfBoundsException(i +",
                "+                        \" is not acceptable for an array of length \"+values.length);",
                "+            }",
                "+            return STATUS.values()[i];",
                "+        }",
                "+",
                "         STATUS(int shutdownCode) {",
                "@@ -40,27 +65,21 @@ public class ServerStatus {",
                "         }",
                "+        byte getByte() { return (byte) shutdownCode;}",
                "+",
                "     }",
                "-    enum TASK {",
                "+    public enum TASK {",
                "         PARSE,",
                "-        UNZIP,",
                "         DETECT,",
                "-        METADATA",
                "+        TRANSLATE",
                "     };",
                "+    private static final Logger LOG = LoggerFactory.getLogger(ServerStatus.class);",
                "-    private final int maxFilesToProcess;",
                "-    private AtomicInteger counter = new AtomicInteger(0);",
                "-    private Map<Integer, TaskStatus> tasks = new HashMap<>();",
                "+    private AtomicLong counter = new AtomicLong(0);",
                "+    private Map<Long, TaskStatus> tasks = new HashMap<>();",
                "-    private STATUS status = STATUS.OPEN;",
                "-    public ServerStatus(int maxFilesToProcess) {",
                "-        this.maxFilesToProcess = maxFilesToProcess;",
                "-    }",
                "-    public synchronized int start(TASK task, String fileName) throws FileCountExceededException {",
                "-        int i = counter.incrementAndGet();",
                "-        if (i == Integer.MAX_VALUE ||",
                "-                (maxFilesToProcess > 0 && i >= maxFilesToProcess)) {",
                "-            setStatus(STATUS.HIT_MAX);",
                "-            throw new FileCountExceededException();",
                "-        }",
                "-        tasks.put(i, new TaskStatus(task, Instant.now(), fileName));",
                "-        return i;",
                "+    private STATUS status = STATUS.OPERATING;",
                "+",
                "+    public synchronized long start(TASK task, String fileName) {",
                "+        long taskId = counter.incrementAndGet();",
                "+        tasks.put(taskId, new TaskStatus(task, Instant.now(), fileName));",
                "+        return taskId;",
                "     }",
                "@@ -73,3 +92,3 @@ public class ServerStatus {",
                "      */",
                "-    public synchronized void complete(int taskId) throws IllegalArgumentException {",
                "+    public synchronized void complete(long taskId) throws IllegalArgumentException {",
                "         TaskStatus status = tasks.remove(taskId);",
                "@@ -88,4 +107,4 @@ public class ServerStatus {",
                "-    public synchronized Map<Integer, TaskStatus> getTasks() {",
                "-        Map<Integer, TaskStatus> ret = new HashMap<>();",
                "+    public synchronized Map<Long, TaskStatus> getTasks() {",
                "+        Map<Long, TaskStatus> ret = new HashMap<>();",
                "         ret.putAll(tasks);",
                "@@ -94,5 +113,10 @@ public class ServerStatus {",
                "-    public synchronized int getFilesProcessed() {",
                "+    public synchronized long getFilesProcessed() {",
                "         return counter.get();",
                "     }",
                "+",
                "+    public synchronized boolean isOperating() {",
                "+        return status == STATUS.OPERATING;",
                "+    }",
                "+",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "index 24b1ddb99..8023e944b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "@@ -19,3 +19,2 @@ package org.apache.tika.server;",
                "-import org.apache.tika.server.resource.TranslateResource;",
                " import org.slf4j.Logger;",
                "@@ -23,5 +22,8 @@ import org.slf4j.LoggerFactory;",
                "+import java.io.DataInputStream;",
                "+import java.io.DataOutputStream;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                " import java.time.Duration;",
                " import java.time.Instant;",
                "-import java.util.concurrent.Callable;",
                "@@ -31,11 +33,24 @@ public class ServerStatusWatcher implements Runnable {",
                "     private static final Logger LOG = LoggerFactory.getLogger(ServerStatusWatcher.class);",
                "-",
                "     private final ServerStatus serverStatus;",
                "-    private final long timeoutMillis;",
                "-    private final long pulseMillis;",
                "+    private final DataInputStream fromParent;",
                "+    private final DataOutputStream toParent;",
                "+    private final long maxFiles;",
                "+    private final ServerTimeouts serverTimeouts;",
                "+",
                "-    public ServerStatusWatcher(ServerStatus serverStatus, long timeoutMillis, long pulseMillis) {",
                "+    private volatile Instant lastPing = null;",
                "+",
                "+    public ServerStatusWatcher(ServerStatus serverStatus,",
                "+                               InputStream inputStream, OutputStream outputStream,",
                "+                               long maxFiles,",
                "+                               ServerTimeouts serverTimeouts) {",
                "         this.serverStatus = serverStatus;",
                "-        this.timeoutMillis = timeoutMillis;",
                "-        this.pulseMillis = pulseMillis;",
                "+        this.maxFiles = maxFiles;",
                "+        this.serverTimeouts = serverTimeouts;",
                "+",
                "+        this.fromParent = new DataInputStream(inputStream);",
                "+        this.toParent = new DataOutputStream(outputStream);",
                "+        Thread statusWatcher = new Thread(new StatusWatcher());",
                "+        statusWatcher.setDaemon(true);",
                "+        statusWatcher.start();",
                "     }",
                "@@ -44,14 +59,58 @@ public class ServerStatusWatcher implements Runnable {",
                "     public void run() {",
                "-        ServerStatus.STATUS status = serverStatus.getStatus();",
                "-        while (status.equals(ServerStatus.STATUS.OPEN)) {",
                "+        //let parent know child is alive",
                "+        try {",
                "+            toParent.writeByte(ServerStatus.STATUS.OPERATING.getByte());",
                "+            toParent.flush();",
                "+        } catch (Exception e) {",
                "+            LOG.warn(\"Exception writing startup ping to parent\", e);",
                "+            serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+            shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+        }",
                "+",
                "+        byte directive = (byte)-1;",
                "+        while (true) {",
                "             try {",
                "-                Thread.sleep(pulseMillis);",
                "-            } catch (InterruptedException e) {",
                "+                directive = fromParent.readByte();",
                "+                lastPing = Instant.now();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception reading from parent\", e);",
                "+                serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "             }",
                "-            checkForTimeouts();",
                "-            status = serverStatus.getStatus();",
                "+            if (directive == ServerStatus.DIRECTIVES.PING.getByte()) {",
                "+                if (serverStatus.getStatus().equals(ServerStatus.STATUS.OPERATING)) {",
                "+                    checkForHitMaxFiles();",
                "+                    checkForTaskTimeouts();",
                "+                }",
                "+                try {",
                "+                    toParent.writeByte(serverStatus.getStatus().getByte());",
                "+                    toParent.flush();",
                "+                } catch (Exception e) {",
                "+                    LOG.warn(\"Exception writing to parent\", e);",
                "+                    serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                }",
                "+            } else if (directive == ServerStatus.DIRECTIVES.SHUTDOWN.getByte()) {",
                "+                LOG.info(\"Parent requested shutdown\");",
                "+                serverStatus.setStatus(ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN);",
                "+                shutdown(ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN);",
                "+            } else if (directive == ServerStatus.DIRECTIVES.PING_ACTIVE_SERVER_TASKS.getByte()) {              try {",
                "+                    toParent.writeInt(serverStatus.getTasks().size());",
                "+                    toParent.flush();",
                "+                } catch (Exception e) {",
                "+                    LOG.warn(\"Exception writing to parent\", e);",
                "+                    serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private void checkForHitMaxFiles() {",
                "+        if (maxFiles < 0) {",
                "+            return;",
                "         }",
                "-        if (! status.equals(ServerStatus.STATUS.OPEN)) {",
                "-            LOG.warn(\"child process shutting down with status: {}\", status);",
                "-            System.exit(status.getShutdownCode());",
                "+        long filesProcessed = serverStatus.getFilesProcessed();",
                "+        if (filesProcessed >= maxFiles) {",
                "+            serverStatus.setStatus(ServerStatus.STATUS.HIT_MAX);",
                "         }",
                "@@ -59,7 +118,7 @@ public class ServerStatusWatcher implements Runnable {",
                "-    private void checkForTimeouts() {",
                "+    private void checkForTaskTimeouts() {",
                "         Instant now = Instant.now();",
                "         for (TaskStatus status : serverStatus.getTasks().values()) {",
                "-            long millisElapsed = Duration.between(now, status.started).toMillis();",
                "-            if (millisElapsed > timeoutMillis) {",
                "+            long millisElapsed = Duration.between(status.started, now).toMillis();",
                "+            if (millisElapsed > serverTimeouts.getTaskTimeoutMillis()) {",
                "                 serverStatus.setStatus(ServerStatus.STATUS.TIMEOUT);",
                "@@ -75,2 +134,37 @@ public class ServerStatusWatcher implements Runnable {",
                "     }",
                "+",
                "+    private void shutdown(ServerStatus.STATUS status) {",
                "+        LOG.info(\"Shutting down child process with status: \" +status.name());",
                "+        System.exit(status.getShutdownCode());",
                "+    }",
                "+",
                "+    //This is an internal thread that pulses every 100MS",
                "+    //within the child to see if the child should die.",
                "+    private class StatusWatcher implements Runnable {",
                "+",
                "+        @Override",
                "+        public void run() {",
                "+            while (true) {",
                "+                ServerStatus.STATUS currStatus = serverStatus.getStatus();",
                "+",
                "+                if (currStatus != ServerStatus.STATUS.OPERATING) {",
                "+                    LOG.warn(\"child process observed \"+currStatus.name()+ \" and is shutting down.\");",
                "+                    shutdown(currStatus);",
                "+                }",
                "+",
                "+                if (lastPing != null) {",
                "+                    long elapsed = Duration.between(lastPing, Instant.now()).toMillis();",
                "+                    if (elapsed > serverTimeouts.getPingTimeoutMillis()) {",
                "+                        serverStatus.setStatus(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                        shutdown(ServerStatus.STATUS.PARENT_EXCEPTION);",
                "+                    }",
                "+                }",
                "+                try {",
                "+                    Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+                } catch (InterruptedException e) {",
                "+                    return;",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                " }",
                "\\ No newline at end of file",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "new file mode 100644",
                "index 000000000..b85d89c06",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "@@ -0,0 +1,106 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.server;",
                "+",
                "+public class ServerTimeouts {",
                "+",
                "+    /*",
                "+    TODO: integrate these settings:",
                "+     * Number of milliseconds to wait to start child process.",
                "+    public static final long DEFAULT_CHILD_PROCESS_STARTUP_MILLIS = 60000;",
                "+",
                "+     * Maximum number of milliseconds to wait to shutdown child process to allow",
                "+     * for current parses to complete.",
                "+    public static final long DEFAULT_CHILD_PROCESS_SHUTDOWN_MILLIS = 30000;",
                "+",
                "+    private long childProcessStartupMillis = DEFAULT_CHILD_PROCESS_STARTUP_MILLIS;",
                "+",
                "+    private long childProcessShutdownMillis = DEFAULT_CHILD_PROCESS_SHUTDOWN_MILLIS;",
                "+",
                "+     */",
                "+",
                "+",
                "+",
                "+    /**",
                "+     * If the child doesn't receive a ping or the parent doesn't",
                "+     * hear back from a ping in this amount of time, kill and restart the child.",
                "+     */",
                "+    public static final long DEFAULT_PING_TIMEOUT_MILLIS = 30000;",
                "+",
                "+    /**",
                "+     * How often should the parent try to ping the child to check status",
                "+     */",
                "+    public static final long DEFAULT_PING_PULSE_MILLIS = 500;",
                "+",
                "+    /**",
                "+     * Number of milliseconds to wait per server task (parse, detect, unpack, translate,",
                "+     * etc.) before timing out and shutting down the child process.",
                "+     */",
                "+    public static final long DEFAULT_TASK_TIMEOUT_MILLIS = 120000;",
                "+",
                "+    private long taskTimeoutMillis = DEFAULT_TASK_TIMEOUT_MILLIS;",
                "+",
                "+    private long pingTimeoutMillis = DEFAULT_PING_TIMEOUT_MILLIS;",
                "+",
                "+    private long pingPulseMillis = DEFAULT_PING_PULSE_MILLIS;",
                "+",
                "+",
                "+    /**",
                "+     * How long to wait for a task before shutting down the child server process",
                "+     * and restarting it.",
                "+     * @return",
                "+     */",
                "+    public long getTaskTimeoutMillis() {",
                "+        return taskTimeoutMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param taskTimeoutMillis number of milliseconds to allow per task",
                "+     *                          (parse, detection, unzipping, etc.)",
                "+     */",
                "+    public void setTaskTimeoutMillis(long taskTimeoutMillis) {",
                "+        this.taskTimeoutMillis = taskTimeoutMillis;",
                "+    }",
                "+",
                "+    public long getPingTimeoutMillis() {",
                "+        return pingTimeoutMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param pingTimeoutMillis if the parent doesn't receive a response",
                "+     *                          in this amount of time, or",
                "+     *                          if the child doesn't receive a ping",
                "+     *                          in this amount of time, restart the child process",
                "+     */",
                "+    public void setPingTimeoutMillis(long pingTimeoutMillis) {",
                "+        this.pingTimeoutMillis = pingTimeoutMillis;",
                "+    }",
                "+",
                "+    public long getPingPulseMillis() {",
                "+        return pingPulseMillis;",
                "+    }",
                "+",
                "+    /**",
                "+     *",
                "+     * @param pingPulseMillis how often to test that the parent and/or child is alive",
                "+     */",
                "+    public void setPingPulseMillis(long pingPulseMillis) {",
                "+        this.pingPulseMillis = pingPulseMillis;",
                "+    }",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index af8fd8fc9..e3242d11b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -19,3 +19,3 @@ package org.apache.tika.server;",
                "-import java.io.IOException;",
                "+import java.io.ByteArrayInputStream;",
                " import java.util.ArrayList;",
                "@@ -68,7 +68,3 @@ public class TikaServerCli {",
                "     //used in spawn-child mode",
                "-    private static final long PULSE_MILLIS = 100;",
                "-    private static final int DEFAULT_MAX_FILES = -1;",
                "-    private static final long DEFAULT_TIME_OUT_MS = 60000;",
                "-    private static final long DEFAULT_PULSE_MS = 500;",
                "-    private static Thread SHUTDOWN_HOOK = null;",
                "+    private static final long DEFAULT_MAX_FILES = 100000;",
                "@@ -88,2 +84,6 @@ public class TikaServerCli {",
                "+    private static final List<String> ONLY_IN_SPAWN_CHILD_MODE =",
                "+            Arrays.asList(new String[] { \"taskTimeoutMillis\", \"taskPulseMillis\",",
                "+            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\"});",
                "+",
                "     private static Options getOptions() {",
                "@@ -102,3 +102,10 @@ public class TikaServerCli {",
                "         options.addOption(\"spawnChild\", false, \"whether or not to spawn a child process for robustness\");",
                "-        options.addOption(\"maxFiles\", false, \"shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"taskTimeoutMillis\", true, \"Only in spawn child mode: how long to wait for a task (e.g. parse) to finish\");",
                "+        options.addOption(\"taskPulseMillis\", true, \"Only in spawn child mode: how often to check if a task has timed out.\");",
                "+        options.addOption(\"pingTimeoutMillis\", true, \"Only in spawn child mode: how long to wait to wait for a ping and/or ping response.\");",
                "+        options.addOption(\"pingPulseMillis\", true, \"Only in spawn child mode: how often to check if a ping has timed out.\");",
                "+",
                "+        options.addOption(\"maxFiles\", false, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"child\", false, \"this process is a child process -- EXPERT -- \" +",
                "+                \"should normally only be invoked by parent process\");",
                "         return options;",
                "@@ -118,33 +125,21 @@ public class TikaServerCli {",
                "     private static void execute(String[] args) throws Exception {",
                "-        boolean spawnChild = false;",
                "-        for (int i = 0; i < args.length; i++) {",
                "-            if (\"-spawnChild\".equals(args[i]) || \"--spawnChild\".equals(args[i])) {",
                "-                spawnChild = true;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spawnChild) {",
                "-            spawnChild(args);",
                "-        } else {",
                "-            executeLegacy(args);",
                "-        }",
                "-    }",
                "+        Options options = getOptions();",
                "-    private static void spawnChild(String[] args) throws Exception {",
                "-        Process child = start(args);",
                "-        try {",
                "-            while (true) {",
                "-                Thread.sleep(PULSE_MILLIS);",
                "+        CommandLineParser cliParser = new GnuParser();",
                "-                int exitValue = Integer.MAX_VALUE;",
                "-                try {",
                "-                    exitValue = child.exitValue();",
                "-                } catch (IllegalThreadStateException e) {",
                "-                    //process is still running",
                "-                }",
                "-                if (exitValue != Integer.MAX_VALUE) {",
                "-                    if (exitValue != ServerStatus.STATUS.PARENT_REQUESTED_SHUTDOWN.getShutdownCode()) {",
                "-                        LOG.warn(\"child exited with code ({}) -- restarting, now\", Integer.toString(exitValue));",
                "-                        child.destroyForcibly();",
                "-                        child = start(args);",
                "+        //need to strip out -J (child jvm opts) from this parse",
                "+        //they'll be processed correctly in args in the watch dog",
                "+        //and they won't be needed in legacy.",
                "+        CommandLine line = cliParser.parse(options, stripChildArgs(args));",
                "+        if (line.hasOption(\"spawnChild\")) {",
                "+            TikaServerWatchDog watchDog = new TikaServerWatchDog();",
                "+            watchDog.execute(args, configureServerTimeouts(line));",
                "+        } else {",
                "+            if (! line.hasOption(\"child\")) {",
                "+                //make sure the user didn't misunderstand the options",
                "+                for (String childOnly : ONLY_IN_SPAWN_CHILD_MODE) {",
                "+                    if (line.hasOption(childOnly)) {",
                "+                        System.err.println(\"The option '\" + childOnly +",
                "+                                \"' can only be used with '-spawnChild'\");",
                "+                        usage(options);",
                "                     }",
                "@@ -152,68 +147,19 @@ public class TikaServerCli {",
                "             }",
                "-        } catch (InterruptedException e) {",
                "-            //interrupted...shutting down",
                "-        } finally {",
                "-            child.destroyForcibly();",
                "-        }",
                "-    }",
                "-",
                "-    private static Process start(String[] args) throws IOException {",
                "-        ProcessBuilder builder = new ProcessBuilder();",
                "-        builder.inheritIO();",
                "-        List<String> argList = new ArrayList<>();",
                "-        List<String> jvmArgs = extractJVMArgs(args);",
                "-        List<String> childArgs = extractArgs(args);",
                "-        argList.add(\"java\");",
                "-            if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "-                String cp = System.getProperty(\"java.class.path\");",
                "-                jvmArgs.add(\"-cp\");",
                "-                jvmArgs.add(cp);",
                "-            }",
                "-        argList.addAll(jvmArgs);",
                "-        argList.add(\"org.apache.tika.server.TikaServerCli\");",
                "-        argList.addAll(childArgs);",
                "-",
                "-        builder.command(argList);",
                "-",
                "-        Process process = builder.start();",
                "-",
                "-        if (SHUTDOWN_HOOK != null) {",
                "-            Runtime.getRuntime().removeShutdownHook(SHUTDOWN_HOOK);",
                "+            executeLegacy(line, options);",
                "         }",
                "-        SHUTDOWN_HOOK = new Thread(() -> process.destroy());",
                "-        Runtime.getRuntime().addShutdownHook(SHUTDOWN_HOOK);",
                "-        return process;",
                "     }",
                "-    private static List<String> extractArgs(String[] args) {",
                "-        List<String> argList = new ArrayList<>();",
                "+    private static String[] stripChildArgs(String[] args) {",
                "+        List<String> ret = new ArrayList<>();",
                "         for (int i = 0; i < args.length; i++) {",
                "-            if (args[i].startsWith(\"-J\") || args[i].equals(\"-spawnChild\") || args[i].equals(\"--spawnChild\")) {",
                "-                continue;",
                "+            if (! args[i].startsWith(\"-J\")) {",
                "+                ret.add(args[i]);",
                "             }",
                "-            argList.add(args[i]);",
                "         }",
                "-        return argList;",
                "+        return ret.toArray(new String[ret.size()]);",
                "     }",
                "-    private static List<String> extractJVMArgs(String[] args) {",
                "-        List<String> jvmArgs = new ArrayList<>();",
                "-        for (int i = 0; i < args.length; i++) {",
                "-            if (args[i].startsWith(\"-J\")) {",
                "-                jvmArgs.add(\"-\"+args[i].substring(2));",
                "-            }",
                "-        }",
                "-        return jvmArgs;",
                "-    }",
                "-",
                "-    private static void executeLegacy(String[] args) throws Exception {",
                "-            Options options = getOptions();",
                "-",
                "-            CommandLineParser cliParser = new GnuParser();",
                "-            CommandLine line = cliParser.parse(options, args);",
                "-",
                "+    private static void executeLegacy(CommandLine line, Options options) throws Exception {",
                "             if (line.hasOption(\"help\")) {",
                "-                HelpFormatter helpFormatter = new HelpFormatter();",
                "-                helpFormatter.printHelp(\"tikaserver\", options);",
                "-                System.exit(-1);",
                "+                usage(options);",
                "             }",
                "@@ -309,18 +255,19 @@ public class TikaServerCli {",
                "-            int maxFiles = DEFAULT_MAX_FILES;",
                "-            if (line.hasOption(\"maxFiles\")) {",
                "-                maxFiles = Integer.parseInt(line.getOptionValue(\"maxFiles\"));",
                "-            }",
                "+            ServerStatus serverStatus = new ServerStatus();",
                "+            //if this is a child process",
                "+            if (line.hasOption(\"child\")) {",
                "+                long maxFiles = DEFAULT_MAX_FILES;",
                "+                if (line.hasOption(\"maxFiles\")) {",
                "+                    maxFiles = Long.parseLong(line.getOptionValue(\"maxFiles\"));",
                "+                }",
                "-            long timeoutMS = DEFAULT_TIME_OUT_MS;",
                "-            if (line.hasOption(\"timeoutMS\")) {",
                "-                timeoutMS = Long.parseLong(line.getOptionValue(\"timeoutMS\"));",
                "+                ServerTimeouts serverTimeouts = configureServerTimeouts(line);",
                "+                Thread serverThread =",
                "+                new Thread(new ServerStatusWatcher(serverStatus, System.in,",
                "+                        System.out, maxFiles, serverTimeouts));",
                "+                serverThread.start();",
                "+                System.setIn(new ByteArrayInputStream(new byte[0]));",
                "+                System.setOut(System.err);",
                "             }",
                "-            long pulseMS = DEFAULT_PULSE_MS;",
                "-            if (line.hasOption(\"pulseMS\")) {",
                "-                pulseMS = Long.parseLong(line.getOptionValue(\"pulseMS\"));",
                "-            }",
                "-            ServerStatus serverStatus = new ServerStatus(maxFiles);",
                "-            new Thread(new ServerStatusWatcher(serverStatus, timeoutMS, pulseMS)).start();",
                "-            TikaResource.init(tika, digester, inputStreamFactory);",
                "+            TikaResource.init(tika, digester, inputStreamFactory, serverStatus);",
                "             JAXRSServerFactoryBean sf = new JAXRSServerFactoryBean();",
                "@@ -330,5 +277,5 @@ public class TikaServerCli {",
                "             rCoreProviders.add(new SingletonResourceProvider(new RecursiveMetadataResource()));",
                "-            rCoreProviders.add(new SingletonResourceProvider(new DetectorResource()));",
                "+            rCoreProviders.add(new SingletonResourceProvider(new DetectorResource(serverStatus)));",
                "             rCoreProviders.add(new SingletonResourceProvider(new LanguageResource()));",
                "-            rCoreProviders.add(new SingletonResourceProvider(new TranslateResource()));",
                "+            rCoreProviders.add(new SingletonResourceProvider(new TranslateResource(serverStatus)));",
                "             rCoreProviders.add(new SingletonResourceProvider(new TikaResource()));",
                "@@ -370,2 +317,36 @@ public class TikaServerCli {",
                "     }",
                "+",
                "+    private static void usage(Options options) {",
                "+        HelpFormatter helpFormatter = new HelpFormatter();",
                "+        helpFormatter.printHelp(\"tikaserver\", options);",
                "+        System.exit(-1);",
                "+    }",
                "+",
                "+    private static ServerTimeouts configureServerTimeouts(CommandLine line) {",
                "+        ServerTimeouts serverTimeouts = new ServerTimeouts();",
                "+        /*TODO -- add these in",
                "+        if (line.hasOption(\"childProcessStartupMillis\")) {",
                "+            serverTimeouts.setChildProcessStartupMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"childProcessStartupMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"childProcessShutdownMillis\")) {",
                "+            serverTimeouts.setChildProcessShutdownMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"childProcesShutdownMillis\")));",
                "+        }*/",
                "+        if (line.hasOption(\"taskTimeoutMillis\")) {",
                "+            serverTimeouts.setTaskTimeoutMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"taskTimeoutMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"pingTimeoutMillis\")) {",
                "+            serverTimeouts.setPingTimeoutMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"pingTimeoutMillis\")));",
                "+        }",
                "+        if (line.hasOption(\"pingPulseMillis\")) {",
                "+            serverTimeouts.setPingPulseMillis(",
                "+                    Long.parseLong(line.getOptionValue(\"pingPulseMillis\")));",
                "+        }",
                "+",
                "+        return serverTimeouts;",
                "+    }",
                "+",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "new file mode 100644",
                "index 000000000..67007f220",
                "--- /dev/null",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -0,0 +1,233 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.tika.server;",
                "+",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.io.DataInputStream;",
                "+import java.io.DataOutputStream;",
                "+import java.io.IOException;",
                "+import java.time.Duration;",
                "+import java.time.Instant;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+import java.util.concurrent.TimeUnit;",
                "+",
                "+public class TikaServerWatchDog {",
                "+",
                "+    private static final Logger LOG = LoggerFactory.getLogger(TikaServerWatchDog.class);",
                "+    private volatile Instant lastPing = null;",
                "+    private ChildProcess childProcess = null;",
                "+    int restarts = 0;",
                "+",
                "+    public void execute(String[] args, ServerTimeouts serverTimeouts) throws Exception {",
                "+        //if the child thread is in stop-the-world mode, and isn't",
                "+        //responding to the ping, this thread checks to make sure",
                "+        //that the parent ping is sent and received often enough",
                "+        //If it isn't, this force destroys the child process.",
                "+        Thread pingTimer = new Thread(new Runnable() {",
                "+            @Override",
                "+            public void run() {",
                "+                while (true) {",
                "+                    long tmpLastPing = -1L;",
                "+                    try {",
                "+                        //TODO: clean this up with synchronization/locking",
                "+                        //to avoid potential NPE",
                "+                        tmpLastPing = lastPing.toEpochMilli();",
                "+                    } catch (NullPointerException e) {",
                "+",
                "+                    }",
                "+                    if (tmpLastPing > 0) {",
                "+                        long elapsed = Duration.between(Instant.ofEpochMilli(tmpLastPing), Instant.now()).toMillis();",
                "+                        if (elapsed > serverTimeouts.getPingTimeoutMillis()) {",
                "+                            Process processToDestroy = null;",
                "+                            try {",
                "+                                processToDestroy = childProcess.process;",
                "+                            } catch (NullPointerException e) {",
                "+                                //ignore",
                "+                            }",
                "+                            destroyChildForcibly(processToDestroy);",
                "+                        }",
                "+                    }",
                "+                    try {",
                "+                        Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+                    } catch (InterruptedException e) {",
                "+                        //swallow",
                "+                    }",
                "+                }",
                "+            }",
                "+        }",
                "+        );",
                "+        pingTimer.setDaemon(true);",
                "+        pingTimer.start();",
                "+        try {",
                "+            childProcess = new ChildProcess(args);",
                "+",
                "+            while (true) {",
                "+",
                "+                if (!childProcess.ping()) {",
                "+                    lastPing = null;",
                "+                    childProcess.close();",
                "+                    LOG.info(\"About to restart the child process\");",
                "+                    childProcess = new ChildProcess(args);",
                "+                    LOG.info(\"Successfully restarted child process -- {} restarts so far)\", ++restarts);",
                "+                }",
                "+                Thread.sleep(serverTimeouts.getPingPulseMillis());",
                "+            }",
                "+        } catch (InterruptedException e) {",
                "+            //interrupted...shutting down",
                "+        } finally {",
                "+            if (childProcess != null) {",
                "+                childProcess.close();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static List<String> extractArgs(String[] args) {",
                "+        List<String> argList = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\") || args[i].equals(\"-spawnChild\") || args[i].equals(\"--spawnChild\")) {",
                "+                continue;",
                "+            }",
                "+            argList.add(args[i]);",
                "+        }",
                "+        return argList;",
                "+    }",
                "+",
                "+    private static List<String> extractJVMArgs(String[] args) {",
                "+        List<String> jvmArgs = new ArrayList<>();",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].startsWith(\"-J\")) {",
                "+                jvmArgs.add(\"-\"+args[i].substring(2));",
                "+            }",
                "+        }",
                "+        return jvmArgs;",
                "+    }",
                "+",
                "+    private class ChildProcess {",
                "+        private Thread SHUTDOWN_HOOK = null;",
                "+",
                "+        Process process;",
                "+        DataInputStream fromChild;",
                "+        DataOutputStream toChild;",
                "+",
                "+",
                "+",
                "+        private ChildProcess(String[] args) throws Exception {",
                "+            this.process = startProcess(args);",
                "+",
                "+            this.fromChild = new DataInputStream(process.getInputStream());",
                "+            this.toChild = new DataOutputStream(process.getOutputStream());",
                "+            byte status = fromChild.readByte();",
                "+            if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "+                throw new IOException(\"bad status from child process: \"+",
                "+                        ServerStatus.STATUS.lookup(status));",
                "+            }",
                "+        }",
                "+",
                "+        public boolean ping() {",
                "+            lastPing = Instant.now();",
                "+            try {",
                "+                toChild.writeByte(ServerStatus.DIRECTIVES.PING.getByte());",
                "+                toChild.flush();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception pinging child process\", e);",
                "+                return false;",
                "+            }",
                "+            try {",
                "+                byte status = fromChild.readByte();",
                "+                if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "+                    LOG.warn(\"Received status from child: {}\",",
                "+                            ServerStatus.STATUS.lookup(status));",
                "+                    return false;",
                "+                }",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception receiving status from child\", e);",
                "+                return false;",
                "+            }",
                "+            return true;",
                "+        }",
                "+",
                "+        private void close() {",
                "+            try {",
                "+                toChild.writeByte(ServerStatus.DIRECTIVES.SHUTDOWN.getByte());",
                "+                toChild.flush();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Exception asking child to shutdown\", e);",
                "+            }",
                "+            //TODO: add a gracefully timed shutdown routine",
                "+            try {",
                "+                fromChild.close();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Problem shutting down reader from child\", e);",
                "+            }",
                "+",
                "+            try {",
                "+                toChild.close();",
                "+            } catch (Exception e) {",
                "+                LOG.warn(\"Problem shutting down writer to child\", e);",
                "+            }",
                "+            destroyChildForcibly(process);",
                "+        }",
                "+",
                "+        private Process startProcess(String[] args) throws IOException {",
                "+            ProcessBuilder builder = new ProcessBuilder();",
                "+            builder.redirectError(ProcessBuilder.Redirect.INHERIT);",
                "+            List<String> argList = new ArrayList<>();",
                "+            List<String> jvmArgs = extractJVMArgs(args);",
                "+            List<String> childArgs = extractArgs(args);",
                "+            argList.add(\"java\");",
                "+            if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "+                String cp = System.getProperty(\"java.class.path\");",
                "+                jvmArgs.add(\"-cp\");",
                "+                jvmArgs.add(cp);",
                "+            }",
                "+            argList.addAll(jvmArgs);",
                "+            argList.add(\"org.apache.tika.server.TikaServerCli\");",
                "+            argList.addAll(childArgs);",
                "+            argList.add(\"-child\");",
                "+",
                "+            builder.command(argList);",
                "+            Process process = builder.start();",
                "+            if (SHUTDOWN_HOOK != null) {",
                "+                Runtime.getRuntime().removeShutdownHook(SHUTDOWN_HOOK);",
                "+            }",
                "+            SHUTDOWN_HOOK = new Thread(() -> process.destroyForcibly());",
                "+            Runtime.getRuntime().addShutdownHook(SHUTDOWN_HOOK);",
                "+",
                "+            return process;",
                "+        }",
                "+    }",
                "+",
                "+    private static synchronized void destroyChildForcibly(Process process) {",
                "+        process = process.destroyForcibly();",
                "+        try {",
                "+            boolean destroyed = process.waitFor(60, TimeUnit.SECONDS);",
                "+            if (! destroyed) {",
                "+                LOG.error(\"Child process still alive after 60 seconds. \" +",
                "+                        \"Shutting down the parent.\");",
                "+                System.exit(1);",
                "+            }",
                "+",
                "+        } catch (InterruptedException e) {",
                "+            //swallow",
                "+        }",
                "+    }",
                "+",
                "+}",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index 8af3ad428..96b6f91cf 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -33,2 +33,3 @@ import org.apache.tika.metadata.TikaCoreProperties;",
                " import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.slf4j.Logger;",
                "@@ -39,3 +40,7 @@ public class DetectorResource {",
                "     private static final Logger LOG = LoggerFactory.getLogger(DetectorResource.class);",
                "+    private final ServerStatus serverStatus;",
                "+    public DetectorResource(ServerStatus serverStatus) {",
                "+        this.serverStatus = serverStatus;",
                "+    }",
                "     @PUT",
                "@@ -57,2 +62,7 @@ public class DetectorResource {",
                "             return MediaType.OCTET_STREAM.toString();",
                "+        } catch (OutOfMemoryError e) {",
                "+            serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "+            throw e;",
                "+        } finally {",
                "+            serverStatus.complete(taskId);",
                "         }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 9bd4d508a..1f5d8c172 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -43,2 +43,3 @@ import org.apache.tika.sax.RichTextContentHandler;",
                " import org.apache.tika.server.InputStreamFactory;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.apache.tika.server.TikaServerParseException;",
                "@@ -95,5 +96,5 @@ public class TikaResource {",
                "     private static InputStreamFactory inputStreamFactory = null;",
                "-",
                "+    private static ServerStatus SERVER_STATUS = null;",
                "     public static void init(TikaConfig config, DigestingParser.Digester digestr,",
                "-                            InputStreamFactory iSF) {",
                "+                            InputStreamFactory iSF, ServerStatus serverStatus) {",
                "         tikaConfig = config;",
                "@@ -101,2 +102,3 @@ public class TikaResource {",
                "         inputStreamFactory = iSF;",
                "+        SERVER_STATUS = serverStatus;",
                "     }",
                "@@ -385,2 +387,7 @@ public class TikaResource {",
                "                              ContentHandler handler, Metadata metadata, ParseContext parseContext) throws IOException {",
                "+",
                "+        checkIsOperating();",
                "+",
                "+        long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "+                metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY));",
                "         try {",
                "@@ -395,3 +402,7 @@ public class TikaResource {",
                "             throw new TikaServerParseException(e);",
                "+        } catch (OutOfMemoryError e) {",
                "+            SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);",
                "+            throw e;",
                "         } finally {",
                "+            SERVER_STATUS.complete(taskId);",
                "             inputStream.close();",
                "@@ -400,2 +411,9 @@ public class TikaResource {",
                "+    public static void checkIsOperating() {",
                "+        //check that server is not in shutdown mode",
                "+        if (! SERVER_STATUS.isOperating()) {",
                "+            throw new WebApplicationException(Response.Status.SERVICE_UNAVAILABLE);",
                "+        }",
                "+    }",
                "+",
                "     public static void logRequest(Logger logger, UriInfo info, Metadata metadata) {",
                "@@ -411,2 +429,3 @@ public class TikaResource {",
                "     public String getMessage() {",
                "+        checkIsOperating();",
                "         return GREETING;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "index b695940ab..a89271688 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "@@ -35,2 +35,3 @@ public class TikaVersion {",
                "     public String getVersion() {",
                "+        TikaResource.checkIsOperating();",
                "         return tika.toString();",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "index f44ff969b..3408027b2 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "@@ -26,2 +26,4 @@ import javax.ws.rs.Path;",
                " import javax.ws.rs.Produces;",
                "+import javax.ws.rs.WebApplicationException;",
                "+import javax.ws.rs.core.Response;",
                " import java.lang.annotation.Annotation;",
                "@@ -137,2 +139,4 @@ public class TikaWelcome {",
                "     public String getWelcomeHTML() {",
                "+        TikaResource.checkIsOperating();",
                "+",
                "         StringBuffer h = new StringBuffer();",
                "@@ -192,2 +196,3 @@ public class TikaWelcome {",
                "     public String getWelcomePlain() {",
                "+        TikaResource.checkIsOperating();",
                "         StringBuffer text = new StringBuffer();",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "index 0aba6f94b..041707746 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "@@ -31,2 +31,4 @@ import javax.ws.rs.PathParam;",
                " import javax.ws.rs.Produces;",
                "+import javax.ws.rs.WebApplicationException;",
                "+import javax.ws.rs.core.Response;",
                "@@ -39,2 +41,3 @@ import org.apache.tika.language.detect.LanguageResult;",
                " import org.apache.tika.language.translate.Translator;",
                "+import org.apache.tika.server.ServerStatus;",
                " import org.slf4j.Logger;",
                "@@ -50,3 +53,4 @@ public class TranslateResource {",
                "-\tpublic TranslateResource() {",
                "+\tprivate final ServerStatus serverStatus;",
                "+\tpublic TranslateResource(ServerStatus serverStatus) {",
                " \t\tthis.loader = new ServiceLoader(ServiceLoader.class.getClassLoader(),",
                "@@ -54,2 +58,3 @@ public class TranslateResource {",
                " \t\tthis.defaultTranslator = TikaResource.getConfig().getTranslator();",
                "+\t\tthis.serverStatus = serverStatus;",
                " \t}",
                "@@ -96,4 +101,12 @@ public class TranslateResource {",
                " \t\t}",
                "-",
                "-\t\treturn translate.translate(content, sLang, dLang);",
                "+        TikaResource.checkIsOperating();",
                "+\t\tlong taskId = serverStatus.start(ServerStatus.TASK.TRANSLATE, null);",
                "+\t\ttry {",
                "+\t\t\treturn translate.translate(content, sLang, dLang);",
                "+\t\t} catch (OutOfMemoryError e) {",
                "+\t\t    serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "+\t\t    throw e;",
                "+        } finally {",
                "+\t\t\tserverStatus.complete(taskId);",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/FileCountExceededException.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerStatusWatcher.java",
                "tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaVersion.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaWelcome.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6cc53734e73b5d1b0af790d220e0227aba69eaf6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533733834,
            "hunks": 3,
            "message": "TIKA-2672 -- more exclusions needed because of version conflicts",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fba81106e..d7d599212 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -213,2 +213,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>joda-time</groupId>",
                "+          <artifactId>joda-time</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -231,2 +235,7 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>org.objenesis</groupId>",
                "+      <artifactId>objenesis</artifactId>",
                "+      <version>2.6</version>",
                "+    </dependency>",
                "     <dependency>",
                "@@ -236,2 +245,6 @@",
                "       <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.objenesis</groupId>",
                "+          <artifactId>objenesis</artifactId>",
                "+        </exclusion>",
                "         <exclusion>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, cause",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6a84b5664d705c7b4e4f7d30609e42ad3c6b1d76",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539361135,
            "hunks": 7,
            "message": "TIKA-2754 -- include file name (if user submits it) in logs on parse/detection exception/errors.",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index 641479609..8dacf121f 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -61,5 +61,7 @@ public class DetectorResource {",
                "         } catch (IOException e) {",
                "-            LOG.warn(\"Unable to detect MIME type for file. Reason: {}\", e.getMessage(), e);",
                "+            LOG.warn(\"Unable to detect MIME type for file. Reason: {} ({})\",",
                "+                    e.getMessage(), filename, e);",
                "             return MediaType.OCTET_STREAM.toString();",
                "         } catch (OutOfMemoryError e) {",
                "+            LOG.error(\"OOM while detecting: ({})\", filename, e);",
                "             serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index e096c0e76..7c097d2fb 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -389,5 +389,5 @@ public class TikaResource {",
                "         checkIsOperating();",
                "-",
                "+        String fileName = metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY);",
                "         long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "-                metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY));",
                "+                fileName);",
                "         try {",
                "@@ -397,9 +397,9 @@ public class TikaResource {",
                "         } catch (EncryptedDocumentException e) {",
                "-            logger.warn(\"{}: Encrypted document\", path, e);",
                "+            logger.warn(\"{}: Encrypted document ({})\", path, fileName, e);",
                "             throw new TikaServerParseException(e);",
                "         } catch (Exception e) {",
                "-            logger.warn(\"{}: Text extraction failed\", path, e);",
                "+            logger.warn(\"{}: Text extraction failed ({})\", path, fileName, e);",
                "             throw new TikaServerParseException(e);",
                "         } catch (OutOfMemoryError e) {",
                "-            logger.error(\"{}: OOM\", path, e);",
                "+            logger.warn(\"{}: OOM ({})\", path, fileName, e);",
                "             SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2754": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2754",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "307a8bd592d6e25419bbad19aac47cc7de201c4d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538674357,
            "hunks": 39,
            "message": "TIKA-2735 -- allow user to avoid extracting \"master\" sections and notes sections from ppt[xm]?",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "index 5095709f4..356c47e6a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "@@ -18,8 +18,2 @@ package org.apache.tika.parser.microsoft;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.util.ArrayList;",
                "-import java.util.HashSet;",
                "-import java.util.List;",
                "-",
                " import org.apache.poi.common.usermodel.Hyperlink;",
                "@@ -42,3 +36,2 @@ import org.apache.poi.hslf.usermodel.HSLFTable;",
                " import org.apache.poi.hslf.usermodel.HSLFTableCell;",
                "-import org.apache.poi.hslf.usermodel.HSLFTextBox;",
                " import org.apache.poi.hslf.usermodel.HSLFTextParagraph;",
                "@@ -49,5 +42,7 @@ import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.sl.usermodel.Comment;",
                "+import org.apache.poi.sl.usermodel.ShapeContainer;",
                " import org.apache.poi.sl.usermodel.SimpleShape;",
                "-import org.apache.tika.exception.TikaException;",
                "+import org.apache.poi.sl.usermodel.TextParagraph;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "+import org.apache.tika.exception.TikaException;",
                " import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                "@@ -63,2 +58,7 @@ import org.xml.sax.helpers.AttributesImpl;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                " public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "@@ -94,11 +94,19 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             xhtml.startElement(\"div\", \"class\", \"slide\");",
                "+            HeadersFooters slideHeaderFooters =",
                "+                    (officeParserConfig.getIncludeHeadersAndFooters()) ?",
                "+                            slide.getHeadersFooters() : null;",
                "-            // Slide header, if present",
                "-            HeadersFooters hf = slide.getHeadersFooters();",
                "-            if (hf != null && hf.isHeaderVisible() && hf.getHeaderText() != null) {",
                "-                xhtml.startElement(\"p\", \"class\", \"slide-header\");",
                "+            HeadersFooters notesHeadersFooters =",
                "+                    (officeParserConfig.getIncludeHeadersAndFooters()) ?",
                "+                            ss.getNotesHeadersFooters() : null;",
                "-                xhtml.characters(hf.getHeaderText());",
                "+            if (officeParserConfig.getIncludeHeadersAndFooters()) {",
                "+                // Slide header, if present",
                "+                if (slideHeaderFooters != null && slideHeaderFooters.isHeaderVisible() && slideHeaderFooters.getHeaderText() != null) {",
                "+                    xhtml.startElement(\"p\", \"class\", \"slide-header\");",
                "-                xhtml.endElement(\"p\");",
                "+                    xhtml.characters(slideHeaderFooters.getHeaderText());",
                "+",
                "+                    xhtml.endElement(\"p\");",
                "+                }",
                "             }",
                "@@ -106,59 +114,32 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             // Slide master, if present",
                "-            extractMaster(xhtml, slide.getMasterSheet());",
                "-",
                "-            // Slide text",
                "-            {",
                "-                xhtml.startElement(\"div\", \"class\", \"slide-content\");",
                "-",
                "-                textRunsToText(xhtml, slide.getTextParagraphs());",
                "-",
                "-                xhtml.endElement(\"div\");",
                "+            if (officeParserConfig.getIncludeSlideMasterContent()) {",
                "+                extractMaster(xhtml, slide.getMasterSheet());",
                "             }",
                "+            // Slide text",
                "+            xhtml.startElement(\"div\", \"class\", \"slide-content\");",
                "+            textRunsToText(xhtml, slide.getTextParagraphs());",
                "             // Table text",
                "-            for (HSLFShape shape : slide.getShapes()) {",
                "-                if (shape instanceof HSLFTable) {",
                "-                    extractTableText(xhtml, (HSLFTable) shape);",
                "+            List<HSLFShape> shapes = getShapes(slide);",
                "+            if (shapes != null) {",
                "+                for (HSLFShape shape : shapes) {",
                "+                    if (shape instanceof HSLFTable) {",
                "+                        extractTableText(xhtml, (HSLFTable) shape);",
                "+                    }",
                "                 }",
                "             }",
                "+            extractGroupText(xhtml, slide, 0);",
                "+            //end slide content",
                "+            xhtml.endElement(\"div\");",
                "-            extractGroupText(xhtml, slide.getShapes(), 0);",
                "-",
                "-            // Slide footer, if present",
                "-            if (hf != null && hf.isFooterVisible() && hf.getFooterText() != null) {",
                "-                xhtml.startElement(\"p\", \"class\", \"slide-footer\");",
                "-",
                "-                xhtml.characters(hf.getFooterText());",
                "-",
                "-                xhtml.endElement(\"p\");",
                "-            }",
                "-",
                "-            // Comments, if present",
                "-            StringBuilder authorStringBuilder = new StringBuilder();",
                "-            for (Comment comment : slide.getComments()) {",
                "-                authorStringBuilder.setLength(0);",
                "-                xhtml.startElement(\"p\", \"class\", \"slide-comment\");",
                "-",
                "-                if (comment.getAuthor() != null) {",
                "-                    authorStringBuilder.append(comment.getAuthor());",
                "+            if (officeParserConfig.getIncludeHeadersAndFooters()) {",
                "+                // Slide footer, if present",
                "+                if (slideHeaderFooters != null && slideHeaderFooters.isFooterVisible() && slideHeaderFooters.getFooterText() != null) {",
                "+                    xhtml.startElement(\"p\", \"class\", \"slide-footer\");",
                "+                    xhtml.characters(slideHeaderFooters.getFooterText());",
                "+                    xhtml.endElement(\"p\");",
                "                 }",
                "-                if (comment.getAuthorInitials() != null) {",
                "-                    if (authorStringBuilder.length() > 0) {",
                "-                        authorStringBuilder.append(\" \");",
                "-                    }",
                "-                    authorStringBuilder.append(\"(\"+comment.getAuthorInitials()+\")\");",
                "-                }",
                "-                if (authorStringBuilder.length() > 0) {",
                "-                    if (comment.getText() != null) {",
                "-                        authorStringBuilder.append(\" - \");",
                "-                    }",
                "-                    xhtml.startElement(\"b\");",
                "-                    xhtml.characters(authorStringBuilder.toString());",
                "-                    xhtml.endElement(\"b\");",
                "-                }",
                "-                if (comment.getText() != null) {",
                "-                    xhtml.characters(comment.getText());",
                "-                }",
                "-                xhtml.endElement(\"p\");",
                "             }",
                "+            handleComments(slide, xhtml);",
                "+            handleNotes(slide, notesHeadersFooters, xhtml);",
                "@@ -167,14 +148,2 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "-           ",
                "-            // Find the Notes for this slide and extract inline",
                "-            HSLFNotes notes = slide.getNotes();",
                "-            if (notes != null) {",
                "-                xhtml.startElement(\"div\", \"class\", \"slide-notes\");",
                "-",
                "-                textRunsToText(xhtml, notes.getTextParagraphs());",
                "-       ",
                "-                xhtml.endElement(\"div\");",
                "-            }",
                "-            ",
                "-",
                "             // Slide complete",
                "@@ -183,43 +152,100 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "+        handleSlideEmbeddedPictures(ss, xhtml);",
                "+        if (officeParserConfig.getExtractMacros()) {",
                "+            extractMacros(ss, xhtml);",
                "+        }",
                "         // All slides done",
                "         xhtml.endElement(\"div\");",
                "+    }",
                "+",
                "+    private void handleComments(HSLFSlide slide, XHTMLContentHandler xhtml) throws SAXException {",
                "+        if (slide.getComments() == null || slide.getComments().size() == 0) {",
                "+            return;",
                "+        }",
                "+        xhtml.startElement(\"div\", \"class\", \"slide-comments\");",
                "-      /* notes */",
                "-        xhtml.startElement(\"div\", \"class\", \"slide-notes\");",
                "-        HashSet<Integer> seenNotes = new HashSet<>();",
                "-        HeadersFooters hf = ss.getNotesHeadersFooters();",
                "+        // Comments, if present",
                "+        StringBuilder authorStringBuilder = new StringBuilder();",
                "+        for (Comment comment : slide.getComments()) {",
                "+            authorStringBuilder.setLength(0);",
                "+            xhtml.startElement(\"p\", \"class\", \"slide-comment\");",
                "-        for (HSLFSlide slide : _slides) {",
                "-            HSLFNotes notes = slide.getNotes();",
                "-            if (notes == null) {",
                "-                continue;",
                "+            if (comment.getAuthor() != null) {",
                "+                authorStringBuilder.append(comment.getAuthor());",
                "             }",
                "-            Integer id = notes._getSheetNumber();",
                "-            if (seenNotes.contains(id)) {",
                "-                continue;",
                "+            if (comment.getAuthorInitials() != null) {",
                "+                if (authorStringBuilder.length() > 0) {",
                "+                    authorStringBuilder.append(\" \");",
                "+                }",
                "+                authorStringBuilder.append(\"(\" + comment.getAuthorInitials() + \")\");",
                "             }",
                "-            seenNotes.add(id);",
                "-",
                "-            // Repeat the Notes header, if set",
                "-            if (hf != null && hf.isHeaderVisible() && hf.getHeaderText() != null) {",
                "-                xhtml.startElement(\"p\", \"class\", \"slide-note-header\");",
                "-                xhtml.characters(hf.getHeaderText());",
                "-                xhtml.endElement(\"p\");",
                "+            if (authorStringBuilder.length() > 0) {",
                "+                if (comment.getText() != null) {",
                "+                    authorStringBuilder.append(\" - \");",
                "+                }",
                "+                xhtml.startElement(\"b\");",
                "+                xhtml.characters(authorStringBuilder.toString());",
                "+                xhtml.endElement(\"b\");",
                "             }",
                "+            if (comment.getText() != null) {",
                "+                xhtml.characters(comment.getText());",
                "+            }",
                "+            xhtml.endElement(\"p\");",
                "+        }",
                "+        //end comments",
                "+        xhtml.endElement(\"div\");",
                "+    }",
                "+",
                "+    private void handleNotes(HSLFSlide slide,",
                "+                             HeadersFooters notesHeaderFooters, XHTMLContentHandler xhtml) throws SAXException, TikaException, IOException {",
                "-            // Notes text",
                "-            textRunsToText(xhtml, notes.getTextParagraphs());",
                "+        if (!officeParserConfig.getIncludeSlideNotes()) {",
                "+            return;",
                "+        }",
                "+        // Find the Notes for this slide and extract inline",
                "+        HSLFNotes notes = slide.getNotes();",
                "+        if (notes == null) {",
                "+            return;",
                "+        }",
                "-            // Repeat the notes footer, if set",
                "-            if (hf != null && hf.isFooterVisible() && hf.getFooterText() != null) {",
                "-                xhtml.startElement(\"p\", \"class\", \"slide-note-footer\");",
                "-                xhtml.characters(hf.getFooterText());",
                "-                xhtml.endElement(\"p\");",
                "+        xhtml.startElement(\"div\", \"class\", \"notes\");",
                "+",
                "+        // Repeat the Notes header, if set",
                "+        if (officeParserConfig.getIncludeHeadersAndFooters() &&",
                "+                notesHeaderFooters != null &&",
                "+                notesHeaderFooters.isHeaderVisible() &&",
                "+                notesHeaderFooters.getHeaderText() != null) {",
                "+            xhtml.startElement(\"p\", \"class\", \"slide-note-header\");",
                "+            xhtml.characters(notesHeaderFooters.getHeaderText());",
                "+            xhtml.endElement(\"p\");",
                "+        }",
                "+        xhtml.startElement(\"div\", \"class\", \"notes-content\");",
                "+        // Notes text",
                "+        textRunsToText(xhtml, notes.getTextParagraphs());",
                "+",
                "+        List<HSLFShape> shapes = getShapes(notes);",
                "+        if (shapes != null && shapes.size() > 0) {",
                "+            // Table text",
                "+            for (HSLFShape shape : shapes) {",
                "+                if (shape instanceof HSLFTable) {",
                "+                    extractTableText(xhtml, (HSLFTable) shape);",
                "+                }",
                "             }",
                "         }",
                "+        extractGroupText(xhtml, notes, 0);",
                "+        //notes content",
                "+        xhtml.endElement(\"div\");",
                "-        handleSlideEmbeddedPictures(ss, xhtml);",
                "-        if (officeParserConfig.getExtractMacros()) {",
                "-            extractMacros(ss, xhtml);",
                "+        // Repeat the Notes footer, if set",
                "+        if (officeParserConfig.getIncludeHeadersAndFooters() &&",
                "+                notesHeaderFooters != null &&",
                "+                notesHeaderFooters.isFooterVisible() &&",
                "+                notesHeaderFooters.getFooterText() != null) {",
                "+            xhtml.startElement(\"p\", \"class\", \"slide-note-footer\");",
                "+            xhtml.characters(notesHeaderFooters.getFooterText());",
                "+            xhtml.endElement(\"p\");",
                "         }",
                "+        // Now any embedded resources",
                "+        handleSlideEmbeddedResources(notes, xhtml);",
                "+        //end notes",
                "         xhtml.endElement(\"div\");",
                "@@ -229,4 +255,4 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "     //an HSLFGroupShape.",
                "-    private void extractGroupText(XHTMLContentHandler xhtml, List<HSLFShape> shapes, int depth) throws SAXException {",
                "-",
                "+    private void extractGroupText(XHTMLContentHandler xhtml, ShapeContainer shapeContainer, int depth) throws SAXException {",
                "+        List<HSLFShape> shapes = getShapes(shapeContainer);",
                "         if (shapes == null) {",
                "@@ -241,2 +267,4 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         //grouped text containing object, so always ignore them.",
                "+        //I also don't believe that a table can be grouped with a table.",
                "+        //If these beliefs are wrong...must fix!",
                "         List<List<HSLFTextParagraph>> paragraphList = new ArrayList<>();",
                "@@ -245,3 +273,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                 //work recursively, HSLFGroupShape can contain HSLFGroupShape",
                "-                extractGroupText(xhtml, ((HSLFGroupShape)shape).getShapes(), depth+1);",
                "+                extractGroupText(xhtml, ((HSLFGroupShape)shape), depth+1);",
                "             } else if (shape instanceof HSLFTextShape",
                "@@ -291,3 +319,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         }",
                "-        List<HSLFShape> shapes = master.getShapes();",
                "+        List<HSLFShape> shapes = getShapes(master);",
                "         if (shapes == null || shapes.isEmpty()) {",
                "@@ -443,15 +471,10 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "-    private void handleSlideEmbeddedResources(HSLFSlide slide, XHTMLContentHandler xhtml)",
                "+    private void handleSlideEmbeddedResources(ShapeContainer shapeContainer, XHTMLContentHandler xhtml)",
                "             throws TikaException, SAXException, IOException {",
                "-        List<HSLFShape> shapes;",
                "-        try {",
                "-            shapes = slide.getShapes();",
                "-        } catch (NullPointerException e) {",
                "-            // Sometimes HSLF hits problems",
                "-            // Please open POI bugs for any you come across!",
                "-            EmbeddedDocumentUtil.recordEmbeddedStreamException(e, parentMetadata);",
                "+        List<HSLFShape> shapes = getShapes(shapeContainer);",
                "+        if (shapes == null) {",
                "             return;",
                "         }",
                "-",
                "         for (HSLFShape shape : shapes) {",
                "+            //handle ActiveXShape, movie shape?",
                "             if (shape instanceof HSLFObjectShape) {",
                "@@ -522,2 +545,15 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "     }",
                "+",
                "+    //Can return null!",
                "+    private List<HSLFShape> getShapes(ShapeContainer shapeContainer) {",
                "+        try {",
                "+            return shapeContainer.getShapes();",
                "+        } catch (NullPointerException e) {",
                "+            // Sometimes HSLF hits problems",
                "+            // Please open POI bugs for any you come across!",
                "+            EmbeddedDocumentUtil.recordEmbeddedStreamException(e, parentMetadata);",
                "+            return null;",
                "+        }",
                "+    }",
                "+",
                " }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "index 5d34b2e0c..d2bc79087 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "@@ -19,4 +19,2 @@ package org.apache.tika.parser.microsoft;",
                "-import org.apache.tika.config.Field;",
                "-",
                " import java.io.Serializable;",
                "@@ -32,2 +30,4 @@ public class OfficeParserConfig implements Serializable {",
                "     private boolean includeMissingRows = false;",
                "+    private boolean includeSlideNotes = true;",
                "+    private boolean includeSlideMasterContent = true;",
                "     private boolean concatenatePhoneticRuns = true;",
                "@@ -208,2 +208,40 @@ public class OfficeParserConfig implements Serializable {",
                "     }",
                "+",
                "+    public boolean getIncludeSlideNotes() {",
                "+        return includeSlideNotes;",
                "+    }",
                "+",
                "+    /**",
                "+     * Whether or not to process slide notes content.  If set",
                "+     * to <code>false</code>, the parser will skip the text content",
                "+     * and all embedded objects from the slide notes in ppt and ppt[xm].",
                "+     * The default is <code>true</code>.",
                "+     *",
                "+     * @param includeSlideNotes whether or not to process slide notes",
                "+     * @since 1.19.1",
                "+     */",
                "+    public void setIncludeSlideNotes(boolean includeSlideNotes) {",
                "+        this.includeSlideNotes = includeSlideNotes;",
                "+    }",
                "+",
                "+    /**",
                "+     * @since 1.19.1",
                "+     * @return whether or not to process content in slide masters",
                "+     */",
                "+    public boolean getIncludeSlideMasterContent() {",
                "+        return includeSlideMasterContent;",
                "+    }",
                "+",
                "+    /**",
                "+     * Whether or not to include contents from any of the three",
                "+     * types of masters -- slide, notes, handout -- in a .ppt or ppt[xm] file.",
                "+     * If set to <code>false</code>, the parser will not extract",
                "+     * text or embedded objects from any of the masters.",
                "+     *",
                "+     * @since 1.19.1",
                "+     * @param includeSlideMasterContent",
                "+     */",
                "+    public void setIncludeSlideMasterContent(boolean includeSlideMasterContent) {",
                "+        this.includeSlideMasterContent = includeSlideMasterContent;",
                "+    }",
                " }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java",
                "index 10ff76e12..ac6e2783f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java",
                "@@ -124,16 +124,18 @@ public class SXSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "-        handleGeneralTextContainingPart(XSLFRelation.SLIDE_MASTER.getRelation(),",
                "-                \"slide-master\",",
                "-                mainDocument,",
                "-                metadata,",
                "-                new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(",
                "-                        new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())));",
                "-",
                "-        handleGeneralTextContainingPart(HANDOUT_MASTER,",
                "-                \"slide-handout-master\",",
                "-                mainDocument,",
                "-                metadata,",
                "-                new OOXMLWordAndPowerPointTextHandler(",
                "-                        new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())",
                "-        );",
                "+        if (config.getIncludeSlideMasterContent()) {",
                "+            handleGeneralTextContainingPart(XSLFRelation.SLIDE_MASTER.getRelation(),",
                "+                    \"slide-master\",",
                "+                    mainDocument,",
                "+                    metadata,",
                "+                    new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(",
                "+                            new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())));",
                "+",
                "+            handleGeneralTextContainingPart(HANDOUT_MASTER,",
                "+                    \"slide-handout-master\",",
                "+                    mainDocument,",
                "+                    metadata,",
                "+                    new OOXMLWordAndPowerPointTextHandler(",
                "+                            new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())",
                "+            );",
                "+        }",
                "     }",
                "@@ -197,22 +199,25 @@ public class SXSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "+        if (config.getIncludeSlideMasterContent()) {",
                "+            handleGeneralTextContainingPart(XSLFRelation.SLIDE_LAYOUT.getRelation(),",
                "+                    \"slide-master-content\", slidePart,",
                "+                    metadata,",
                "+                    new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(",
                "+                            new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships))",
                "+            );",
                "+        }",
                "+        if (config.getIncludeSlideNotes()) {",
                "+            handleGeneralTextContainingPart(XSLFRelation.NOTES.getRelation(),",
                "+                    \"slide-notes\", slidePart,",
                "+                    metadata,",
                "+                    new OOXMLWordAndPowerPointTextHandler(",
                "+                            new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));",
                "+            if (config.getIncludeSlideMasterContent()) {",
                "+                handleGeneralTextContainingPart(XSLFRelation.NOTES_MASTER.getRelation(),",
                "+                        \"slide-notes-master\", slidePart,",
                "+                        metadata,",
                "+                        new OOXMLWordAndPowerPointTextHandler(",
                "+                                new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));",
                "-        handleGeneralTextContainingPart(XSLFRelation.SLIDE_LAYOUT.getRelation(),",
                "-                \"slide-master-content\", slidePart,",
                "-                metadata,",
                "-                new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(",
                "-                        new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships))",
                "-                );",
                "-",
                "-        handleGeneralTextContainingPart(XSLFRelation.NOTES.getRelation(),",
                "-                \"slide-notes\", slidePart,",
                "-                metadata,",
                "-                new OOXMLWordAndPowerPointTextHandler(",
                "-                        new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));",
                "-",
                "-        handleGeneralTextContainingPart(XSLFRelation.NOTES_MASTER.getRelation(),",
                "-                \"slide-notes-master\", slidePart,",
                "-                metadata,",
                "-                new OOXMLWordAndPowerPointTextHandler(",
                "-                        new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));",
                "-",
                "+            }",
                "+        }",
                "         handleGeneralTextContainingPart(XSLFRelation.COMMENTS.getRelation(),",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "index 3d929ba8a..c63fcb370 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "@@ -112,25 +112,28 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "-            // slide layout which is the master sheet for this slide",
                "-            xhtml.startElement(\"div\", \"class\", \"slide-master-content\");",
                "-            XSLFSlideLayout slideLayout = slide.getMasterSheet();",
                "-            extractContent(slideLayout.getShapes(), true, xhtml, null);",
                "-            xhtml.endElement(\"div\");",
                "-",
                "-            // slide master which is the master sheet for all text layouts",
                "-            XSLFSheet slideMaster = slideLayout.getMasterSheet();",
                "-            extractContent(slideMaster.getShapes(), true, xhtml, null);",
                "-",
                "-            // notes (if present)",
                "-            XSLFNotes slideNotes = slide.getNotes();",
                "-            if (slideNotes != null) {",
                "-                xhtml.startElement(\"div\", \"class\", \"slide-notes\");",
                "-",
                "-                extractContent(slideNotes.getShapes(), false, xhtml, slideDesc);",
                "+            if (config.getIncludeSlideMasterContent()) {",
                "+                // slide layout which is the master sheet for this slide",
                "+                xhtml.startElement(\"div\", \"class\", \"slide-master-content\");",
                "+                XSLFSlideLayout slideLayout = slide.getMasterSheet();",
                "+                extractContent(slideLayout.getShapes(), true, xhtml, null);",
                "+                xhtml.endElement(\"div\");",
                "-                // master sheet for this notes",
                "-                XSLFNotesMaster notesMaster = slideNotes.getMasterSheet();",
                "-                if (notesMaster != null) {",
                "-                    extractContent(notesMaster.getShapes(), true, xhtml, null);",
                "+                // slide master which is the master sheet for all text layouts",
                "+                XSLFSheet slideMaster = slideLayout.getMasterSheet();",
                "+                extractContent(slideMaster.getShapes(), true, xhtml, null);",
                "+            }",
                "+            if (config.getIncludeSlideNotes()) {",
                "+                // notes (if present)",
                "+                XSLFNotes slideNotes = slide.getNotes();",
                "+                if (slideNotes != null) {",
                "+                    xhtml.startElement(\"div\", \"class\", \"slide-notes\");",
                "+",
                "+                    extractContent(slideNotes.getShapes(), false, xhtml, slideDesc);",
                "+",
                "+                    // master sheet for this notes",
                "+                    XSLFNotesMaster notesMaster = slideNotes.getMasterSheet();",
                "+                    if (notesMaster != null) {",
                "+                        extractContent(notesMaster.getShapes(), true, xhtml, null);",
                "+                    }",
                "+                    xhtml.endElement(\"div\");",
                "                 }",
                "-                xhtml.endElement(\"div\");",
                "             }",
                "@@ -195,2 +198,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "         for (XSLFShape sh : shapes) {",
                "+",
                "             if (sh instanceof XSLFTextShape) {",
                "@@ -204,3 +208,5 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                     xhtml.startElement(\"p\");",
                "-",
                "+                    if (! config.getIncludeHeadersAndFooters() && p.isHeaderOrFooter()) {",
                "+                        continue;",
                "+                    }",
                "                     for (XSLFTextRun run : p.getTextRuns()) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2735": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0b2575b272c727f7c20cc58149dfec9a258ac799"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2735",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4ea421a7aef5d360ae2011c31d961c3dfbe6bfb9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542162884,
            "hunks": 17,
            "message": "TIKA-2782 -- confirm child streams are redirected.  Add workaround (shameless hack) if logger writes before streams are redirected.",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "index b85d89c06..34df41193 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "@@ -54,2 +54,4 @@ public class ServerTimeouts {",
                "+    private int maxRestarts = -1;",
                "+",
                "     private long taskTimeoutMillis = DEFAULT_TASK_TIMEOUT_MILLIS;",
                "@@ -105,2 +107,10 @@ public class ServerTimeouts {",
                "     }",
                "+",
                "+    public int getMaxRestarts() {",
                "+        return maxRestarts;",
                "+    }",
                "+",
                "+    public void setMaxRestarts(int maxRestarts) {",
                "+        this.maxRestarts = maxRestarts;",
                "+    }",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index d63a515a7..0cdce5083 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -20,2 +20,4 @@ package org.apache.tika.server;",
                " import java.io.ByteArrayInputStream;",
                "+import java.io.InputStream;",
                "+import java.io.PrintStream;",
                " import java.util.ArrayList;",
                "@@ -86,3 +88,3 @@ public class TikaServerCli {",
                "             Arrays.asList(new String[] { \"taskTimeoutMillis\", \"taskPulseMillis\",",
                "-            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\", \"javaHome\"});",
                "+            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\", \"javaHome\", \"maxRestarts\"});",
                "@@ -106,3 +108,3 @@ public class TikaServerCli {",
                "         options.addOption(\"pingPulseMillis\", true, \"Only in spawn child mode: how often to check if a ping has timed out.\");",
                "-",
                "+        options.addOption(\"maxRestarts\", true, \"Only in spawn child mode: how many times to restart child process, default is -1 (always restart)\");",
                "         options.addOption(\"maxFiles\", true, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "@@ -259,2 +261,8 @@ public class TikaServerCli {",
                "             if (line.hasOption(\"child\")) {",
                "+                //redirect!!!",
                "+                PrintStream out = System.out;",
                "+                InputStream in = System.in;",
                "+                System.setIn(new ByteArrayInputStream(new byte[0]));",
                "+                System.setOut(System.err);",
                "+",
                "                 long maxFiles = DEFAULT_MAX_FILES;",
                "@@ -265,8 +273,8 @@ public class TikaServerCli {",
                "                 ServerTimeouts serverTimeouts = configureServerTimeouts(line);",
                "+",
                "                 Thread serverThread =",
                "-                new Thread(new ServerStatusWatcher(serverStatus, System.in,",
                "-                        System.out, maxFiles, serverTimeouts));",
                "+                new Thread(new ServerStatusWatcher(serverStatus, in,",
                "+                        out, maxFiles, serverTimeouts));",
                "+",
                "                 serverThread.start();",
                "-                System.setIn(new ByteArrayInputStream(new byte[0]));",
                "-                System.setOut(System.err);",
                "             }",
                "@@ -349,2 +357,6 @@ public class TikaServerCli {",
                "+        if (line.hasOption(\"maxRestarts\")) {",
                "+            serverTimeouts.setMaxRestarts(Integer.parseInt(line.getOptionValue(\"maxRestarts\")));",
                "+        }",
                "+",
                "         return serverTimeouts;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index 964577c4a..5bf9bf389 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -23,2 +23,3 @@ import org.slf4j.LoggerFactory;",
                "+import java.io.ByteArrayInputStream;",
                " import java.io.DataInputStream;",
                "@@ -51,5 +52,6 @@ public class TikaServerWatchDog {",
                "     private ChildProcess childProcess = null;",
                "-    int restarts = 0;",
                "+",
                "     public void execute(String[] args, ServerTimeouts serverTimeouts) throws Exception {",
                "+        LOG.info(\"server watch dog is starting up\");",
                "         //if the child thread is in stop-the-world mode, and isn't",
                "@@ -94,2 +96,3 @@ public class TikaServerWatchDog {",
                "             setChildStatus(CHILD_STATUS.RUNNING);",
                "+            int restarts = 0;",
                "             while (true) {",
                "@@ -104,2 +107,7 @@ public class TikaServerWatchDog {",
                "                     setChildStatus(CHILD_STATUS.RUNNING);",
                "+                    restarts++;",
                "+                    if (serverTimeouts.getMaxRestarts() > -1 && restarts >= serverTimeouts.getMaxRestarts()) {",
                "+                        LOG.warn(\"hit max restarts: \"+restarts+\". Stopping now\");",
                "+                        break;",
                "+                    }",
                "                 }",
                "@@ -196,3 +204,18 @@ public class TikaServerWatchDog {",
                "             this.toChild = new DataOutputStream(process.getOutputStream());",
                "-            byte status = fromChild.readByte();",
                "+            //if logger's debug=true, there can be a bunch of stuff that",
                "+            //was written to the process's inputstream _before_",
                "+            //we did the redirect.",
                "+            //These bytes need to be read from fromChild before the child has actually",
                "+            //started...allow 64,000 bytes...completely arbitrary.",
                "+            //this is admittedly hacky...If the logger writes 0, we'd",
                "+            //interpret that as \"OPERATING\"...need to figure out",
                "+            //better way to siphon statically written bytes before",
                "+            //we do the redirect of streams.",
                "+            int maxStartBytes = 64000;",
                "+            int status = fromChild.readByte();",
                "+            int read = 0;",
                "+            while (status > -1 && read < maxStartBytes && status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "+                status = fromChild.readByte();",
                "+                read++;",
                "+            }",
                "             if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "@@ -207,3 +230,3 @@ public class TikaServerWatchDog {",
                "                 byte[] msg = new byte[len+1];",
                "-                msg[0] = status;",
                "+                msg[0] = (byte)status;",
                "                 process.getInputStream().read(msg, 1, len);"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/ServerTimeouts.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2782": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c0b594e070063380b7b149f162ef73be171fa3a3"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2782",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b6c4f8e2617840075d546433f461b7df566e401a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536076584,
            "hunks": 1,
            "message": "TIKA-2721: removed spring-* from tika-parsers deps Excluded `spring-core`, `spring-beans` and `spring-context` from `uimafit-core` dependency.",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index c81719013..f925d4f15 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -733,2 +733,14 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.springframework</groupId>",
                "+          <artifactId>spring-context</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.springframework</groupId>",
                "+          <artifactId>spring-beans</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.springframework</groupId>",
                "+          <artifactId>spring-core</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2721": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0dbf67dccf4717c12843c8de94cee50f2972be16"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2721",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "496e1565421eb9f95399c2e3edf8ba59a58857a8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534263517,
            "hunks": 1,
            "message": "TIKA-2672 -- remove hard coded input dimensions",
            "diff": [
                "diff --git a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "index 63ccad805..897d0729c 100644",
                "--- a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "+++ b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "@@ -262,3 +262,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "                     .enforceTrainingConfig(false);",
                "-            builder.inputShape(new int[]{299, 299, 3});",
                "+            builder.inputShape(new int[]{imgHeight, imgWidth, 3});",
                "             KerasModel model = builder.buildModel();"
            ],
            "changed_files": [
                "tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b542f9b4bd1527657a22a528f8d0340ef5cfb040"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8fee03ce17b43c72b3c2b7a5dc1b38f1be628dce",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537562104,
            "hunks": 0,
            "message": "Merge pull request #250 from jkakavas/change-property-access fix for TIKA-2731 contributed by @jkakavas",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2731": ""
            },
            "ghissue_refs": {
                "250": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2731",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 250",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "aac3af4ccb9da07b1ade1a57ed5e015dbedb17c4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532545809,
            "hunks": 2,
            "message": "TIKA-2688 via Yury Kats",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index e12dd02f8..99e7f6f4b 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -434,12 +434,24 @@",
                "     <!-- To avoid false matches, check for other headers after that -->",
                "+",
                "     <magic priority=\"70\">",
                "       <match value=\"From \" type=\"string\" offset=\"0\">",
                "-         <match value=\"\\nFrom: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nDate: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nSubject: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nFrom: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nDate: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nSubject: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:256\"/>",
                "+",
                "+        <match value=\"\\nX-\" type=\"stringignorecase\" offset=\"32:256\">",
                "+          <match value=\"\\nFrom: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nDate: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nSubject: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:8192\"/>",
                "+        </match>",
                "       </match>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2688": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fc23648d8f6b92c44a98d0e04b1cf75a652b9e4f"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2688",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5445be6da15d97467ff9ba6568f0d33ee1bbd81",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536933951,
            "hunks": 9,
            "message": "TIKA-2725 -- add synchronization to avoid potential NPE in watcher thread",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index 67007f220..d9b3c5432 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -33,3 +33,12 @@ public class TikaServerWatchDog {",
                "+    private enum CHILD_STATUS {",
                "+        INITIALIZING,",
                "+        RUNNING,",
                "+        SHUTTING_DOWN",
                "+    }",
                "+",
                "     private static final Logger LOG = LoggerFactory.getLogger(TikaServerWatchDog.class);",
                "+",
                "+    private Object[] childStatusLock = new Object[0];",
                "+    private volatile CHILD_STATUS childStatus = CHILD_STATUS.INITIALIZING;",
                "     private volatile Instant lastPing = null;",
                "@@ -48,8 +57,6 @@ public class TikaServerWatchDog {",
                "                     long tmpLastPing = -1L;",
                "-                    try {",
                "-                        //TODO: clean this up with synchronization/locking",
                "-                        //to avoid potential NPE",
                "-                        tmpLastPing = lastPing.toEpochMilli();",
                "-                    } catch (NullPointerException e) {",
                "-",
                "+                    synchronized (childStatusLock) {",
                "+                        if (childStatus == CHILD_STATUS.RUNNING) {",
                "+                            tmpLastPing = lastPing.toEpochMilli();",
                "+                        }",
                "                     }",
                "@@ -80,3 +87,3 @@ public class TikaServerWatchDog {",
                "             childProcess = new ChildProcess(args);",
                "-",
                "+            setChildStatus(CHILD_STATUS.RUNNING);",
                "             while (true) {",
                "@@ -84,2 +91,3 @@ public class TikaServerWatchDog {",
                "                 if (!childProcess.ping()) {",
                "+                    setChildStatus(CHILD_STATUS.INITIALIZING);",
                "                     lastPing = null;",
                "@@ -89,2 +97,3 @@ public class TikaServerWatchDog {",
                "                     LOG.info(\"Successfully restarted child process -- {} restarts so far)\", ++restarts);",
                "+                    setChildStatus(CHILD_STATUS.RUNNING);",
                "                 }",
                "@@ -95,2 +104,3 @@ public class TikaServerWatchDog {",
                "         } finally {",
                "+            setChildStatus(CHILD_STATUS.SHUTTING_DOWN);",
                "             if (childProcess != null) {",
                "@@ -101,2 +111,8 @@ public class TikaServerWatchDog {",
                "+    private void setChildStatus(CHILD_STATUS status) {",
                "+        synchronized (childStatusLock) {",
                "+            childStatus = status;",
                "+        }",
                "+    }",
                "+",
                "     private static List<String> extractArgs(String[] args) {",
                "@@ -141,2 +157,3 @@ public class TikaServerWatchDog {",
                "             }",
                "+            lastPing = Instant.now();",
                "         }"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5211fc79e24672bf1418f6016c9bcc891e438049"
                ],
                [
                    "no-tag",
                    "aee7557c82b7c6f406444a55479d42e1c8e70f20"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "33d960c24dd9f7e97cd11f18295cfd347cfdb1d4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540361919,
            "hunks": 3,
            "message": "TIKA-2762 Capture short fields (<150 chars) in EnviParserHeader Metadata",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "index a6fed6cc3..92485d3d0 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "@@ -19,3 +19,2 @@ package org.apache.tika.config;",
                " import javax.imageio.spi.ServiceRegistry;",
                "-import javax.xml.parsers.DocumentBuilder;",
                " import java.io.File;",
                "@@ -62,3 +61,2 @@ import org.apache.tika.parser.CompositeParser;",
                " import org.apache.tika.parser.DefaultParser;",
                "-import org.apache.tika.parser.ParseContext;",
                " import org.apache.tika.parser.Parser;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "index e260b39bf..10d8845e7 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "@@ -121,3 +121,3 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "             if(keyValue.length != 1) {",
                "-                metadata.set(keyValue[0].trim().replace(\" \", \"-\"), keyValue[1].trim());",
                "+                metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "             }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2762": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "68573d1a17315d134de6bec13666e02f3ec2aa45"
                ],
                [
                    "no-tag",
                    "d6eb8b9fbf6eb6f1198c5b6f54931b065519bf79"
                ],
                [
                    "no-tag",
                    "6b2cdc9049691ca37f5e37d7721a32a976f9f456"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2762",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1438d8a22a634912d7a5ccbfd6f9c3d4543de583",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532632658,
            "hunks": 22,
            "message": "TIKA-2692 -- general upgrades in prep for 1.19 # Conflicts: #\ttika-dl/pom.xml #\ttika-parsers/pom.xml",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index b08cb9ebd..584d8e826 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -146,2 +146,3 @@",
                "             <_runsystempackages>com.sun.xml.bind.marshaller, com.sun.xml.internal.bind.marshaller</_runsystempackages>",
                "+            <_noee>true</_noee>",
                "             <Bundle-Activator>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 9110f42b9..baa7ec1ef 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -310,6 +310,6 @@",
                "     <commons.io.version>2.6</commons.io.version>",
                "-    <gson.version>2.8.1</gson.version>",
                "+    <gson.version>2.8.5</gson.version>",
                "     <cxf.version>3.2.5</cxf.version>",
                "-    <slf4j.version>1.7.24</slf4j.version>",
                "-    <jackson.version>2.9.5</jackson.version>",
                "+    <slf4j.version>1.7.25</slf4j.version>",
                "+    <jackson.version>2.9.6</jackson.version>",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "@@ -357,3 +357,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.3.0</version>",
                "+        <version>3.5.1</version>",
                "       </plugin>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 38b15db50..6b51f30e5 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -39,3 +39,3 @@",
                "     <!-- NOTE: sync codec version with POI -->",
                "-    <codec.version>1.10</codec.version>",
                "+    <codec.version>1.11</codec.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parent-->",
                "@@ -44,3 +44,3 @@",
                "     <brotli.version>0.1.2</brotli.version>",
                "-    <mime4j.version>0.8.1</mime4j.version>",
                "+    <mime4j.version>0.8.2</mime4j.version>",
                "     <vorbis.version>0.8</vorbis.version>",
                "@@ -50,2 +50,3 @@",
                "     <sis.version>0.8</sis.version>",
                "+    <parso.version>2.0.9</parso.version>",
                "     <!-- used by POI, PDFBox and Jackcess ...try to sync -->",
                "@@ -117,3 +118,3 @@",
                "       <artifactId>jackcess</artifactId>",
                "-      <version>2.1.10</version>",
                "+      <version>2.1.12</version>",
                "       <exclusions>",
                "@@ -241,2 +242,8 @@",
                "       <version>${poi.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -270,3 +277,3 @@",
                "       <artifactId>asm</artifactId>",
                "-      <version>5.0.4</version>",
                "+      <version>6.2</version>",
                "     </dependency>",
                "@@ -275,3 +282,3 @@",
                "       <artifactId>isoparser</artifactId>",
                "-      <version>1.1.18</version>",
                "+      <version>1.1.22</version>",
                "     </dependency>",
                "@@ -280,3 +287,3 @@",
                "       <artifactId>metadata-extractor</artifactId>",
                "-      <version>2.10.1</version>",
                "+      <version>2.11.0</version>",
                "     </dependency>",
                "@@ -311,3 +318,9 @@",
                "       <artifactId>jhighlight</artifactId>",
                "-      <version>1.0.2</version>",
                "+      <version>1.0.3</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -323,3 +336,3 @@",
                "       <artifactId>junrar</artifactId>",
                "-      <version>1.0.1</version>",
                "+      <version>2.0.0</version>",
                "       <exclusions>",
                "@@ -365,3 +378,3 @@",
                "       <artifactId>opennlp-tools</artifactId>",
                "-      <version>1.8.4</version>",
                "+      <version>1.9.0</version>",
                "     </dependency>",
                "@@ -448,2 +461,8 @@",
                "         </exclusion>",
                "+        <!--TIKA 2672 exclude jna to resolve the dependency convergence with tika-dl's",
                "+        deeplearning4j-nn:1.0.0-SNAPSHOT-->",
                "+        <exclusion>",
                "+          <groupId>net.java.dev.jna</groupId>",
                "+          <artifactId>jna</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -469,2 +488,10 @@",
                "     </dependency>",
                "+    <!--TIKA 2672 include a later version of jna as a direct dependency to resolve dependency convergence with tika-dl's",
                "+    deeplearning4j-nn:1.0.0-SNAPSHOT -->",
                "+    <dependency>",
                "+      <groupId>net.java.dev.jna</groupId>",
                "+      <artifactId>jna</artifactId>",
                "+      <version>4.3.0</version>",
                "+    </dependency>",
                "+",
                "     <!-- grib's current jsoup is vulnerable to xss",
                "@@ -474,4 +501,5 @@",
                "       <artifactId>jsoup</artifactId>",
                "-      <version>1.11.2</version>",
                "-    </dependency>    <dependency>",
                "+      <version>1.11.3</version>",
                "+    </dependency>",
                "+    <dependency>",
                "       <groupId>edu.ucar</groupId>",
                "@@ -531,2 +559,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -543,3 +575,3 @@",
                "       <artifactId>commons-csv</artifactId>",
                "-      <version>1.0</version>",
                "+      <version>1.5</version>",
                "     </dependency>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "index cf80e4727..633b2ccdd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "@@ -25,2 +25,3 @@ import com.github.junrar.Archive;",
                " import com.github.junrar.exception.RarException;",
                "+import com.github.junrar.impl.FileVolumeManager;",
                " import com.github.junrar.rarfile.FileHeader;",
                "@@ -67,3 +68,3 @@ public class RarParser extends AbstractParser {",
                "             TikaInputStream tis = TikaInputStream.get(stream, tmp);",
                "-            rar = new Archive(tis.getFile());",
                "+            rar = new Archive(new FileVolumeManager(tis.getFile()));"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8f61126bebc4ac94f20b5a213b6208f3be4ca269"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "905473229533d9c849cbc61abf99222884ce6be4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540225272,
            "hunks": 8,
            "message": "TIKA-2764 parameterize inclusion/exclusion of deleted text, and fix '-' while you're at it.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WP6DocumentAreaExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WP6DocumentAreaExtractor.java",
                "index 5083711a7..894aa7bd8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WP6DocumentAreaExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WP6DocumentAreaExtractor.java",
                "@@ -32,4 +32,7 @@ import org.xml.sax.SAXException;",
                " class WP6DocumentAreaExtractor extends WPDocumentAreaExtractor {",
                "-",
                "-    /* 240-254 characters represent fixed-length multi-byte functions.  ",
                "+    private static final byte START_UNDO = 0;",
                "+    private static final byte END_UNDO = 1;",
                "+    private static final byte START_INSERT = 3;",
                "+    private static final byte END_INSERT = 4;",
                "+    /* 240-254 characters represent fixed-length multi-byte functions.",
                "      * Those that are not handled explicitely in the code below should be",
                "@@ -54,7 +57,35 @@ class WP6DocumentAreaExtractor extends WPDocumentAreaExtractor {",
                "         254, 8,  // (Reserved)",
                "-    });    ",
                "-    ",
                "+    });",
                "+    private boolean includeDeletedContent = true;",
                "+    private boolean inUndo = false;",
                "+",
                "+    public WP6DocumentAreaExtractor(boolean includeDeletedContent) {",
                "+        super();",
                "+        this.includeDeletedContent = includeDeletedContent;",
                "+    }",
                "+",
                "     protected void extract(int c, WPInputStream in, StringBuilder out, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException {",
                "-        if (c > 0 && c <= 32) {",
                "+        //special handling for undo must come first",
                "+",
                "+        if (!includeDeletedContent) {",
                "+            if (inUndo && c != 241) {",
                "+                return;",
                "+            }",
                "+        }",
                "+        //241 is the fixed length multi-byte marker for",
                "+        //undo/insert.  The second byte determines",
                "+        //what type of undo this is.  I don't understand",
                "+        //what the third byte signifies.",
                "+        if (c == 241) {",
                "+            byte b = in.readWPByte();",
                "+            if (b == START_UNDO) {",
                "+                inUndo = true;",
                "+            } else if (b == END_UNDO) {",
                "+                inUndo = false;",
                "+            }",
                "+            // removing 2 from function length since first two chars already read",
                "+            in.skipWPByte(FIXED_LENGTH_FUNCTION_SIZES.get(c) - 2);",
                "+",
                "+        } else if (c > 0 && c <= 32) {",
                "             out.append(WP6Charsets.DEFAULT_EXTENDED_INTL_CHARS[c]);",
                "@@ -66,3 +97,3 @@ class WP6DocumentAreaExtractor extends WPDocumentAreaExtractor {",
                "             out.append('\\u00A0'); // Hard space",
                "-        } else if (c == 129) {",
                "+        } else if (c == 132) {",
                "             out.append('-');      // Hard hyphen",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WordPerfectParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WordPerfectParser.java",
                "index a18fee112..b091a428c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WordPerfectParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WordPerfectParser.java",
                "@@ -25,2 +25,3 @@ import java.util.Set;",
                "+import org.apache.tika.config.Field;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "@@ -60,3 +61,6 @@ public class WordPerfectParser extends AbstractParser {",
                "                     WP_5_0, WP_5_1, WP_6_x)));",
                "-    ",
                "+",
                "+    @Field",
                "+    private boolean includeDeletedContent = true;",
                "+",
                "     @Override",
                "@@ -146,3 +150,3 @@ public class WordPerfectParser extends AbstractParser {",
                "         if (prefixArea.getMajorVersion() == WPPrefixArea.WP6_MAJOR_VERSION) {",
                "-            return new WP6DocumentAreaExtractor();",
                "+            return new WP6DocumentAreaExtractor(includeDeletedContent);",
                "         }",
                "@@ -151,2 +155,14 @@ public class WordPerfectParser extends AbstractParser {",
                "     }",
                "+",
                "+    /**",
                "+     * Whether or not to include deleted content.  This currently",
                "+     * only works with WP6.",
                "+     * The default is <code>true</code>",
                "+     *",
                "+     * @param includeDeletedContent",
                "+     */",
                "+    @Field",
                "+    public void setIncludeDeletedContent(boolean includeDeletedContent) {",
                "+        this.includeDeletedContent = includeDeletedContent;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WP6DocumentAreaExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WordPerfectParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2764": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f030fb38e00669ea3fa06f7850a9a869fc437008"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2764",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5346cbb96ed39caadc7e554515aef73929d66aed",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533748888,
            "hunks": 2,
            "message": "TIKA-2706 -- store exceptions from macroreader in child metadata",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "index 03751562a..133d5e45f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "@@ -315,4 +315,4 @@ public class OfficeParser extends AbstractOfficeParser {",
                "      */",
                "-    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml, EmbeddedDocumentExtractor",
                "-            embeddedDocumentExtractor)  throws IOException, SAXException {",
                "+    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml,",
                "+                                     EmbeddedDocumentExtractor embeddedDocumentExtractor)  throws IOException, SAXException {",
                "@@ -324,3 +324,14 @@ public class OfficeParser extends AbstractOfficeParser {",
                "         } catch (Exception e) {",
                "-            //swallow",
                "+            if (e instanceof SecurityException) {",
                "+                throw e;",
                "+            }",
                "+            Metadata m = new Metadata();",
                "+            m.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE, TikaCoreProperties.EmbeddedResourceType.MACRO.toString());",
                "+            m.set(Metadata.CONTENT_TYPE, \"text/x-vbasic\");",
                "+            EmbeddedDocumentUtil.recordException(e, m);",
                "+            if (embeddedDocumentExtractor.shouldParseEmbedded(m)) {",
                "+                embeddedDocumentExtractor.parseEmbedded(",
                "+                        //pass in space character so that we don't trigger a zero-byte exception",
                "+                        new ByteArrayInputStream(new byte[]{'\\u0020'}), xhtml, m, true);",
                "+            }",
                "             return;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2706": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "da26f02bf60ea3ef59bfa5b67930925d8dcd2e77"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2706",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b2973e3561638aa8b9f3d5da876f360227c9534c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543225,
            "hunks": 2,
            "message": "TIKA-2691 -- upgrade jai-imageio-core and pdfbox's jbig2-imageio while we're at it.",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 05a6f180a..08620d99e 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -733,3 +733,3 @@",
                "       <artifactId>jbig2-imageio</artifactId>",
                "-      <version>3.0.0</version>",
                "+      <version>3.0.1</version>",
                "     </dependency>",
                "@@ -740,3 +740,3 @@",
                "       <artifactId>jai-imageio-core</artifactId>",
                "-      <version>1.3.1</version>",
                "+      <version>1.4.0</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2691": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1551a796b00949da4f7e7a26c9a5342c08882b18"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2691",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b717ca62ca8bbe3fc0a74a778c5bb6cbbba28953",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534249363,
            "hunks": 1,
            "message": "TIKA-2667 upgrade jmatio",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index e9e5b83c6..cdb1529d9 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -155,3 +155,3 @@",
                "       <artifactId>jmatio</artifactId>",
                "-      <version>1.3</version>",
                "+      <version>1.4</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2667": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3f6d9c587487e83a2cbc88401c198bb4d8a593c0"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2667",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fe2b3ae2d9e8d6ca9fe493fa39c4483b3e6b8f70",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532616000,
            "hunks": 24,
            "message": "TIKA-2692 -- minimal upgrades to pass ossindex-maven module -- except for tika-nlp module, which requires significant work. fix conflicts",
            "diff": [
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 9f555e848..86f5ceeab 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -91,3 +91,3 @@",
                "       <artifactId>jackrabbit-jcr-server</artifactId>",
                "-      <version>2.3.6</version>",
                "+      <version>2.17.4</version>",
                "       <exclusions>",
                "@@ -110,3 +110,3 @@",
                "       <artifactId>jackrabbit-core</artifactId>",
                "-      <version>2.3.6</version>",
                "+      <version>2.17.4</version>",
                "       <exclusions>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index ef02d2731..bd335e0ca 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -311,3 +311,3 @@",
                "     <gson.version>2.8.1</gson.version>",
                "-    <cxf.version>3.0.16</cxf.version>",
                "+    <cxf.version>3.2.5</cxf.version>",
                "     <slf4j.version>1.7.24</slf4j.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index f278302bf..58a5dfe94 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -51,5 +51,5 @@",
                "     <!-- used by POI, PDFBox and Jackcess ...try to sync -->",
                "-    <bouncycastle.version>1.54</bouncycastle.version>",
                "+    <bouncycastle.version>1.60</bouncycastle.version>",
                "     <commonsexec.version>1.3</commonsexec.version>",
                "-    <httpcomponents.version>4.5.4</httpcomponents.version>",
                "+    <httpcomponents.version>4.5.6</httpcomponents.version>",
                "   </properties>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 814375c89..323ec6ab9 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -99,13 +99,3 @@",
                "     </dependency>",
                "-    <dependency>",
                "-      <groupId>javax.mail</groupId>",
                "-      <artifactId>mail</artifactId>",
                "-      <version>1.4.4</version>",
                "-      <exclusions>",
                "-        <exclusion>",
                "-          <groupId>javax.activation</groupId>",
                "-          <artifactId>activation</artifactId>",
                "-        </exclusion>",
                "-      </exclusions>",
                "-    </dependency>",
                "+",
                "     <dependency>",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "index e9c4348f8..e0cd6ba05 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "@@ -26,2 +26,4 @@ import java.util.Map;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.detect.CompositeDetector;",
                "@@ -29,3 +31,2 @@ import org.apache.tika.detect.Detector;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -37,2 +38,5 @@ import org.eclipse.jetty.util.ajax.JSON;",
                " public class TikaDetectors {",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "+",
                "+",
                "     private HTMLHelper html;",
                "@@ -78,3 +82,3 @@ public class TikaDetectors {",
                "         detectorAsMap(TikaResource.getConfig().getDetector(), details);",
                "-        return JSON.toString(details);",
                "+        return GSON.toJson(details);",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "index 0dacdf6bd..bc8c8ca26 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "@@ -28,2 +28,4 @@ import java.util.TreeMap;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.mime.MediaType;",
                "@@ -33,3 +35,2 @@ import org.apache.tika.parser.Parser;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -41,2 +42,5 @@ import org.eclipse.jetty.util.ajax.JSON;",
                " public class TikaMimeTypes {",
                "+",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "+",
                "     private HTMLHelper html;",
                "@@ -98,5 +102,5 @@ public class TikaMimeTypes {",
                "-            typeDets.put(\"alias\", type.aliases);",
                "+            typeDets.put(\"alias\", copyToStringArray(type.aliases));",
                "             if (type.supertype != null) {",
                "-                typeDets.put(\"supertype\", type.supertype);",
                "+                typeDets.put(\"supertype\", type.supertype.toString());",
                "             }",
                "@@ -109,3 +113,11 @@ public class TikaMimeTypes {",
                "-        return JSON.toString(details);",
                "+        return GSON.toJson(details);",
                "+    }",
                "+",
                "+    private static String[] copyToStringArray(MediaType[] aliases) {",
                "+        String[] strings = new String[aliases.length];",
                "+        for (int i = 0; i < aliases.length; i++) {",
                "+            strings[i] = aliases[i].toString();",
                "+        }",
                "+        return strings;",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "index f77de4da7..6461cab8b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "@@ -30,2 +30,4 @@ import java.util.Set;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.mime.MediaType;",
                "@@ -36,3 +38,2 @@ import org.apache.tika.parser.ParserDecorator;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -46,2 +47,3 @@ public class TikaParsers {",
                "     private static final ParseContext EMPTY_PC = new ParseContext();",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "     private HTMLHelper html;",
                "@@ -129,3 +131,4 @@ public class TikaParsers {",
                "         parserAsMap(new ParserDetails(TikaResource.getConfig().getParser()), withMimeTypes, details);",
                "-        return JSON.toString(details);",
                "+",
                "+        return GSON.toJson(details);",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 00607389e..7ee07c366 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -19,6 +19,32 @@ package org.apache.tika.server.resource;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "+import org.apache.commons.lang.StringUtils;",
                "+import org.apache.cxf.attachment.ContentDisposition;",
                "+import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "+import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.tika.Tika;",
                "+import org.apache.tika.config.TikaConfig;",
                "+import org.apache.tika.detect.Detector;",
                "+import org.apache.tika.exception.EncryptedDocumentException;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.TikaCoreProperties;",
                "+import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.parser.AutoDetectParser;",
                "+import org.apache.tika.parser.DigestingParser;",
                "+import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.Parser;",
                "+import org.apache.tika.parser.ParserDecorator;",
                "+import org.apache.tika.parser.PasswordProvider;",
                "+import org.apache.tika.parser.html.BoilerpipeContentHandler;",
                "+import org.apache.tika.parser.ocr.TesseractOCRConfig;",
                "+import org.apache.tika.parser.pdf.PDFParserConfig;",
                "+import org.apache.tika.sax.BodyContentHandler;",
                "+import org.apache.tika.sax.ExpandedTitleContentHandler;",
                "+import org.apache.tika.sax.RichTextContentHandler;",
                "+import org.apache.tika.server.InputStreamFactory;",
                "+import org.apache.tika.server.TikaServerParseException;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+import org.xml.sax.ContentHandler;",
                "+import org.xml.sax.SAXException;",
                "-import javax.mail.internet.ContentDisposition;",
                "-import javax.mail.internet.ParseException;",
                " import javax.ws.rs.Consumes;",
                "@@ -54,31 +80,4 @@ import java.util.regex.Pattern;",
                "-import org.apache.commons.lang.StringUtils;",
                "-import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "-import org.apache.tika.Tika;",
                "-import org.apache.tika.config.TikaConfig;",
                "-import org.apache.tika.detect.Detector;",
                "-import org.apache.tika.exception.EncryptedDocumentException;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.metadata.TikaMetadataKeys;",
                "-import org.apache.tika.mime.MediaType;",
                "-import org.apache.tika.parser.AutoDetectParser;",
                "-import org.apache.tika.parser.DigestingParser;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.apache.tika.parser.ParserDecorator;",
                "-import org.apache.tika.parser.PasswordProvider;",
                "-import org.apache.tika.parser.html.BoilerpipeContentHandler;",
                "-import org.apache.tika.parser.html.HtmlParser;",
                "-import org.apache.tika.parser.ocr.TesseractOCRConfig;",
                "-import org.apache.tika.parser.pdf.PDFParserConfig;",
                "-import org.apache.tika.sax.BodyContentHandler;",
                "-import org.apache.tika.sax.ExpandedTitleContentHandler;",
                "-import org.apache.tika.sax.RichTextContentHandler;",
                "-import org.apache.tika.server.InputStreamFactory;",
                "-import org.apache.tika.server.TikaServerParseException;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "+",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "@@ -141,15 +140,10 @@ public class TikaResource {",
                "         if (disposition != null) {",
                "-            try {",
                "-                ContentDisposition c = new ContentDisposition(disposition);",
                "+            ContentDisposition c = new ContentDisposition(disposition);",
                "-                // only support \"attachment\" dispositions",
                "-                if (\"attachment\".equals(c.getDisposition())) {",
                "-                    String fn = c.getParameter(\"filename\");",
                "-                    if (fn != null) {",
                "-                        return fn;",
                "-                    }",
                "+            // only support \"attachment\" dispositions",
                "+            if (\"attachment\".equals(c.getType())) {",
                "+                String fn = c.getParameter(\"filename\");",
                "+                if (fn != null) {",
                "+                    return fn;",
                "                 }",
                "-            } catch (ParseException e) {",
                "-                // not a valid content-disposition field",
                "-                LOG.warn(\"Parse exception {} determining content disposition\", e.getMessage(), e);",
                "             }"
            ],
            "changed_files": [
                "tika-example/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-server/pom.xml",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "de2057b2326aaa68c913e2a4a929538d6cc507f8"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "303ccd41d1411b45024248ab5b89978b93bd0cbc",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537902484,
            "hunks": 1,
            "message": "TIKA-2739 -- ForkParser's child process should be headless",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index c6412d5e8..011324afd 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -57,3 +57,3 @@ public class ForkParser extends AbstractParser {",
                "     /** Java command line */",
                "-    private List<String> java = Arrays.asList(\"java\", \"-Xmx32m\");",
                "+    private List<String> java = Arrays.asList(\"java\", \"-Xmx32m\", \"-Djava.awt.headless=true\");"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2739": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e75554a5fa8c35798347000f4818877ac74b3655"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2739",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "744861f49a9295d22405b873158cda9f2414c2f5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538122953,
            "hunks": 1,
            "message": "TIKA-2740: Added TkInter module into Python dependency check",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "index df46f00c2..ca9f14387 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "@@ -215,3 +215,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "             File importCheck = tmp.createTemporaryFile();",
                "-            String prg = \"import numpy, matplotlib, skimage\";",
                "+            String prg = \"import numpy, matplotlib, skimage, _tkinter\";",
                "             OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(importCheck), Charset.forName(\"UTF-8\"));"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2740": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1d68362550906529d4cb54b5d2ec9d9448458420"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2740",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d9061d281f7f46ecae8b902e27c49777ec43919",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542230718,
            "hunks": 8,
            "message": "TIKA-2776 -- tika-server in legacy mode should ignore oom.",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "index ac5fed44b..f7843fb6d 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "@@ -68,2 +68,3 @@ public class ServerStatus {",
                "     }",
                "+",
                "     public enum TASK {",
                "@@ -77,5 +78,13 @@ public class ServerStatus {",
                "     private Map<Long, TaskStatus> tasks = new HashMap<>();",
                "-",
                "+    private final boolean isLegacy;",
                "     private STATUS status = STATUS.OPERATING;",
                "+    public ServerStatus() {",
                "+        isLegacy = false;",
                "+    }",
                "+",
                "+    public ServerStatus(boolean isLegacy) {",
                "+        this.isLegacy = isLegacy;",
                "+    }",
                "+",
                "     public synchronized long start(TASK task, String fileName) {",
                "@@ -117,3 +126,10 @@ public class ServerStatus {",
                "+    /**",
                "+     *",
                "+     * @return true if this is legacy, otherwise whether or not status == OPERATING.",
                "+     */",
                "     public synchronized boolean isOperating() {",
                "+        if (isLegacy) {",
                "+            return true;",
                "+        }",
                "         return status == STATUS.OPERATING;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index 0cdce5083..970acd20c 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -258,5 +258,6 @@ public class TikaServerCli {",
                "-            ServerStatus serverStatus = new ServerStatus();",
                "+            ServerStatus serverStatus;",
                "             //if this is a child process",
                "             if (line.hasOption(\"child\")) {",
                "+                serverStatus = new ServerStatus();",
                "                 //redirect!!!",
                "@@ -279,2 +280,4 @@ public class TikaServerCli {",
                "                 serverThread.start();",
                "+            } else {",
                "+                serverStatus = new ServerStatus(true);",
                "             }"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/ServerStatus.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2776": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "22f57072dfc96da6ef27e053a09f9b648552f2f2"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2776",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "375e3d76d896656cbb5dd8c6eff6176f729336fb",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533664423,
            "hunks": 18,
            "message": "TIKA-2705 -- allow parameter configuration for tesseract via tika-config.xml",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "index c6ff21cc9..1c65ecedb 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "@@ -73,6 +73,6 @@ public class TesseractOCRConfig implements Serializable {",
                "     // Minimum file size to submit file to ocr.",
                "-    private int minFileSizeToOcr = 0;",
                "+    private long minFileSizeToOcr = 0;",
                "     // Maximum file size to submit file to ocr.",
                "-    private int maxFileSizeToOcr = Integer.MAX_VALUE;",
                "+    private long maxFileSizeToOcr = Integer.MAX_VALUE;",
                "@@ -324,5 +324,5 @@ public class TesseractOCRConfig implements Serializable {",
                "     /**",
                "-     * @see #setMinFileSizeToOcr(int minFileSizeToOcr)",
                "+     * @see #setMinFileSizeToOcr(long minFileSizeToOcr)",
                "      */",
                "-    public int getMinFileSizeToOcr() {",
                "+    public long getMinFileSizeToOcr() {",
                "         return minFileSizeToOcr;",
                "@@ -334,3 +334,3 @@ public class TesseractOCRConfig implements Serializable {",
                "      */",
                "-    public void setMinFileSizeToOcr(int minFileSizeToOcr) {",
                "+    public void setMinFileSizeToOcr(long minFileSizeToOcr) {",
                "         this.minFileSizeToOcr = minFileSizeToOcr;",
                "@@ -339,5 +339,5 @@ public class TesseractOCRConfig implements Serializable {",
                "     /**",
                "-     * @see #setMaxFileSizeToOcr(int maxFileSizeToOcr)",
                "+     * @see #setMaxFileSizeToOcr(long maxFileSizeToOcr)",
                "      */",
                "-    public int getMaxFileSizeToOcr() {",
                "+    public long getMaxFileSizeToOcr() {",
                "         return maxFileSizeToOcr;",
                "@@ -349,3 +349,3 @@ public class TesseractOCRConfig implements Serializable {",
                "      */",
                "-    public void setMaxFileSizeToOcr(int maxFileSizeToOcr) {",
                "+    public void setMaxFileSizeToOcr(long maxFileSizeToOcr) {",
                "         this.maxFileSizeToOcr = maxFileSizeToOcr;",
                "@@ -624,2 +624,24 @@ public class TesseractOCRConfig implements Serializable {",
                "+    /**",
                "+     * Get property from the properties file passed in.",
                "+     *",
                "+     * @param properties     properties file to read from.",
                "+     * @param property       the property to fetch.",
                "+     * @param defaultMissing default parameter to use.",
                "+     * @return the value.",
                "+     */",
                "+    private long getProp(Properties properties, String property, long defaultMissing) {",
                "+        String p = properties.getProperty(property);",
                "+        if (p == null || p.isEmpty()) {",
                "+            return defaultMissing;",
                "+        }",
                "+        try {",
                "+            return Integer.parseInt(p);",
                "+        } catch (Throwable ex) {",
                "+            throw new RuntimeException(String.format(Locale.ROOT, \"Cannot parse TesseractOCRConfig variable %s, invalid integer value\",",
                "+                    property), ex);",
                "+        }",
                "+    }",
                "+",
                "+",
                "     /**",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "index d3238c23a..df46f00c2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "@@ -18,36 +18,2 @@ package org.apache.tika.parser.ocr;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "-",
                "-import javax.imageio.ImageIO;",
                "-import javax.xml.parsers.SAXParser;",
                "-import java.awt.Image;",
                "-import java.awt.image.BufferedImage;",
                "-import java.io.ByteArrayOutputStream;",
                "-import java.io.File;",
                "-import java.io.FileInputStream;",
                "-import java.io.FileOutputStream;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.io.InputStreamReader;",
                "-import java.io.OutputStreamWriter;",
                "-import java.io.Reader;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.file.Files;",
                "-import java.nio.file.Paths;",
                "-import java.nio.file.StandardCopyOption;",
                "-import java.util.ArrayList;",
                "-import java.util.Arrays;",
                "-import java.util.Collections;",
                "-import java.util.HashMap;",
                "-import java.util.HashSet;",
                "-import java.util.List;",
                "-import java.util.Locale;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-import java.util.concurrent.Callable;",
                "-import java.util.concurrent.ExecutionException;",
                "-import java.util.concurrent.FutureTask;",
                "-import java.util.concurrent.TimeUnit;",
                "-import java.util.concurrent.TimeoutException;",
                "-",
                " import org.apache.commons.exec.CommandLine;",
                "@@ -58,2 +24,3 @@ import org.apache.commons.io.IOUtils;",
                " import org.apache.commons.lang.SystemUtils;",
                "+import org.apache.tika.config.Field;",
                " import org.apache.tika.config.Initializable;",
                "@@ -86,2 +53,35 @@ import org.xml.sax.helpers.DefaultHandler;",
                "+import javax.imageio.ImageIO;",
                "+import java.awt.Image;",
                "+import java.awt.image.BufferedImage;",
                "+import java.io.ByteArrayOutputStream;",
                "+import java.io.File;",
                "+import java.io.FileInputStream;",
                "+import java.io.FileOutputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.InputStreamReader;",
                "+import java.io.OutputStreamWriter;",
                "+import java.io.Reader;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.file.Files;",
                "+import java.nio.file.Paths;",
                "+import java.nio.file.StandardCopyOption;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                "+import java.util.HashSet;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.ExecutionException;",
                "+import java.util.concurrent.FutureTask;",
                "+import java.util.concurrent.TimeUnit;",
                "+import java.util.concurrent.TimeoutException;",
                "+",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "+",
                " /**",
                "@@ -108,3 +108,2 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "     private static final long serialVersionUID = -8167538283213097265L;",
                "-    private static final TesseractOCRConfig DEFAULT_CONFIG = new TesseractOCRConfig();",
                "     private static final Set<MediaType> SUPPORTED_TYPES = Collections.unmodifiableSet(",
                "@@ -115,2 +114,4 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "             })));",
                "+    private final TesseractOCRConfig defaultConfig = new TesseractOCRConfig();",
                "+",
                "     private static Map<String,Boolean> TESSERACT_PRESENT = new HashMap<>();",
                "@@ -122,3 +123,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "         // If Tesseract is installed, offer our supported image types",
                "-        TesseractOCRConfig config = context.get(TesseractOCRConfig.class, DEFAULT_CONFIG);",
                "+        TesseractOCRConfig config = context.get(TesseractOCRConfig.class, defaultConfig);",
                "         if (hasTesseract(config)) {",
                "@@ -260,3 +261,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "             throws IOException, SAXException, TikaException {",
                "-        TesseractOCRConfig config = parseContext.get(TesseractOCRConfig.class, DEFAULT_CONFIG);",
                "+        TesseractOCRConfig config = parseContext.get(TesseractOCRConfig.class, defaultConfig);",
                "         // If Tesseract is not on the path with the current config, do not try to run OCR",
                "@@ -473,3 +474,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "         if (! hasWarned()) {",
                "-            if (hasTesseract(DEFAULT_CONFIG)) {",
                "+            if (hasTesseract(defaultConfig)) {",
                "                 problemHandler.handleInitializableProblem(this.getClass().getName(),",
                "@@ -698,2 +699,86 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "     }",
                "+",
                "+    @Field",
                "+    public void setTesseractPath(String tesseractPath) {",
                "+        defaultConfig.setTesseractPath(tesseractPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setTessdataPath(String tessdataPath) {",
                "+        defaultConfig.setTessdataPath(tessdataPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setLanguage(String language) {",
                "+        defaultConfig.setLanguage(language);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setPageSegMode(String pageSegMode) {",
                "+        defaultConfig.setPageSegMode(pageSegMode);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setMinFileSizeToOcr(long minFileSizeToOcr) {",
                "+        defaultConfig.setMinFileSizeToOcr(minFileSizeToOcr);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setTimeout(int timeout) {",
                "+        defaultConfig.setTimeout(timeout);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setOutputType(String outputType) {",
                "+        defaultConfig.setOutputType(outputType);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setPreserveInterwordSpacing(boolean preserveInterwordSpacing) {",
                "+        defaultConfig.setPreserveInterwordSpacing(preserveInterwordSpacing);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setEnableImageProcessing(int enableImageProcessing) {",
                "+        defaultConfig.setEnableImageProcessing(enableImageProcessing);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setImageMagickPath(String imageMagickPath) {",
                "+        defaultConfig.setImageMagickPath(imageMagickPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setDensity(int density) {",
                "+        defaultConfig.setDensity(density);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setDepth(int depth) {",
                "+        defaultConfig.setDepth(depth);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setColorspace(String colorspace) {",
                "+        defaultConfig.setColorspace(colorspace);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setFilter(String filter) {",
                "+        defaultConfig.setFilter(filter);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setResize(int resize) {",
                "+        defaultConfig.setResize(resize);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setApplyRotation(boolean applyRotation) {",
                "+        defaultConfig.setApplyRotation(applyRotation);",
                "+    }",
                "+",
                "+    public TesseractOCRConfig getDefaultConfig() {",
                "+        return defaultConfig;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2705": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "519decf461a3b7004fbd4fa2d447763659f9d297"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2705",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f145110eb89fd170e29b5371a3fb5dd06b9125e5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538685640,
            "hunks": 2,
            "message": "TIKA-2745 -- update PDFBox, jempbox and jbig2",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 6030f4c17..26efa8e67 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -46,4 +46,4 @@",
                "     <vorbis.version>0.8</vorbis.version>",
                "-    <pdfbox.version>2.0.11</pdfbox.version>",
                "-    <jempbox.version>1.8.15</jempbox.version>",
                "+    <pdfbox.version>2.0.12</pdfbox.version>",
                "+    <jempbox.version>1.8.16</jempbox.version>",
                "     <netcdf-java.version>4.5.5</netcdf-java.version>",
                "@@ -785,3 +785,3 @@",
                "       <artifactId>jbig2-imageio</artifactId>",
                "-      <version>3.0.1</version>",
                "+      <version>3.0.2</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2745": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "336c35186586bdf6a917ad0e62f88abba4ad0e1b"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2745",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1f5669dcd6a00f2591122cb6f4cd55b806b1676f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534557685,
            "hunks": 2,
            "message": "TIKA-2710 - Change Tika OSGi Execution Environment to 1.8.",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 57d2ba467..7ad25e45d 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -146,3 +146,4 @@",
                "             <_runsystempackages>com.sun.xml.bind.marshaller, com.sun.xml.internal.bind.marshaller</_runsystempackages>",
                "-            <_noee>true</_noee>",
                "+\t\t\t<!--  The file below and the _include entry may be removed once Tika targets OpenJDK 9.0 or above -->",
                "+\t\t\t<_include>src/main/resources/META-INF/MANIFEST.MF</_include>",
                "             <Bundle-Activator>",
                "diff --git a/tika-bundle/src/main/resources/META-INF/MANIFEST.MF b/tika-bundle/src/main/resources/META-INF/MANIFEST.MF",
                "new file mode 100644",
                "index 000000000..631461784",
                "--- /dev/null",
                "+++ b/tika-bundle/src/main/resources/META-INF/MANIFEST.MF",
                "@@ -0,0 +1 @@",
                "+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.8))\""
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-bundle/src/main/resources/META-INF/MANIFEST.MF"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2710": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3c76b3ae0c700b29f8adff2b18bebc81272dfee4"
                ],
                [
                    "no-tag",
                    "711112cc78f0f270dbc66c619d9387ab260aee25"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2710",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fe4f41ba2e51f5044e372c4cee9cbd769470e92f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542136106,
            "hunks": 29,
            "message": "TIKA-2780 -- the shutdown method for tika-batch mode should not be typing anything on stdin of the parent process.  Rather, require an interrupt and/or kill signal and then make sure the children are stopped as well.",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "index 82a9c5277..2cd40ff3e 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "@@ -23,3 +23,2 @@ import java.io.IOException;",
                " import java.io.PrintStream;",
                "-import java.util.Date;",
                " import java.util.List;",
                "@@ -65,3 +64,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         TIMED_OUT_CONSUMER,",
                "-        USER_INTERRUPTION,",
                "+        PARENT_SHUTDOWN,",
                "         BATCH_PROCESS_ALIVE_TOO_LONG,",
                "@@ -165,2 +164,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "+        LOG.trace(\"finishing up\");",
                "         return result;",
                "@@ -196,2 +196,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     IFileProcessorFutureResult result = futureResult.get();",
                "+                    LOG.trace(\"result: \"+result);",
                "                     if (result instanceof FileConsumerFutureResult) {",
                "@@ -205,3 +206,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     } else if (result instanceof InterrupterFutureResult) {",
                "-                        causeForTermination = CAUSE_FOR_TERMINATION.USER_INTERRUPTION;",
                "+                        causeForTermination = CAUSE_FOR_TERMINATION.PARENT_SHUTDOWN;",
                "                         break;",
                "@@ -212,3 +213,2 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                 }",
                "-",
                "                 if (state.consumersRemoved >= state.numConsumers) {",
                "@@ -246,3 +246,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         //fileResourceCrawler.pleaseShutdown();",
                "-",
                "+        LOG.trace(\"about to shutdown\");",
                "         //Step 1: prevent uncalled threads from being started",
                "@@ -257,4 +257,5 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         fileResourceCrawler.shutDownNoPoison();",
                "-        //if there are any active/asked to shutdown consumers, await termination",
                "-        //this can happen if a user interrupts the process",
                "+        //if there are any active/asked-to-shutdown consumers, wait",
                "+        //a bit for those parsers to finish.",
                "+        //This can happen if the parent process dies",
                "         //of if the crawler stops early, or ...",
                "@@ -289,2 +290,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     FileStarted fileStarted = consumerResult.getFileStarted();",
                "+                    LOG.trace(\"file started \"+fileStarted);",
                "                     if (fileStarted != null",
                "@@ -307,3 +309,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         String restartMsg = null;",
                "-        if (state.causeForTermination == CAUSE_FOR_TERMINATION.USER_INTERRUPTION",
                "+        if (state.causeForTermination == CAUSE_FOR_TERMINATION.PARENT_SHUTDOWN",
                "                 || state.causeForTermination == CAUSE_FOR_TERMINATION.MAIN_LOOP_EXCEPTION_NO_RESTART) {",
                "@@ -327,3 +329,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "-",
                "+        LOG.trace(\"restart msg: \"+restartMsg);",
                "         int exitStatus = getExitStatus(state.causeForTermination, restartMsg);",
                "@@ -344,2 +346,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "+        LOG.trace(\"returning \"+state.causeForTermination);",
                "         return new",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "index aa8ebf84c..a1b19f6de 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "@@ -232,3 +232,3 @@ public class BatchProcessDriverCLI {",
                "             LOG.trace(\"destroying a non-null process\");",
                "-            process.destroy();",
                "+            process.destroyForcibly();",
                "         }",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java b/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "index c1e31baec..eea130890 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "@@ -1,3 +1 @@",
                "-package org.apache.tika.batch;",
                "-",
                " /*",
                "@@ -18,6 +16,6 @@ package org.apache.tika.batch;",
                "  */",
                "+package org.apache.tika.batch;",
                "-import java.io.BufferedReader;",
                "-import java.io.IOException;",
                "-import java.io.InputStreamReader;",
                "+",
                "+import java.io.InputStream;",
                " import java.util.concurrent.Callable;",
                "@@ -27,11 +25,14 @@ import org.slf4j.LoggerFactory;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "-",
                " /**",
                "- * Class that waits for input on System.in.  If the user enters a keystroke on ",
                "- * System.in, this will send a signal to the FileResourceRunner to shutdown gracefully.",
                "- *",
                "+ * Class that waits for input on System.in.  If this reads",
                "+ * EOF or if there is an exception from the parent's IO,",
                "+ * this will send a signal to shutdown the child process.",
                "  * <p>",
                "- * In the future, this may implement a common IInterrupter interface for more flexibility.",
                "+ *     This will call System.exit(-1) if the process",
                "+ *     doesn't stop after {@link #pauseOnEarlyTermination}",
                "+ *     milliseconds.",
                "+ * </p>",
                "+ *",
                "+ *",
                "  */",
                "@@ -40,20 +41,43 @@ public class Interrupter implements Callable<IFileProcessorFutureResult> {",
                "-\tpublic IFileProcessorFutureResult call(){",
                "+    private static final long EXTRA_GRACE_PERIOD_MILLIS = 1000;",
                "+    private final long pauseOnEarlyTermination;",
                "+",
                "+    public Interrupter(long pauseOnEarlyTermination) {",
                "+        this.pauseOnEarlyTermination = pauseOnEarlyTermination;",
                "+    }",
                "+",
                "+\tpublic IFileProcessorFutureResult call() {",
                " \t\ttry{",
                "-\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in, UTF_8));",
                "-\t\t\twhile (true){",
                "-\t\t\t\tif (reader.ready()){",
                "-\t\t\t\t\treader.readLine();",
                "-\t\t\t\t\tbreak;",
                "-\t\t\t\t} else {",
                "-\t\t\t\t\tThread.sleep(1000);",
                "-\t\t\t\t}",
                "+\t\t\tInputStream is = System.in;",
                "+\t\t\tint byt = is.read();",
                "+\t\t\twhile (byt > -1){",
                "+\t\t\t\tbyt = is.read();",
                " \t\t\t}",
                "-\t\t} catch (InterruptedException e){",
                "-\t\t    //canceller was interrupted",
                "-\t\t} catch (IOException e){",
                "-            LOG.error(\"IOException from STDIN in CommandlineInterrupter.\");",
                "+\t\t} catch (Throwable e) {",
                "+            LOG.warn(\"Exception from STDIN in CommandlineInterrupter.\", e);",
                " \t\t}",
                "+\t\tnew Thread(new Doomsday()).start();",
                " \t\treturn new InterrupterFutureResult();",
                " \t}",
                "+",
                "+    private class Doomsday implements Runnable {",
                "+        @Override",
                "+        public void run() {",
                "+            if (pauseOnEarlyTermination < 0) {",
                "+                return;",
                "+            }",
                "+            long start = System.currentTimeMillis();",
                "+            long elapsed = System.currentTimeMillis()-start;",
                "+            while (elapsed < (pauseOnEarlyTermination+EXTRA_GRACE_PERIOD_MILLIS)) {",
                "+                try {",
                "+                    Thread.sleep(500);",
                "+                } catch (InterruptedException e) {",
                "+                    return;",
                "+                }",
                "+                elapsed = System.currentTimeMillis()-start;",
                "+            }",
                "+            LOG.error(\"Interrupter timed out; now calling System.exit.\");",
                "+            System.exit(-1);",
                "+        }",
                "+    }",
                " }",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java b/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "index c4d370409..ec4950756 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "@@ -1,3 +1 @@",
                "-package org.apache.tika.batch;",
                "-",
                " /*",
                "@@ -18,2 +16,3 @@ package org.apache.tika.batch;",
                "  */",
                "+package org.apache.tika.batch;",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "index 0ebfd15c0..26b944ec3 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "@@ -135,3 +135,3 @@ public class BatchProcessBuilder {",
                "-        interrupter = buildInterrupter(keyNodes.get(\"interrupter\"), runtimeAttributes);",
                "+        interrupter = buildInterrupter(keyNodes.get(\"interrupter\"), pauseOnEarlyTerminationMillis, runtimeAttributes);",
                "@@ -155,3 +155,3 @@ public class BatchProcessBuilder {",
                "-    private Interrupter buildInterrupter(Node node, Map<String, String> runtimeAttributes) {",
                "+    private Interrupter buildInterrupter(Node node, long pauseOnEarlyTermination, Map<String, String> runtimeAttributes) {",
                "         Map<String, String> attrs = XMLDOMUtil.mapifyAttrs(node, runtimeAttributes);",
                "@@ -163,3 +163,3 @@ public class BatchProcessBuilder {",
                "-        return builder.build(node, runtimeAttributes);",
                "+        return builder.build(node, pauseOnEarlyTermination, runtimeAttributes);",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "index d7223cd45..d02b48cab 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "@@ -28,4 +28,4 @@ public class InterrupterBuilder {",
                "-    public Interrupter build(Node n, Map<String, String> commandlineArguments) {",
                "-        return new Interrupter();",
                "+    public Interrupter build(Node n, long pauseOnEarlyTermination, Map<String, String> commandlineArguments) {",
                "+        return new Interrupter(pauseOnEarlyTermination);",
                "     }"
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2780": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "dfe737c94bb71fe415fb6fa4fae505a73bd2e654"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2780",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e4d6d15f705232b0a422c01e217919e53b118fdf",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537375883,
            "hunks": 7,
            "message": "TIKA-2730 -- allow last frame to be truncated w/o throwing an EOF",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "index 3b79f313a..345f486fa 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "@@ -196,3 +196,4 @@ public class Mp3Parser extends AbstractParser {",
                "         float duration = 0;",
                "-        while (frame != null)",
                "+        boolean skipped = true;",
                "+        while (frame != null && skipped)",
                "         {",
                "@@ -203,4 +204,6 @@ public class Mp3Parser extends AbstractParser {",
                "             }",
                "-            mpegStream.skipFrame();",
                "-            frame = mpegStream.nextFrame();",
                "+            skipped = mpegStream.skipFrame();",
                "+            if (skipped) {",
                "+                frame = mpegStream.nextFrame();",
                "+            }",
                "         }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "index 1814c1204..4984fea99 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "@@ -152,6 +152,6 @@ class MpegStream extends PushbackInputStream",
                "      * the underlying stream is advanced to the end of the associated MPEG",
                "-     * frame. Otherwise, this method has no effect. The return value indicates",
                "-     * whether a frame could be skipped.",
                "+     * frame or until the EOF is reached. The return value indicates",
                "+     * whether the full frame could be skipped.",
                "      * ",
                "-     * @return <b>true</b> if a frame could be skipped, <b>false</b> otherwise",
                "+     * @return <b>true</b> if a frame could be skipped, <b>false</b> otherwise, perhaps EOF?",
                "      * @throws IOException if an IO error occurs",
                "@@ -164,7 +164,6 @@ class MpegStream extends PushbackInputStream",
                "             long skipped = IOUtils.skipFully(in, toSkip);",
                "+            currentHeader = null;",
                "             if (skipped < toSkip) {",
                "-                throw new EOFException(\"EOF: tried to skip \"+toSkip +",
                "-                        \" but could only skip \"+skipped);",
                "+                return false;",
                "             }",
                "-            currentHeader = null;",
                "             return true;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2730": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "80cfd6d4a4270f8f3697c6dc083b3dedfc36c86a"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2730",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a1f48b0a6f9cdf65ea01f7f3108e1590e96a086c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537894624,
            "hunks": 32,
            "message": "TIKA-2727",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 71e1f8443..ec5ad00d4 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -26,4 +26,2 @@ import org.xml.sax.InputSource;",
                " import org.xml.sax.SAXException;",
                "-import org.xml.sax.SAXNotRecognizedException;",
                "-import org.xml.sax.SAXNotSupportedException;",
                " import org.xml.sax.XMLReader;",
                "@@ -53,2 +51,3 @@ import java.util.concurrent.ArrayBlockingQueue;",
                " import java.util.concurrent.TimeUnit;",
                "+import java.util.concurrent.atomic.AtomicInteger;",
                " import java.util.concurrent.locks.ReentrantReadWriteLock;",
                "@@ -71,2 +70,3 @@ public class XMLReaderUtils implements Serializable {",
                "+    private static final String XERCES_SECURITY_MANAGER = \"org.apache.xerces.util.SecurityManager\";",
                "     /**",
                "@@ -106,5 +106,5 @@ public class XMLReaderUtils implements Serializable {",
                "-    private static ArrayBlockingQueue<SAXParser> SAX_PARSERS = new ArrayBlockingQueue<>(POOL_SIZE);",
                "-    private static ArrayBlockingQueue<DocumentBuilder> DOM_BUILDERS = new ArrayBlockingQueue<>(POOL_SIZE);",
                "-",
                "+    private static ArrayBlockingQueue<PoolSAXParser> SAX_PARSERS = new ArrayBlockingQueue<>(POOL_SIZE);",
                "+    private static ArrayBlockingQueue<PoolDOMBuilder> DOM_BUILDERS = new ArrayBlockingQueue<>(POOL_SIZE);",
                "+    private static final AtomicInteger POOL_GENERATION = new AtomicInteger();",
                "     static {",
                "@@ -179,3 +179,6 @@ public class XMLReaderUtils implements Serializable {",
                "      * </p>",
                "-     *",
                "+     * <p>",
                "+     * If you call reset() on the parser, make sure to replace the",
                "+     * SecurityManager which will be cleared by xerces2 on reset().",
                "+     * </p>",
                "      * @return SAX parser",
                "@@ -215,14 +218,7 @@ public class XMLReaderUtils implements Serializable {",
                "         factory.setValidating(false);",
                "-        try {",
                "-            factory.setFeature(",
                "-                    XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "-        } catch (ParserConfigurationException e) {",
                "-        } catch (SAXNotSupportedException e) {",
                "-        } catch (SAXNotRecognizedException e) {",
                "-            // TIKA-271: Some XML parsers do not support the",
                "-            // secure-processing feature, even though it's required by",
                "-            // JAXP in Java 5. Ignoring the exception is fine here, as",
                "-            // deployments without this feature are inherently vulnerable",
                "-            // to XML denial-of-service attacks.",
                "-        }",
                "+        trySetSAXFeature(factory, XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "+        trySetSAXFeature(factory, \"http://xml.org/sax/features/external-general-entities\", false);",
                "+        trySetSAXFeature(factory, \"http://xml.org/sax/features/external-parameter-entities\", false);",
                "+        trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
                "+        trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-dtd-grammar\", false);",
                "@@ -300,2 +296,14 @@ public class XMLReaderUtils implements Serializable {",
                "+    private static void trySetSAXFeature(SAXParserFactory saxParserFactory, String feature, boolean enabled) {",
                "+        try {",
                "+            saxParserFactory.setFeature(feature, enabled);",
                "+        } catch (SecurityException e) {",
                "+            throw e;",
                "+        } catch (Exception e) {",
                "+            LOG.log(Level.WARNING, \"SAX Feature unsupported: \" + feature, e);",
                "+        } catch (AbstractMethodError ame) {",
                "+            LOG.log(Level.WARNING, \"Cannot set SAX feature because outdated XML parser in classpath: \" + feature, ame);",
                "+        }",
                "+    }",
                "+",
                "     private static void trySetSAXFeature(DocumentBuilderFactory documentBuilderFactory, String feature, boolean enabled) {",
                "@@ -351,4 +359,8 @@ public class XMLReaderUtils implements Serializable {",
                "     public static Document buildDOM(InputStream is, ParseContext context) throws TikaException, IOException, SAXException {",
                "-        DocumentBuilder builderFromContext = context.get(DocumentBuilder.class);",
                "-        DocumentBuilder builder = (builderFromContext == null) ? acquireDOMBuilder() : builderFromContext;",
                "+        DocumentBuilder builder = context.get(DocumentBuilder.class);",
                "+        PoolDOMBuilder poolBuilder = null;",
                "+        if (builder == null) {",
                "+            poolBuilder = acquireDOMBuilder();",
                "+            builder = poolBuilder.getDocumentBuilder();",
                "+        }",
                "@@ -357,4 +369,4 @@ public class XMLReaderUtils implements Serializable {",
                "         } finally {",
                "-            if (builderFromContext == null) {",
                "-                releaseDOMBuilder(builder);",
                "+            if (poolBuilder != null) {",
                "+                releaseDOMBuilder(poolBuilder);",
                "             }",
                "@@ -390,5 +402,5 @@ public class XMLReaderUtils implements Serializable {",
                "     public static Document buildDOM(String uriString) throws TikaException, IOException, SAXException {",
                "-        DocumentBuilder builder = acquireDOMBuilder();",
                "+        PoolDOMBuilder builder = acquireDOMBuilder();",
                "         try {",
                "-            return builder.parse(uriString);",
                "+            return builder.getDocumentBuilder().parse(uriString);",
                "         } finally {",
                "@@ -409,5 +421,5 @@ public class XMLReaderUtils implements Serializable {",
                "     public static Document buildDOM(InputStream is) throws TikaException, IOException, SAXException {",
                "-        DocumentBuilder builder = acquireDOMBuilder();",
                "+        PoolDOMBuilder builder = acquireDOMBuilder();",
                "         try {",
                "-            return builder.parse(is);",
                "+            return builder.getDocumentBuilder().parse(is);",
                "         } finally {",
                "@@ -432,9 +444,13 @@ public class XMLReaderUtils implements Serializable {",
                "             throws TikaException, IOException, SAXException {",
                "-        SAXParser contextParser = context.get(SAXParser.class);",
                "-        SAXParser parser = (contextParser == null) ? acquireSAXParser() : contextParser;",
                "+        SAXParser saxParser = context.get(SAXParser.class);",
                "+        PoolSAXParser poolSAXParser = null;",
                "+        if (saxParser == null) {",
                "+            poolSAXParser = acquireSAXParser();",
                "+            saxParser = poolSAXParser.getSAXParser();",
                "+        }",
                "         try {",
                "-            parser.parse(is, contentHandler);",
                "+            saxParser.parse(is, contentHandler);",
                "         } finally {",
                "-            if (contextParser == null) {",
                "-                releaseParser(parser);",
                "+            if (poolSAXParser != null) {",
                "+                releaseParser(poolSAXParser);",
                "             }",
                "@@ -445,9 +461,9 @@ public class XMLReaderUtils implements Serializable {",
                "      * Acquire a SAXParser from the pool.  Make sure to",
                "-     * {@link #releaseParser(SAXParser)} in",
                "+     * {@link #releaseDOMBuilder(PoolDOMBuilder)} in",
                "      * a <code>finally</code> block every time you call this.",
                "      *",
                "-     * @return a SAXParser",
                "+     * @return a DocumentBuilder",
                "      * @throws TikaException",
                "      */",
                "-    private static DocumentBuilder acquireDOMBuilder()",
                "+    private static PoolDOMBuilder acquireDOMBuilder()",
                "             throws TikaException {",
                "@@ -455,3 +471,3 @@ public class XMLReaderUtils implements Serializable {",
                "         while (true) {",
                "-            DocumentBuilder builder = null;",
                "+            PoolDOMBuilder builder = null;",
                "             try {",
                "@@ -485,3 +501,6 @@ public class XMLReaderUtils implements Serializable {",
                "      */",
                "-    private static void releaseDOMBuilder(DocumentBuilder builder) {",
                "+    private static void releaseDOMBuilder(PoolDOMBuilder builder) {",
                "+        if (builder.getPoolGeneration() != POOL_GENERATION.get()) {",
                "+            return;",
                "+        }",
                "         try {",
                "@@ -508,3 +527,3 @@ public class XMLReaderUtils implements Serializable {",
                "      * Acquire a SAXParser from the pool.  Make sure to",
                "-     * {@link #releaseParser(SAXParser)} in",
                "+     * {@link #releaseParser(PoolSAXParser)} in",
                "      * a <code>finally</code> block every time you call this.",
                "@@ -514,3 +533,3 @@ public class XMLReaderUtils implements Serializable {",
                "      */",
                "-    private static SAXParser acquireSAXParser()",
                "+    private static PoolSAXParser acquireSAXParser()",
                "             throws TikaException {",
                "@@ -518,3 +537,3 @@ public class XMLReaderUtils implements Serializable {",
                "         while (true) {",
                "-            SAXParser parser = null;",
                "+            PoolSAXParser parser = null;",
                "             try {",
                "@@ -548,8 +567,9 @@ public class XMLReaderUtils implements Serializable {",
                "      */",
                "-    private static void releaseParser(SAXParser parser) {",
                "-        try {",
                "-            parser.reset();",
                "-        } catch (UnsupportedOperationException e) {",
                "-            //ignore",
                "+    private static void releaseParser(PoolSAXParser parser) {",
                "+        //if this is a different generation, don't put it back",
                "+        //in the pool",
                "+        if (parser.getGeneration() != POOL_GENERATION.get()) {",
                "+            return;",
                "         }",
                "+        parser.reset();",
                "         try {",
                "@@ -587,4 +607,9 @@ public class XMLReaderUtils implements Serializable {",
                "             SAX_PARSERS = new ArrayBlockingQueue<>(poolSize);",
                "+            int generation = POOL_GENERATION.incrementAndGet();",
                "             for (int i = 0; i < poolSize; i++) {",
                "-                SAX_PARSERS.offer(getSAXParser());",
                "+                try {",
                "+                    SAX_PARSERS.offer(buildPoolParser(generation, getSAXParserFactory().newSAXParser()));",
                "+                } catch (SAXException|ParserConfigurationException e) {",
                "+                    throw new TikaException(\"problem creating sax parser\", e);",
                "+                }",
                "             }",
                "@@ -599,3 +624,4 @@ public class XMLReaderUtils implements Serializable {",
                "             for (int i = 0; i < poolSize; i++) {",
                "-                DOM_BUILDERS.offer(getDocumentBuilder());",
                "+                DOM_BUILDERS.offer(",
                "+                        new PoolDOMBuilder(POOL_GENERATION.get(), getDocumentBuilder()));",
                "             }",
                "@@ -659,4 +685,7 @@ public class XMLReaderUtils implements Serializable {",
                "             } catch (ClassNotFoundException e) {",
                "+                e.printStackTrace();",
                "                 // continue without log, this is expected in some setups",
                "-            } catch (Throwable e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+            } catch (Throwable e) {",
                "+                e.printStackTrace();",
                "+                // NOSONAR - also catch things like NoClassDefError here",
                "                 // throttle the log somewhat as it can spam the log otherwise",
                "@@ -700,2 +729,160 @@ public class XMLReaderUtils implements Serializable {",
                "     }",
                "+",
                "+    private static class PoolDOMBuilder {",
                "+        private final int poolGeneration;",
                "+        private final DocumentBuilder documentBuilder;",
                "+",
                "+        PoolDOMBuilder(int poolGeneration, DocumentBuilder documentBuilder) {",
                "+            this.poolGeneration = poolGeneration;",
                "+            this.documentBuilder = documentBuilder;",
                "+        }",
                "+",
                "+        public int getPoolGeneration() {",
                "+            return poolGeneration;",
                "+        }",
                "+",
                "+        public DocumentBuilder getDocumentBuilder() {",
                "+            return documentBuilder;",
                "+        }",
                "+",
                "+        public void reset() {",
                "+            documentBuilder.reset();",
                "+            documentBuilder.setEntityResolver(IGNORING_SAX_ENTITY_RESOLVER);",
                "+            documentBuilder.setErrorHandler(null);",
                "+        }",
                "+    }",
                "+    private abstract static class PoolSAXParser {",
                "+        final int poolGeneration;",
                "+        final SAXParser saxParser;",
                "+",
                "+        PoolSAXParser(int poolGeneration, SAXParser saxParser) {",
                "+            this.poolGeneration = poolGeneration;",
                "+            this.saxParser = saxParser;",
                "+        }",
                "+",
                "+        abstract void reset();",
                "+",
                "+        public int getGeneration() {",
                "+            return poolGeneration;",
                "+        }",
                "+",
                "+        public SAXParser getSAXParser() {",
                "+            return saxParser;",
                "+        }",
                "+    }",
                "+",
                "+",
                "+    private static PoolSAXParser buildPoolParser(int generation, SAXParser parser) {",
                "+        boolean canReset = false;",
                "+        try {",
                "+            parser.reset();",
                "+            canReset = true;",
                "+        } catch (UnsupportedOperationException e) {",
                "+            canReset = false;",
                "+        }",
                "+        boolean hasSecurityManager = false;",
                "+        try {",
                "+            Object mgr = Class.forName(XERCES_SECURITY_MANAGER).newInstance();",
                "+            Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+            setLimit.invoke(mgr, MAX_ENTITY_EXPANSIONS);",
                "+",
                "+            parser.setProperty(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+            hasSecurityManager = true;",
                "+        } catch (SecurityException e) {",
                "+            //don't swallow security exceptions",
                "+            throw e;",
                "+        } catch (ClassNotFoundException e) {",
                "+            // continue without log, this is expected in some setups",
                "+        } catch (Throwable e) {",
                "+            // NOSONAR - also catch things like NoClassDefError here",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if (System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+",
                "+        boolean canSetJaxPEntity = false;",
                "+        if (!hasSecurityManager) {",
                "+            // use the builtin way of setting the property",
                "+            try {",
                "+                parser.setProperty(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", MAX_ENTITY_EXPANSIONS);",
                "+                canSetJaxPEntity = true;",
                "+            } catch (SAXException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+                // throttle the log somewhat as it can spam the log otherwise",
                "+                if (System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                    LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                    LAST_LOG = System.currentTimeMillis();",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        if (!canReset && hasSecurityManager) {",
                "+            return new XercesPoolSAXParser(generation, parser);",
                "+        } else if (canReset && hasSecurityManager) {",
                "+            return new Xerces2PoolSAXParser(generation, parser);",
                "+        } else if (canReset && !hasSecurityManager && canSetJaxPEntity) {",
                "+            return new BuiltInPoolSAXParser(generation, parser);",
                "+        } else {",
                "+            return new UnrecognizedPoolSAXParser(generation, parser);",
                "+        }",
                "+",
                "+    }",
                "+",
                "+",
                "+    private static class XercesPoolSAXParser extends PoolSAXParser {",
                "+        public XercesPoolSAXParser(int generation, SAXParser parser) {",
                "+            super(generation, parser);",
                "+        }",
                "+",
                "+        @Override",
                "+        public void reset() {",
                "+            //don't do anything",
                "+        }",
                "+    }",
                "+",
                "+    private static class Xerces2PoolSAXParser extends PoolSAXParser {",
                "+        public Xerces2PoolSAXParser(int generation, SAXParser parser) {",
                "+            super(generation, parser);",
                "+        }",
                "+",
                "+        @Override",
                "+        void reset() {",
                "+            try {",
                "+                Object object = saxParser.getProperty(XERCES_SECURITY_MANAGER);",
                "+                saxParser.reset();",
                "+                saxParser.setProperty(XERCES_SECURITY_MANAGER, object);",
                "+            } catch (SAXException e) {",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static class BuiltInPoolSAXParser extends PoolSAXParser {",
                "+        public BuiltInPoolSAXParser(int generation, SAXParser parser) {",
                "+            super(generation, parser);",
                "+        }",
                "+",
                "+        @Override",
                "+        void reset() {",
                "+            saxParser.reset();",
                "+        }",
                "+    }",
                "+",
                "+    private static class UnrecognizedPoolSAXParser extends PoolSAXParser {",
                "+        //if unrecognized, try to set all protections",
                "+        //and try to reset every time",
                "+        public UnrecognizedPoolSAXParser(int generation, SAXParser parser) {",
                "+            super(generation, parser);",
                "+        }",
                "+",
                "+        @Override",
                "+        void reset() {",
                "+            try {",
                "+                saxParser.reset();",
                "+            } catch (UnsupportedOperationException e) {",
                "+",
                "+            }",
                "+            trySetXercesSecurityManager(saxParser);",
                "+        }",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2727": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "86d4ba1e1806c8c386e913f6848b938f657df2c6"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2727",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "66f92b8a72e8ae161d782e4e4f6de7b61458c95d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536939100,
            "hunks": 2,
            "message": "TIKA-2692 -- upgrade a few other dependencies",
            "diff": [
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 84dfff9c6..05b92141d 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -311,3 +311,3 @@",
                "     <gson.version>2.8.5</gson.version>",
                "-    <cxf.version>3.2.5</cxf.version>",
                "+    <cxf.version>3.2.6</cxf.version>",
                "     <slf4j.version>1.7.25</slf4j.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 93b507c2a..57b0927ad 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -190,3 +190,3 @@",
                "       <artifactId>zstd-jni</artifactId>",
                "-      <version>1.3.3-3</version>",
                "+      <version>1.3.5-3</version>",
                "       <scope>provided</scope>"
            ],
            "changed_files": [
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4aef7775c4c1cbed63f10f646e0df4c553980cca"
                ],
                [
                    "no-tag",
                    "778b8ba969e09df21d89d2ac999ffcb1bcc2cd89"
                ]
            ],
            "tags": [],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5cb8d9a9e091ee61c8dc0f334d23c7677f5f519b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533306885,
            "hunks": 11,
            "message": "TIKA-2703 -- related...simplify XSSFB to use more of XSSF rather copy/paste",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index 33dbb7e04..30013182e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -20,4 +20,2 @@ import java.io.IOException;",
                " import java.io.InputStream;",
                "-import java.util.ArrayList;",
                "-import java.util.HashMap;",
                " import java.util.List;",
                "@@ -30,7 +28,2 @@ import org.apache.poi.openxml4j.opc.OPCPackage;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "-import org.apache.poi.openxml4j.opc.PackagePartName;",
                "-import org.apache.poi.openxml4j.opc.PackageRelationship;",
                "-import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;",
                "-import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                "-import org.apache.poi.openxml4j.opc.TargetMode;",
                " import org.apache.poi.xssf.binary.XSSFBCommentsTable;",
                "@@ -42,6 +35,3 @@ import org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler.SheetContentsHandl",
                " import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;",
                "-import org.apache.poi.xssf.usermodel.XSSFDrawing;",
                "-import org.apache.poi.xssf.usermodel.XSSFRelation;",
                " import org.apache.poi.xssf.usermodel.XSSFShape;",
                "-import org.apache.poi.xssf.usermodel.XSSFSimpleShape;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -52,6 +42,2 @@ import org.apache.tika.sax.XHTMLContentHandler;",
                " import org.apache.xmlbeans.XmlException;",
                "-import org.openxmlformats.schemas.drawingml.x2006.main.CTHyperlink;",
                "-import org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps;",
                "-import org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape;",
                "-import org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual;",
                " import org.xml.sax.ContentHandler;",
                "@@ -167,90 +153,2 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "-    private void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "-        try {",
                "-            for (PackageRelationship rel : sheetPart.getRelationshipsByType(XSSFRelation.SHEET_HYPERLINKS.getRelation())) {",
                "-                xhtml.startElement(\"a\", \"href\", rel.getTargetURI().toString());",
                "-                xhtml.characters(rel.getTargetURI().toString());",
                "-                xhtml.endElement(\"a\");",
                "-            }",
                "-        } catch (InvalidFormatException e) {",
                "-            //swallow",
                "-        }",
                "-    }",
                "-",
                "-    private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "-        if (shapes == null) {",
                "-            return;",
                "-        }",
                "-        for (XSSFShape shape : shapes) {",
                "-            if (shape instanceof XSSFSimpleShape) {",
                "-                String sText = ((XSSFSimpleShape) shape).getText();",
                "-                if (sText != null && sText.length() > 0) {",
                "-                    xhtml.element(\"p\", sText);",
                "-                }",
                "-                extractHyperLinksFromShape(((XSSFSimpleShape)shape).getCTShape(), xhtml);",
                "-            }",
                "-            XSSFDrawing drawing = shape.getDrawing();",
                "-            if (drawing != null) {",
                "-                //dump diagram data",
                "-                handleGeneralTextContainingPart(",
                "-                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "-                        \"diagram-data\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-                //dump chart data",
                "-                handleGeneralTextContainingPart(",
                "-                        XSSFRelation.CHART.getRelation(),",
                "-                        \"chart\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private void extractHyperLinksFromShape(CTShape ctShape, XHTMLContentHandler xhtml) throws SAXException {",
                "-",
                "-        if (ctShape == null)",
                "-            return;",
                "-",
                "-        CTShapeNonVisual nvSpPR = ctShape.getNvSpPr();",
                "-        if (nvSpPR == null)",
                "-            return;",
                "-",
                "-        CTNonVisualDrawingProps cNvPr = nvSpPR.getCNvPr();",
                "-        if (cNvPr == null)",
                "-            return;",
                "-",
                "-        CTHyperlink ctHyperlink = cNvPr.getHlinkClick();",
                "-        if (ctHyperlink == null)",
                "-            return;",
                "-",
                "-        String url = drawingHyperlinks.get(ctHyperlink.getId());",
                "-        if (url != null) {",
                "-            xhtml.startElement(\"a\", \"href\", url);",
                "-            xhtml.characters(url);",
                "-            xhtml.endElement(\"a\");",
                "-        }",
                "-",
                "-        CTHyperlink ctHoverHyperlink = cNvPr.getHlinkHover();",
                "-        if (ctHoverHyperlink == null)",
                "-            return;",
                "-",
                "-        url = drawingHyperlinks.get(ctHoverHyperlink.getId());",
                "-        if (url != null) {",
                "-            xhtml.startElement(\"a\", \"href\", url);",
                "-            xhtml.characters(url);",
                "-            xhtml.endElement(\"a\");",
                "-        }",
                "-",
                "-    }",
                "@@ -275,42 +173,2 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "     }",
                "-",
                "-    /**",
                "-     * In Excel files, sheets have things embedded in them,",
                "-     * and sheet drawings which have the images",
                "-     */",
                "-    @Override",
                "-    protected List<PackagePart> getMainDocumentParts() throws TikaException {",
                "-        List<PackagePart> parts = new ArrayList<PackagePart>();",
                "-        for (PackagePart part : sheetParts) {",
                "-            // Add the sheet",
                "-            parts.add(part);",
                "-",
                "-            // If it has drawings, return those too",
                "-            try {",
                "-                for (PackageRelationship rel : part.getRelationshipsByType(XSSFRelation.DRAWINGS.getRelation())) {",
                "-                    if (rel.getTargetMode() == TargetMode.INTERNAL) {",
                "-                        PackagePartName relName = PackagingURIHelper.createPartName(rel.getTargetURI());",
                "-                        parts.add(rel.getPackage().getPart(relName));",
                "-                    }",
                "-                }",
                "-                for (PackageRelationship rel : part.getRelationshipsByType(XSSFRelation.VML_DRAWINGS.getRelation())) {",
                "-                    if (rel.getTargetMode() == TargetMode.INTERNAL) {",
                "-                        PackagePartName relName = PackagingURIHelper.createPartName(rel.getTargetURI());",
                "-                        parts.add(rel.getPackage().getPart(relName));",
                "-                    }",
                "-                }",
                "-            } catch (InvalidFormatException e) {",
                "-                throw new TikaException(\"Broken OOXML file\", e);",
                "-            }",
                "-        }",
                "-",
                "-        //add main document so that macros can be extracted",
                "-        //by AbstractOOXMLExtractor",
                "-        for (PackagePart part : extractor.getPackage().",
                "-                getPartsByRelationshipType(PackageRelationshipTypes.CORE_DOCUMENT)) {",
                "-            parts.add(part);",
                "-        }",
                "-",
                "-        return parts;",
                "-    }",
                " }",
                "\\ No newline at end of file",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index b92ecc2d2..256fd0ff4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -72,6 +72,4 @@ import org.xml.sax.Attributes;",
                " import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.InputSource;",
                " import org.xml.sax.Locator;",
                " import org.xml.sax.SAXException;",
                "-import org.xml.sax.XMLReader;",
                " import org.xml.sax.helpers.DefaultHandler;",
                "@@ -232,3 +230,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "-    private void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "+    protected void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "         try {",
                "@@ -253,3 +251,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "-    private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "+    protected void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "         if (shapes == null) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2703": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2745cfde46123fc03ad0e7cd59c50aa6aef1f8df"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2703",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a34b5866a97a95367ffd9fdc7210743bc17c754",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540227285,
            "hunks": 1,
            "message": "TIKA-2759 -- don't extract data uri if inside a <script/> element when not extracting <script/> content.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java",
                "index 413a17ea1..77d8d8a6e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java",
                "@@ -181,3 +181,7 @@ class HtmlHandler extends TextContentHandler {",
                "         if (value != null && value.startsWith(\"data:\")) {",
                "-            handleDataURIScheme(value);",
                "+            //don't extract data if we're in a script",
                "+            //and the user doesn't want to extract scripts",
                "+            if ( scriptLevel == 0 || extractScripts) {",
                "+                handleDataURIScheme(value);",
                "+            }",
                "         }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2759": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "17cc77486d1c3f3e3379966b947687c57656a061"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ed0d3d13b349004d1e86d4c2fafe96612e4e0496",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534432668,
            "hunks": 1,
            "message": "TIKA-2707 -- upgrade to commons-compress 1.18",
            "diff": [
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index baa7ec1ef..3dc7dfe4b 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -308,3 +308,3 @@",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parsers -->",
                "-    <commons.compress.version>1.17</commons.compress.version>",
                "+    <commons.compress.version>1.18</commons.compress.version>",
                "     <commons.io.version>2.6</commons.io.version>"
            ],
            "changed_files": [
                "tika-parent/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2707": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "511047903540d1478e11033200a3c889bed20045"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2707",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "324cbd2eb4d64f1e34aba9789ee8b06cbf4d991e",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540849562,
            "hunks": 0,
            "message": "Merge pull request #253 from dameikle/TIKA-2599 TIKA-2599: Fixed closing of styles around Hyperlinks (by Ronan O'Sullivan)",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2599": ""
            },
            "ghissue_refs": {
                "253": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2599",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 253",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ea0eb9094f5ac6b900cb62a17ac25f14b0a8f590",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538489004,
            "hunks": 1,
            "message": "TIKA-2742 -- upgrade jmatio to 1.5 to avoid bringing in slf4j-log4j12",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 16ae68e0a..a2b471570 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -155,3 +155,3 @@",
                "       <artifactId>jmatio</artifactId>",
                "-      <version>1.4</version>",
                "+      <version>1.5</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2742": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e024eab4d6df47dc1a27b8b700986b9b36925923"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2742",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eb53077d62ed31795e676b5bcdce01b8ad809c99",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540849310,
            "hunks": 2,
            "message": "TIKA-2599: Fixed closing of styles around Hyperlinks. Contributed by Ronan O'Sullivan.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "index 30bd4bb96..6f7d3785b 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "@@ -530,4 +530,4 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "-                xhtml.startElement(\"a\", \"href\", url);",
                "                 closeStyleElements(skipStyling, xhtml);",
                "+                xhtml.startElement(\"a\", \"href\", url);",
                "                 for (CharacterRun cr : texts) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2599": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "10a48b7a0077fbe627d3a0111f92910228d05d77"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2599",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "141ff9ca57cc5ec3a9ca3dcaac1832490ddc850b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541809374,
            "hunks": 27,
            "message": "TIKA-2775 - bulk upgrade dependencies",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 4fb10190f..b17b9538f 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -43,3 +43,5 @@",
                "   <properties>",
                "-    <pax.exam.version>4.12.0</pax.exam.version>",
                "+    <!-- some conflict with slf4j with 4.12.0",
                "+        causes failure in testForkParser -->",
                "+    <pax.exam.version>4.11.0</pax.exam.version>",
                "   </properties>",
                "@@ -125,3 +127,3 @@",
                "       <artifactId>org.osgi.core</artifactId>",
                "-      <version>6.0.0</version>",
                "+      <version>${osgi.core.version}</version>",
                "       <scope>test</scope>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index f55de96da..6e22eb362 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -41,3 +41,3 @@",
                "       <artifactId>org.osgi.core</artifactId>",
                "-      <version>4.0.0</version>",
                "+      <version>${osgi.core.version}</version>",
                "       <scope>provided</scope>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 96b27bb07..a7c350fba 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -38,3 +38,3 @@",
                "     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    <dl4j.version>1.0.0-beta2</dl4j.version>",
                "+    <dl4j.version>1.0.0-beta3</dl4j.version>",
                "   </properties>",
                "@@ -97,3 +97,3 @@",
                "       <artifactId>commons-math3</artifactId>",
                "-      <version>3.4.1</version>",
                "+      <version>3.6.1</version>",
                "     </dependency>",
                "@@ -167,2 +167,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>net.java.dev.jna</groupId>",
                "+          <artifactId>jna</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -242,3 +246,3 @@",
                "       <artifactId>objenesis</artifactId>",
                "-      <version>2.6</version>",
                "+      <version>3.0.1</version>",
                "     </dependency>",
                "@@ -301,3 +305,3 @@",
                "       <artifactId>lombok</artifactId>",
                "-      <version>1.16.22</version>",
                "+      <version>1.18.4</version>",
                "     </dependency>",
                "@@ -311,3 +315,3 @@",
                "       <artifactId>joda-time</artifactId>",
                "-      <version>2.9.2</version>",
                "+      <version>2.10.1</version>",
                "     </dependency>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 58d0308a0..f1f4026b2 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -261,3 +261,3 @@",
                "         <artifactId>bndlib</artifactId>",
                "-        <version>1.43.0</version>",
                "+        <version>1.50.0</version>",
                "       </dependency>",
                "@@ -266,3 +266,3 @@",
                "         <artifactId>org.apache.felix.scr.annotations</artifactId>",
                "-        <version>1.6.0</version>",
                "+        <version>1.12.0</version>",
                "       </dependency>",
                "@@ -324,7 +324,8 @@",
                "     <gson.version>2.8.5</gson.version>",
                "-    <cxf.version>3.2.6</cxf.version>",
                "+    <osgi.core.version>6.0.0</osgi.core.version>",
                "+    <cxf.version>3.2.7</cxf.version>",
                "     <slf4j.version>1.7.25</slf4j.version>",
                "-    <jackson.version>2.9.6</jackson.version>",
                "+    <jackson.version>2.9.7</jackson.version>",
                "     <jaxb.version>2.3.0.1</jaxb.version>",
                "-    <mockito.version>2.20.0</mockito.version>",
                "+    <mockito.version>2.23.0</mockito.version>",
                "   </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index da5072163..895186fe2 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -50,3 +50,3 @@",
                "     <sis.version>0.8</sis.version>",
                "-    <parso.version>2.0.9</parso.version>",
                "+    <parso.version>2.0.10</parso.version>",
                "     <!-- used by POI, PDFBox and Jackcess ...try to sync -->",
                "@@ -62,3 +62,3 @@",
                "       <artifactId>org.osgi.core</artifactId>",
                "-      <version>4.0.0</version>",
                "+      <version>${osgi.core.version}</version>",
                "       <scope>provided</scope>",
                "@@ -191,3 +191,3 @@",
                "       <artifactId>zstd-jni</artifactId>",
                "-      <version>1.3.5-3</version>",
                "+      <version>1.3.7-1</version>",
                "       <scope>provided</scope>",
                "@@ -283,3 +283,3 @@",
                "       <artifactId>asm</artifactId>",
                "-      <version>6.2</version>",
                "+      <version>7.0</version>",
                "     </dependency>",
                "@@ -303,3 +303,3 @@",
                "       <artifactId>rome</artifactId>",
                "-      <version>1.5.1</version>",
                "+      <version>1.11.1</version>",
                "       <exclusions>",
                "@@ -499,3 +499,3 @@",
                "       <artifactId>jna</artifactId>",
                "-      <version>4.3.0</version>",
                "+      <version>5.0.0</version>",
                "     </dependency>",
                "@@ -581,3 +581,3 @@",
                "       <artifactId>commons-csv</artifactId>",
                "-      <version>1.5</version>",
                "+      <version>1.6</version>",
                "     </dependency>",
                "@@ -716,3 +716,3 @@",
                "       <artifactId>uimafit-core</artifactId>",
                "-      <version>2.2.0</version>",
                "+      <version>2.4.0</version>",
                "       <exclusions>",
                "@@ -753,3 +753,3 @@",
                "       <artifactId>uimaj-core</artifactId>",
                "-      <version>2.9.0</version>",
                "+      <version>3.0.0</version>",
                "     </dependency>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java b/tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java",
                "index a884d3a10..1d003dae2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java",
                "@@ -18,2 +18,3 @@ package org.apache.tika.parser.internal;",
                "+import java.util.Hashtable;",
                " import java.util.Properties;",
                "@@ -39,3 +40,3 @@ public class Activator implements BundleActivator {",
                "                 new DefaultDetector(Activator.class.getClassLoader()),",
                "-                new Properties());",
                "+                new Hashtable<>());",
                "         Parser parser = new DefaultParser(Activator.class.getClassLoader());",
                "@@ -44,3 +45,3 @@ public class Activator implements BundleActivator {",
                "                 parser,",
                "-                new Properties());",
                "+                new Hashtable<>());",
                "     }",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index b99e2383b..bc2ff9381 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -41,3 +41,3 @@",
                "       <artifactId>org.osgi.core</artifactId>",
                "-      <version>4.0.0</version>",
                "+      <version>${osgi.core.version}</version>",
                "       <scope>provided</scope>"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java",
                "tika-serialization/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2775": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2ead2bbf26d2c59817a6ef0d49f1acb03b73793a"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2775",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d6dd1b2a169500fc0452d2f7ec2a54ba3d31381a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539359074,
            "hunks": 12,
            "message": "TIKA-2753 -- use -javaHome or $JAVA_HOME when starting child process w -spawnChild mode in tika-server",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java b/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "index 83beda2dc..dba18930d 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "@@ -35,3 +35,4 @@ public class ProcessUtils {",
                "         //across platforms.",
                "-        if (arg.contains(\" \") && SystemUtils.IS_OS_WINDOWS) {",
                "+        if (arg.contains(\" \") && SystemUtils.IS_OS_WINDOWS &&",
                "+                (!arg.startsWith(\"\\\"\") && !arg.endsWith(\"\\\"\"))) {",
                "             arg = \"\\\"\" + arg + \"\\\"\";",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index ef95a32ea..d63a515a7 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -86,3 +86,3 @@ public class TikaServerCli {",
                "             Arrays.asList(new String[] { \"taskTimeoutMillis\", \"taskPulseMillis\",",
                "-            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\"});",
                "+            \"pingTimeoutMillis\", \"pingPulseMillis\", \"maxFiles\", \"javaHome\"});",
                "@@ -108,2 +108,3 @@ public class TikaServerCli {",
                "         options.addOption(\"maxFiles\", true, \"Only in spawn child mode: shutdown server after this many files -- use only in 'spawnChild' mode\");",
                "+        options.addOption(\"javaHome\", true, \"Override system property JAVA_HOME for calling java for the child process\");",
                "         options.addOption(\"child\", false, \"this process is a child process -- EXPERT -- \" +",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index abd5663aa..2452430f7 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -20,2 +20,4 @@ package org.apache.tika.server;",
                " import org.apache.commons.io.IOUtils;",
                "+import org.apache.commons.lang.StringUtils;",
                "+import org.apache.tika.utils.ProcessUtils;",
                " import org.slf4j.Logger;",
                "@@ -27,2 +29,4 @@ import java.io.IOException;",
                " import java.nio.charset.StandardCharsets;",
                "+import java.nio.file.Path;",
                "+import java.nio.file.Paths;",
                " import java.time.Duration;",
                "@@ -30,3 +34,5 @@ import java.time.Instant;",
                " import java.util.ArrayList;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "+import java.util.Optional;",
                " import java.util.concurrent.TimeUnit;",
                "@@ -125,2 +131,10 @@ public class TikaServerWatchDog {",
                "             }",
                "+            if (args[i].equals(\"-javaHome\")) {",
                "+                if (i == args.length-1) {",
                "+                    throw new IllegalArgumentException(\"must specify a value for -javaHome\");",
                "+                }",
                "+                i++;//skip argument value",
                "+                continue;",
                "+            }",
                "+",
                "             argList.add(args[i]);",
                "@@ -130,2 +144,23 @@ public class TikaServerWatchDog {",
                "+    private static String extractJavaPath(String[] args) {",
                "+        String javaHome = null;",
                "+        for (int i = 0; i < args.length; i++) {",
                "+            if (args[i].equals(\"-javaHome\")) {",
                "+                if (i == args.length-1) {",
                "+                    throw new IllegalArgumentException(\"must specify a value for -javaHome\");",
                "+                }",
                "+                javaHome = args[i+1];",
                "+                break;",
                "+            }",
                "+        }",
                "+        if (javaHome == null) {",
                "+            javaHome = System.getenv(\"JAVA_HOME\");",
                "+        }",
                "+        if (javaHome != null) {",
                "+            Path jPath = Paths.get(javaHome).resolve(\"bin\").resolve(\"java\");",
                "+            return ProcessUtils.escapeCommandLine(",
                "+                    jPath.toAbsolutePath().toString());",
                "+        }",
                "+        return \"java\";",
                "+    }",
                "     private static List<String> extractJVMArgs(String[] args) {",
                "@@ -233,5 +268,7 @@ public class TikaServerWatchDog {",
                "             List<String> argList = new ArrayList<>();",
                "+            String javaPath = extractJavaPath(args);",
                "             List<String> jvmArgs = extractJVMArgs(args);",
                "             List<String> childArgs = extractArgs(args);",
                "-            argList.add(\"java\");",
                "+",
                "+            argList.add(javaPath);",
                "             if (! jvmArgs.contains(\"-cp\") && ! jvmArgs.contains(\"--classpath\")) {",
                "@@ -245,3 +282,3 @@ public class TikaServerWatchDog {",
                "             argList.add(\"-child\");",
                "-",
                "+            LOG.debug(\"child process commandline: \" +argList.toString());",
                "             builder.command(argList);"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2753": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0f7e86cced275c2db3e2456685acf24fcf44e286"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2753",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "57562aa2ec90636cff1ebee76b649a5ddc598d6d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541885660,
            "hunks": 14,
            "message": "TIKA-2775 - bulk upgrade dependencies -- backoff minimum maven dependency to 3.1; clean up whitespace in tika-eval's pom",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index c2c595cce..c5db36a7f 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -21,3 +21,4 @@",
                "-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "     <modelVersion>4.0.0</modelVersion>",
                "@@ -36,4 +37,2 @@",
                "     <properties>",
                "-        <cli.version>1.4</cli.version> <!--sync version with tika-server or move to parent? -->",
                "-        <lucene.version>7.4.0</lucene.version>",
                "         <poi.version>4.0.0</poi.version>",
                "@@ -67,3 +66,3 @@",
                "             <artifactId>h2</artifactId>",
                "-            <version>1.4.196</version>",
                "+            <version>1.4.197</version>",
                "         </dependency>",
                "@@ -171,3 +170,4 @@",
                "                             <transformers>",
                "-                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">",
                "+                                <transformer",
                "+                                        implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">",
                "                                     <mainClass>org.apache.tika.eval.TikaEvalCLI</mainClass>",
                "@@ -175,3 +175,4 @@",
                "-                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />",
                "+                                <transformer",
                "+                                        implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>",
                "                             </transformers>",
                "@@ -181,85 +182,85 @@",
                "             </plugin>",
                "-                <plugin>",
                "-                    <artifactId>maven-remote-resources-plugin</artifactId>",
                "-                    <version>1.5</version>",
                "-                    <executions>",
                "-                        <execution>",
                "-                            <goals>",
                "-                                <goal>bundle</goal>",
                "-                            </goals>",
                "-                        </execution>",
                "-                    </executions>",
                "-                    <configuration>",
                "-                        <includes>",
                "-                            <include>**/*.xml</include>",
                "-                        </includes>",
                "-                    </configuration>",
                "-                </plugin>",
                "+            <plugin>",
                "+                <artifactId>maven-remote-resources-plugin</artifactId>",
                "+                <version>1.5</version>",
                "+                <executions>",
                "+                    <execution>",
                "+                        <goals>",
                "+                            <goal>bundle</goal>",
                "+                        </goals>",
                "+                    </execution>",
                "+                </executions>",
                "+                <configuration>",
                "+                    <includes>",
                "+                        <include>**/*.xml</include>",
                "+                    </includes>",
                "+                </configuration>",
                "+            </plugin>",
                "-                <plugin>",
                "-                    <groupId>org.apache.felix</groupId>",
                "-                    <artifactId>maven-bundle-plugin</artifactId>",
                "-                    <version>${maven.bundle.version}</version>",
                "-                    <extensions>true</extensions>",
                "-                    <configuration>",
                "-                        <instructions>",
                "-                            <Bundle-DocURL>${project.url}</Bundle-DocURL>",
                "-                            <Bundle-Activator>",
                "-                                org.apache.tika.config.TikaActivator",
                "-                            </Bundle-Activator>",
                "-                            <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>",
                "-                        </instructions>",
                "-                    </configuration>",
                "-                </plugin>",
                "-                <plugin>",
                "-                    <groupId>org.apache.rat</groupId>",
                "-                    <artifactId>apache-rat-plugin</artifactId>",
                "-                    <version>${rat.version}</version>",
                "-                    <configuration>",
                "-                        <excludes>",
                "-                            <exclude>src/main/resources/common_tokens/*</exclude>",
                "-                            <exclude>src/main/resources/*.json</exclude>",
                "-                            <exclude>src/test/resources/common_tokens/*</exclude>",
                "-                            <exclude>src/test/resources/test-dirs/**</exclude>",
                "-                        </excludes>",
                "-                    </configuration>",
                "-                </plugin>",
                "-                <plugin>",
                "-                    <groupId>org.apache.maven.plugins</groupId>",
                "-                    <artifactId>maven-jar-plugin</artifactId>",
                "-                    <configuration>",
                "-                        <archive>",
                "-                            <manifestEntries>",
                "-                                <Automatic-Module-Name>org.apache.tika.eval</Automatic-Module-Name>",
                "-                            </manifestEntries>",
                "-                        </archive>",
                "-                    </configuration>",
                "-                    <executions>",
                "-                        <execution>",
                "-                            <goals>",
                "-                                <goal>test-jar</goal>",
                "-                            </goals>",
                "-                        </execution>",
                "-                    </executions>",
                "-                </plugin>",
                "-                <plugin>",
                "-                    <artifactId>maven-failsafe-plugin</artifactId>",
                "-                    <version>${maven.failsafe.version}</version>",
                "-                    <configuration>",
                "-                        <additionalClasspathElements>",
                "-                            <additionalClasspathElement>",
                "-                                ${project.build.directory}/${project.build.finalName}.jar",
                "-                            </additionalClasspathElement>",
                "-                        </additionalClasspathElements>",
                "-                    </configuration>",
                "-                    <executions>",
                "-                        <execution>",
                "-                            <goals>",
                "-                                <goal>integration-test</goal>",
                "-                                <goal>verify</goal>",
                "-                            </goals>",
                "-                        </execution>",
                "-                    </executions>",
                "-                </plugin>",
                "-            </plugins>",
                "+            <plugin>",
                "+                <groupId>org.apache.felix</groupId>",
                "+                <artifactId>maven-bundle-plugin</artifactId>",
                "+                <version>${maven.bundle.version}</version>",
                "+                <extensions>true</extensions>",
                "+                <configuration>",
                "+                    <instructions>",
                "+                        <Bundle-DocURL>${project.url}</Bundle-DocURL>",
                "+                        <Bundle-Activator>",
                "+                            org.apache.tika.config.TikaActivator",
                "+                        </Bundle-Activator>",
                "+                        <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>",
                "+                    </instructions>",
                "+                </configuration>",
                "+            </plugin>",
                "+            <plugin>",
                "+                <groupId>org.apache.rat</groupId>",
                "+                <artifactId>apache-rat-plugin</artifactId>",
                "+                <version>${rat.version}</version>",
                "+                <configuration>",
                "+                    <excludes>",
                "+                        <exclude>src/main/resources/common_tokens/*</exclude>",
                "+                        <exclude>src/main/resources/*.json</exclude>",
                "+                        <exclude>src/test/resources/common_tokens/*</exclude>",
                "+                        <exclude>src/test/resources/test-dirs/**</exclude>",
                "+                    </excludes>",
                "+                </configuration>",
                "+            </plugin>",
                "+            <plugin>",
                "+                <groupId>org.apache.maven.plugins</groupId>",
                "+                <artifactId>maven-jar-plugin</artifactId>",
                "+                <configuration>",
                "+                    <archive>",
                "+                        <manifestEntries>",
                "+                            <Automatic-Module-Name>org.apache.tika.eval</Automatic-Module-Name>",
                "+                        </manifestEntries>",
                "+                    </archive>",
                "+                </configuration>",
                "+                <executions>",
                "+                    <execution>",
                "+                        <goals>",
                "+                            <goal>test-jar</goal>",
                "+                        </goals>",
                "+                    </execution>",
                "+                </executions>",
                "+            </plugin>",
                "+            <plugin>",
                "+                <artifactId>maven-failsafe-plugin</artifactId>",
                "+                <version>${maven.failsafe.version}</version>",
                "+                <configuration>",
                "+                    <additionalClasspathElements>",
                "+                        <additionalClasspathElement>",
                "+                            ${project.build.directory}/${project.build.finalName}.jar",
                "+                        </additionalClasspathElement>",
                "+                    </additionalClasspathElements>",
                "+                </configuration>",
                "+                <executions>",
                "+                    <execution>",
                "+                        <goals>",
                "+                            <goal>integration-test</goal>",
                "+                            <goal>verify</goal>",
                "+                        </goals>",
                "+                    </execution>",
                "+                </executions>",
                "+            </plugin>",
                "+        </plugins>",
                "     </build>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 4a1ebc525..bfd3892a4 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -129,3 +129,3 @@",
                "       <artifactId>lucene-core</artifactId>",
                "-      <version>7.4.0</version>",
                "+      <version>${lucene.version}</version>",
                "     </dependency>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index f1f4026b2..43270fbde 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -309,9 +309,9 @@",
                "     <forbiddenapis.version>2.6</forbiddenapis.version>",
                "-    <groovy.maven.version>2.1</groovy.maven.version>",
                "+    <groovy.maven.version>2.0</groovy.maven.version>",
                "     <maven.antrun.version>1.8</maven.antrun.version>",
                "     <maven.assembly.version>3.1.0</maven.assembly.version>",
                "-    <maven.bundle.version>4.1.0</maven.bundle.version>",
                "+    <maven.bundle.version>4.0.0</maven.bundle.version>",
                "     <maven.failsafe.version>2.22.1</maven.failsafe.version>",
                "     <maven.javadoc.version>3.0.1</maven.javadoc.version>",
                "-    <maven.scr.version>1.26.0</maven.scr.version>",
                "+    <maven.scr.version>1.7.4</maven.scr.version>",
                "     <maven.surefire.version>2.22.1</maven.surefire.version>",
                "@@ -329,2 +329,4 @@",
                "     <jaxb.version>2.3.0.1</jaxb.version>",
                "+    <cli.version>1.4</cli.version>",
                "+    <lucene.version>7.5.0</lucene.version>",
                "     <mockito.version>2.23.0</mockito.version>",
                "@@ -421,3 +423,3 @@",
                "                 <requireMavenVersion>",
                "-                  <version>3.5</version>",
                "+                  <version>3.1</version>",
                "                 </requireMavenVersion>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index ed4ed247c..451b22b5a 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -76,3 +76,3 @@",
                "       <artifactId>opencsv</artifactId>",
                "-      <version>2.0</version>",
                "+      <version>2.3</version>",
                "     </dependency>",
                "@@ -103,3 +103,3 @@",
                "       <artifactId>commons-cli</artifactId>",
                "-      <version>1.2</version>",
                "+      <version>${cli.version}</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-parent/pom.xml",
                "tika-server/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2775": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ccb96cd3d4fc0c70e9ef29e7e1078b1e849d339b"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2775",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e4aaa686cc171e8f224eb5ddf33eca429749188c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537181703,
            "hunks": 1,
            "message": "Update forbiddenApis to version 2.6. This mainly adds support for Java 11 class files/signatures and silences the commons-io warnings for modules that don't use commons-io",
            "diff": [
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 84dfff9c6..0dd6305f1 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -332,3 +332,3 @@",
                "         <!-- if this version contains commons-io 2.6, remove hard-coded commons-io version below -->",
                "-        <version>2.5</version>",
                "+        <version>2.6</version>",
                "         <configuration>"
            ],
            "changed_files": [
                "tika-parent/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file, version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "79d9d57cd6dfd79beedcb1fa2f517229e2bd3c84",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536708202,
            "hunks": 1,
            "message": "TIKA-2725 -- first working draft...include commit with conflicts resolved. :( # Conflicts: #\ttika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 1f5d8c172..b994b1e31 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -391,3 +391,3 @@ public class TikaResource {",
                "         long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "-                metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY));",
                "+                metadata.get(Metadata.RESOURCE_NAME_KEY));",
                "         try {"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3af35f17836c1c39f420e4cbe79b24fe7bca3ede"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "932ff38bad80fb21c7de5ac330ac6de2df3df1c5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537798348,
            "hunks": 1,
            "message": "TIKA-2638 -- allow multiple languages in config for OCR parser",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index a2efcc7cf..07c0de462 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -89,3 +89,3 @@ public class TikaResource {",
                "-    private static Pattern ALLOWABLE_HEADER_CHARS = Pattern.compile(\"(?i)^[-/_\\\\.A-Z0-9 ]+$\");",
                "+    private static Pattern ALLOWABLE_HEADER_CHARS = Pattern.compile(\"(?i)^[-/_+\\\\.A-Z0-9 ]+$\");"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2638": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a89170f6d5261c62bd59f3229235edc6c2175fc7"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2638",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f9eec836e285c95770b23c9ce685ce5275e74e84",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542210133,
            "hunks": 9,
            "message": "TIKA-2778 -- Upgrade jaxb-runtime and javax.activation for use in Java > 8",
            "diff": [
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 3eaf2afc1..9ecdfb73e 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -43,8 +43,6 @@",
                "-    <!-- for java 10 -->",
                "-    <dependency>",
                "-      <groupId>org.glassfish.jaxb</groupId>",
                "-      <artifactId>jaxb-core</artifactId>",
                "-      <version>${jaxb.version}</version>",
                "-    </dependency>",
                "+    <!-- for java 10",
                "+      See TIKA-2778 for why we need to do this now.",
                "+      May the gods of dependency management fix this in the future.",
                "+      -->",
                "     <dependency>",
                "@@ -53,7 +51,13 @@",
                "       <version>${jaxb.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>javax.activation</groupId>",
                "+          <artifactId>javax.activation-api</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "     <dependency>",
                "-      <groupId>javax.activation</groupId>",
                "-      <artifactId>activation</artifactId>",
                "-      <version>1.1.1</version>",
                "+      <groupId>com.sun.activation</groupId>",
                "+      <artifactId>javax.activation</artifactId>",
                "+      <version>1.2.0</version>",
                "     </dependency>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 28ada5c38..0fac43624 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -325,2 +325,3 @@",
                "     <osgi.core.version>6.0.0</osgi.core.version>",
                "+",
                "     <cxf.version>3.2.7</cxf.version>",
                "@@ -328,3 +329,5 @@",
                "     <jackson.version>2.9.7</jackson.version>",
                "-    <jaxb.version>2.3.0.1</jaxb.version>",
                "+    <!-- when this is next upgraded, see if we can get rid of",
                "+         javax.activation dependency in tika-server -->",
                "+    <jaxb.version>2.3.1</jaxb.version>",
                "     <cli.version>1.4</cli.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 54c867e37..a342f837c 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -81,8 +81,6 @@",
                "-    <!-- for java 10 -->",
                "-    <dependency>",
                "-      <groupId>org.glassfish.jaxb</groupId>",
                "-      <artifactId>jaxb-core</artifactId>",
                "-      <version>${jaxb.version}</version>",
                "-    </dependency>",
                "+    <!-- for java 10",
                "+      See TIKA-2778 for why we need to do this now.",
                "+      May the gods of API design fix this in the future.",
                "+      -->",
                "     <dependency>",
                "@@ -91,7 +89,13 @@",
                "       <version>${jaxb.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>javax.activation</groupId>",
                "+          <artifactId>javax.activation-api</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "     <dependency>",
                "-      <groupId>javax.activation</groupId>",
                "-      <artifactId>activation</artifactId>",
                "-      <version>1.1.1</version>",
                "+      <groupId>com.sun.activation</groupId>",
                "+      <artifactId>javax.activation</artifactId>",
                "+      <version>1.2.0</version>",
                "     </dependency>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index a0b180d45..ff4708821 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -56,8 +56,2 @@",
                "       <version>${project.version}</version>",
                "-      <exclusions>",
                "-        <exclusion>",
                "-          <groupId>javax.activation</groupId>",
                "-          <artifactId>activation</artifactId>",
                "-        </exclusion>",
                "-      </exclusions>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-langdetect/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-server/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2778": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0b3ef49f83f084079dcd611de54b1431d15e1078"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2778",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2cf0a964c3b1eb200864d3cfec881b4a9bad45fe",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533306066,
            "hunks": 5,
            "message": "TIKA-2703 make sure to process shape's parent drawing only once.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index 314114802..4560153bd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -18,3 +18,3 @@ package org.apache.tika.parser.microsoft.ooxml;",
                "-import javax.xml.parsers.SAXParser;",
                "+",
                " import java.io.IOException;",
                "@@ -23,2 +23,3 @@ import java.util.ArrayList;",
                " import java.util.HashMap;",
                "+import java.util.HashSet;",
                " import java.util.List;",
                "@@ -26,2 +27,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Set;",
                "@@ -256,2 +258,8 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         }",
                "+        //We don't currently have an obvious way to get drawings",
                "+        //directly from sheetIter. Therefore, we grab the shapes and process those.",
                "+        //To get the diagrams and charts, we need to get the parent drawing for each",
                "+        //shape, and we need to make sure that we only process each parent shape once!",
                "+        //SEE TIKA-2703 TODO: add unit test",
                "+        Set<String> seenParentDrawings = new HashSet<>();",
                "         for (XSSFShape shape : shapes) {",
                "@@ -264,26 +272,30 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             }",
                "-            XSSFDrawing drawing = shape.getDrawing();",
                "-            if (drawing != null) {",
                "-                //dump diagram data",
                "-                handleGeneralTextContainingPart(",
                "-                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "-                        \"diagram-data\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-                //dump chart data",
                "-                handleGeneralTextContainingPart(",
                "-                        XSSFRelation.CHART.getRelation(),",
                "-                        \"chart\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "+",
                "+            XSSFDrawing parentDrawing = shape.getDrawing();",
                "+            if (parentDrawing != null) {",
                "+                if (! seenParentDrawings.contains(parentDrawing.getPackagePart().getPartName().toString())) {",
                "+                    //dump diagram data",
                "+                    handleGeneralTextContainingPart(",
                "+                            AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "+                            \"diagram-data\",",
                "+                            parentDrawing.getPackagePart(),",
                "+                            metadata,",
                "+                            new OOXMLWordAndPowerPointTextHandler(",
                "+                                    new OOXMLTikaBodyPartHandler(xhtml),",
                "+                                    new HashMap<String, String>()//empty",
                "+                            )",
                "+                    );",
                "+                    //dump chart data",
                "+                    handleGeneralTextContainingPart(",
                "+                            XSSFRelation.CHART.getRelation(),",
                "+                            \"chart\",",
                "+                            parentDrawing.getPackagePart(),",
                "+                            metadata,",
                "+                            new OOXMLWordAndPowerPointTextHandler(",
                "+                                    new OOXMLTikaBodyPartHandler(xhtml),",
                "+                                    new HashMap<String, String>()//empty",
                "+                            )",
                "+                    );",
                "+                }",
                "+                seenParentDrawings.add(parentDrawing.getPackagePart().getPartName().toString());",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2703": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0486852c46f42130c2f1c26cdd35f38005457a83"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2703",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "88bb6abebdd059d9ce3fd8ec6ebdeac79f6fd58f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537807750,
            "hunks": 25,
            "message": "TIKA-2732 -- allow configuration of XMLReaderUtils via TikaConfig # Conflicts: #\ttika-core/src/test/java/org/apache/tika/config/TikaConfigTest.java",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "index 5b1b1ab81..a6fed6cc3 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "@@ -127,3 +127,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(path.toFile()));",
                "+        this(XMLReaderUtils.buildDOM(path));",
                "     }",
                "@@ -131,3 +131,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(path.toFile()), loader);",
                "+        this(XMLReaderUtils.buildDOM(path), loader);",
                "     }",
                "@@ -136,3 +136,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(file));",
                "+        this(XMLReaderUtils.buildDOM(file.toPath()));",
                "     }",
                "@@ -141,3 +141,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(file), loader);",
                "+        this(XMLReaderUtils.buildDOM(file.toPath()), loader);",
                "     }",
                "@@ -150,3 +150,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "+        this(XMLReaderUtils.buildDOM(url.toString()).getDocumentElement(), loader);",
                "     }",
                "@@ -154,3 +154,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "+        this(XMLReaderUtils.buildDOM(url.toString()).getDocumentElement(), loader);",
                "     }",
                "@@ -159,3 +159,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(XMLReaderUtils.getDocumentBuilder().parse(stream));",
                "+        this(XMLReaderUtils.buildDOM(stream));",
                "     }",
                "@@ -184,2 +184,3 @@ public class TikaConfig {",
                "         EncodingDetectorXmlLoader encodingDetectorXmlLoader = new EncodingDetectorXmlLoader();",
                "+        updateXMLReaderUtils(element);",
                "         this.mimeTypes = typesFromDomElement(element);",
                "@@ -255,3 +256,4 @@ public class TikaConfig {",
                "             try (InputStream stream = getConfigInputStream(config, tmpServiceLoader)) {",
                "-                Element element = XMLReaderUtils.getDocumentBuilder().parse(stream).getDocumentElement();",
                "+                Element element = XMLReaderUtils.buildDOM(stream).getDocumentElement();",
                "+                updateXMLReaderUtils(element);",
                "                 serviceLoader = serviceLoaderFromDomElement(element, tmpServiceLoader.getLoader());",
                "@@ -280,2 +282,21 @@ public class TikaConfig {",
                "+    private void updateXMLReaderUtils(Element element) throws TikaException {",
                "+",
                "+        Element child = getChild(element, \"xml-reader-utils\");",
                "+        if (child == null) {",
                "+            return;",
                "+        }",
                "+        String attr = child.getAttribute(\"maxEntityExpansions\");",
                "+        if (attr != null) {",
                "+            XMLReaderUtils.setMaxEntityExpansions(Integer.parseInt(attr));",
                "+        }",
                "+",
                "+        //make sure to call this after set entity expansions",
                "+        attr = child.getAttribute(\"poolSize\");",
                "+        if (attr != null) {",
                "+            XMLReaderUtils.setPoolSize(Integer.parseInt(attr));",
                "+        }",
                "+",
                "+    }",
                "+",
                "     private static InputStream getConfigInputStream(String config, ServiceLoader serviceLoader)",
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 4ccdad485..71e1f8443 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -21,2 +21,3 @@ import org.apache.tika.exception.TikaException;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.sax.OfflineContentHandler;",
                " import org.w3c.dom.Document;",
                "@@ -48,3 +49,4 @@ import java.io.StringReader;",
                " import java.lang.reflect.Method;",
                "-import java.util.Properties;",
                "+import java.nio.file.Files;",
                "+import java.nio.file.Path;",
                " import java.util.concurrent.ArrayBlockingQueue;",
                "@@ -57,3 +59,3 @@ import java.util.logging.Logger;",
                "  * Utility functions for reading XML.  If you are doing SAX parsing, make sure",
                "- * to use the {@link org.apache.tika.sax.OfflineContentHandler} to guard against",
                "+ * to use the {@link OfflineContentHandler} to guard against",
                "  * XML External Entity attacks.",
                "@@ -69,2 +71,8 @@ public class XMLReaderUtils implements Serializable {",
                "+    /**",
                "+     * Default size for the pool of SAX Parsers",
                "+     * and the pool of DOM builders",
                "+     */",
                "+    public static final int DEFAULT_POOL_SIZE = 10;",
                "+",
                "     /**",
                "@@ -72,3 +80,3 @@ public class XMLReaderUtils implements Serializable {",
                "      */",
                "-    private static int POOL_SIZE = 10;",
                "+    private static int POOL_SIZE = DEFAULT_POOL_SIZE;",
                "@@ -77,5 +85,5 @@ public class XMLReaderUtils implements Serializable {",
                "     private static final String JAXP_ENTITY_EXPANSION_LIMIT_KEY = \"jdk.xml.entityExpansionLimit\";",
                "-    private static final int DEFAULT_MAX_ENTITY_EXPANSIONS = 20;",
                "+    public static final int DEFAULT_MAX_ENTITY_EXPANSIONS = 20;",
                "-    private static int MAX_ENTITY_EXPANSIONS = determineMaxEntityExpansions();",
                "+    private static volatile int MAX_ENTITY_EXPANSIONS = determineMaxEntityExpansions();",
                "@@ -129,4 +137,8 @@ public class XMLReaderUtils implements Serializable {",
                "      * This will override the system property {@link #JAXP_ENTITY_EXPANSION_LIMIT_KEY}",
                "-     * and the {@link #DEFAULT_MAX_ENTITY_EXPANSIONS} value for pa",
                "-     *",
                "+     * and the {@link #DEFAULT_MAX_ENTITY_EXPANSIONS} value for allowable entity expansions",
                "+     *<p>",
                "+     *<b>NOTE:</b> To trigger a rebuild of the pool of parsers with this setting,",
                "+     * the client must call {@link #setPoolSize(int)} to rebuild the SAX and DOM parsers",
                "+     * with this setting.",
                "+     *</p>",
                "      * @param maxEntityExpansions -- maximum number of allowable entity expansions",
                "@@ -164,3 +176,3 @@ public class XMLReaderUtils implements Serializable {",
                "      * <p>",
                "-     * Make sure to wrap your handler in the {@link org.apache.tika.sax.OfflineContentHandler} to",
                "+     * Make sure to wrap your handler in the {@link OfflineContentHandler} to",
                "      * prevent XML External Entity attacks",
                "@@ -192,3 +204,3 @@ public class XMLReaderUtils implements Serializable {",
                "      * <p>",
                "-     * Make sure to wrap your handler in the {@link org.apache.tika.sax.OfflineContentHandler} to",
                "+     * Make sure to wrap your handler in the {@link OfflineContentHandler} to",
                "      * prevent XML External Entity attacks",
                "@@ -351,2 +363,56 @@ public class XMLReaderUtils implements Serializable {",
                "+    /**",
                "+     * Builds a Document with a DocumentBuilder from the pool",
                "+     *",
                "+     * @since Apache Tika 1.19.1",
                "+     * @param path path to parse",
                "+     * @return a document",
                "+     * @throws TikaException",
                "+     * @throws IOException",
                "+     * @throws SAXException",
                "+     */",
                "+    public static Document buildDOM(Path path) throws TikaException, IOException, SAXException {",
                "+        try (InputStream is = Files.newInputStream(path)){",
                "+            return buildDOM(is);",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * Builds a Document with a DocumentBuilder from the pool",
                "+     *",
                "+     * @since Apache Tika 1.19.1",
                "+     * @param uriString uriString to process",
                "+     * @return a document",
                "+     * @throws TikaException",
                "+     * @throws IOException",
                "+     * @throws SAXException",
                "+     */",
                "+    public static Document buildDOM(String uriString) throws TikaException, IOException, SAXException {",
                "+        DocumentBuilder builder = acquireDOMBuilder();",
                "+        try {",
                "+            return builder.parse(uriString);",
                "+        } finally {",
                "+            releaseDOMBuilder(builder);",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * Builds a Document with a DocumentBuilder from the pool",
                "+     *",
                "+     * @since Apache Tika 1.19.1",
                "+     *",
                "+     * @return a document",
                "+     * @throws TikaException",
                "+     * @throws IOException",
                "+     * @throws SAXException",
                "+     */",
                "+    public static Document buildDOM(InputStream is) throws TikaException, IOException, SAXException {",
                "+        DocumentBuilder builder = acquireDOMBuilder();",
                "+        try {",
                "+            return builder.parse(is);",
                "+        } finally {",
                "+            releaseDOMBuilder(builder);",
                "+        }",
                "+    }",
                "+",
                "     /**",
                "@@ -503,3 +569,5 @@ public class XMLReaderUtils implements Serializable {",
                "     /**",
                "-     * Set the pool size for cached XML parsers.",
                "+     * Set the pool size for cached XML parsers.  This has a side",
                "+     * effect of locking the pool, and rebuilding the pool from",
                "+     * scratch with the most recent settings, such as {@link #MAX_ENTITY_EXPANSIONS}",
                "      *",
                "@@ -517,8 +585,8 @@ public class XMLReaderUtils implements Serializable {",
                "             SAX_READ_WRITE_LOCK.writeLock().lock();",
                "-            if (SAX_PARSERS.size() != poolSize) {",
                "-                SAX_PARSERS = new ArrayBlockingQueue<>(poolSize);",
                "-                for (int i = 0; i < poolSize; i++) {",
                "-                    SAX_PARSERS.offer(getSAXParser());",
                "-                }",
                "+            SAX_PARSERS.clear();",
                "+            SAX_PARSERS = new ArrayBlockingQueue<>(poolSize);",
                "+            for (int i = 0; i < poolSize; i++) {",
                "+                SAX_PARSERS.offer(getSAXParser());",
                "             }",
                "+",
                "         } finally {",
                "@@ -528,8 +596,6 @@ public class XMLReaderUtils implements Serializable {",
                "             DOM_READ_WRITE_LOCK.writeLock().lock();",
                "-",
                "-            if (DOM_BUILDERS.size() != poolSize) {",
                "-                DOM_BUILDERS = new ArrayBlockingQueue<>(poolSize);",
                "-                for (int i = 0; i < poolSize; i++) {",
                "-                    DOM_BUILDERS.offer(getDocumentBuilder());",
                "-                }",
                "+            DOM_BUILDERS.clear();",
                "+            DOM_BUILDERS = new ArrayBlockingQueue<>(poolSize);",
                "+            for (int i = 0; i < poolSize; i++) {",
                "+                DOM_BUILDERS.offer(getDocumentBuilder());",
                "             }",
                "@@ -626,2 +692,10 @@ public class XMLReaderUtils implements Serializable {",
                "     }",
                "+",
                "+    public static int getPoolSize() {",
                "+        return POOL_SIZE;",
                "+    }",
                "+",
                "+    public static int getMaxEntityExpansions() {",
                "+        return MAX_ENTITY_EXPANSIONS;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2732": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "82934135598f1ed9ea6f51f21036093fd0463610"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2732",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "36fa58f4c298248398749be927e6fdb9868e5676",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533318594,
            "hunks": 4,
            "message": "TIKA-2704",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "index 83a9c877f..1814c1204 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "@@ -18,2 +18,5 @@ package org.apache.tika.parser.mp3;",
                "+import org.apache.poi.util.IOUtils;",
                "+",
                "+import java.io.EOFException;",
                " import java.io.IOException;",
                "@@ -159,3 +162,8 @@ class MpegStream extends PushbackInputStream",
                "         {",
                "-            skipStream(in, currentHeader.getLength() - HEADER_SIZE);",
                "+            long toSkip = currentHeader.getLength() - HEADER_SIZE;",
                "+            long skipped = IOUtils.skipFully(in, toSkip);",
                "+            if (skipped < toSkip) {",
                "+                throw new EOFException(\"EOF: tried to skip \"+toSkip +",
                "+                        \" but could only skip \"+skipped);",
                "+            }",
                "             currentHeader = null;",
                "@@ -268,24 +276,2 @@ class MpegStream extends PushbackInputStream",
                "-    /**",
                "-     * Skips the given number of bytes from the specified input stream.",
                "-     * ",
                "-     * @param in the input stream",
                "-     * @param count the number of bytes to skip",
                "-     * @throws IOException if an IO error occurs",
                "-     */",
                "-    private static void skipStream(InputStream in, long count)",
                "-            throws IOException",
                "-    {",
                "-        long size = count;",
                "-        long skipped = 0;",
                "-        while (size > 0 && skipped >= 0)",
                "-        {",
                "-            skipped = in.skip(size);",
                "-            if (skipped != -1)",
                "-            {",
                "-                size -= skipped;",
                "-            }",
                "-        }",
                "-    }",
                "-    ",
                "     /**",
                "@@ -430,3 +416,3 @@ class MpegStream extends PushbackInputStream",
                "          * ",
                "-         * @param the from index",
                "+         * @param from index",
                "          * @param to the to index"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2704": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c892461520200143a09330473727da6c6e0a8c60"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2704",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5d454782a89dccb42c49438799d9b0005708a50c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538491492,
            "hunks": 5,
            "message": "TIKA-2473 - Replace com.sun.xml.bind:jaxb-impl and jaxb-core with      org.glassfish.jaxb:jaxb-runtime and jaxb-core",
            "diff": [
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 8095c5e94..860572270 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -45,8 +45,3 @@",
                "     <dependency>",
                "-      <groupId>javax.xml.bind</groupId>",
                "-      <artifactId>jaxb-api</artifactId>",
                "-      <version>${jaxb.version}</version>",
                "-    </dependency>",
                "-    <dependency>",
                "-      <groupId>com.sun.xml.bind</groupId>",
                "+      <groupId>org.glassfish.jaxb</groupId>",
                "       <artifactId>jaxb-core</artifactId>",
                "@@ -55,4 +50,4 @@",
                "     <dependency>",
                "-      <groupId>com.sun.xml.bind</groupId>",
                "-      <artifactId>jaxb-impl</artifactId>",
                "+      <groupId>org.glassfish.jaxb</groupId>",
                "+      <artifactId>jaxb-runtime</artifactId>",
                "       <version>${jaxb.version}</version>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 4ea00ad2f..9e31efa47 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -314,3 +314,3 @@",
                "     <jackson.version>2.9.6</jackson.version>",
                "-    <jaxb.version>2.3.0</jaxb.version>",
                "+    <jaxb.version>2.3.0.1</jaxb.version>",
                "     <mockito.version>2.20.0</mockito.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index c8e0610a8..6030f4c17 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -83,8 +83,3 @@",
                "     <dependency>",
                "-      <groupId>javax.xml.bind</groupId>",
                "-      <artifactId>jaxb-api</artifactId>",
                "-      <version>${jaxb.version}</version>",
                "-    </dependency>",
                "-    <dependency>",
                "-      <groupId>com.sun.xml.bind</groupId>",
                "+      <groupId>org.glassfish.jaxb</groupId>",
                "       <artifactId>jaxb-core</artifactId>",
                "@@ -93,4 +88,4 @@",
                "     <dependency>",
                "-      <groupId>com.sun.xml.bind</groupId>",
                "-      <artifactId>jaxb-impl</artifactId>",
                "+      <groupId>org.glassfish.jaxb</groupId>",
                "+      <artifactId>jaxb-runtime</artifactId>",
                "       <version>${jaxb.version}</version>"
            ],
            "changed_files": [
                "tika-langdetect/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2473": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "033758a5ab709401cdaf615477bde53ff729ed66"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2473",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0e39bceef4456eb391ace48fece2ebce52e0824d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533310801,
            "hunks": 0,
            "message": "Merge pull request #236 from GerardBouchar/master TIKA-2648 : detect interpreted server-side scripting languages",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2648": ""
            },
            "ghissue_refs": {
                "236": "Improve MimeType detection for interpreted server-side languages apache/incubator-stormcrawler#630"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2648",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 236",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94560199e88d3a490740ba93dbbd4c2a0adccae6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533307627,
            "hunks": 0,
            "message": "Merge pull request #245 from grigoriy/TIKA-2701 fix for TIKA-2701 contributed by grigoriy",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {
                "245": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 245",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "230997465a6eaed18d5309c3d32dd9af6182dd02",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542136106,
            "hunks": 29,
            "message": "TIKA-2778 -- the shutdown method for tika-batch mode should not be typing anything on stdin of the parent process.  Rather, require an interrupt and/or kill signal and then make sure the children are stopped as well.",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "index 82a9c5277..2cd40ff3e 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "@@ -23,3 +23,2 @@ import java.io.IOException;",
                " import java.io.PrintStream;",
                "-import java.util.Date;",
                " import java.util.List;",
                "@@ -65,3 +64,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         TIMED_OUT_CONSUMER,",
                "-        USER_INTERRUPTION,",
                "+        PARENT_SHUTDOWN,",
                "         BATCH_PROCESS_ALIVE_TOO_LONG,",
                "@@ -165,2 +164,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "+        LOG.trace(\"finishing up\");",
                "         return result;",
                "@@ -196,2 +196,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     IFileProcessorFutureResult result = futureResult.get();",
                "+                    LOG.trace(\"result: \"+result);",
                "                     if (result instanceof FileConsumerFutureResult) {",
                "@@ -205,3 +206,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     } else if (result instanceof InterrupterFutureResult) {",
                "-                        causeForTermination = CAUSE_FOR_TERMINATION.USER_INTERRUPTION;",
                "+                        causeForTermination = CAUSE_FOR_TERMINATION.PARENT_SHUTDOWN;",
                "                         break;",
                "@@ -212,3 +213,2 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                 }",
                "-",
                "                 if (state.consumersRemoved >= state.numConsumers) {",
                "@@ -246,3 +246,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         //fileResourceCrawler.pleaseShutdown();",
                "-",
                "+        LOG.trace(\"about to shutdown\");",
                "         //Step 1: prevent uncalled threads from being started",
                "@@ -257,4 +257,5 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         fileResourceCrawler.shutDownNoPoison();",
                "-        //if there are any active/asked to shutdown consumers, await termination",
                "-        //this can happen if a user interrupts the process",
                "+        //if there are any active/asked-to-shutdown consumers, wait",
                "+        //a bit for those parsers to finish.",
                "+        //This can happen if the parent process dies",
                "         //of if the crawler stops early, or ...",
                "@@ -289,2 +290,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "                     FileStarted fileStarted = consumerResult.getFileStarted();",
                "+                    LOG.trace(\"file started \"+fileStarted);",
                "                     if (fileStarted != null",
                "@@ -307,3 +309,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         String restartMsg = null;",
                "-        if (state.causeForTermination == CAUSE_FOR_TERMINATION.USER_INTERRUPTION",
                "+        if (state.causeForTermination == CAUSE_FOR_TERMINATION.PARENT_SHUTDOWN",
                "                 || state.causeForTermination == CAUSE_FOR_TERMINATION.MAIN_LOOP_EXCEPTION_NO_RESTART) {",
                "@@ -327,3 +329,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "-",
                "+        LOG.trace(\"restart msg: \"+restartMsg);",
                "         int exitStatus = getExitStatus(state.causeForTermination, restartMsg);",
                "@@ -344,2 +346,3 @@ public class BatchProcess implements Callable<ParallelFileProcessingResult> {",
                "         }",
                "+        LOG.trace(\"returning \"+state.causeForTermination);",
                "         return new",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "index aa8ebf84c..a1b19f6de 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "@@ -232,3 +232,3 @@ public class BatchProcessDriverCLI {",
                "             LOG.trace(\"destroying a non-null process\");",
                "-            process.destroy();",
                "+            process.destroyForcibly();",
                "         }",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java b/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "index c1e31baec..eea130890 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "@@ -1,3 +1 @@",
                "-package org.apache.tika.batch;",
                "-",
                " /*",
                "@@ -18,6 +16,6 @@ package org.apache.tika.batch;",
                "  */",
                "+package org.apache.tika.batch;",
                "-import java.io.BufferedReader;",
                "-import java.io.IOException;",
                "-import java.io.InputStreamReader;",
                "+",
                "+import java.io.InputStream;",
                " import java.util.concurrent.Callable;",
                "@@ -27,11 +25,14 @@ import org.slf4j.LoggerFactory;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "-",
                " /**",
                "- * Class that waits for input on System.in.  If the user enters a keystroke on ",
                "- * System.in, this will send a signal to the FileResourceRunner to shutdown gracefully.",
                "- *",
                "+ * Class that waits for input on System.in.  If this reads",
                "+ * EOF or if there is an exception from the parent's IO,",
                "+ * this will send a signal to shutdown the child process.",
                "  * <p>",
                "- * In the future, this may implement a common IInterrupter interface for more flexibility.",
                "+ *     This will call System.exit(-1) if the process",
                "+ *     doesn't stop after {@link #pauseOnEarlyTermination}",
                "+ *     milliseconds.",
                "+ * </p>",
                "+ *",
                "+ *",
                "  */",
                "@@ -40,20 +41,43 @@ public class Interrupter implements Callable<IFileProcessorFutureResult> {",
                "-\tpublic IFileProcessorFutureResult call(){",
                "+    private static final long EXTRA_GRACE_PERIOD_MILLIS = 1000;",
                "+    private final long pauseOnEarlyTermination;",
                "+",
                "+    public Interrupter(long pauseOnEarlyTermination) {",
                "+        this.pauseOnEarlyTermination = pauseOnEarlyTermination;",
                "+    }",
                "+",
                "+\tpublic IFileProcessorFutureResult call() {",
                " \t\ttry{",
                "-\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in, UTF_8));",
                "-\t\t\twhile (true){",
                "-\t\t\t\tif (reader.ready()){",
                "-\t\t\t\t\treader.readLine();",
                "-\t\t\t\t\tbreak;",
                "-\t\t\t\t} else {",
                "-\t\t\t\t\tThread.sleep(1000);",
                "-\t\t\t\t}",
                "+\t\t\tInputStream is = System.in;",
                "+\t\t\tint byt = is.read();",
                "+\t\t\twhile (byt > -1){",
                "+\t\t\t\tbyt = is.read();",
                " \t\t\t}",
                "-\t\t} catch (InterruptedException e){",
                "-\t\t    //canceller was interrupted",
                "-\t\t} catch (IOException e){",
                "-            LOG.error(\"IOException from STDIN in CommandlineInterrupter.\");",
                "+\t\t} catch (Throwable e) {",
                "+            LOG.warn(\"Exception from STDIN in CommandlineInterrupter.\", e);",
                " \t\t}",
                "+\t\tnew Thread(new Doomsday()).start();",
                " \t\treturn new InterrupterFutureResult();",
                " \t}",
                "+",
                "+    private class Doomsday implements Runnable {",
                "+        @Override",
                "+        public void run() {",
                "+            if (pauseOnEarlyTermination < 0) {",
                "+                return;",
                "+            }",
                "+            long start = System.currentTimeMillis();",
                "+            long elapsed = System.currentTimeMillis()-start;",
                "+            while (elapsed < (pauseOnEarlyTermination+EXTRA_GRACE_PERIOD_MILLIS)) {",
                "+                try {",
                "+                    Thread.sleep(500);",
                "+                } catch (InterruptedException e) {",
                "+                    return;",
                "+                }",
                "+                elapsed = System.currentTimeMillis()-start;",
                "+            }",
                "+            LOG.error(\"Interrupter timed out; now calling System.exit.\");",
                "+            System.exit(-1);",
                "+        }",
                "+    }",
                " }",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java b/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "index c4d370409..ec4950756 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "@@ -1,3 +1 @@",
                "-package org.apache.tika.batch;",
                "-",
                " /*",
                "@@ -18,2 +16,3 @@ package org.apache.tika.batch;",
                "  */",
                "+package org.apache.tika.batch;",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "index 0ebfd15c0..26b944ec3 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "@@ -135,3 +135,3 @@ public class BatchProcessBuilder {",
                "-        interrupter = buildInterrupter(keyNodes.get(\"interrupter\"), runtimeAttributes);",
                "+        interrupter = buildInterrupter(keyNodes.get(\"interrupter\"), pauseOnEarlyTerminationMillis, runtimeAttributes);",
                "@@ -155,3 +155,3 @@ public class BatchProcessBuilder {",
                "-    private Interrupter buildInterrupter(Node node, Map<String, String> runtimeAttributes) {",
                "+    private Interrupter buildInterrupter(Node node, long pauseOnEarlyTermination, Map<String, String> runtimeAttributes) {",
                "         Map<String, String> attrs = XMLDOMUtil.mapifyAttrs(node, runtimeAttributes);",
                "@@ -163,3 +163,3 @@ public class BatchProcessBuilder {",
                "-        return builder.build(node, runtimeAttributes);",
                "+        return builder.build(node, pauseOnEarlyTermination, runtimeAttributes);",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "index d7223cd45..d02b48cab 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java",
                "@@ -28,4 +28,4 @@ public class InterrupterBuilder {",
                "-    public Interrupter build(Node n, Map<String, String> commandlineArguments) {",
                "-        return new Interrupter();",
                "+    public Interrupter build(Node n, long pauseOnEarlyTermination, Map<String, String> commandlineArguments) {",
                "+        return new Interrupter(pauseOnEarlyTermination);",
                "     }"
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java",
                "tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java",
                "tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java",
                "tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2778": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "30c3d8104a51f015416382995435a4785059f07c"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2778",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "61031616db0f1e75b5ea7413dd44bffaddfba909",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540225779,
            "hunks": 9,
            "message": "TIKA-2761 -- write as much metadata as possible before writing to xhtml.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "index 345f486fa..52dad7cef 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java",
                "@@ -67,3 +67,2 @@ public class Mp3Parser extends AbstractParser {",
                "         XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);",
                "-        xhtml.startDocument();",
                "@@ -72,39 +71,62 @@ public class Mp3Parser extends AbstractParser {",
                "+        //process as much metadata as possible before",
                "+        //writing to xhtml",
                "+        if (audioAndTags.duration > 0) {",
                "+            metadata.set(XMPDM.DURATION, audioAndTags.duration);",
                "+        }",
                "+",
                "+        if (audioAndTags.audio != null) {",
                "+            metadata.set(\"samplerate\", String.valueOf(audioAndTags.audio.getSampleRate()));",
                "+            metadata.set(\"channels\", String.valueOf(audioAndTags.audio.getChannels()));",
                "+            metadata.set(\"version\", audioAndTags.audio.getVersion());",
                "+",
                "+            metadata.set(",
                "+                    XMPDM.AUDIO_SAMPLE_RATE,",
                "+                    Integer.toString(audioAndTags.audio.getSampleRate()));",
                "+            if(audioAndTags.audio.getChannels() == 1) {",
                "+                metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"Mono\");",
                "+            } else if(audioAndTags.audio.getChannels() == 2) {",
                "+                metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"Stereo\");",
                "+            } else if(audioAndTags.audio.getChannels() == 5) {",
                "+                metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"5.1\");",
                "+            } else if(audioAndTags.audio.getChannels() == 7) {",
                "+                metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"7.1\");",
                "+            }",
                "+        }",
                "+",
                "+        xhtml.startDocument();",
                "         // Process tags metadata if the file has supported tags",
                "+        List<String> comments = new ArrayList<>();",
                "         if (audioAndTags.tags.length > 0) {",
                "-           CompositeTagHandler tag = new CompositeTagHandler(audioAndTags.tags);",
                "-",
                "-           metadata.set(TikaCoreProperties.TITLE, tag.getTitle());",
                "-           metadata.set(TikaCoreProperties.CREATOR, tag.getArtist());",
                "-           metadata.set(XMPDM.ARTIST, tag.getArtist());",
                "-           metadata.set(XMPDM.ALBUM_ARTIST, tag.getAlbumArtist());",
                "-           metadata.set(XMPDM.COMPOSER, tag.getComposer());",
                "-           metadata.set(XMPDM.ALBUM, tag.getAlbum());",
                "-           metadata.set(XMPDM.COMPILATION, tag.getCompilation());",
                "-           metadata.set(XMPDM.RELEASE_DATE, tag.getYear());",
                "-           metadata.set(XMPDM.GENRE, tag.getGenre());",
                "-",
                "-           List<String> comments = new ArrayList<String>();",
                "-           for (ID3Comment comment : tag.getComments()) {",
                "-              StringBuffer cmt = new StringBuffer();",
                "-              if (comment.getLanguage() != null) {",
                "-                 cmt.append(comment.getLanguage());",
                "-                 cmt.append(\" - \");",
                "-              }",
                "-              if (comment.getDescription() != null) {",
                "-                 cmt.append(comment.getDescription());",
                "-                 if (comment.getText() != null) {",
                "-                    cmt.append(\"\\n\");",
                "-                 }",
                "-              }",
                "-              if (comment.getText() != null) {",
                "-                 cmt.append(comment.getText());",
                "-              }",
                "-              ",
                "-              comments.add(cmt.toString());",
                "-              metadata.add(XMPDM.LOG_COMMENT.getName(), cmt.toString());",
                "-           }",
                "+            CompositeTagHandler tag = new CompositeTagHandler(audioAndTags.tags);",
                "+",
                "+            metadata.set(TikaCoreProperties.TITLE, tag.getTitle());",
                "+            metadata.set(TikaCoreProperties.CREATOR, tag.getArtist());",
                "+            metadata.set(XMPDM.ARTIST, tag.getArtist());",
                "+            metadata.set(XMPDM.ALBUM_ARTIST, tag.getAlbumArtist());",
                "+            metadata.set(XMPDM.COMPOSER, tag.getComposer());",
                "+            metadata.set(XMPDM.ALBUM, tag.getAlbum());",
                "+            metadata.set(XMPDM.COMPILATION, tag.getCompilation());",
                "+            metadata.set(XMPDM.RELEASE_DATE, tag.getYear());",
                "+            metadata.set(XMPDM.GENRE, tag.getGenre());",
                "-           xhtml.element(\"h1\", tag.getTitle());",
                "-           xhtml.element(\"p\", tag.getArtist());",
                "+            for (ID3Comment comment : tag.getComments()) {",
                "+                StringBuffer cmt = new StringBuffer();",
                "+                if (comment.getLanguage() != null) {",
                "+                    cmt.append(comment.getLanguage());",
                "+                    cmt.append(\" - \");",
                "+                }",
                "+                if (comment.getDescription() != null) {",
                "+                    cmt.append(comment.getDescription());",
                "+                    if (comment.getText() != null) {",
                "+                        cmt.append(\"\\n\");",
                "+                    }",
                "+                }",
                "+                if (comment.getText() != null) {",
                "+                    cmt.append(comment.getText());",
                "+                }",
                "+",
                "+                comments.add(cmt.toString());",
                "+                metadata.add(XMPDM.LOG_COMMENT.getName(), cmt.toString());",
                "+            }",
                "@@ -121,32 +143,17 @@ public class Mp3Parser extends AbstractParser {",
                "             }",
                "+",
                "+            xhtml.element(\"h1\", tag.getTitle());",
                "+            xhtml.element(\"p\", tag.getArtist());",
                "+",
                "+",
                "             xhtml.element(\"p\", sb.toString());",
                "-            ",
                "+",
                "             xhtml.element(\"p\", tag.getYear());",
                "             xhtml.element(\"p\", tag.getGenre());",
                "-            xhtml.element(\"p\", String.valueOf(audioAndTags.duration));",
                "-            for (String comment : comments) {",
                "-               xhtml.element(\"p\", comment);",
                "-            }",
                "         }",
                "-        if (audioAndTags.duration > 0) {",
                "-            metadata.set(XMPDM.DURATION, audioAndTags.duration);",
                "-        }",
                "-        if (audioAndTags.audio != null) {",
                "-            metadata.set(\"samplerate\", String.valueOf(audioAndTags.audio.getSampleRate()));",
                "-            metadata.set(\"channels\", String.valueOf(audioAndTags.audio.getChannels()));",
                "-            metadata.set(\"version\", audioAndTags.audio.getVersion());",
                "-            ",
                "-            metadata.set(",
                "-                    XMPDM.AUDIO_SAMPLE_RATE,",
                "-                    Integer.toString(audioAndTags.audio.getSampleRate()));",
                "-            if(audioAndTags.audio.getChannels() == 1) {",
                "-               metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"Mono\");",
                "-            } else if(audioAndTags.audio.getChannels() == 2) {",
                "-               metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"Stereo\");",
                "-            } else if(audioAndTags.audio.getChannels() == 5) {",
                "-               metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"5.1\");",
                "-            } else if(audioAndTags.audio.getChannels() == 7) {",
                "-               metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, \"7.1\");",
                "-            }",
                "+        xhtml.element(\"p\", String.valueOf(audioAndTags.duration));",
                "+        for (String comment : comments) {",
                "+            xhtml.element(\"p\", comment);",
                "         }",
                "+",
                "         if (audioAndTags.lyrics != null && audioAndTags.lyrics.hasLyrics()) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2761": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f7c3ece80e2db7e060deb0be3746d7dfa003303b"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2761",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ed1e2f398badff61dfc234e2dd299bbcd0947c73",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537294222,
            "hunks": 3,
            "message": "TIKA-2729 -- child process should run in headless mode.",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index d9b3c5432..8c780cdc5 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -130,2 +130,3 @@ public class TikaServerWatchDog {",
                "         List<String> jvmArgs = new ArrayList<>();",
                "+        boolean foundHeadlessOption = false;",
                "         for (int i = 0; i < args.length; i++) {",
                "@@ -134,3 +135,11 @@ public class TikaServerWatchDog {",
                "             }",
                "+            if (args[i].contains(\"java.awt.headless\")) {",
                "+                foundHeadlessOption = true;",
                "+            }",
                "+        }",
                "+        //if user has already specified headless...don't modify",
                "+        if (! foundHeadlessOption) {",
                "+            jvmArgs.add(\"-Djava.awt.headless=true\");",
                "         }",
                "+",
                "         return jvmArgs;"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2729": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e8e7d7d07244e1bc01e3875df352c386401b0f5c"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2729",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "af1929e55a4df2026d1305479788c6791d6da9c1",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537812799,
            "hunks": 4,
            "message": "TIKA-2733 -- improve oom unit test and error/logging when the child process can't start in tika-server",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "index e3242d11b..35ee7b5f3 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "@@ -119,3 +119,3 @@ public class TikaServerCli {",
                "             e.printStackTrace();",
                "-            LOG.error(\"Can't start\", e);",
                "+            LOG.error(\"Can't start: \", e);",
                "             System.exit(-1);",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index 8c780cdc5..abd5663aa 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -19,2 +19,3 @@ package org.apache.tika.server;",
                "+import org.apache.commons.io.IOUtils;",
                " import org.slf4j.Logger;",
                "@@ -25,2 +26,3 @@ import java.io.DataOutputStream;",
                " import java.io.IOException;",
                "+import java.nio.charset.StandardCharsets;",
                " import java.time.Duration;",
                "@@ -163,4 +165,17 @@ public class TikaServerWatchDog {",
                "             if (status != ServerStatus.STATUS.OPERATING.getByte()) {",
                "-                throw new IOException(\"bad status from child process: \"+",
                "-                        ServerStatus.STATUS.lookup(status));",
                "+                try {",
                "+                    ServerStatus.STATUS currStatus = ServerStatus.STATUS.lookup(status);",
                "+                    throw new IOException(\"bad status from child process: \"+",
                "+                             currStatus);",
                "+                } catch (ArrayIndexOutOfBoundsException e) {",
                "+                    //swallow",
                "+                }",
                "+                int len = process.getInputStream().available();",
                "+                byte[] msg = new byte[len+1];",
                "+                msg[0] = status;",
                "+                process.getInputStream().read(msg, 1, len);",
                "+",
                "+                throw new IOException(",
                "+                        \"Unrecognized status code; message:\\n\"+new String(msg, StandardCharsets.UTF_8));",
                "+",
                "             }"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2733": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f75ba632e02d26ca2f3471135e31db54cc43d069"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2733",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "02560a13408de42c960bab2807d8baec8ba2ab08",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540947992,
            "hunks": 0,
            "message": "Merge pull request #251 from lewismc/TIKA-2762 TIKA-2762 Capture short fields (<150 chars) in EnviParserHeader Metadata",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2762": ""
            },
            "ghissue_refs": {
                "251": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2762",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 251",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "65d18af4a0cae4838e9e1a33b3c3e1eda55f5b28",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539780970,
            "hunks": 26,
            "message": "TIKA-2756 -- factor out code that relies on the old commons-lang... once Jackcess migrates to lang3, we'll be good to go.",
            "diff": [
                "diff --git a/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java b/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java",
                "index 2c994146a..f953db33f 100644",
                "--- a/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java",
                "+++ b/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java",
                "@@ -20,3 +20,3 @@ package org.apache.tika.cli;",
                "-import org.apache.commons.lang.SystemUtils;",
                "+import org.apache.commons.lang3.SystemUtils;",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index fadbafc3d..e6b35477f 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -176,2 +176,3 @@",
                "               commons-lang|",
                "+              commons-lang3|",
                "               tagsoup|",
                "@@ -284,2 +285,3 @@",
                "               org.apache.commons.httpclient.util;resolution:=optional,",
                "+",
                "               org.apache.commons.math3.exception;resolution:=optional,",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fa5e50e7d..67981f9ac 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -147,2 +147,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-lang3</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index d6bdbb8bc..0c4e86e7c 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -108,3 +108,3 @@",
                "             <artifactId>commons-lang3</artifactId>",
                "-            <version>3.6</version>",
                "+            <version>${commons.lang3.version}</version>",
                "         </dependency>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index b22dd3be1..d77aa149f 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -310,2 +310,3 @@",
                "     <commons.io.version>2.6</commons.io.version>",
                "+    <commons.lang3.version>3.8.1</commons.lang3.version>",
                "     <gson.version>2.8.5</gson.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 9adb65f5a..df4f7e10c 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -98,2 +98,8 @@",
                "+    <dependency>",
                "+      <groupId>org.apache.commons</groupId>",
                "+      <artifactId>commons-lang3</artifactId>",
                "+      <version>${commons.lang3.version}</version>",
                "+    </dependency>",
                "+",
                "     <!-- Externally Maintained Parsers -->",
                "@@ -113,3 +119,3 @@",
                "       <artifactId>jackcess</artifactId>",
                "-      <version>2.1.12</version>",
                "+      <version>2.2.0</version>",
                "       <exclusions>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "index 650694a6e..89730f0f3 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "@@ -18,3 +18,3 @@ package org.apache.tika.parser.html.charsetdetector.charsets;",
                "-import org.apache.commons.lang.NotImplementedException;",
                "+import org.apache.commons.lang3.NotImplementedException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "index b09f19d59..4786cc846 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "@@ -23,3 +23,2 @@ import com.healthmarketscience.jackcess.util.MemFileChannel;",
                " import com.healthmarketscience.jackcess.util.OleBlob;",
                "-import org.apache.commons.lang.builder.ToStringBuilder;",
                " import org.apache.poi.poifs.filesystem.DirectoryEntry;",
                "@@ -197,17 +196,3 @@ class JackcessCompoundOleUtil implements JackcessOleUtil.CompoundPackageFactory",
                "-        @Override",
                "-        public String toString() {",
                "-            ToStringBuilder sb = toString(CustomToStringStyle.builder(this));",
                "-",
                "-            try {",
                "-                sb.append(\"hasContentsEntry\", hasContentsEntry());",
                "-                sb.append(\"entries\", getEntries(new ArrayList<Entry>(),",
                "-                        getFileSystem().getRoot(),",
                "-                        ENTRY_SEPARATOR));",
                "-            } catch (IOException e) {",
                "-                sb.append(\"entries\", \"<\" + e + \">\");",
                "-            }",
                "-            return sb.toString();",
                "-        }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "index a1432d641..10a5adeac 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "@@ -37,3 +37,2 @@ import com.healthmarketscience.jackcess.util.OleBlob;",
                " import static com.healthmarketscience.jackcess.util.OleBlob.*;",
                "-import org.apache.commons.lang.builder.ToStringBuilder;",
                "@@ -563,13 +562,2 @@ class JackcessOleUtil {",
                "-            @Override",
                "-            public String toString() {",
                "-                ToStringBuilder sb = CustomToStringStyle.builder(this);",
                "-                if(_content != null) {",
                "-                    sb.append(\"content\", _content);",
                "-                } else {",
                "-                    sb.append(\"bytes\", _bytes);",
                "-                    sb.append(\"content\", \"(uninitialized)\");",
                "-                }",
                "-                return sb.toString();",
                "-            }",
                "         }",
                "@@ -596,6 +584,2 @@ class JackcessOleUtil {",
                "-            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "-                sb.append(\"type\", getType());",
                "-                return sb;",
                "-            }",
                "         }",
                "@@ -626,11 +610,2 @@ class JackcessOleUtil {",
                "             }",
                "-",
                "-            @Override",
                "-            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "-                super.toString(sb);",
                "-                if(_position >= 0) {",
                "-                    sb.append(\"content\", ByteBuffer.wrap(_blob._bytes, _position, _length));",
                "-                }",
                "-                return sb;",
                "-            }",
                "         }",
                "@@ -667,10 +642,2 @@ class JackcessOleUtil {",
                "-            @Override",
                "-            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "-                sb.append(\"prettyName\", _prettyName)",
                "-                        .append(\"className\", _className)",
                "-                        .append(\"typeName\", _typeName);",
                "-                super.toString(sb);",
                "-                return sb;",
                "-            }",
                "         }",
                "@@ -715,11 +682,2 @@ class JackcessOleUtil {",
                "             }",
                "-",
                "-            @Override",
                "-            public String toString() {",
                "-                return toString(CustomToStringStyle.builder(this))",
                "-                        .append(\"fileName\", _fileName)",
                "-                        .append(\"linkPath\", _linkPath)",
                "-                        .append(\"filePath\", _filePath)",
                "-                        .toString();",
                "-            }",
                "         }",
                "@@ -762,10 +720,2 @@ class JackcessOleUtil {",
                "-            @Override",
                "-            public String toString() {",
                "-                return toString(CustomToStringStyle.builder(this))",
                "-                        .append(\"fileName\", _fileName)",
                "-                        .append(\"filePath\", _filePath)",
                "-                        .append(\"localFilePath\", _localFilePath)",
                "-                        .toString();",
                "-            }",
                "         }",
                "@@ -787,7 +737,2 @@ class JackcessOleUtil {",
                "-            @Override",
                "-            public String toString() {",
                "-                return toString(CustomToStringStyle.builder(this))",
                "-                        .toString();",
                "-            }",
                "         }",
                "@@ -804,8 +749,2 @@ class JackcessOleUtil {",
                "-            @Override",
                "-            public String toString() {",
                "-                return toString(CustomToStringStyle.builder(this))",
                "-                        .append(\"content\", _blob._bytes)",
                "-                        .toString();",
                "-            }",
                "         }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "index ca9f14387..5c6c517e1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "@@ -23,3 +23,3 @@ import org.apache.commons.io.FileUtils;",
                " import org.apache.commons.io.IOUtils;",
                "-import org.apache.commons.lang.SystemUtils;",
                "+import org.apache.commons.lang3.SystemUtils;",
                " import org.apache.tika.config.Field;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java",
                "index a8527ea6d..fd37ea3e5 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java",
                "@@ -25,3 +25,3 @@ import java.io.InputStream;",
                "-import org.apache.commons.lang.StringUtils;",
                "+import org.apache.commons.lang3.StringUtils;",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 6de0d3ba3..b55aed87a 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -106,5 +106,5 @@",
                "     <dependency>",
                "-      <groupId>commons-lang</groupId>",
                "-      <artifactId>commons-lang</artifactId>",
                "-      <version>2.6</version> <!-- should sync with Jackcess in tika-parsers -->",
                "+      <groupId>org.apache.commons</groupId>",
                "+      <artifactId>commons-lang3</artifactId>",
                "+      <version>${commons.lang3.version}</version>",
                "     </dependency>",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "index 2452430f7..964577c4a 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "@@ -19,4 +19,2 @@ package org.apache.tika.server;",
                "-import org.apache.commons.io.IOUtils;",
                "-import org.apache.commons.lang.StringUtils;",
                " import org.apache.tika.utils.ProcessUtils;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index d832aa9d0..1d31e3f9f 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -19,3 +19,3 @@ package org.apache.tika.server.resource;",
                "-import org.apache.commons.lang.StringUtils;",
                "+import org.apache.commons.lang3.StringUtils;",
                " import org.apache.cxf.attachment.ContentDisposition;",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java",
                "index fd3f4e97c..a31c5abbd 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java",
                "@@ -43,3 +43,3 @@ import au.com.bytecode.opencsv.CSVWriter;",
                " import org.apache.commons.io.FilenameUtils;",
                "-import org.apache.commons.lang.mutable.MutableInt;",
                "+import org.apache.commons.lang3.mutable.MutableInt;",
                " import org.apache.poi.poifs.filesystem.DirectoryEntry;"
            ],
            "changed_files": [
                "tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java",
                "tika-bundle/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java",
                "tika-server/pom.xml",
                "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2756": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "86e997510b44f12dc9f90a68aaf583d5d3912892"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2756",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e8bcfced7acd0f3f3f5d253c529fe4f96277b2d6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537892480,
            "hunks": 11,
            "message": "TIKA-2736 -- improve reports for comparisons",
            "diff": [
                "diff --git a/tika-eval/src/main/resources/comparison-reports.xml b/tika-eval/src/main/resources/comparison-reports.xml",
                "index 06b5c285b..bba7f01fa 100644",
                "--- a/tika-eval/src/main/resources/comparison-reports.xml",
                "+++ b/tika-eval/src/main/resources/comparison-reports.xml",
                "@@ -61,19 +61,22 @@",
                "         <sql>",
                "-            create table exceptions_compared",
                "-            (mime_id_a integer, mime_id_b integer,",
                "-            exceptions_a integer default 0,",
                "-            total_a integer default 0,",
                "-            percent_exceptions_a double default 0.0,",
                "-            exceptions_b integer default 0,",
                "-            total_b integer default 0,",
                "-            percent_exceptions_b double default 0.0);",
                "+            create table exceptions_compared (",
                "+            mime_id_a integer,",
                "+            mime_id_b integer,",
                "+            total integer,",
                "+            exc_cnt_a integer,",
                "+            exc_cnt_b integer,",
                "+            exc_prcnt_a float,",
                "+            exc_prcnt_b float,",
                "+            notes varchar(12)",
                "+            );",
                "         </sql>",
                "         <sql>",
                "-            insert into exceptions_compared (mime_id_a, mime_id_b)",
                "-            select ma.mime_id, mb.mime_id",
                "-            from profiles_a a",
                "-            join profiles_b b on a.id=b.id",
                "-            join mimes ma on ma.mime_id=a.mime_id",
                "-            join mimes mb on mb.mime_id=b.mime_id",
                "+            insert into exceptions_compared (",
                "+            select ma.mime_id, mb.mime_id, count(1) as total, 0, 0, 0.0, 0.0, ''",
                "+            from profiles_a pa",
                "+            join profiles_b pb on pa.id=pb.id",
                "+            join mimes ma on pa.mime_id = ma.mime_id",
                "+            join mimes mb on pb.mime_id = mb.mime_id",
                "             group by ma.mime_id, mb.mime_id",
                "+            order by total desc );",
                "         </sql>",
                "@@ -81,36 +84,34 @@",
                "         <sql>",
                "-            update exceptions_compared ec set total_a=(",
                "-            select count(1) as cnt from profiles_a pa",
                "-            join profiles_b pb on pa.id=pb.id",
                "-            where pa.mime_id= ec.mime_id_a",
                "-            and pb.mime_id=ec.mime_id_b",
                "-            group by pa.mime_id, pb.mime_id);",
                "+            update exceptions_compared ec set",
                "+            exc_cnt_a = (",
                "+            select count(1) as cnt",
                "+            from exceptions_a ea",
                "+            join profiles_a pa on ea.id=pa.id",
                "+            join profiles_b pb on pb.id=pa.id",
                "+            join mimes ma on pa.mime_id=ma.mime_id",
                "+            join mimes mb on pb.mime_id=mb.mime_id",
                "+            where ma.mime_id= ec.mime_id_a and mb.mime_id=ec.mime_id_b",
                "+            group by ma.mime_id, mb.mime_id);",
                "         </sql>",
                "         <sql>",
                "-            update exceptions_compared ec set total_b=(",
                "-            select count(1) as cnt from profiles_b pb",
                "+            update exceptions_compared ec set",
                "+            exc_cnt_b = (",
                "+            select count(1) as cnt",
                "+            from exceptions_b eb",
                "+            join profiles_b pb on eb.id=pb.id",
                "             join profiles_a pa on pa.id=pb.id",
                "-            where pa.mime_id= ec.mime_id_a",
                "-            and pb.mime_id=ec.mime_id_b",
                "-            group by pb.mime_id, pa.mime_id);",
                "+            join mimes ma on pa.mime_id=ma.mime_id",
                "+            join mimes mb on pb.mime_id=mb.mime_id",
                "+            where ma.mime_id= ec.mime_id_a and mb.mime_id=ec.mime_id_b",
                "+            group by mb.mime_id, ma.mime_id);",
                "         </sql>",
                "         <sql>",
                "-            update exceptions_compared ec set exceptions_a=",
                "-            ( select count(1) as cnt from exceptions_a ea",
                "-            join profiles_a pa on pa.id=ea.id",
                "-            join profiles_b pb on pb.id=pa.id",
                "-            where pa.mime_id= ec.mime_id_a",
                "-            and pb.mime_id=ec.mime_id_b",
                "-            and parse_exception_id=0",
                "-            group by pa.mime_id, pb.mime_id);",
                "+            update exceptions_compared",
                "+            set exc_prcnt_a = cast(exc_cnt_a as decimal)/cast(total as decimal)",
                "+            where total > 0;",
                "         </sql>",
                "         <sql>",
                "-            update exceptions_compared ec set exceptions_b=",
                "-            ( select count(1) as cnt from exceptions_b eb",
                "-            join profiles_b pb on pb.id=eb.id",
                "-            join profiles_a pa on pa.id=pb.id",
                "-            where pa.mime_id= ec.mime_id_a",
                "-            and pb.mime_id=ec.mime_id_b",
                "-            and parse_exception_id=0",
                "-            group by pb.mime_id, pa.mime_id);",
                "+            update exceptions_compared",
                "+            set exc_prcnt_b = cast(exc_cnt_b as decimal)/cast(total as decimal)",
                "+            where total > 0;",
                "         </sql>",
                "@@ -119,5 +120,4 @@",
                "             update exceptions_compared",
                "-            set percent_exceptions_a =",
                "-            (cast (exceptions_a as decimal))/(cast (total_a as decimal))",
                "-            where total_a &gt; 0",
                "+            set notes = 'YAY!'",
                "+            where total > 100 and (exc_prcnt_a-exc_prcnt_b) > 0.10;",
                "         </sql>",
                "@@ -125,5 +125,4 @@",
                "             update exceptions_compared",
                "-            set percent_exceptions_b =",
                "-            (cast (exceptions_b as decimal))/(cast (total_b as decimal))",
                "-            where total_b &gt; 0",
                "+            set notes = 'YIKES!'",
                "+            where total > 100 and (exc_prcnt_b-exc_prcnt_a) > 0.10;",
                "         </sql>",
                "@@ -862,9 +861,12 @@",
                "         <sql>",
                "-            select ma.mime_string, mb.mime_string, exceptions_a,",
                "-            total_a, percent_exceptions_a,",
                "-            exceptions_b, total_b, percent_exceptions_b",
                "-            from exceptions_compared c",
                "-            join mimes ma on ma.mime_id=c.mime_id_a",
                "-            join mimes mb on mb.mime_id=c.mime_id_b",
                "-            order by percent_exceptions_b desc, total_b desc;",
                "+            select ma.mime_string as mime_string_a, mb.mime_string as mime_string_b,",
                "+            total, exc_cnt_a,",
                "+            exc_cnt_b,",
                "+            exc_prcnt_a,",
                "+            exc_prcnt_b, notes",
                "+",
                "+            from exceptions_compared e",
                "+            join mimes ma on ma.mime_id=e.mime_id_a",
                "+            join mimes mb on mb.mime_id=e.mime_id_b",
                "+            order by (exc_prcnt_b-exc_prcnt_a) desc, total desc;",
                "         </sql>"
            ],
            "changed_files": [
                "tika-eval/src/main/resources/comparison-reports.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2736": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "55742a4ebfeb78e019cb1f3e865ad6bea12b0e35"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2736",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "92e488bb58472b94e5cff8e9153825128f0eb462",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536253263,
            "hunks": 11,
            "message": "TIKA-2719 -- add automatic module names",
            "diff": [
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 6eef33b27..f40ecb4c9 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -166,2 +166,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.app</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index a010a3d20..48c09caaa 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -150,2 +150,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.batch</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index df168c1b6..0d6a22b91 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -96,2 +96,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.core</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 278852e18..37d4966d4 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -339,2 +339,14 @@",
                "       </plugin>",
                "+      <plugin>",
                "+        <groupId>org.apache.maven.plugins</groupId>",
                "+        <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.dl</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "+      </plugin>",
                "+",
                "       <plugin>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 9289116e3..10c1470d9 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -226,2 +226,9 @@",
                "                     <artifactId>maven-jar-plugin</artifactId>",
                "+                    <configuration>",
                "+                        <archive>",
                "+                            <manifestEntries>",
                "+                                <Automatic-Module-Name>org.apache.tika.eval</Automatic-Module-Name>",
                "+                            </manifestEntries>",
                "+                        </archive>",
                "+                    </configuration>",
                "                     <executions>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index b879a7bb8..5f270cf33 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -141,2 +141,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.langdetect</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 18cfba562..f62a3956b 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -848,2 +848,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.parsers</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index a04627f34..fa81291a1 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -70,2 +70,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.serialization</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 323ec6ab9..e0b35fef0 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -279,2 +279,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.server</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 0709ab7b2..704d5d9d2 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -137,2 +137,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.translate</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 46f33450d..11358a5af 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -61,2 +61,9 @@",
                "         <artifactId>maven-jar-plugin</artifactId>",
                "+        <configuration>",
                "+          <archive>",
                "+            <manifestEntries>",
                "+              <Automatic-Module-Name>org.apache.tika.xmp</Automatic-Module-Name>",
                "+            </manifestEntries>",
                "+          </archive>",
                "+        </configuration>",
                "         <executions>"
            ],
            "changed_files": [
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2719": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b99086ef54ada9fff2ca54c46528a204d6c36fc1"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2719",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b702934ef5fb5b8735bed995616a6a277a6cbbfb",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543470,
            "hunks": 0,
            "message": "Merge pull request #244 from HansBrende/TIKA-2690 fix for TIKA-2690 contributed by HansBrende",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2690": ""
            },
            "ghissue_refs": {
                "244": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2690",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 244",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "44c227904681c99097f3c2b0ef87379da0270a98",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536156018,
            "hunks": 1,
            "message": "TIKA-2722 -- remove dead code and prevent potentially bad date.toString() call.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "index a87991135..f47e5e9ed 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "@@ -487,7 +487,2 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "-    private void addMetadata(Metadata metadata, String name, Calendar value) {",
                "-        if (value != null) {",
                "-            metadata.set(name, value.getTime().toString());",
                "-        }",
                "-    }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0951bf96f4654c6ef314e2cd49b54b2add4b5d4c"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "180aaa213d2dc697f8bad0eafdb9d316ad307218",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532623149,
            "hunks": 4,
            "message": "TIKA-2692 -- minimal upgrades to allow building w Java 11-ea",
            "diff": [
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 702145383..d80e6019d 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -122,2 +122,10 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>javax.ws.rs</groupId>",
                "+          <artifactId>javax.ws.rs-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>javax.annotation</groupId>",
                "+          <artifactId>javax.annotation-api</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -196,3 +204,3 @@",
                "       <artifactId>mockito-core</artifactId>",
                "-      <version>2.15.0</version>",
                "+      <version>${mockito.version}</version>",
                "       <scope>test</scope>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index c908517e7..bb9348a3a 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -315,2 +315,3 @@",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "+    <mockito.version>2.20.0</mockito.version>",
                "   </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index c4923cfb3..655322b81 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -430,3 +430,3 @@",
                "       <artifactId>mockito-core</artifactId>",
                "-      <version>2.15.0</version>",
                "+      <version>${mockito.version}</version>",
                "       <scope>test</scope>"
            ],
            "changed_files": [
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6b377548bd75cff248bffce95177b53cf414a881"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bb10dc205eee2a0f5e684153820bfb7babccc627",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536246662,
            "hunks": 132,
            "message": "TIKA-2552 -- upgrade to POI 4.0.0",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index c9d635de2..e265636f6 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -284,2 +284,4 @@",
                "               org.apache.commons.httpclient.util;resolution:=optional,",
                "+              org.apache.commons.math3.exception;resolution:=optional,",
                "+              org.apache.commons.math3.linear;resolution:=optional,",
                "               org.apache.commons.vfs2;resolution:=optional,",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index c7d28fdbe..9289116e3 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -38,3 +38,3 @@",
                "         <lucene.version>7.4.0</lucene.version>",
                "-        <poi.version>3.17</poi.version>",
                "+        <poi.version>4.0.0</poi.version>",
                "     </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 737129ffc..18cfba562 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -37,3 +37,3 @@",
                "   <properties>",
                "-    <poi.version>3.17</poi.version>",
                "+    <poi.version>4.0.0</poi.version>",
                "     <!-- NOTE: sync codec version with POI -->",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "index ff5971aab..0dd86ba92 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "@@ -66,3 +66,3 @@ import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "@@ -141,3 +141,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml,",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml,",
                "             Locale locale) throws IOException, SAXException, TikaException {",
                "@@ -275,3 +275,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "          */",
                "-        public void processFile(NPOIFSFileSystem filesystem, boolean listenForAllRecords)",
                "+        public void processFile(POIFSFileSystem filesystem, boolean listenForAllRecords)",
                "                 throws IOException, SAXException, TikaException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "index 7057cbe0a..5095709f4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "@@ -26,5 +26,3 @@ import org.apache.poi.common.usermodel.Hyperlink;",
                " import org.apache.poi.hslf.exceptions.EncryptedPowerPointFileException;",
                "-import org.apache.poi.hslf.model.Comment;",
                " import org.apache.poi.hslf.model.HeadersFooters;",
                "-import org.apache.poi.hslf.model.OLEShape;",
                " import org.apache.poi.hslf.record.DocInfoListContainer;",
                "@@ -37,2 +35,3 @@ import org.apache.poi.hslf.usermodel.HSLFNotes;",
                " import org.apache.poi.hslf.usermodel.HSLFObjectData;",
                "+import org.apache.poi.hslf.usermodel.HSLFObjectShape;",
                " import org.apache.poi.hslf.usermodel.HSLFPictureData;",
                "@@ -48,3 +47,5 @@ import org.apache.poi.hslf.usermodel.HSLFTextShape;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "+import org.apache.poi.sl.usermodel.Comment;",
                "+import org.apache.poi.sl.usermodel.SimpleShape;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -69,3 +70,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "@@ -271,5 +272,5 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             if (objData.getExOleObjStg().getPersistId() == persistId) {",
                "-                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getData())) {",
                "+                try (POIFSFileSystem poifsFileSystem = new POIFSFileSystem(objData.getInputStream())) {",
                "                     try {",
                "-                        OfficeParser.extractMacros(npoifsFileSystem, xhtml,",
                "+                        OfficeParser.extractMacros(poifsFileSystem, xhtml,",
                "                                 EmbeddedDocumentUtil.getEmbeddedDocumentExtractor(context));",
                "@@ -297,3 +298,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape != null && !HSLFMasterSheet.isPlaceholder(shape)) {",
                "+            if (shape != null && ! isPlaceholder(shape)) {",
                "                 if (shape instanceof HSLFTextShape) {",
                "@@ -310,2 +311,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "+    private boolean isPlaceholder(HSLFShape shape) {",
                "+        return shape instanceof SimpleShape && ((SimpleShape)shape).isPlaceholder();",
                "+    }",
                "+",
                "     private void extractTableText(XHTMLContentHandler xhtml, HSLFTable shape) throws SAXException {",
                "@@ -451,4 +456,4 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape instanceof OLEShape) {",
                "-                OLEShape oleShape = (OLEShape) shape;",
                "+            if (shape instanceof HSLFObjectShape) {",
                "+                HSLFObjectShape oleShape = (HSLFObjectShape) shape;",
                "                 HSLFObjectData data = null;",
                "@@ -476,3 +481,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                     try {",
                "-                        dataStream = data.getData();",
                "+                        dataStream = data.getInputStream();",
                "                     } catch (Exception e) {",
                "@@ -483,3 +488,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                         String mediaType = null;",
                "-                        if (\"Excel.Chart.8\".equals(oleShape.getProgID())) {",
                "+                        if (\"Excel.Chart.8\".equals(oleShape.getProgId())) {",
                "                             mediaType = \"application/vnd.ms-excel\";",
                "@@ -491,6 +496,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                                 || mediaType.equals(\"application/x-tika-msoffice\")) {",
                "-                            NPOIFSFileSystem npoifs = null;",
                "+                            POIFSFileSystem poifs = null;",
                "                             try {",
                "-                                npoifs = new NPOIFSFileSystem(new CloseShieldInputStream(stream));",
                "+                                poifs = new POIFSFileSystem(new CloseShieldInputStream(stream));",
                "                             } catch (RuntimeException e) {",
                "@@ -499,6 +504,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                             try {",
                "-                                handleEmbeddedOfficeDoc(npoifs.getRoot(), objID, xhtml);",
                "+                                handleEmbeddedOfficeDoc(poifs.getRoot(), objID, xhtml);",
                "                             } finally {",
                "-                                if (npoifs != null) {",
                "-                                    npoifs.close();",
                "+                                if (poifs != null) {",
                "+                                    poifs.close();",
                "                                 }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "new file mode 100644",
                "index 000000000..b09f19d59",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "@@ -0,0 +1,268 @@",
                "+/*",
                "+Copyright (c) 2013 James Ahlborn",
                "+",
                "+Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+you may not use this file except in compliance with the License.",
                "+You may obtain a copy of the License at",
                "+",
                "+http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+Unless required by applicable law or agreed to in writing, software",
                "+distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+See the License for the specific language governing permissions and",
                "+limitations under the License.",
                "+*/",
                "+",
                "+package org.apache.tika.parser.microsoft;",
                "+",
                "+import com.healthmarketscience.jackcess.RuntimeIOException;",
                "+import com.healthmarketscience.jackcess.impl.ByteUtil;",
                "+import com.healthmarketscience.jackcess.impl.CustomToStringStyle;",
                "+import com.healthmarketscience.jackcess.util.MemFileChannel;",
                "+import com.healthmarketscience.jackcess.util.OleBlob;",
                "+import org.apache.commons.lang.builder.ToStringBuilder;",
                "+import org.apache.poi.poifs.filesystem.DirectoryEntry;",
                "+import org.apache.poi.poifs.filesystem.DocumentEntry;",
                "+import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "+",
                "+import java.io.FileNotFoundException;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+import java.io.UnsupportedEncodingException;",
                "+import java.net.URLDecoder;",
                "+import java.net.URLEncoder;",
                "+import java.nio.ByteBuffer;",
                "+import java.util.ArrayList;",
                "+import java.util.Iterator;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * Temporary copy/paste from Jackcess to allow upgrade to POI 4.0.0.",
                "+ * This class will be removed once POI 4.0.0 is released and jackcess",
                "+ * updates to the most recent version of POI.",
                "+ * @deprecated -- this class will be removed in Tika >= 1.20",
                "+ */",
                "+@Deprecated",
                "+class JackcessCompoundOleUtil implements JackcessOleUtil.CompoundPackageFactory {",
                "+    private static final String ENTRY_NAME_CHARSET = \"UTF-8\";",
                "+    private static final String ENTRY_SEPARATOR = \"/\";",
                "+    private static final String CONTENTS_ENTRY = \"CONTENTS\";",
                "+",
                "+    static {",
                "+        // force a poi class to be loaded to ensure that when this class is",
                "+        // loaded, we know that the poi classes are available",
                "+        POIFSFileSystem.class.getName();",
                "+    }",
                "+",
                "+    public JackcessCompoundOleUtil() {",
                "+    }",
                "+",
                "+    /**",
                "+     * Creates a nes CompoundContent for the given blob information.",
                "+     */",
                "+    public JackcessOleUtil.ContentImpl createCompoundPackageContent(",
                "+            JackcessOleUtil.OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+            ByteBuffer blobBb, int dataBlockLen) {",
                "+        return new CompoundContentImpl(blob, prettyName, className, typeName,",
                "+                blobBb.position(), dataBlockLen);",
                "+    }",
                "+",
                "+    /**",
                "+     * Gets a DocumentEntry from compound storage based on a fully qualified,",
                "+     * encoded entry name.",
                "+     *",
                "+     * @param entryName fully qualified, encoded entry name",
                "+     * @param dir       root directory of the compound storage",
                "+     * @return the relevant DocumentEntry",
                "+     * @throws FileNotFoundException if the entry does not exist",
                "+     * @throws IOException           if some other io error occurs",
                "+     */",
                "+    public static DocumentEntry getDocumentEntry(String entryName,",
                "+                                                 DirectoryEntry dir)",
                "+            throws IOException {",
                "+        // split entry name into individual components and decode them",
                "+        List<String> entryNames = new ArrayList<String>();",
                "+        for (String str : entryName.split(ENTRY_SEPARATOR)) {",
                "+            if (str.length() == 0) {",
                "+                continue;",
                "+            }",
                "+            entryNames.add(decodeEntryName(str));",
                "+        }",
                "+",
                "+        DocumentEntry entry = null;",
                "+        Iterator<String> iter = entryNames.iterator();",
                "+        while (iter.hasNext()) {",
                "+            org.apache.poi.poifs.filesystem.Entry tmpEntry = dir.getEntry(iter.next());",
                "+            if (tmpEntry instanceof DirectoryEntry) {",
                "+                dir = (DirectoryEntry) tmpEntry;",
                "+            } else if (!iter.hasNext() && (tmpEntry instanceof DocumentEntry)) {",
                "+                entry = (DocumentEntry) tmpEntry;",
                "+            } else {",
                "+                break;",
                "+            }",
                "+        }",
                "+",
                "+        if (entry == null) {",
                "+            throw new FileNotFoundException(\"Could not find document \" + entryName);",
                "+        }",
                "+",
                "+        return entry;",
                "+    }",
                "+",
                "+    private static String encodeEntryName(String name) {",
                "+        try {",
                "+            return URLEncoder.encode(name, ENTRY_NAME_CHARSET);",
                "+        } catch (UnsupportedEncodingException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    private static String decodeEntryName(String name) {",
                "+        try {",
                "+            return URLDecoder.decode(name, ENTRY_NAME_CHARSET);",
                "+        } catch (UnsupportedEncodingException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    private static final class CompoundContentImpl",
                "+            extends JackcessOleUtil.EmbeddedPackageContentImpl",
                "+            implements OleBlob.CompoundContent {",
                "+        private POIFSFileSystem _fs;",
                "+",
                "+        private CompoundContentImpl(",
                "+                JackcessOleUtil.OleBlobImpl blob, String prettyName, String className,",
                "+                String typeName, int position, int length) {",
                "+            super(blob, prettyName, className, typeName, position, length);",
                "+        }",
                "+",
                "+        public OleBlob.ContentType getType() {",
                "+            return OleBlob.ContentType.COMPOUND_STORAGE;",
                "+        }",
                "+",
                "+        private POIFSFileSystem getFileSystem() throws IOException {",
                "+            if (_fs == null) {",
                "+                _fs = new POIFSFileSystem(MemFileChannel.newChannel(getStream(), \"r\"));",
                "+            }",
                "+            return _fs;",
                "+        }",
                "+",
                "+        public Iterator<Entry> iterator() {",
                "+            try {",
                "+                return getEntries(new ArrayList<Entry>(), getFileSystem().getRoot(),",
                "+                        ENTRY_SEPARATOR).iterator();",
                "+            } catch (IOException e) {",
                "+                throw new RuntimeIOException(e);",
                "+            }",
                "+        }",
                "+",
                "+        public EntryImpl getEntry(String entryName) throws IOException {",
                "+            return new EntryImpl(entryName,",
                "+                    getDocumentEntry(entryName, getFileSystem().getRoot()));",
                "+        }",
                "+",
                "+        public boolean hasContentsEntry() throws IOException {",
                "+            return getFileSystem().getRoot().hasEntry(CONTENTS_ENTRY);",
                "+        }",
                "+",
                "+        public EntryImpl getContentsEntry() throws IOException {",
                "+            return getEntry(CONTENTS_ENTRY);",
                "+        }",
                "+",
                "+        private List<Entry> getEntries(List<Entry> entries, DirectoryEntry dir,",
                "+                                       String prefix) {",
                "+            for (org.apache.poi.poifs.filesystem.Entry entry : dir) {",
                "+                if (entry instanceof DirectoryEntry) {",
                "+                    // .. recurse into this directory",
                "+                    getEntries(entries, (DirectoryEntry) entry, prefix + ENTRY_SEPARATOR);",
                "+                } else if (entry instanceof DocumentEntry) {",
                "+                    // grab the entry name/detils",
                "+                    DocumentEntry de = (DocumentEntry) entry;",
                "+                    String entryName = prefix + encodeEntryName(entry.getName());",
                "+                    entries.add(new EntryImpl(entryName, de));",
                "+                }",
                "+            }",
                "+            return entries;",
                "+        }",
                "+",
                "+        @Override",
                "+        public void close() {",
                "+            ByteUtil.closeQuietly(_fs);",
                "+            _fs = null;",
                "+            super.close();",
                "+        }",
                "+",
                "+        @Override",
                "+        public String toString() {",
                "+            ToStringBuilder sb = toString(CustomToStringStyle.builder(this));",
                "+",
                "+            try {",
                "+                sb.append(\"hasContentsEntry\", hasContentsEntry());",
                "+                sb.append(\"entries\", getEntries(new ArrayList<Entry>(),",
                "+                        getFileSystem().getRoot(),",
                "+                        ENTRY_SEPARATOR));",
                "+            } catch (IOException e) {",
                "+                sb.append(\"entries\", \"<\" + e + \">\");",
                "+            }",
                "+",
                "+            return sb.toString();",
                "+        }",
                "+",
                "+        private final class EntryImpl implements OleBlob.CompoundContent.Entry {",
                "+            private final String _name;",
                "+            private final DocumentEntry _docEntry;",
                "+",
                "+            private EntryImpl(String name, DocumentEntry docEntry) {",
                "+                _name = name;",
                "+                _docEntry = docEntry;",
                "+            }",
                "+",
                "+            public OleBlob.ContentType getType() {",
                "+                return OleBlob.ContentType.UNKNOWN;",
                "+            }",
                "+",
                "+            public String getName() {",
                "+                return _name;",
                "+            }",
                "+",
                "+            public CompoundContentImpl getParent() {",
                "+                return CompoundContentImpl.this;",
                "+            }",
                "+",
                "+            public JackcessOleUtil.OleBlobImpl getBlob() {",
                "+                return getParent().getBlob();",
                "+            }",
                "+",
                "+            public long length() {",
                "+                return _docEntry.getSize();",
                "+            }",
                "+",
                "+            public InputStream getStream() throws IOException {",
                "+                return new DocumentInputStream(_docEntry);",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                InputStream in = null;",
                "+                try {",
                "+                    ByteUtil.copy(in = getStream(), out);",
                "+                } finally {",
                "+                    ByteUtil.closeQuietly(in);",
                "+                }",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return CustomToStringStyle.valueBuilder(this)",
                "+                        .append(\"name\", _name)",
                "+                        .append(\"length\", length())",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+    }",
                "+}",
                "+",
                "+",
                "+",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "index bf5c5d0cc..3a10346b2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "@@ -43,3 +43,3 @@ import com.healthmarketscience.jackcess.query.Query;",
                " import com.healthmarketscience.jackcess.util.OleBlob;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -304,4 +304,5 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "+",
                "     private void handleOLE(Row row, String cName, XHTMLContentHandler xhtml) throws IOException, SAXException, TikaException {",
                "-        OleBlob blob = row.getBlob(cName);",
                "+        OleBlob blob = getBlob(row, cName);",
                "         //lifted shamelessly from Jackcess's OleBlobTest",
                "@@ -369,5 +370,17 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "+    /*",
                "+       Temporary work around until POI 4.0.0 is released and jackcess upgrades",
                "+       This is copy/pasted from jackcess",
                "+    */",
                "+    private OleBlob getBlob(Row row, String cName) {",
                "+        byte[] bytes = row.getBytes(cName);",
                "+        if (bytes == null) {",
                "+            return null;",
                "+        }",
                "+        return JackcessOleUtil.parseBlob(bytes);",
                "+    }",
                "+",
                "     private void handleCompoundContent(OleBlob.CompoundContent cc, XHTMLContentHandler xhtml) throws IOException, SAXException, TikaException {",
                "         InputStream is = null;",
                "-        NPOIFSFileSystem nfs = null;",
                "+        POIFSFileSystem fileSystem = null;",
                "         try {",
                "@@ -381,3 +394,3 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "             try {",
                "-                nfs = new NPOIFSFileSystem(is);",
                "+                fileSystem = new POIFSFileSystem(is);",
                "             } catch (Exception e) {",
                "@@ -387,8 +400,8 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "-            handleEmbeddedOfficeDoc(nfs.getRoot(), xhtml);",
                "+            handleEmbeddedOfficeDoc(fileSystem.getRoot(), xhtml);",
                "         } finally {",
                "-            if (nfs != null) {",
                "+            if (fileSystem != null) {",
                "                 try {",
                "-                    nfs.close();",
                "+                    fileSystem.close();",
                "                 } catch (IOException e) {",
                "@@ -416,2 +429,3 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "     }",
                "+",
                " }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "new file mode 100644",
                "index 000000000..a1432d641",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "@@ -0,0 +1,813 @@",
                "+/*",
                "+Copyright (c) 2013 James Ahlborn",
                "+",
                "+Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+you may not use this file except in compliance with the License.",
                "+You may obtain a copy of the License at",
                "+",
                "+    http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+Unless required by applicable law or agreed to in writing, software",
                "+distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+See the License for the specific language governing permissions and",
                "+limitations under the License.",
                "+*/",
                "+",
                "+package org.apache.tika.parser.microsoft;",
                "+",
                "+import java.io.ByteArrayInputStream;",
                "+import java.io.Closeable;",
                "+import java.io.FileInputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.sql.Blob;",
                "+import java.sql.SQLException;",
                "+import java.sql.SQLFeatureNotSupportedException;",
                "+import java.text.Normalizer;",
                "+import java.util.EnumSet;",
                "+import java.util.Set;",
                "+import java.util.regex.Pattern;",
                "+",
                "+import com.healthmarketscience.jackcess.DataType;",
                "+import com.healthmarketscience.jackcess.util.OleBlob;",
                "+import static com.healthmarketscience.jackcess.util.OleBlob.*;",
                "+import org.apache.commons.lang.builder.ToStringBuilder;",
                "+",
                "+import com.healthmarketscience.jackcess.impl.ByteUtil;",
                "+import com.healthmarketscience.jackcess.impl.CustomToStringStyle;",
                "+import com.healthmarketscience.jackcess.impl.PageChannel;",
                "+",
                "+/**",
                "+ * Utility code for working with OLE data.",
                "+ * Temporary workaround until POI 4.0.0 is released and Jackcess is updated",
                "+ *",
                "+ *",
                "+ * @author James Ahlborn",
                "+ * @usage _advanced_class_",
                "+ * @deprecated this class will be removed in Tika >= 1.20",
                "+ */",
                "+@Deprecated",
                "+class JackcessOleUtil {",
                "+",
                "+",
                "+        /**",
                "+         * Interface used to allow optional inclusion of the poi library for working",
                "+         * with compound ole data.",
                "+         */",
                "+        interface CompoundPackageFactory",
                "+        {",
                "+            public ContentImpl createCompoundPackageContent(",
                "+                    OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+                    ByteBuffer blobBb, int dataBlockLen);",
                "+        }",
                "+",
                "+        private static final int PACKAGE_SIGNATURE = 0x1C15;",
                "+        private static final Charset OLE_CHARSET = Charset.forName(\"US-ASCII\");",
                "+        private static final Charset OLE_UTF_CHARSET = Charset.forName(\"UTF-16LE\");",
                "+        private static final byte[] COMPOUND_STORAGE_SIGNATURE =",
                "+                {(byte)0xd0,(byte)0xcf,(byte)0x11,(byte)0xe0,",
                "+                        (byte)0xa1,(byte)0xb1,(byte)0x1a,(byte)0xe1};",
                "+        private static final String SIMPLE_PACKAGE_TYPE = \"Package\";",
                "+        private static final int PACKAGE_OBJECT_TYPE = 0x02;",
                "+        private static final int OLE_VERSION = 0x0501;",
                "+        private static final int OLE_FORMAT = 0x02;",
                "+        private static final int PACKAGE_STREAM_SIGNATURE = 0x02;",
                "+        private static final int PS_EMBEDDED_FILE = 0x030000;",
                "+        private static final int PS_LINKED_FILE = 0x010000;",
                "+        private static final Set<ContentType> WRITEABLE_TYPES = EnumSet.of(",
                "+                ContentType.LINK, ContentType.SIMPLE_PACKAGE, ContentType.OTHER);",
                "+        private static final byte[] NO_DATA = new byte[0];",
                "+        private static final int LINK_HEADER = 0x01;",
                "+        private static final byte[] PACKAGE_FOOTER = {",
                "+                0x01, 0x05, 0x00, 0x00, 0x00, 0x00,",
                "+                0x00, 0x00, 0x01, (byte)0xAD, 0x05, (byte)0xFE",
                "+        };",
                "+",
                "+        // regex pattern which matches all the crazy extra stuff in unicode",
                "+        private static final Pattern UNICODE_ACCENT_PATTERN =",
                "+                Pattern.compile(\"[\\\\p{InCombiningDiacriticalMarks}\\\\p{IsLm}\\\\p{IsSk}]+\");",
                "+",
                "+        private static final CompoundPackageFactory COMPOUND_FACTORY;",
                "+",
                "+        static {",
                "+            CompoundPackageFactory compoundFactory = null;",
                "+            try {",
                "+                compoundFactory = (CompoundPackageFactory)",
                "+                        Class.forName(\"org.apache.tika.parser.microsoft.JackcessCompoundOleUtil\")",
                "+                                .newInstance();",
                "+            } catch(Throwable t) {",
                "+                // must not have poi, will load compound ole data as \"other\"",
                "+            }",
                "+            COMPOUND_FACTORY = compoundFactory;",
                "+        }",
                "+",
                "+        /**",
                "+         * Parses an access database blob structure and returns an appropriate",
                "+         * OleBlob instance.",
                "+         */",
                "+        public static OleBlob parseBlob(byte[] bytes) {",
                "+            return new OleBlobImpl(bytes);",
                "+        }",
                "+",
                "+        /**",
                "+         * Creates a new OlBlob instance using the given information.",
                "+         */",
                "+        public static OleBlob createBlob(Builder oleBuilder)",
                "+                throws IOException",
                "+        {",
                "+            try {",
                "+",
                "+                if(!WRITEABLE_TYPES.contains(oleBuilder.getType())) {",
                "+                    throw new IllegalArgumentException(",
                "+                            \"Cannot currently create ole values of type \" +",
                "+                                    oleBuilder.getType());",
                "+                }",
                "+",
                "+                long contentLen = oleBuilder.getContentLength();",
                "+                byte[] contentBytes = oleBuilder.getBytes();",
                "+                InputStream contentStream = oleBuilder.getStream();",
                "+                byte[] packageStreamHeader = NO_DATA;",
                "+                byte[] packageStreamFooter = NO_DATA;",
                "+",
                "+                switch(oleBuilder.getType()) {",
                "+                    case LINK:",
                "+                        packageStreamHeader = writePackageStreamHeader(oleBuilder);",
                "+",
                "+                        // link \"content\" is file path",
                "+                        contentBytes = getZeroTermStrBytes(oleBuilder.getFilePath());",
                "+                        contentLen = contentBytes.length;",
                "+                        break;",
                "+",
                "+                    case SIMPLE_PACKAGE:",
                "+                        packageStreamHeader = writePackageStreamHeader(oleBuilder);",
                "+                        packageStreamFooter = writePackageStreamFooter(oleBuilder);",
                "+                        break;",
                "+",
                "+                    case OTHER:",
                "+                        // nothing more to do",
                "+                        break;",
                "+                    default:",
                "+                        throw new RuntimeException(\"unexpected type \" + oleBuilder.getType());",
                "+                }",
                "+",
                "+                long payloadLen = packageStreamHeader.length + packageStreamFooter.length +",
                "+                        contentLen;",
                "+                byte[] packageHeader = writePackageHeader(oleBuilder, payloadLen);",
                "+",
                "+                long totalOleLen = packageHeader.length + PACKAGE_FOOTER.length +",
                "+                        payloadLen;",
                "+                if(totalOleLen > DataType.OLE.getMaxSize()) {",
                "+                    throw new IllegalArgumentException(\"Content size of \" + totalOleLen +",
                "+                            \" is too large for ole column\");",
                "+                }",
                "+",
                "+                byte[] oleBytes = new byte[(int)totalOleLen];",
                "+                ByteBuffer bb = PageChannel.wrap(oleBytes);",
                "+                bb.put(packageHeader);",
                "+                bb.put(packageStreamHeader);",
                "+",
                "+                if(contentLen > 0L) {",
                "+                    if(contentBytes != null) {",
                "+                        bb.put(contentBytes);",
                "+                    } else {",
                "+                        byte[] buf = new byte[8192];",
                "+                        int numBytes = 0;",
                "+                        while((numBytes = contentStream.read(buf)) >= 0) {",
                "+                            bb.put(buf, 0, numBytes);",
                "+                        }",
                "+                    }",
                "+                }",
                "+",
                "+                bb.put(packageStreamFooter);",
                "+                bb.put(PACKAGE_FOOTER);",
                "+",
                "+                return parseBlob(oleBytes);",
                "+",
                "+            } finally {",
                "+                ByteUtil.closeQuietly(oleBuilder.getStream());",
                "+            }",
                "+        }",
                "+",
                "+        private static byte[] writePackageHeader(Builder oleBuilder,",
                "+                                                 long contentLen) {",
                "+",
                "+            byte[] prettyNameBytes = getZeroTermStrBytes(oleBuilder.getPrettyName());",
                "+            String className = oleBuilder.getClassName();",
                "+            String typeName = oleBuilder.getTypeName();",
                "+            if(className == null) {",
                "+                className = typeName;",
                "+            } else if(typeName == null) {",
                "+                typeName = className;",
                "+            }",
                "+            byte[] classNameBytes = getZeroTermStrBytes(className);",
                "+            byte[] typeNameBytes = getZeroTermStrBytes(typeName);",
                "+",
                "+            int packageHeaderLen = 20 + prettyNameBytes.length + classNameBytes.length;",
                "+",
                "+            int oleHeaderLen = 24 + typeNameBytes.length;",
                "+",
                "+            byte[] headerBytes = new byte[packageHeaderLen + oleHeaderLen];",
                "+",
                "+            ByteBuffer bb = PageChannel.wrap(headerBytes);",
                "+",
                "+            // write outer package header",
                "+            bb.putShort((short)PACKAGE_SIGNATURE);",
                "+            bb.putShort((short)packageHeaderLen);",
                "+            bb.putInt(PACKAGE_OBJECT_TYPE);",
                "+            bb.putShort((short)prettyNameBytes.length);",
                "+            bb.putShort((short)classNameBytes.length);",
                "+            int prettyNameOff = bb.position() + 8;",
                "+            bb.putShort((short)prettyNameOff);",
                "+            bb.putShort((short)(prettyNameOff + prettyNameBytes.length));",
                "+            bb.putInt(-1);",
                "+            bb.put(prettyNameBytes);",
                "+            bb.put(classNameBytes);",
                "+",
                "+            // put ole header",
                "+            bb.putInt(OLE_VERSION);",
                "+            bb.putInt(OLE_FORMAT);",
                "+            bb.putInt(typeNameBytes.length);",
                "+            bb.put(typeNameBytes);",
                "+            bb.putLong(0L);",
                "+            bb.putInt((int)contentLen);",
                "+",
                "+            return headerBytes;",
                "+        }",
                "+",
                "+        private static byte[] writePackageStreamHeader(Builder oleBuilder) {",
                "+",
                "+            byte[] fileNameBytes = getZeroTermStrBytes(oleBuilder.getFileName());",
                "+            byte[] filePathBytes = getZeroTermStrBytes(oleBuilder.getFilePath());",
                "+",
                "+            int headerLen = 6 + fileNameBytes.length + filePathBytes.length;",
                "+",
                "+            if(oleBuilder.getType() == ContentType.SIMPLE_PACKAGE) {",
                "+",
                "+                headerLen += 8 + filePathBytes.length;",
                "+",
                "+            } else {",
                "+",
                "+                headerLen += 2;",
                "+            }",
                "+",
                "+            byte[] headerBytes = new byte[headerLen];",
                "+            ByteBuffer bb = PageChannel.wrap(headerBytes);",
                "+            bb.putShort((short)PACKAGE_STREAM_SIGNATURE);",
                "+            bb.put(fileNameBytes);",
                "+            bb.put(filePathBytes);",
                "+",
                "+            if(oleBuilder.getType() == ContentType.SIMPLE_PACKAGE) {",
                "+                bb.putInt(PS_EMBEDDED_FILE);",
                "+                bb.putInt(filePathBytes.length);",
                "+                bb.put(filePathBytes, 0, filePathBytes.length);",
                "+                bb.putInt((int) oleBuilder.getContentLength());",
                "+            } else {",
                "+                bb.putInt(PS_LINKED_FILE);",
                "+                bb.putShort((short)LINK_HEADER);",
                "+            }",
                "+",
                "+            return headerBytes;",
                "+        }",
                "+",
                "+        private static byte[] writePackageStreamFooter(Builder oleBuilder) {",
                "+",
                "+            // note, these are _not_ zero terminated",
                "+            byte[] fileNameBytes = oleBuilder.getFileName().getBytes(OLE_UTF_CHARSET);",
                "+            byte[] filePathBytes = oleBuilder.getFilePath().getBytes(OLE_UTF_CHARSET);",
                "+",
                "+            int footerLen = 12 + (filePathBytes.length * 2) + fileNameBytes.length;",
                "+",
                "+            byte[] footerBytes = new byte[footerLen];",
                "+            ByteBuffer bb = PageChannel.wrap(footerBytes);",
                "+",
                "+            bb.putInt(filePathBytes.length/2);",
                "+            bb.put(filePathBytes);",
                "+            bb.putInt(fileNameBytes.length/2);",
                "+            bb.put(fileNameBytes);",
                "+            bb.putInt(filePathBytes.length/2);",
                "+            bb.put(filePathBytes);",
                "+",
                "+            return footerBytes;",
                "+        }",
                "+",
                "+        /**",
                "+         * creates the appropriate ContentImpl for the given blob.",
                "+         */",
                "+        private static ContentImpl parseContent(OleBlobImpl blob)",
                "+                throws IOException",
                "+        {",
                "+            ByteBuffer bb = PageChannel.wrap(blob.getBytes());",
                "+",
                "+            if((bb.remaining() < 2) || (bb.getShort() != PACKAGE_SIGNATURE)) {",
                "+                return new UnknownContentImpl(blob);",
                "+            }",
                "+",
                "+            // read outer package header",
                "+            int headerSize = bb.getShort();",
                "+            /* int objType = */ bb.getInt();",
                "+            int prettyNameLen = bb.getShort();",
                "+            int classNameLen = bb.getShort();",
                "+            int prettyNameOff = bb.getShort();",
                "+            int classNameOff = bb.getShort();",
                "+            /* int objSize = */ bb.getInt();",
                "+            String prettyName = readStr(bb, prettyNameOff, prettyNameLen);",
                "+            String className = readStr(bb, classNameOff, classNameLen);",
                "+            bb.position(headerSize);",
                "+",
                "+            // read ole header",
                "+            int oleVer = bb.getInt();",
                "+            /* int format = */ bb.getInt();",
                "+",
                "+            if(oleVer != OLE_VERSION) {",
                "+                return new UnknownContentImpl(blob);",
                "+            }",
                "+",
                "+            int typeNameLen = bb.getInt();",
                "+            String typeName = readStr(bb, bb.position(), typeNameLen);",
                "+            bb.getLong(); // unused",
                "+            int dataBlockLen = bb.getInt();",
                "+            int dataBlockPos = bb.position();",
                "+",
                "+",
                "+            if(SIMPLE_PACKAGE_TYPE.equalsIgnoreCase(typeName)) {",
                "+                return createSimplePackageContent(",
                "+                        blob, prettyName, className, typeName, bb, dataBlockLen);",
                "+            }",
                "+",
                "+            // if COMPOUND_FACTORY is null, the poi library isn't available, so just",
                "+            // load compound data as \"other\"",
                "+            if((COMPOUND_FACTORY != null) &&",
                "+                    (bb.remaining() >= COMPOUND_STORAGE_SIGNATURE.length) &&",
                "+                    ByteUtil.matchesRange(bb, bb.position(), COMPOUND_STORAGE_SIGNATURE)) {",
                "+                return COMPOUND_FACTORY.createCompoundPackageContent(",
                "+                        blob, prettyName, className, typeName, bb, dataBlockLen);",
                "+            }",
                "+",
                "+            // this is either some other \"special\" (as yet unhandled) format, or it is",
                "+            // simply an embedded file (or it is compound data and poi isn't available)",
                "+            return new OtherContentImpl(blob, prettyName, className,",
                "+                    typeName, dataBlockPos, dataBlockLen);",
                "+        }",
                "+",
                "+        private static ContentImpl createSimplePackageContent(",
                "+                OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+                ByteBuffer blobBb, int dataBlockLen) {",
                "+",
                "+            int dataBlockPos = blobBb.position();",
                "+            ByteBuffer bb = PageChannel.narrowBuffer(blobBb, dataBlockPos,",
                "+                    dataBlockPos + dataBlockLen);",
                "+",
                "+            int packageSig = bb.getShort();",
                "+            if(packageSig != PACKAGE_STREAM_SIGNATURE) {",
                "+                return new OtherContentImpl(blob, prettyName, className,",
                "+                        typeName, dataBlockPos, dataBlockLen);",
                "+            }",
                "+",
                "+            String fileName = readZeroTermStr(bb);",
                "+            String filePath = readZeroTermStr(bb);",
                "+            int packageType = bb.getInt();",
                "+",
                "+            if(packageType == PS_EMBEDDED_FILE) {",
                "+",
                "+                int localFilePathLen = bb.getInt();",
                "+                String localFilePath = readStr(bb, bb.position(), localFilePathLen);",
                "+                int dataLen = bb.getInt();",
                "+                int dataPos = bb.position();",
                "+                bb.position(dataLen + dataPos);",
                "+",
                "+                // remaining strings are in \"reverse\" order (local file path, file name,",
                "+                // file path).  these string usee a real utf charset, and therefore can",
                "+                // \"fix\" problems with ascii based names (so we prefer these strings to",
                "+                // the original strings we found)",
                "+                int strNum = 0;",
                "+                while(true) {",
                "+",
                "+                    int rem = bb.remaining();",
                "+                    if(rem < 4) {",
                "+                        break;",
                "+                    }",
                "+",
                "+                    int strLen = bb.getInt();",
                "+                    String remStr = readStr(bb, bb.position(), strLen * 2, OLE_UTF_CHARSET);",
                "+",
                "+                    switch(strNum) {",
                "+                        case 0:",
                "+                            localFilePath = remStr;",
                "+                            break;",
                "+                        case 1:",
                "+                            fileName = remStr;",
                "+                            break;",
                "+                        case 2:",
                "+                            filePath = remStr;",
                "+                            break;",
                "+                        default:",
                "+                            // ignore",
                "+                    }",
                "+",
                "+                    ++strNum;",
                "+                }",
                "+",
                "+                return new SimplePackageContentImpl(",
                "+                        blob, prettyName, className, typeName, dataPos, dataLen,",
                "+                        fileName, filePath, localFilePath);",
                "+            }",
                "+",
                "+            if(packageType == PS_LINKED_FILE) {",
                "+",
                "+                bb.getShort(); //unknown",
                "+                String linkStr = readZeroTermStr(bb);",
                "+",
                "+                return new LinkContentImpl(blob, prettyName, className, typeName,",
                "+                        fileName, linkStr, filePath);",
                "+            }",
                "+",
                "+            return new OtherContentImpl(blob, prettyName, className,",
                "+                    typeName, dataBlockPos, dataBlockLen);",
                "+        }",
                "+",
                "+        private static String readStr(ByteBuffer bb, int off, int len) {",
                "+            return readStr(bb, off, len, OLE_CHARSET);",
                "+        }",
                "+",
                "+        private static String readZeroTermStr(ByteBuffer bb) {",
                "+            int off = bb.position();",
                "+            while(bb.hasRemaining()) {",
                "+                byte b = bb.get();",
                "+                if(b == 0) {",
                "+                    break;",
                "+                }",
                "+            }",
                "+            int len = bb.position() - off;",
                "+            return readStr(bb, off, len);",
                "+        }",
                "+",
                "+        private static String readStr(ByteBuffer bb, int off, int len,",
                "+                                      Charset charset) {",
                "+            String str = new String(bb.array(), off, len, charset);",
                "+            bb.position(off + len);",
                "+            if(str.charAt(str.length() - 1) == '\\0') {",
                "+                str = str.substring(0, str.length() - 1);",
                "+            }",
                "+            return str;",
                "+        }",
                "+",
                "+        private static byte[] getZeroTermStrBytes(String str) {",
                "+            // since we are converting to ascii, try to make \"nicer\" versions of crazy",
                "+            // chars (e.g. convert \"u with an umlaut\" to just \"u\").  this may not",
                "+            // ultimately help anything but it is what ms access does.",
                "+",
                "+            // decompose complex chars into combos of char and accent",
                "+            str = Normalizer.normalize(str, Normalizer.Form.NFD);",
                "+            // strip the accents",
                "+            str = UNICODE_ACCENT_PATTERN.matcher(str).replaceAll(\"\");",
                "+            // (re)normalize what is left",
                "+            str = Normalizer.normalize(str, Normalizer.Form.NFC);",
                "+",
                "+            return (str + '\\0').getBytes(OLE_CHARSET);",
                "+        }",
                "+",
                "+",
                "+        static final class OleBlobImpl implements OleBlob",
                "+        {",
                "+            private byte[] _bytes;",
                "+            private ContentImpl _content;",
                "+",
                "+            private OleBlobImpl(byte[] bytes) {",
                "+                _bytes = bytes;",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                out.write(_bytes);",
                "+            }",
                "+",
                "+            public Content getContent() throws IOException {",
                "+                if(_content == null) {",
                "+                    _content = parseContent(this);",
                "+                }",
                "+                return _content;",
                "+            }",
                "+",
                "+            public InputStream getBinaryStream() throws SQLException {",
                "+                return new ByteArrayInputStream(_bytes);",
                "+            }",
                "+",
                "+            public InputStream getBinaryStream(long pos, long len)",
                "+                    throws SQLException",
                "+            {",
                "+                return new ByteArrayInputStream(_bytes, fromJdbcOffset(pos), (int)len);",
                "+            }",
                "+",
                "+            public long length() throws SQLException {",
                "+                return _bytes.length;",
                "+            }",
                "+",
                "+            public byte[] getBytes() throws IOException {",
                "+                if(_bytes == null) {",
                "+                    throw new IOException(\"blob is closed\");",
                "+                }",
                "+                return _bytes;",
                "+            }",
                "+",
                "+            public byte[] getBytes(long pos, int len) throws SQLException {",
                "+                return ByteUtil.copyOf(_bytes, fromJdbcOffset(pos), len);",
                "+            }",
                "+",
                "+            public long position(byte[] pattern, long start) throws SQLException {",
                "+                int pos = ByteUtil.findRange(PageChannel.wrap(_bytes),",
                "+                        fromJdbcOffset(start), pattern);",
                "+                return((pos >= 0) ? toJdbcOffset(pos) : pos);",
                "+            }",
                "+",
                "+            public long position(Blob pattern, long start) throws SQLException {",
                "+                return position(pattern.getBytes(1L, (int)pattern.length()), start);",
                "+            }",
                "+",
                "+            public OutputStream setBinaryStream(long position) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public void truncate(long len) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public int setBytes(long pos, byte[] bytes) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public int setBytes(long pos, byte[] bytes, int offset, int lesn)",
                "+                    throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public void free() {",
                "+                close();",
                "+            }",
                "+",
                "+            public void close() {",
                "+                _bytes = null;",
                "+                ByteUtil.closeQuietly(_content);",
                "+                _content = null;",
                "+            }",
                "+",
                "+            private static int toJdbcOffset(int off) {",
                "+                return off + 1;",
                "+            }",
                "+",
                "+            private static int fromJdbcOffset(long off) {",
                "+                return (int)off - 1;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                ToStringBuilder sb = CustomToStringStyle.builder(this);",
                "+                if(_content != null) {",
                "+                    sb.append(\"content\", _content);",
                "+                } else {",
                "+                    sb.append(\"bytes\", _bytes);",
                "+                    sb.append(\"content\", \"(uninitialized)\");",
                "+                }",
                "+                return sb.toString();",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class ContentImpl implements Content, Closeable",
                "+        {",
                "+            protected final OleBlobImpl _blob;",
                "+",
                "+            protected ContentImpl(OleBlobImpl blob) {",
                "+                _blob = blob;",
                "+            }",
                "+",
                "+            public OleBlobImpl getBlob() {",
                "+                return _blob;",
                "+            }",
                "+",
                "+            protected byte[] getBytes() throws IOException {",
                "+                return getBlob().getBytes();",
                "+            }",
                "+",
                "+            public void close() {",
                "+                // base does nothing",
                "+            }",
                "+",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                sb.append(\"type\", getType());",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class EmbeddedContentImpl extends ContentImpl",
                "+                implements EmbeddedContent",
                "+        {",
                "+            private final int _position;",
                "+            private final int _length;",
                "+",
                "+            protected EmbeddedContentImpl(OleBlobImpl blob, int position, int length)",
                "+            {",
                "+                super(blob);",
                "+                _position = position;",
                "+                _length = length;",
                "+            }",
                "+",
                "+            public long length() {",
                "+                return _length;",
                "+            }",
                "+",
                "+            public InputStream getStream() throws IOException {",
                "+                return new ByteArrayInputStream(getBytes(), _position, _length);",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                out.write(getBytes(), _position, _length);",
                "+            }",
                "+",
                "+            @Override",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                super.toString(sb);",
                "+                if(_position >= 0) {",
                "+                    sb.append(\"content\", ByteBuffer.wrap(_blob._bytes, _position, _length));",
                "+                }",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class EmbeddedPackageContentImpl",
                "+                extends EmbeddedContentImpl",
                "+                implements PackageContent",
                "+        {",
                "+            private final String _prettyName;",
                "+            private final String _className;",
                "+            private final String _typeName;",
                "+",
                "+            protected EmbeddedPackageContentImpl(",
                "+                    OleBlobImpl blob, String prettyName, String className,",
                "+                    String typeName, int position, int length)",
                "+            {",
                "+                super(blob, position, length);",
                "+                _prettyName = prettyName;",
                "+                _className = className;",
                "+                _typeName = typeName;",
                "+            }",
                "+",
                "+            public String getPrettyName() {",
                "+                return _prettyName;",
                "+            }",
                "+",
                "+            public String getClassName() {",
                "+                return _className;",
                "+            }",
                "+",
                "+            public String getTypeName() {",
                "+                return _typeName;",
                "+            }",
                "+",
                "+            @Override",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                sb.append(\"prettyName\", _prettyName)",
                "+                        .append(\"className\", _className)",
                "+                        .append(\"typeName\", _typeName);",
                "+                super.toString(sb);",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        private static final class LinkContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements LinkContent",
                "+        {",
                "+            private final String _fileName;",
                "+            private final String _linkPath;",
                "+            private final String _filePath;",
                "+",
                "+            private LinkContentImpl(OleBlobImpl blob, String prettyName,",
                "+                                    String className, String typeName,",
                "+                                    String fileName, String linkPath,",
                "+                                    String filePath)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, -1, -1);",
                "+                _fileName = fileName;",
                "+                _linkPath = linkPath;",
                "+                _filePath = filePath;",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.LINK;",
                "+            }",
                "+",
                "+            public String getFileName() {",
                "+                return _fileName;",
                "+            }",
                "+",
                "+            public String getLinkPath() {",
                "+                return _linkPath;",
                "+            }",
                "+",
                "+            public String getFilePath() {",
                "+                return _filePath;",
                "+            }",
                "+",
                "+            public InputStream getLinkStream() throws IOException {",
                "+                return new FileInputStream(getLinkPath());",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"fileName\", _fileName)",
                "+                        .append(\"linkPath\", _linkPath)",
                "+                        .append(\"filePath\", _filePath)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class SimplePackageContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements SimplePackageContent",
                "+        {",
                "+            private final String _fileName;",
                "+            private final String _filePath;",
                "+            private final String _localFilePath;",
                "+",
                "+            private SimplePackageContentImpl(OleBlobImpl blob, String prettyName,",
                "+                                             String className, String typeName,",
                "+                                             int position, int length,",
                "+                                             String fileName, String filePath,",
                "+                                             String localFilePath)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, position, length);",
                "+                _fileName = fileName;",
                "+                _filePath = filePath;",
                "+                _localFilePath = localFilePath;",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.SIMPLE_PACKAGE;",
                "+            }",
                "+",
                "+            public String getFileName() {",
                "+                return _fileName;",
                "+            }",
                "+",
                "+            public String getFilePath() {",
                "+                return _filePath;",
                "+            }",
                "+",
                "+            public String getLocalFilePath() {",
                "+                return _localFilePath;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"fileName\", _fileName)",
                "+                        .append(\"filePath\", _filePath)",
                "+                        .append(\"localFilePath\", _localFilePath)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class OtherContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements OtherContent",
                "+        {",
                "+            private OtherContentImpl(",
                "+                    OleBlobImpl blob, String prettyName, String className,",
                "+                    String typeName, int position, int length)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, position, length);",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.OTHER;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class UnknownContentImpl extends ContentImpl",
                "+        {",
                "+            private UnknownContentImpl(OleBlobImpl blob) {",
                "+                super(blob);",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.UNKNOWN;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"content\", _blob._bytes)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+    }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "index 133d5e45f..779d5eecf 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "@@ -38,3 +38,2 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "@@ -107,6 +106,6 @@ public class OfficeParser extends AbstractOfficeParser {",
                "         TikaInputStream tstream = TikaInputStream.cast(stream);",
                "-        NPOIFSFileSystem mustCloseFs = null;",
                "+        POIFSFileSystem mustCloseFs = null;",
                "         try {",
                "             if (tstream == null) {",
                "-                mustCloseFs = new NPOIFSFileSystem(new CloseShieldInputStream(stream));",
                "+                mustCloseFs = new POIFSFileSystem(new CloseShieldInputStream(stream));",
                "                 root = mustCloseFs.getRoot();",
                "@@ -114,4 +113,4 @@ public class OfficeParser extends AbstractOfficeParser {",
                "                 final Object container = tstream.getOpenContainer();",
                "-                if (container instanceof NPOIFSFileSystem) {",
                "-                    root = ((NPOIFSFileSystem) container).getRoot();",
                "+                if (container instanceof POIFSFileSystem) {",
                "+                    root = ((POIFSFileSystem) container).getRoot();",
                "                 } else if (container instanceof DirectoryNode) {",
                "@@ -119,7 +118,7 @@ public class OfficeParser extends AbstractOfficeParser {",
                "                 } else {",
                "-                    NPOIFSFileSystem fs = null;",
                "+                    POIFSFileSystem fs = null;",
                "                     if (tstream.hasFile()) {",
                "-                        fs = new NPOIFSFileSystem(tstream.getFile(), true);",
                "+                        fs = new POIFSFileSystem(tstream.getFile(), true);",
                "                     } else {",
                "-                        fs = new NPOIFSFileSystem(new CloseShieldInputStream(tstream));",
                "+                        fs = new POIFSFileSystem(new CloseShieldInputStream(tstream));",
                "                     }",
                "@@ -276,6 +275,2 @@ public class OfficeParser extends AbstractOfficeParser {",
                "-        public static POIFSDocumentType detectType(NPOIFSFileSystem fs) {",
                "-            return detectType(fs.getRoot());",
                "-        }",
                "-",
                "         public static POIFSDocumentType detectType(DirectoryEntry node) {",
                "@@ -315,3 +310,3 @@ public class OfficeParser extends AbstractOfficeParser {",
                "      */",
                "-    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml,",
                "+    public static void extractMacros(POIFSFileSystem fs, ContentHandler xhtml,",
                "                                      EmbeddedDocumentExtractor embeddedDocumentExtractor)  throws IOException, SAXException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "index dc355ae7d..5d1335147 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "@@ -53,5 +53,4 @@ import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.util.CodePageUtil;",
                "-import org.apache.tika.config.Field;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -76,3 +75,2 @@ import org.apache.tika.sax.EmbeddedContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.bouncycastle.cms.Recipient;",
                " import org.xml.sax.SAXException;",
                "@@ -130,3 +128,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "-    public OutlookExtractor(NPOIFSFileSystem filesystem, ParseContext context) throws TikaException {",
                "+    public OutlookExtractor(POIFSFileSystem filesystem, ParseContext context) throws TikaException {",
                "         this(filesystem.getRoot(), context);",
                "@@ -151,3 +149,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "             try {",
                "-                metadata.set(Office.MAPI_MESSAGE_CLASS, getMessageClass(msg.getMessageClass()));",
                "+                metadata.set(Office.MAPI_MESSAGE_CLASS, msg.getMessageClassEnum().name());",
                "             } catch (ChunkNotFoundException e){}",
                "@@ -487,3 +485,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "-    //TODO: replace this with getMessageClassEnum when we upgrade POI",
                "+    //Still needed by PSTParser",
                "     public static String getMessageClass(String messageClass){",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "index 1c9869003..1b5a0a9cd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "@@ -35,3 +35,3 @@ import org.apache.poi.poifs.filesystem.DocumentNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.detect.Detector;",
                "@@ -387,3 +387,3 @@ public class POIFSContainerDetector implements Detector {",
                "         try {",
                "-            NPOIFSFileSystem fs = new NPOIFSFileSystem(file, true);",
                "+            POIFSFileSystem fs = new POIFSFileSystem(file, true);",
                "@@ -425,4 +425,4 @@ public class POIFSContainerDetector implements Detector {",
                "             Object container = tis.getOpenContainer();",
                "-            if (container instanceof NPOIFSFileSystem) {",
                "-                names = getTopLevelNames(((NPOIFSFileSystem) container).getRoot());",
                "+            if (container instanceof POIFSFileSystem) {",
                "+                names = getTopLevelNames(((POIFSFileSystem) container).getRoot());",
                "             } else if (container instanceof DirectoryNode) {",
                "@@ -456,4 +456,4 @@ public class POIFSContainerDetector implements Detector {",
                "                 tis.getOpenContainer() != null &&",
                "-                tis.getOpenContainer() instanceof NPOIFSFileSystem) {",
                "-            return detect(names, ((NPOIFSFileSystem) tis.getOpenContainer()).getRoot());",
                "+                tis.getOpenContainer() instanceof POIFSFileSystem) {",
                "+            return detect(names, ((POIFSFileSystem) tis.getOpenContainer()).getRoot());",
                "         } else {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "index 3e2ea260d..801718404 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "@@ -34,3 +34,3 @@ import org.apache.poi.poifs.filesystem.DocumentEntry;",
                " import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -65,3 +65,3 @@ public class SummaryExtractor {",
                "-    public void parseSummaries(NPOIFSFileSystem filesystem)",
                "+    public void parseSummaries(POIFSFileSystem filesystem)",
                "             throws IOException, TikaException {",
                "@@ -96,4 +96,2 @@ public class SummaryExtractor {",
                "             throw new TikaException(\"Unexpected HPSF document\", e);",
                "-        } catch (MarkUnsupportedException e) {",
                "-            throw new TikaException(\"Invalid DocumentInputStream\", e);",
                "         } catch (Exception e) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "index 4a80420a8..30bd4bb96 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "@@ -51,3 +51,3 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "@@ -147,3 +147,3 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "@@ -663,3 +663,3 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "     protected void parseWord6(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "index c0727233a..57c38a6dc 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "@@ -27,3 +27,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.List;",
                "@@ -32,4 +31,5 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -43,5 +43,2 @@ import org.apache.poi.openxml4j.opc.internal.FileHelper;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.DocumentEntry;",
                "-import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.Ole10Native;",
                "@@ -71,4 +68,2 @@ import org.xml.sax.helpers.AttributesImpl;",
                "-import javax.xml.parsers.SAXParser;",
                "-",
                " /**",
                "@@ -121,3 +116,3 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "     public POIXMLDocument getDocument() {",
                "-        return extractor.getDocument();",
                "+        return (POIXMLDocument)extractor.getDocument();",
                "     }",
                "@@ -424,5 +419,5 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "             try (InputStream is = macroPart.getInputStream()) {",
                "-                try (NPOIFSFileSystem npoifs = new NPOIFSFileSystem(is)) {",
                "+                try (POIFSFileSystem poifs = new POIFSFileSystem(is)) {",
                "                     //Macro reading exceptions are already swallowed here",
                "-                    OfficeParser.extractMacros(npoifs, handler, embeddedExtractor);",
                "+                    OfficeParser.extractMacros(poifs, handler, embeddedExtractor);",
                "                 }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index dbbb83957..30f29755c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -29,3 +29,2 @@ import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "-import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -77,6 +76,6 @@ public class MetadataExtractor {",
                "-        addProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "                 .getContentStatusProperty());",
                "-        addProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "                 .getCreatedProperty());",
                "@@ -84,34 +83,24 @@ public class MetadataExtractor {",
                "                 .getCreatorProperty());",
                "-        addProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "                 .getDescriptionProperty());",
                "-        addProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "                 .getIdentifierProperty());",
                "-        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "+        addProperty(metadata, OfficeOpenXMLCore.SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "+        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "-        addProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "                 .getLanguageProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "                 .getLastModifiedByProperty());",
                "-        addProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "                 .getLastPrintedProperty());",
                "-        addProperty(metadata, Metadata.LAST_MODIFIED, propsHolder",
                "-                .getModifiedProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "                 .getModifiedProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "                 .getRevisionProperty());",
                "-        // TODO: Move to OO subject in Tika 2.0",
                "-        addProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "-                propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "-                .getContentStatusProperty());",
                "-        addProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "-                .getRevisionProperty());",
                "-        addProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "+        setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "+",
                "     }",
                "@@ -132,11 +121,11 @@ public class MetadataExtractor {",
                "         }",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "         SummaryExtractor.addMulti(metadata, OfficeOpenXMLExtended.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "@@ -149,26 +138,9 @@ public class MetadataExtractor {",
                "         // Process the document statistics",
                "-        addProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "-",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "-        addProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "-        addProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+        setProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "@@ -259,3 +231,3 @@ public class MetadataExtractor {",
                "-    private <T> void addProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "+    private <T> void setProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "         T value = nullableValue.getValue();",
                "@@ -274,5 +246,15 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, Nullable<?> value) {",
                "+    private <T> void addProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "+        T value = nullableValue.getValue();",
                "+        if (value != null) {",
                "+            if (value instanceof String) {",
                "+                metadata.add(property, (String) value);",
                "+            } else {",
                "+                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "+            }",
                "+        }",
                "+    }",
                "+    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "         if (value.getValue() != null) {",
                "-            addProperty(metadata, name, value.getValue().toString());",
                "+            setProperty(metadata, name, value.getValue().toString());",
                "         }",
                "@@ -280,3 +262,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, String value) {",
                "+    private void setProperty(Metadata metadata, Property property, String value) {",
                "         if (value != null) {",
                "@@ -286,3 +268,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, String value) {",
                "+    private void setProperty(Metadata metadata, String name, String value) {",
                "         if (value != null) {",
                "@@ -292,3 +274,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, int value) {",
                "+    private void setProperty(Metadata metadata, Property property, int value) {",
                "         if (value > 0) {",
                "@@ -298,3 +280,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, int value) {",
                "+    private void setProperty(Metadata metadata, String name, int value) {",
                "         if (value > 0) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "index f52e52d80..4ef723e5e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "@@ -20,4 +20,3 @@ import java.io.IOException;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -32,3 +31,3 @@ import org.xml.sax.SAXException;",
                "  *",
                "- * @see org.apache.poi.POIXMLTextExtractor",
                "+ * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor",
                "  */",
                "@@ -39,3 +38,3 @@ public interface OOXMLExtractor {",
                "      *",
                "-     * @see POIXMLTextExtractor#getDocument()",
                "+     * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getDocument()",
                "      */",
                "@@ -44,3 +43,3 @@ public interface OOXMLExtractor {",
                "     /**",
                "-     * {@link POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "+     * {@link org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "      * for OOXML by POI.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "index 5230d6517..a6e111a2c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "@@ -23,5 +23,5 @@ import java.util.Locale;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -33,4 +33,6 @@ import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                " import org.apache.poi.util.LocaleUtil;",
                "+import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                " import org.apache.poi.xslf.usermodel.XSLFRelation;",
                "+import org.apache.poi.xslf.usermodel.XSLFSlideShow;",
                " import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;",
                "@@ -105,4 +107,4 @@ public class OOXMLExtractorFactory {",
                "             }",
                "-            if (poiExtractor == null && config.getUseSAXPptxExtractor()) {",
                "-                poiExtractor = trySXSLF(pkg);",
                "+            if (poiExtractor == null) {",
                "+                poiExtractor = tryXSLF(pkg, config.getUseSAXPptxExtractor());",
                "             }",
                "@@ -113,3 +115,3 @@ public class OOXMLExtractorFactory {",
                "             if (poiExtractor == null) {",
                "-                poiExtractor = ExtractorFactory.createExtractor(pkg);",
                "+                poiExtractor = (POIXMLTextExtractor) ExtractorFactory.createExtractor(pkg);",
                "             }",
                "@@ -192,3 +194,3 @@ public class OOXMLExtractorFactory {",
                "-    private static POIXMLTextExtractor trySXSLF(OPCPackage pkg) throws XmlException, OpenXML4JException, IOException {",
                "+    private static POIXMLTextExtractor tryXSLF(OPCPackage pkg, boolean eventBased) throws XmlException, OpenXML4JException, IOException {",
                "@@ -210,3 +212,7 @@ public class OOXMLExtractorFactory {",
                "             if (xslfRelation.getContentType().equals(targetContentType)) {",
                "-                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                if (eventBased) {",
                "+                    return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                } else {",
                "+                    return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+                }",
                "             }",
                "@@ -215,3 +221,7 @@ public class OOXMLExtractorFactory {",
                "         if (XSLFRelation.THEME_MANAGER.getContentType().equals(targetContentType)) {",
                "-            return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            if (eventBased) {",
                "+                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            } else {",
                "+                return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+            }",
                "         }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "index f6ec3bf2d..56d8a71c9 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "@@ -21,3 +21,3 @@ import java.util.List;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "index 35dba6d9f..3d929ba8a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "@@ -32,2 +32,3 @@ import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                " import org.apache.poi.openxml4j.opc.TargetMode;",
                "+import org.apache.poi.sl.extractor.SlideShowExtractor;",
                " import org.apache.poi.sl.usermodel.Placeholder;",
                "@@ -35,2 +36,3 @@ import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                "+import org.apache.poi.xslf.usermodel.XSLFComment;",
                " import org.apache.poi.xslf.usermodel.XSLFCommentAuthors;",
                "@@ -61,4 +63,2 @@ import org.apache.xmlbeans.XmlException;",
                " import org.apache.xmlbeans.XmlObject;",
                "-import org.openxmlformats.schemas.presentationml.x2006.main.CTComment;",
                "-import org.openxmlformats.schemas.presentationml.x2006.main.CTCommentAuthor;",
                " import org.openxmlformats.schemas.presentationml.x2006.main.CTPicture;",
                "@@ -138,15 +138,13 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "             // comments (if present)",
                "-            XSLFComments comments = slide.getComments();",
                "+            List<XSLFComment> comments = slide.getComments();",
                "             if (comments != null) {",
                "                 StringBuilder authorStringBuilder = new StringBuilder();",
                "-                for (int i = 0; i < comments.getNumberOfComments(); i++) {",
                "+                for (int i = 0; i < comments.size(); i++) {",
                "                     authorStringBuilder.setLength(0);",
                "-                    CTComment comment = comments.getCommentAt(i);",
                "+                    XSLFComment comment = comments.get(i);",
                "                     xhtml.startElement(\"p\", \"class\", \"slide-comment\");",
                "-                    CTCommentAuthor cta = commentAuthors.getAuthorById(comment.getAuthorId());",
                "-                    if (cta != null) {",
                "-                        if (cta.getName() != null) {",
                "-                            authorStringBuilder.append(cta.getName());",
                "+                        if (comment.getAuthor() != null) {",
                "+                            authorStringBuilder.append(comment.getAuthor());",
                "                         }",
                "-                        if (cta.getInitials() != null) {",
                "+                        if (comment.getAuthorInitials() != null) {",
                "                             if (authorStringBuilder.length() > 0) {",
                "@@ -154,3 +152,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                             }",
                "-                            authorStringBuilder.append(\"(\"+cta.getInitials()+\")\");",
                "+                            authorStringBuilder.append(\"(\"+comment.getAuthorInitials()+\")\");",
                "                         }",
                "@@ -164,3 +162,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                         }",
                "-                    }",
                "+",
                "                     xhtml.characters(comment.getText());",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index db263b29c..df2be9d5d 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -23,3 +23,3 @@ import java.util.Locale;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index 4f8dfbdc2..7832bc967 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -29,4 +29,4 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                " import org.apache.poi.hssf.extractor.ExcelExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "index 50e1e9a6d..2643a3a7a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "@@ -19,6 +19,7 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "+import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;",
                " import org.apache.commons.io.IOUtils;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "@@ -31,3 +32,2 @@ import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.metadata.TikaCoreProperties;",
                " import org.apache.tika.parser.ParseContext;",
                "@@ -37,3 +37,2 @@ import org.apache.tika.sax.OfflineContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.apache.tika.utils.ExceptionUtils;",
                " import org.apache.tika.utils.XMLReaderUtils;",
                "@@ -43,3 +42,2 @@ import org.xml.sax.helpers.DefaultHandler;",
                "-import javax.xml.parsers.SAXParser;",
                " import java.io.IOException;",
                "@@ -51,3 +49,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.zip.ZipEntry;",
                "@@ -251,6 +248,6 @@ public class XPSExtractorDecorator extends AbstractOOXMLExtractor {",
                "         ZipEntrySource zipEntrySource = zipPackage.getZipArchive();",
                "-        Enumeration<? extends ZipEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "-        ZipEntry zipEntry = null;",
                "+        Enumeration<? extends ZipArchiveEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "+        ZipArchiveEntry zipEntry = null;",
                "         while (zipEntryEnumeration.hasMoreElements()) {",
                "-            ZipEntry ze = zipEntryEnumeration.nextElement();",
                "+            ZipArchiveEntry ze = zipEntryEnumeration.nextElement();",
                "             if (ze.getName().equals(targPath)) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "index 30aaf0f3f..021292041 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "@@ -19,5 +19,6 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "index 3e98203dc..bd5615d23 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "@@ -22,5 +22,5 @@ import java.util.Date;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "index 7a5c0c703..ec6370439 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "@@ -28,5 +28,6 @@ import java.util.Map;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.util.SAXHelper;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -37,3 +38,2 @@ import org.apache.poi.openxml4j.opc.PackageRelationship;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "-import org.apache.poi.util.SAXHelper;",
                " import org.apache.poi.xwpf.usermodel.XWPFNumbering;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "index e5b0b44bc..08174d0ee 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "@@ -240,3 +240,3 @@ public class ZipContainerDetector implements Detector {",
                "         try {",
                "-            zipEntrySource = new ZipFileZipEntrySource(new java.util.zip.ZipFile(stream.getFile()));",
                "+            zipEntrySource = new ZipFileZipEntrySource(new ZipFile(stream.getFile()));",
                "         } catch (IOException e) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "index a43c789f3..1f4e29e46 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "@@ -34,3 +34,4 @@ import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.FileMagic;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.Ole10Native;",
                "@@ -117,3 +118,3 @@ class RTFObjDataParser {",
                "             try {",
                "-                hasPoifs = NPOIFSFileSystem.hasPOIFSHeader(embIs);",
                "+                hasPoifs = hasPOIFSHeader(embIs);",
                "             } catch (IOException e) {",
                "@@ -141,3 +142,3 @@ class RTFObjDataParser {",
                "         byte[] ret = null;",
                "-        try (NPOIFSFileSystem fs = new NPOIFSFileSystem(is)) {",
                "+        try (POIFSFileSystem fs = new POIFSFileSystem(is)) {",
                "@@ -330,2 +331,6 @@ class RTFObjDataParser {",
                "     }",
                "+",
                "+    private static boolean hasPOIFSHeader(InputStream is) throws IOException {",
                "+        return FileMagic.valueOf(is) == FileMagic.OLE2;",
                "+    }",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index b21a03c77..4d8679c28 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -22,3 +22,3 @@ import org.apache.cxf.attachment.ContentDisposition;",
                " import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                " import org.apache.tika.Tika;"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-eval/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "01c53eaa6d709972b03735574aa58dc0abcdc51c"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cff500c1aeb45d1cd4ab9b967505749e04a666c7",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541147343,
            "hunks": 2,
            "message": "fix for TIKA-2770 contributed by kristencheung",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "index 10d8845e7..8b3e1ef06 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "@@ -121,3 +121,15 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "             if(keyValue.length != 1) {",
                "-                metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "+                if (keyValue[0].equals(\"map info\")) {",
                "+                    StringBuilder mapInfoValueStringBuilder = new StringBuilder();",
                "+                    String mapInfoValue = keyValue[1];",
                "+                    for (int i = 0; i < keyValue[1].length(); ++i) {",
                "+                        if (mapInfoValue.charAt(i) != '{' || mapInfoValue.charAt(i) != '}' || mapInfoValue.charAt(i) != ' ') {",
                "+                            mapInfoValueStringBuilder.append(mapInfoValue.charAt(i));",
                "+                        }",
                "+                    }",
                "+                    String[] mapInfoValues = mapInfoValueStringBuilder.toString().split(\",\");",
                "+                    convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                } else {",
                "+                    metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "+                }",
                "             }",
                "@@ -129,2 +141,48 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "+    // Conversion logic taken from https://stackoverflow.com/questions/343865/how-to-convert-from-utm-to-latlng-in-python-or-javascript/344083#344083",
                "+    private void convertMapInfoValuesToLatLngAndSetMetadata(String[] mapInfoValues, Metadata metadata) {",
                "+        // Based on the map info data, pixelEasting is at index 3 and pixelNorthing is at index 4",
                "+        double pixelEasting = Double.valueOf(mapInfoValues[3]);",
                "+        double pixelNorthing = Double.valueOf(mapInfoValues[4]);",
                "+        int zone = Integer.parseInt(mapInfoValues[7]);",
                "+        double a = 6378137.0;",
                "+        double e = 0.0818191910;",
                "+        double e1sq = 0.006739497;",
                "+        double k0 = 0.9996;",
                "+",
                "+        double arc = pixelNorthing / k0;",
                "+        double mu = arc / (a * (1.0 - Math.pow(e, 2.0) / 4.0 - 3.0 * Math.pow(e, 4.0) / 64.0 - 5.0 * Math.pow(e, 6.0) / 256.0));",
                "+",
                "+        double ei = (1.0 - Math.pow((1.0 - e * e), (1.0 / 2.0))) / (1.0 + Math.pow((1.0 - e * e), (1.0 / 2.0)));",
                "+",
                "+        double ca = 3.0 * ei / 2.0 - 27.0 * Math.pow(ei, 3.0) / 32.0;",
                "+",
                "+        double cb = 21.0 * Math.pow(ei, 2.0) / 16.0 - 55.0 * Math.pow(ei, 4.0) / 32.0;",
                "+        double cc = 151.0 * Math.pow(ei, 3.0) / 96.0;",
                "+        double cd = 1097.0 * Math.pow(ei, 4.0) / 512.0;",
                "+        double phi1 = mu + ca * Math.sin(2.0 * mu) + cb * Math.sin(4.0 * mu) + cc * Math.sin(6.0 * mu) + cd * Math.sin(8.0 * mu);",
                "+",
                "+        double n0 = a / Math.pow((1.0 - Math.pow((e * Math.sin(phi1)), 2.0)), (1.0 / 2.0));",
                "+",
                "+        double r0 = a * (1.0 - e * e) / Math.pow((1.0 - Math.pow((e * Math.sin(phi1)), 2.0)), (3.0 / 2.0));",
                "+        double fact1 = n0 * Math.tan(phi1) / r0;",
                "+",
                "+        double _a1 = 500000.0 - pixelEasting;",
                "+        double dd0 = _a1 / (n0 * k0);",
                "+        double fact2 = dd0 * dd0 / 2.0;",
                "+        double t0 = Math.pow(Math.tan(phi1), 2.0);",
                "+        double Q0 = e1sq * Math.pow(Math.cos(phi1), 2.0);",
                "+        double fact3 = (5.0 + 3.0 * t0 + 10.0 * Q0 - 4.0 * Q0 * Q0 - 9.0 * e1sq) * Math.pow(dd0, 4.0) / 24.0;",
                "+        double fact4 = (61.0 + 90.0 * t0 + 298.0 * Q0 + 45.0 * t0 * t0 - 252.0 * e1sq - 3.0 * Q0 * Q0) * Math.pow(dd0, 6.0) / 720.0;",
                "+        double lof1 = _a1 / (n0 * k0);",
                "+        double lof2 = (1.0 + 2.0 * t0 + Q0) * Math.pow(dd0, 3.0) / 6.0;",
                "+        double lof3 = (5.0 - 2.0 * Q0 + 28.0 * t0 - 3.0 * Math.pow(Q0, 2.0) + 8.0 * e1sq + 24.0 * Math.pow(t0, 2.0)) * Math.pow(dd0, 5.0) / 120.0;",
                "+        double _a2 = (lof1 - lof2 + lof3) / Math.cos(phi1);",
                "+        double _a3 = _a2 * 180.0 / Math.PI;",
                "+        double zoneCM = (zone > 0) ? 6 * zone - 183.0 : 3.0;",
                "+        double latitude = 180.0 * (phi1 - fact1 * (fact2 + fact3 + fact4)) / Math.PI;",
                "+        double longitude = zoneCM - _a3;",
                "+        metadata.set(\"envi.lat/lng\" , latitude+\",\"+longitude);",
                "+    }",
                "+",
                "     /*"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2770": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d6938de16ae7e2971e433b4058dea4647dbdaea5"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2770",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7121036a0c46843ceb3c07237f7c5903e2723a6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537898246,
            "hunks": 3,
            "message": "TIKA-2738 -- ForkParser option isn't working in tika-app. Make PasswordProvider serializable.",
            "diff": [
                "diff --git a/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java b/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                "index b317f3fc3..807711477 100644",
                "--- a/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                "+++ b/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                "@@ -36,2 +36,3 @@ import java.io.PrintStream;",
                " import java.io.PrintWriter;",
                "+import java.io.Serializable;",
                " import java.io.UnsupportedEncodingException;",
                "@@ -706,7 +707,3 @@ public class TikaCLI {",
                "         context.set(Parser.class, parser);",
                "-        context.set(PasswordProvider.class, new PasswordProvider() {",
                "-            public String getPassword(Metadata metadata) {",
                "-                return password;",
                "-            }",
                "-        });",
                "+        context.set(PasswordProvider.class, new SimplePasswordProvider(password));",
                "     }",
                "@@ -1324,2 +1321,14 @@ public class TikaCLI {",
                "+    private static class SimplePasswordProvider",
                "+            implements PasswordProvider, Serializable {",
                "+        private final String password;",
                "+        public SimplePasswordProvider(String password) {",
                "+            this.password = password;",
                "+        }",
                "+",
                "+        @Override",
                "+        public String getPassword(Metadata metadata) {",
                "+            return password;",
                "+        }",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2738": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "72f4f9bd999569797360b16f92b02ea92216ac22"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2738",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b9a822156f8fa29c2165958f5c7be83010160a70",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542231084,
            "hunks": 0,
            "message": "Merge pull request #257 from kristencheung/TIKA-2770 fix for TIKA-2770 contributed by kristencheung",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2770": ""
            },
            "ghissue_refs": {
                "257": "Determine whether ENVI header 'map info' can be mapped to LatLon capstone-coal/coal-sds#27"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2770",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 257",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ccedbadd4f79d7888eabfcd3a740000ab85e168",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540850838,
            "hunks": 0,
            "message": "Merge pull request #254 from dameikle/master TIKA-2599: Fixed closing of styles around Hyperlinks. Contributed by Ronan O'Sullivan.",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2599": ""
            },
            "ghissue_refs": {
                "254": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2599",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 254",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5596cb46a3f96e5a125503adca7792a15bfbf5d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538688172,
            "hunks": 18,
            "message": "[maven-release-plugin] prepare for next development iteration",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 6550d1993..a5f4185a1 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index ee0d08a0c..2549e9443 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index 546d4cbae..cb9afe182 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index e17e32e6b..fadbafc3d 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index f9ae83f63..06eb9e85d 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 8ee7b8039..fa5e50e7d 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index fbdabce11..d6bdbb8bc 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.19.1</version>",
                "+        <version>1.20-SNAPSHOT</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index c31518532..28518c397 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index d38568b11..1fcebb32b 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index a7287e966..ede01dfa4 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 25e2020fb..57aae2dbf 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index f2428201a..b22dd3be1 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.19.1</version>",
                "+  <version>1.20-SNAPSHOT</version>",
                "   <packaging>pom</packaging>",
                "@@ -463,3 +463,3 @@",
                "     <url>https://github.com/apache/tika</url>",
                "-    <tag>1.19.1-rc2</tag>",
                "+    <tag>1.19.1-rc1</tag>",
                "   </scm>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index fcabd968f..9adb65f5a 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 4de4fc69a..2f101ce60 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index a7721d501..6de0d3ba3 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index b79366b0c..566f7f6bb 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 26e20c651..96657a750 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.20-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9ee3b488e3720497b32df86112fe97198b5bcbba"
                ],
                [
                    "no-tag",
                    "7aba1c59135ab1bcb4efd0e7407c291c57d51ff9"
                ],
                [
                    "no-tag",
                    "43927314710925ff026ec028c844a46e6688fa0a"
                ],
                [
                    "no-tag",
                    "b78ed12b8f8a4c63d4d8cee1e38baec6cafbdae8"
                ],
                [
                    "no-tag",
                    "5c6bbff52d3e5c61b44aec5cceee7c25f1261722"
                ],
                [
                    "no-tag",
                    "72593259e8bb689c71d8261f7bf5e684e26e69f1"
                ],
                [
                    "no-tag",
                    "dc02c593890f7659f79c59f3eeef8a309648953f"
                ],
                [
                    "no-tag",
                    "92a5a626fbf4cbdc72e2288b4c85b09abfa0f317"
                ]
            ],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb01f0c4ee9255d6650566d28836c8d1c81d68a9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533763357,
            "hunks": 95,
            "message": "TIKA-2552 -- first draft. Need to put back in the 1.x metadata variants",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 57d2ba467..594b6cdc7 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -283,2 +283,4 @@",
                "               org.apache.commons.httpclient.util;resolution:=optional,",
                "+              org.apache.commons.math3.exception;resolution:=optional,",
                "+              org.apache.commons.math3.linear;resolution:=optional,",
                "               org.apache.commons.vfs2;resolution:=optional,",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index e9e5b83c6..52b0d8130 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -37,3 +37,3 @@",
                "   <properties>",
                "-    <poi.version>3.17</poi.version>",
                "+    <poi.version>4.0.0-SNAPSHOT</poi.version>",
                "     <!-- NOTE: sync codec version with POI -->",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "index 7057cbe0a..9990f3008 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "@@ -26,5 +26,3 @@ import org.apache.poi.common.usermodel.Hyperlink;",
                " import org.apache.poi.hslf.exceptions.EncryptedPowerPointFileException;",
                "-import org.apache.poi.hslf.model.Comment;",
                " import org.apache.poi.hslf.model.HeadersFooters;",
                "-import org.apache.poi.hslf.model.OLEShape;",
                " import org.apache.poi.hslf.record.DocInfoListContainer;",
                "@@ -37,2 +35,3 @@ import org.apache.poi.hslf.usermodel.HSLFNotes;",
                " import org.apache.poi.hslf.usermodel.HSLFObjectData;",
                "+import org.apache.poi.hslf.usermodel.HSLFObjectShape;",
                " import org.apache.poi.hslf.usermodel.HSLFPictureData;",
                "@@ -49,2 +48,4 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.sl.usermodel.Comment;",
                "+import org.apache.poi.sl.usermodel.SimpleShape;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -271,3 +272,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             if (objData.getExOleObjStg().getPersistId() == persistId) {",
                "-                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getData())) {",
                "+                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getInputStream())) {",
                "                     try {",
                "@@ -297,3 +298,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape != null && !HSLFMasterSheet.isPlaceholder(shape)) {",
                "+            if (shape != null && ! isPlaceholder(shape)) {",
                "                 if (shape instanceof HSLFTextShape) {",
                "@@ -310,2 +311,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "+    private boolean isPlaceholder(HSLFShape shape) {",
                "+        return shape instanceof SimpleShape && ((SimpleShape)shape).isPlaceholder();",
                "+    }",
                "+",
                "     private void extractTableText(XHTMLContentHandler xhtml, HSLFTable shape) throws SAXException {",
                "@@ -451,4 +456,4 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape instanceof OLEShape) {",
                "-                OLEShape oleShape = (OLEShape) shape;",
                "+            if (shape instanceof HSLFObjectShape) {",
                "+                HSLFObjectShape oleShape = (HSLFObjectShape) shape;",
                "                 HSLFObjectData data = null;",
                "@@ -476,3 +481,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                     try {",
                "-                        dataStream = data.getData();",
                "+                        dataStream = data.getInputStream();",
                "                     } catch (Exception e) {",
                "@@ -483,3 +488,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                         String mediaType = null;",
                "-                        if (\"Excel.Chart.8\".equals(oleShape.getProgID())) {",
                "+                        if (\"Excel.Chart.8\".equals(oleShape.getProgId())) {",
                "                             mediaType = \"application/vnd.ms-excel\";",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "index dc355ae7d..0aed803d1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "@@ -55,3 +55,2 @@ import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.util.CodePageUtil;",
                "-import org.apache.tika.config.Field;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -76,3 +75,2 @@ import org.apache.tika.sax.EmbeddedContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.bouncycastle.cms.Recipient;",
                " import org.xml.sax.SAXException;",
                "@@ -151,3 +149,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "             try {",
                "-                metadata.set(Office.MAPI_MESSAGE_CLASS, getMessageClass(msg.getMessageClass()));",
                "+                metadata.set(Office.MAPI_MESSAGE_CLASS, msg.getMessageClassEnum().name());",
                "             } catch (ChunkNotFoundException e){}",
                "@@ -487,3 +485,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "-    //TODO: replace this with getMessageClassEnum when we upgrade POI",
                "+    //Still needed by PSTParser",
                "     public static String getMessageClass(String messageClass){",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "index c0727233a..ac5abc943 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "@@ -27,3 +27,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.List;",
                "@@ -32,4 +31,5 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -43,4 +43,2 @@ import org.apache.poi.openxml4j.opc.internal.FileHelper;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.DocumentEntry;",
                "-import org.apache.poi.poifs.filesystem.Entry;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "@@ -71,4 +69,2 @@ import org.xml.sax.helpers.AttributesImpl;",
                "-import javax.xml.parsers.SAXParser;",
                "-",
                " /**",
                "@@ -121,3 +117,3 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "     public POIXMLDocument getDocument() {",
                "-        return extractor.getDocument();",
                "+        return (POIXMLDocument)extractor.getDocument();",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index dbbb83957..09556b099 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -20,12 +20,11 @@ import java.math.BigDecimal;",
                " import java.util.Date;",
                "+import java.util.Optional;",
                "-import org.apache.poi.POIXMLProperties.CoreProperties;",
                "-import org.apache.poi.POIXMLProperties.CustomProperties;",
                "-import org.apache.poi.POIXMLProperties.ExtendedProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;",
                " import org.apache.poi.openxml4j.util.Nullable;",
                "+import org.apache.poi.ss.formula.functions.T;",
                " import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "-import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -73,3 +72,3 @@ public class MetadataExtractor {",
                "-    private void extractMetadata(CoreProperties properties, Metadata metadata) {",
                "+    private void extractMetadata(POIXMLProperties.CoreProperties properties, Metadata metadata) {",
                "         PackagePropertiesPart propsHolder = properties",
                "@@ -77,6 +76,6 @@ public class MetadataExtractor {",
                "-        addProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "                 .getContentStatusProperty());",
                "-        addProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "                 .getCreatedProperty());",
                "@@ -84,37 +83,27 @@ public class MetadataExtractor {",
                "                 .getCreatorProperty());",
                "-        addProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "                 .getDescriptionProperty());",
                "-        addProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "                 .getIdentifierProperty());",
                "-        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "+        addProperty(metadata, OfficeOpenXMLCore.SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "+        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "-        addProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "                 .getLanguageProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "                 .getLastModifiedByProperty());",
                "-        addProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "                 .getLastPrintedProperty());",
                "-        addProperty(metadata, Metadata.LAST_MODIFIED, propsHolder",
                "-                .getModifiedProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "                 .getModifiedProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "                 .getRevisionProperty());",
                "-        // TODO: Move to OO subject in Tika 2.0",
                "-        addProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "-                propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "-                .getContentStatusProperty());",
                "-        addProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "-                .getRevisionProperty());",
                "-        addProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "+        setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "+",
                "     }",
                "-    private void extractMetadata(ExtendedProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.ExtendedProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -132,11 +121,11 @@ public class MetadataExtractor {",
                "         }",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "         SummaryExtractor.addMulti(metadata, OfficeOpenXMLExtended.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "@@ -149,29 +138,12 @@ public class MetadataExtractor {",
                "         // Process the document statistics",
                "-        addProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "-",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "-        addProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "-        addProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+        setProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "-    private void extractMetadata(CustomProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.CustomProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -259,5 +231,7 @@ public class MetadataExtractor {",
                "-    private <T> void addProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "-        T value = nullableValue.getValue();",
                "-        if (value != null) {",
                "+    private <T> void setProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (! nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "             if (value instanceof Date) {",
                "@@ -271,8 +245,18 @@ public class MetadataExtractor {",
                "             }",
                "-        }",
                "     }",
                "-    private void addProperty(Metadata metadata, String name, Nullable<?> value) {",
                "+    private <T> void addProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "+            if (value instanceof String) {",
                "+                metadata.add(property, (String) value);",
                "+            } else {",
                "+                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "+            }",
                "+    }",
                "+    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "         if (value.getValue() != null) {",
                "-            addProperty(metadata, name, value.getValue().toString());",
                "+            setProperty(metadata, name, value.getValue().toString());",
                "         }",
                "@@ -280,3 +264,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, String value) {",
                "+    private void setProperty(Metadata metadata, Property property, String value) {",
                "         if (value != null) {",
                "@@ -286,3 +270,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, String value) {",
                "+    private void setProperty(Metadata metadata, String name, String value) {",
                "         if (value != null) {",
                "@@ -292,3 +276,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, int value) {",
                "+    private void setProperty(Metadata metadata, Property property, int value) {",
                "         if (value > 0) {",
                "@@ -298,3 +282,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, int value) {",
                "+    private void setProperty(Metadata metadata, String name, int value) {",
                "         if (value > 0) {",
                "@@ -304,7 +288,7 @@ public class MetadataExtractor {",
                "-    private void addMultiProperty(Metadata metadata, Property property, Nullable<String> value) {",
                "-        if (value == null) {",
                "+    private void addMultiProperty(Metadata metadata, Property property, Optional<String> value) {",
                "+        if (! value.isPresent()) {",
                "             return;",
                "         }",
                "-        SummaryExtractor.addMulti(metadata, property, value.getValue());",
                "+        SummaryExtractor.addMulti(metadata, property, value.get());",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "index f52e52d80..4ef723e5e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "@@ -20,4 +20,3 @@ import java.io.IOException;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -32,3 +31,3 @@ import org.xml.sax.SAXException;",
                "  *",
                "- * @see org.apache.poi.POIXMLTextExtractor",
                "+ * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor",
                "  */",
                "@@ -39,3 +38,3 @@ public interface OOXMLExtractor {",
                "      *",
                "-     * @see POIXMLTextExtractor#getDocument()",
                "+     * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getDocument()",
                "      */",
                "@@ -44,3 +43,3 @@ public interface OOXMLExtractor {",
                "     /**",
                "-     * {@link POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "+     * {@link org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "      * for OOXML by POI.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "index 5230d6517..d68fa788e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "@@ -23,5 +23,6 @@ import java.util.Locale;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -32,5 +33,8 @@ import org.apache.poi.openxml4j.opc.PackagePart;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "+import org.apache.poi.sl.extractor.SlideShowExtractor;",
                " import org.apache.poi.util.LocaleUtil;",
                "+import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                " import org.apache.poi.xslf.usermodel.XSLFRelation;",
                "+import org.apache.poi.xslf.usermodel.XSLFSlideShow;",
                " import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;",
                "@@ -105,4 +109,4 @@ public class OOXMLExtractorFactory {",
                "             }",
                "-            if (poiExtractor == null && config.getUseSAXPptxExtractor()) {",
                "-                poiExtractor = trySXSLF(pkg);",
                "+            if (poiExtractor == null) {",
                "+                poiExtractor = tryXSLF(pkg, config.getUseSAXPptxExtractor());",
                "             }",
                "@@ -113,3 +117,3 @@ public class OOXMLExtractorFactory {",
                "             if (poiExtractor == null) {",
                "-                poiExtractor = ExtractorFactory.createExtractor(pkg);",
                "+                poiExtractor = (POIXMLTextExtractor) ExtractorFactory.createExtractor(pkg);",
                "             }",
                "@@ -192,3 +196,3 @@ public class OOXMLExtractorFactory {",
                "-    private static POIXMLTextExtractor trySXSLF(OPCPackage pkg) throws XmlException, OpenXML4JException, IOException {",
                "+    private static POIXMLTextExtractor tryXSLF(OPCPackage pkg, boolean eventBased) throws XmlException, OpenXML4JException, IOException {",
                "@@ -210,3 +214,7 @@ public class OOXMLExtractorFactory {",
                "             if (xslfRelation.getContentType().equals(targetContentType)) {",
                "-                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                if (eventBased) {",
                "+                    return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                } else {",
                "+                    return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+                }",
                "             }",
                "@@ -215,3 +223,7 @@ public class OOXMLExtractorFactory {",
                "         if (XSLFRelation.THEME_MANAGER.getContentType().equals(targetContentType)) {",
                "-            return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            if (eventBased) {",
                "+                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            } else {",
                "+                return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+            }",
                "         }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "index f6ec3bf2d..56d8a71c9 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "@@ -21,3 +21,3 @@ import java.util.List;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "index 35dba6d9f..c7dfc39c8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "@@ -32,2 +32,3 @@ import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                " import org.apache.poi.openxml4j.opc.TargetMode;",
                "+import org.apache.poi.sl.extractor.SlideShowExtractor;",
                " import org.apache.poi.sl.usermodel.Placeholder;",
                "@@ -35,2 +36,3 @@ import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                "+import org.apache.poi.xslf.usermodel.XSLFComment;",
                " import org.apache.poi.xslf.usermodel.XSLFCommentAuthors;",
                "@@ -138,15 +140,13 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "             // comments (if present)",
                "-            XSLFComments comments = slide.getComments();",
                "+            List<XSLFComment> comments = slide.getComments();",
                "             if (comments != null) {",
                "                 StringBuilder authorStringBuilder = new StringBuilder();",
                "-                for (int i = 0; i < comments.getNumberOfComments(); i++) {",
                "+                for (int i = 0; i < comments.size(); i++) {",
                "                     authorStringBuilder.setLength(0);",
                "-                    CTComment comment = comments.getCommentAt(i);",
                "+                    XSLFComment comment = comments.get(i);",
                "                     xhtml.startElement(\"p\", \"class\", \"slide-comment\");",
                "-                    CTCommentAuthor cta = commentAuthors.getAuthorById(comment.getAuthorId());",
                "-                    if (cta != null) {",
                "-                        if (cta.getName() != null) {",
                "-                            authorStringBuilder.append(cta.getName());",
                "+                        if (comment.getAuthor() != null) {",
                "+                            authorStringBuilder.append(comment.getAuthor());",
                "                         }",
                "-                        if (cta.getInitials() != null) {",
                "+                        if (comment.getAuthorInitials() != null) {",
                "                             if (authorStringBuilder.length() > 0) {",
                "@@ -154,3 +154,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                             }",
                "-                            authorStringBuilder.append(\"(\"+cta.getInitials()+\")\");",
                "+                            authorStringBuilder.append(\"(\"+comment.getAuthorInitials()+\")\");",
                "                         }",
                "@@ -164,3 +164,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                         }",
                "-                    }",
                "+",
                "                     xhtml.characters(comment.getText());",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index db263b29c..102f9a7dd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -23,3 +23,4 @@ import java.util.Locale;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index 4f8dfbdc2..7832bc967 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -29,4 +29,4 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                " import org.apache.poi.hssf.extractor.ExcelExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "index 50e1e9a6d..2643a3a7a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "@@ -19,6 +19,7 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "+import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;",
                " import org.apache.commons.io.IOUtils;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "@@ -31,3 +32,2 @@ import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.metadata.TikaCoreProperties;",
                " import org.apache.tika.parser.ParseContext;",
                "@@ -37,3 +37,2 @@ import org.apache.tika.sax.OfflineContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.apache.tika.utils.ExceptionUtils;",
                " import org.apache.tika.utils.XMLReaderUtils;",
                "@@ -43,3 +42,2 @@ import org.xml.sax.helpers.DefaultHandler;",
                "-import javax.xml.parsers.SAXParser;",
                " import java.io.IOException;",
                "@@ -51,3 +49,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.zip.ZipEntry;",
                "@@ -251,6 +248,6 @@ public class XPSExtractorDecorator extends AbstractOOXMLExtractor {",
                "         ZipEntrySource zipEntrySource = zipPackage.getZipArchive();",
                "-        Enumeration<? extends ZipEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "-        ZipEntry zipEntry = null;",
                "+        Enumeration<? extends ZipArchiveEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "+        ZipArchiveEntry zipEntry = null;",
                "         while (zipEntryEnumeration.hasMoreElements()) {",
                "-            ZipEntry ze = zipEntryEnumeration.nextElement();",
                "+            ZipArchiveEntry ze = zipEntryEnumeration.nextElement();",
                "             if (ze.getName().equals(targPath)) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "index 30aaf0f3f..021292041 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "@@ -19,5 +19,6 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "index 3e98203dc..bd5615d23 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "@@ -22,5 +22,5 @@ import java.util.Date;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "index 7a5c0c703..ec6370439 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "@@ -28,5 +28,6 @@ import java.util.Map;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.util.SAXHelper;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -37,3 +38,2 @@ import org.apache.poi.openxml4j.opc.PackageRelationship;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "-import org.apache.poi.util.SAXHelper;",
                " import org.apache.poi.xwpf.usermodel.XWPFNumbering;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "index e5b0b44bc..08174d0ee 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "@@ -240,3 +240,3 @@ public class ZipContainerDetector implements Detector {",
                "         try {",
                "-            zipEntrySource = new ZipFileZipEntrySource(new java.util.zip.ZipFile(stream.getFile()));",
                "+            zipEntrySource = new ZipFileZipEntrySource(new ZipFile(stream.getFile()));",
                "         } catch (IOException e) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "index a43c789f3..4387ca403 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "@@ -34,2 +34,3 @@ import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "+import org.apache.poi.poifs.filesystem.FileMagic;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "@@ -37,2 +38,3 @@ import org.apache.poi.poifs.filesystem.Ole10Native;",
                " import org.apache.poi.poifs.filesystem.Ole10NativeException;",
                "+import org.apache.poi.poifs.storage.HeaderBlock;",
                " import org.apache.poi.util.IOUtils;",
                "@@ -117,3 +119,3 @@ class RTFObjDataParser {",
                "             try {",
                "-                hasPoifs = NPOIFSFileSystem.hasPOIFSHeader(embIs);",
                "+                hasPoifs = hasPOIFSHeader(embIs);",
                "             } catch (IOException e) {",
                "@@ -330,2 +332,6 @@ class RTFObjDataParser {",
                "     }",
                "+",
                "+    private static boolean hasPOIFSHeader(InputStream is) throws IOException {",
                "+        return FileMagic.valueOf(is) == FileMagic.OLE2;",
                "+    }",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index b21a03c77..4d8679c28 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -22,3 +22,3 @@ import org.apache.cxf.attachment.ContentDisposition;",
                " import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                " import org.apache.tika.Tika;"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "60bc5d84fede1095df282eb40d2d4e352ec14f3a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537909595,
            "hunks": 18,
            "message": "[maven-release-plugin] prepare release 1.19.1-rc1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a5f4185a1..6550d1993 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 2549e9443..ee0d08a0c 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index cb9afe182..546d4cbae 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index fadbafc3d..e17e32e6b 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 06eb9e85d..f9ae83f63 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fa5e50e7d..8ee7b8039 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index d6bdbb8bc..fbdabce11 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.20-SNAPSHOT</version>",
                "+        <version>1.19.1</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 28518c397..c31518532 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 1fcebb32b..d38568b11 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index e72c7ff7d..3a04f7eb3 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 57aae2dbf..25e2020fb 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 07a8b2163..8563c4839 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.20-SNAPSHOT</version>",
                "+  <version>1.19.1</version>",
                "   <packaging>pom</packaging>",
                "@@ -463,3 +463,3 @@",
                "     <url>https://github.com/apache/tika</url>",
                "-    <tag>1.19-rc1</tag>",
                "+    <tag>1.19.1-rc1</tag>",
                "   </scm>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 16ae68e0a..ee195bc75 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 2f101ce60..4de4fc69a 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 6de0d3ba3..a7721d501 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 566f7f6bb..b79366b0c 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 96657a750..26e20c651 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "341e3596dce01cf7995621463e5f866271cd4cf7"
                ],
                [
                    "no-tag",
                    "628d34fde247e94494c9898852dde51f73a3f1d4"
                ],
                [
                    "no-tag",
                    "70823ad1df818b08ee4cec2bc63680b5324a2523"
                ],
                [
                    "no-tag",
                    "b8d28efc87a187fd2efb34dcb7bfb01b06ded5fd"
                ],
                [
                    "no-tag",
                    "a5162fb22c2524265b4351ead5e0849745676fab"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f6c38efc9eefa1b872bd64ad2f25e363919121da",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537562390,
            "hunks": 3,
            "message": "TIKA-2731 via jkakvas.  This closes 250.",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 0069a9a22..4ccdad485 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -82,10 +82,9 @@ public class XMLReaderUtils implements Serializable {",
                "     private static int determineMaxEntityExpansions() {",
                "-        Properties properties = System.getProperties();",
                "-        if (properties != null && properties.containsKey(JAXP_ENTITY_EXPANSION_LIMIT_KEY)) {",
                "+        String expansionLimit = System.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY);",
                "+        if (expansionLimit != null) {",
                "             try {",
                "-                return Integer.parseInt(properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY));",
                "+                return Integer.parseInt(expansionLimit);",
                "             } catch (NumberFormatException e) {",
                "-                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\"+",
                "-                        properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY)+",
                "-                        \"; backing off to default: \"+DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "+                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\" + expansionLimit +",
                "+                        \"; backing off to default: \" + DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "             }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2731": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2731",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a2c7d89e03ca7c0e821b69c394165297edfb9d4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536222494,
            "hunks": 3,
            "message": "Mime magic for \"MIME Encapsulation of Aggregate HTML Documents\" (MHTML), pulled out from rfc822 (may not be fully correct long-term...)",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 007ec538c..bd1adfaee 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -5982,5 +5982,24 @@",
                "     <glob pattern=\"*.mime\"/>",
                "+    <sub-class-of type=\"text/x-tika-text-based-message\"/>",
                "+  </mime-type>",
                "+",
                "+  <!-- TODO See TIKA-2723 for discussions on the mime type hierarchy -->",
                "+  <!--  and best parser structure for these email-like formats -->",
                "+  <mime-type type=\"multipart/related\">",
                "+    <acronym>MHTML</acronym>",
                "+    <_comment>MIME Encapsulation of Aggregate HTML Documents</_comment>",
                "+    <tika:link>http://tools.ietf.org/html/rfc2557</tika:link>",
                "+    <alias type=\"application/x-mimearchive\"/>",
                "+    <alias type=\"message/rfc2557\"/>",
                "+    <!-- higher priority than message/rfc822 -->",
                "+    <magic priority=\"60\">",
                "+      <match value=\"From: \\x3cSaved by Windows Internet Explorer 8\\x3e\" type=\"stringignorecase\" offset=\"0\"/>",
                "+      <match value=\"From: \\x22Saved by Internet Explorer 11\\x22\" type=\"stringignorecase\" offset=\"0\"/>",
                "+      <match value=\"MIME-Version: 1.0\" type=\"string\" offset=\"0\">",
                "+        <match value=\"\\nContent-Type: multipart/related\" type=\"string\" offset=\"16:512\"/>",
                "+      </match>",
                "+    </magic>",
                "     <glob pattern=\"*.mht\"/>",
                "     <glob pattern=\"*.mhtml\"/>",
                "-    <sub-class-of type=\"text/x-tika-text-based-message\"/>",
                "+    <sub-class-of type=\"message/rfc822\"/>",
                "   </mime-type>",
                "@@ -6086,3 +6105,2 @@",
                "   <mime-type type=\"multipart/parallel\"/>",
                "-  <mime-type type=\"multipart/related\"/>",
                "   <mime-type type=\"multipart/report\"/>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "39f69efc642ade48c5b8021d0500e7363c8f4ac5"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ef66723174ea15d4e168769dea6f76f0ad7bd91",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533309950,
            "hunks": 0,
            "message": "Merge branch 'GerardBouchar-TIKA-2673'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "19364b832e222056cd84d820daab7336663f8fee",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543751,
            "hunks": 1,
            "message": "TIKA-2690 via Hans Brende",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 08620d99e..f278302bf 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -688,2 +688,10 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-logging</groupId>",
                "+          <artifactId>commons-logging-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-logging</groupId>",
                "+          <artifactId>commons-logging</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2690": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2690",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "daec8dbe6024938ec51a42840f09bb4050c6e3f4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537290553,
            "hunks": 1,
            "message": "TIKA-2725 -- fix merge conflicts",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index 96b6f91cf..641479609 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -57,2 +57,3 @@ public class DetectorResource {",
                "         met.add(TikaCoreProperties.RESOURCE_NAME_KEY, filename);",
                "+        long taskId = serverStatus.start(ServerStatus.TASK.DETECT, filename);",
                "         try {"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2f6c7aface25ba8f8853ac8fbc8c5280f6e76600",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536942236,
            "hunks": 1,
            "message": "fix conflict",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 62c03b618..48888111a 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -283,2 +283,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.codehaus.woodstox</groupId>",
                "+          <artifactId>stax2-api</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "af04995bafa4666b5d8f6a3f8c67ecbf033babff"
                ],
                [
                    "no-tag",
                    "1f8f576f96d846d824ad4f8de013425b34d836dc"
                ],
                [
                    "no-tag",
                    "ea6c0091fe4e03f3a5af34dd17e2288940c5ae7e"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0d6f140a18f049689bd6a5d69398c33e3af82291",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537281120,
            "hunks": 3,
            "message": "Removed #getDetector from ImportContextImpl",
            "diff": [
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/ImportContextImpl.java b/tika-example/src/main/java/org/apache/tika/example/ImportContextImpl.java",
                "index dcfbc0f49..5a9c9f43b 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/ImportContextImpl.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/ImportContextImpl.java",
                "@@ -53,4 +53,2 @@ public class ImportContextImpl implements ImportContext {",
                "-    private final Detector detector;",
                "-",
                "     private final MediaType type;",
                "@@ -81,3 +79,2 @@ public class ImportContextImpl implements ImportContext {",
                "                 : new DefaultIOListener(LOG);",
                "-        this.detector = detector;",
                "@@ -112,9 +109,2 @@ public class ImportContextImpl implements ImportContext {",
                "-    /**",
                "-     * @see ImportContext#getDetector()",
                "-     */",
                "-    public Detector getDetector() {",
                "-        return detector;",
                "-    }",
                "-",
                "     /**"
            ],
            "changed_files": [
                "tika-example/src/main/java/org/apache/tika/example/ImportContextImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a366813685d322d86907395b60c4486d7a6dd26f"
                ],
                [
                    "no-tag",
                    "8053e31f7cbbb0a1c70b0d8e12251dd20d2d47d2"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bf75e3950a741452b27205ccec308853dc7bd1be",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1539279687,
            "hunks": 1,
            "message": "Add logging for OOM.",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index c1644dada..e096c0e76 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -403,2 +403,3 @@ public class TikaResource {",
                "         } catch (OutOfMemoryError e) {",
                "+            logger.error(\"{}: OOM\", path, e);",
                "             SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c61ed55f1ad5be78b0346334477f720cb4e00898"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bd9d75d8b0a85af2937047bfad04288c3044b2a6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533316569,
            "hunks": 7,
            "message": "improve xml reading",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 10c22745b..382be2d04 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -47,2 +47,3 @@ import java.io.Serializable;",
                " import java.io.StringReader;",
                "+import java.lang.reflect.Method;",
                " import java.util.concurrent.ArrayBlockingQueue;",
                "@@ -72,2 +73,4 @@ public class XMLReaderUtils implements Serializable {",
                "+    private static long LAST_LOG = -1;",
                "+",
                "     //TODO: figure out if the rw lock is any better than a simple lock",
                "@@ -140,3 +143,5 @@ public class XMLReaderUtils implements Serializable {",
                "         try {",
                "-            return getSAXParserFactory().newSAXParser();",
                "+            SAXParser parser = getSAXParserFactory().newSAXParser();",
                "+            trySetXercesSecurityManager(parser);",
                "+            return parser;",
                "         } catch (ParserConfigurationException e) {",
                "@@ -204,2 +209,3 @@ public class XMLReaderUtils implements Serializable {",
                "         trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-dtd-grammar\", false);",
                "+        trySetXercesSecurityManager(factory);",
                "         return factory;",
                "@@ -246,2 +252,3 @@ public class XMLReaderUtils implements Serializable {",
                "         factory.setXMLResolver(IGNORING_STAX_ENTITY_RESOLVER);",
                "+        trySetStaxSecurityManager(factory);",
                "         return factory;",
                "@@ -263,3 +270,3 @@ public class XMLReaderUtils implements Serializable {",
                "         } catch (IllegalArgumentException e) {",
                "-            //swallow",
                "+            LOG.log(Level.WARNING, \"StAX Feature unsupported: \" + key, e);",
                "         }",
                "@@ -501,2 +508,88 @@ public class XMLReaderUtils implements Serializable {",
                "     }",
                "+",
                "+    private static void trySetXercesSecurityManager(DocumentBuilderFactory factory) {",
                "+        //from POI",
                "+        // Try built-in JVM one first, standalone if not",
                "+        for (String securityManagerClassName : new String[] {",
                "+                //\"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "+                \"org.apache.xerces.util.SecurityManager\"",
                "+        }) {",
                "+            try {",
                "+                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "+                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+                setLimit.invoke(mgr, 4096);",
                "+                factory.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+                // Stop once one can be setup without error",
                "+                return;",
                "+            } catch (ClassNotFoundException e) {",
                "+                // continue without log, this is expected in some setups",
                "+            } catch (Throwable e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+                // throttle the log somewhat as it can spam the log otherwise",
                "+                if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                    LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                    LAST_LOG = System.currentTimeMillis();",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // separate old version of Xerces not found => use the builtin way of setting the property",
                "+        try {",
                "+            factory.setAttribute(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+        } catch (IllegalArgumentException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static void trySetXercesSecurityManager(SAXParser parser) {",
                "+        //from POI",
                "+        // Try built-in JVM one first, standalone if not",
                "+        for (String securityManagerClassName : new String[] {",
                "+                //\"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "+                \"org.apache.xerces.util.SecurityManager\"",
                "+        }) {",
                "+            try {",
                "+                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "+                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+                setLimit.invoke(mgr, 4096);",
                "+                parser.setProperty(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+                // Stop once one can be setup without error",
                "+                return;",
                "+            } catch (ClassNotFoundException e) {",
                "+                // continue without log, this is expected in some setups",
                "+            } catch (Throwable e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+                // throttle the log somewhat as it can spam the log otherwise",
                "+                if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                    LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                    LAST_LOG = System.currentTimeMillis();",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // separate old version of Xerces not found => use the builtin way of setting the property",
                "+        try {",
                "+            parser.setProperty(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+        } catch (SAXException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static void trySetStaxSecurityManager(XMLInputFactory inputFactory) {",
                "+        try {",
                "+            inputFactory.setProperty(\"com.ctc.wstx.maxEntityCount\", 4096);",
                "+        } catch (IllegalArgumentException e) {",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "148adec1016acc122fa5e972f75d7029376998d9"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9523f501060fe25862509b4d3a0387c1d7f4ac56",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534433618,
            "hunks": 0,
            "message": "Merge branch 'branch_1x' into TIKA-2552",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "10d380ae6c2805b2c4889ce7fe3034a5a8f9fa1a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541791356,
            "hunks": 2,
            "message": "Revert: Merge pull request #247 from diffblue-assistant/finallyclosetotrywithresources",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "index 9897e4b27..e84023ccc 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "@@ -64,4 +64,5 @@ public class Pkcs7Parser extends AbstractParser {",
                "                     new JcaDigestCalculatorProviderBuilder().setProvider(\"BC\").build();",
                "-            try (CMSSignedDataParser parser = new CMSSignedDataParser(digestCalculatorProvider,",
                "-                    new CloseShieldInputStream(stream))) {",
                "+            CMSSignedDataParser parser =",
                "+                    new CMSSignedDataParser(digestCalculatorProvider, new CloseShieldInputStream(stream));",
                "+            try {",
                "                 CMSTypedStream content = parser.getSignedContent();",
                "@@ -75,2 +76,4 @@ public class Pkcs7Parser extends AbstractParser {",
                "                 }",
                "+            } finally {",
                "+                parser.close();",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "247": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 247",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7beae2f510d124adcb60178320317c5d161380d0",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541792602,
            "hunks": 67,
            "message": "TIKA-2775 - bulk update plugins",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a3cd16db4..f1fa8c174 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -40,2 +40,3 @@",
                "     <module>tika-parsers</module>",
                "+    <module>tika-bundle</module>",
                "     <module>tika-xmp</module>",
                "@@ -44,3 +45,2 @@",
                "     <module>tika-app</module>",
                "-    <module>tika-bundle</module>",
                "     <module>tika-server</module>",
                "@@ -65,2 +65,3 @@",
                "             <artifactId>maven-assembly-plugin</artifactId>",
                "+            <version>${maven.assembly.version}</version>",
                "             <executions>",
                "@@ -88,2 +89,3 @@",
                "             <artifactId>maven-antrun-plugin</artifactId>",
                "+            <version>${maven.antrun.version}</version>",
                "             <executions>",
                "@@ -178,2 +180,3 @@ least three +1 Tika PMC votes are cast.",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 482bf2899..b5d7afbe3 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -106,2 +106,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "+        <version>${maven.shade.version}</version>",
                "         <executions>",
                "@@ -184,2 +185,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -205,2 +207,3 @@",
                "             <artifactId>maven-antrun-plugin</artifactId>",
                "+            <version>${maven.antrun.version}</version>",
                "             <executions>",
                "@@ -241,3 +244,3 @@",
                "             <artifactId>build-helper-maven-plugin</artifactId>",
                "-            <version>1.7</version>",
                "+            <version>3.0.0</version>",
                "             <executions>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index 6a36e84c0..45bd06671 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -126,2 +126,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -140,2 +141,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -165,21 +167,2 @@",
                "       </plugin>",
                "-      <plugin>",
                "-        <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "-        <configuration>",
                "-          <additionalClasspathElements>",
                "-            <additionalClasspathElement>",
                "-              ${project.build.directory}/${project.build.finalName}.jar",
                "-            </additionalClasspathElement>",
                "-          </additionalClasspathElements>",
                "-        </configuration>",
                "-        <executions>",
                "-          <execution>",
                "-            <goals>",
                "-              <goal>integration-test</goal>",
                "-              <goal>verify</goal>",
                "-            </goals>",
                "-          </execution>",
                "-        </executions>",
                "-      </plugin>",
                "     </plugins>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 85ba9d4d8..4fb10190f 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -43,3 +43,3 @@",
                "   <properties>",
                "-    <pax.exam.version>4.11.0</pax.exam.version>",
                "+    <pax.exam.version>4.12.0</pax.exam.version>",
                "   </properties>",
                "@@ -142,2 +142,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -483,2 +484,3 @@",
                "         <artifactId>forbiddenapis</artifactId>",
                "+        <version>${forbiddenapis.version}</version>",
                "         <configuration>",
                "@@ -507,3 +509,3 @@",
                "         <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "+        <version>${maven.failsafe.version}</version>",
                "         <executions>",
                "@@ -527,2 +529,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 960e9a1fd..f55de96da 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -71,2 +71,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -85,2 +86,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -151,3 +153,3 @@",
                "         <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "+        <version>2.22.1</version>",
                "         <configuration>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index 011324afd..7298d49d5 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -18,2 +18,3 @@ package org.apache.tika.fork;",
                "+import java.io.Closeable;",
                " import java.io.IOException;",
                "@@ -42,3 +43,3 @@ import org.xml.sax.SAXException;",
                "-public class ForkParser extends AbstractParser {",
                "+public class ForkParser extends AbstractParser implements Closeable {",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index b1e8e436a..96b27bb07 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -362,2 +362,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 45c39a223..c2c595cce 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -158,2 +158,3 @@",
                "                 <artifactId>maven-shade-plugin</artifactId>",
                "+                <version>${maven.shade.version}</version>",
                "                 <executions>",
                "@@ -200,2 +201,3 @@",
                "                     <artifactId>maven-bundle-plugin</artifactId>",
                "+                    <version>${maven.bundle.version}</version>",
                "                     <extensions>true</extensions>",
                "@@ -214,2 +216,3 @@",
                "                     <artifactId>apache-rat-plugin</artifactId>",
                "+                    <version>${rat.version}</version>",
                "                     <configuration>",
                "@@ -243,3 +246,3 @@",
                "                     <artifactId>maven-failsafe-plugin</artifactId>",
                "-                    <version>2.10</version>",
                "+                    <version>${maven.failsafe.version}</version>",
                "                     <configuration>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index d5d8716f1..b3e9fbde5 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -46,3 +46,3 @@",
                "         <artifactId>maven-scr-plugin</artifactId>",
                "-        <version>1.7.4</version>",
                "+        <version>${maven.scr.version}</version>",
                "       </plugin>",
                "@@ -52,2 +52,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -65,2 +66,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 860572270..d9585bfd5 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -107,2 +107,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -125,2 +126,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -168,3 +170,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index d80e6019d..70a391b1e 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -241,2 +241,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 97b5a71bf..58d0308a0 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -307,2 +307,14 @@",
                "     <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>",
                "+    <!-- plugin versions -->",
                "+    <forbiddenapis.version>2.6</forbiddenapis.version>",
                "+    <groovy.maven.version>2.1</groovy.maven.version>",
                "+    <maven.antrun.version>1.8</maven.antrun.version>",
                "+    <maven.assembly.version>3.1.0</maven.assembly.version>",
                "+    <maven.bundle.version>4.1.0</maven.bundle.version>",
                "+    <maven.failsafe.version>2.22.1</maven.failsafe.version>",
                "+    <maven.javadoc.version>3.0.1</maven.javadoc.version>",
                "+    <maven.scr.version>1.26.0</maven.scr.version>",
                "+    <maven.surefire.version>2.22.1</maven.surefire.version>",
                "+    <maven.shade.version>3.2.0</maven.shade.version>",
                "+    <rat.version>0.12</rat.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parsers -->",
                "@@ -323,3 +335,3 @@",
                "         <artifactId>maven-compiler-plugin</artifactId>",
                "-        <version>3.2</version>",
                "+        <version>3.8.0</version>",
                "         <configuration>",
                "@@ -336,3 +348,3 @@",
                "         <artifactId>versions-maven-plugin</artifactId>",
                "-        <version>2.5</version>",
                "+        <version>2.7</version>",
                "         <configuration>",
                "@@ -345,3 +357,3 @@",
                "         <!-- if this version contains commons-io 2.6, remove hard-coded commons-io version below -->",
                "-        <version>2.6</version>",
                "+        <version>${forbiddenapis.version}</version>",
                "         <configuration>",
                "@@ -370,3 +382,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.5.1</version>",
                "+        <version>${maven.bundle.version}</version>",
                "       </plugin>",
                "@@ -375,3 +387,3 @@",
                "         <artifactId>maven-surefire-plugin</artifactId>",
                "-        <version>2.18.1</version> <!-- versions greater than this don't like System.exit calls in tika-batch -->",
                "+        <version>${maven.surefire.version}</version> <!-- versions greater than this don't like System.exit calls in tika-batch -->",
                "         <configuration>",
                "@@ -383,3 +395,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "-        <version>2.4.3</version>",
                "+        <version>${maven.shade.version}</version>",
                "       </plugin>",
                "@@ -400,3 +412,3 @@",
                "         <artifactId>maven-enforcer-plugin</artifactId>",
                "-        <version>3.0.0-M1</version>",
                "+        <version>3.0.0-M2</version>",
                "         <executions>",
                "@@ -407,2 +419,5 @@",
                "                 <dependencyConvergence/>",
                "+                <requireMavenVersion>",
                "+                  <version>3.5</version>",
                "+                </requireMavenVersion>",
                "               </rules>",
                "@@ -426,2 +441,3 @@",
                "             <artifactId>apache-rat-plugin</artifactId>",
                "+            <version>${rat.version}</version>",
                "             <executions>",
                "@@ -464,4 +480,5 @@",
                "             <artifactId>maven-javadoc-plugin</artifactId>",
                "+            <version>${maven.javadoc.version}</version>",
                "             <configuration>",
                "-              <additionalparam>-Xdoclint:none</additionalparam>",
                "+              <doclint>none</doclint>",
                "             </configuration>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 4a284eccc..da5072163 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -820,2 +820,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -838,2 +839,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -881,3 +883,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "@@ -894,3 +896,3 @@",
                "                     <artifactId>groovy-maven-plugin</artifactId>",
                "-                    <versionRange>[2.0,)</versionRange>",
                "+                    <version>${groovy.maven.version}</version>",
                "                     <goals>",
                "@@ -938,3 +940,3 @@",
                "             <artifactId>groovy-maven-plugin</artifactId>",
                "-            <version>2.0</version>",
                "+            <version>${groovy.maven.version}</version>",
                "             <dependencies>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "index 9897e4b27..a0608d130 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "@@ -18,6 +18,2 @@ package org.apache.tika.parser.crypto;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.util.Set;",
                "-",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "@@ -39,2 +35,6 @@ import org.xml.sax.SAXException;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.util.Set;",
                "+",
                " /**",
                "@@ -44,3 +44,5 @@ public class Pkcs7Parser extends AbstractParser {",
                "-    /** Serial version UID */",
                "+    /**",
                "+     * Serial version UID",
                "+     */",
                "     private static final long serialVersionUID = -7310531559075115044L;",
                "@@ -64,18 +66,28 @@ public class Pkcs7Parser extends AbstractParser {",
                "                     new JcaDigestCalculatorProviderBuilder().setProvider(\"BC\").build();",
                "-            try (CMSSignedDataParser parser = new CMSSignedDataParser(digestCalculatorProvider,",
                "-                    new CloseShieldInputStream(stream))) {",
                "-                CMSTypedStream content = parser.getSignedContent();",
                "-                if (content == null) {",
                "-                    throw new TikaException(\"cannot parse detached pkcs7 signature (no signed data to parse)\");",
                "-                }",
                "-                try (InputStream input = content.getContentStream()) {",
                "-                    Parser delegate =",
                "-                            context.get(Parser.class, EmptyParser.INSTANCE);",
                "-                    delegate.parse(input, handler, metadata, context);",
                "+            CMSSignedDataParser parser = null;",
                "+            CMSTypedStream content = null;",
                "+            try {",
                "+                parser = new CMSSignedDataParser(digestCalculatorProvider,",
                "+                        new CloseShieldInputStream(stream));",
                "+                content = parser.getSignedContent();",
                "+            } catch (CMSException e) {",
                "+                throw new TikaException(\"Unable to parse pkcs7 signed data\", e);",
                "+",
                "+            } finally {",
                "+                if (parser != null) {",
                "+                    parser.close();",
                "                 }",
                "             }",
                "+",
                "+            if (content == null) {",
                "+                throw new TikaException(\"cannot parse detached pkcs7 signature (no signed data to parse)\");",
                "+            }",
                "+            try (InputStream input = content.getContentStream()) {",
                "+                Parser delegate =",
                "+                        context.get(Parser.class, EmptyParser.INSTANCE);",
                "+                delegate.parse(input, handler, metadata, context);",
                "+            }",
                "+",
                "         } catch (OperatorCreationException e) {",
                "             throw new TikaException(\"Unable to create DigestCalculatorProvider\", e);",
                "-        } catch (CMSException e) {",
                "-            throw new TikaException(\"Unable to parse pkcs7 signed data\", e);",
                "         }",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 1b606ab0e..ed4ed247c 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -173,2 +173,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "+        <version>${maven.shade.version}</version>",
                "         <executions>",
                "@@ -267,3 +268,3 @@",
                "         <artifactId>dockerfile-maven-plugin</artifactId>",
                "-        <version>1.3.7</version>",
                "+        <version>1.4.7</version>",
                "         <configuration>",
                "@@ -297,2 +298,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -316,2 +318,3 @@",
                "             <artifactId>exec-maven-plugin</artifactId>",
                "+            <version>1.6.0</version>",
                "             <executions>",
                "@@ -331,3 +334,3 @@",
                "             <artifactId>miredot-plugin</artifactId>",
                "-            <version>2.0.3</version>",
                "+            <version>2.1.2</version>",
                "             <executions>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 6dfe61807..4db448c90 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -109,2 +109,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -127,2 +128,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -169,3 +171,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index dde2fdca5..3067af324 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -41,3 +41,3 @@",
                "         <artifactId>maven-scr-plugin</artifactId>",
                "-        <version>1.7.4</version>",
                "+        <version>${maven.scr.version}</version>",
                "       </plugin>",
                "@@ -47,2 +47,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2775": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2775",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "82146ad3094994a246e6971d5fc40a060e85f099",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536956005,
            "hunks": 17,
            "message": "roll back to 1.19.SNAPSHOT for second attempt of RC1, take 2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c0d447c24..d7a447fd3 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 697422ef7..f40ecb4c9 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index bb8dee97e..48c09caaa 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 2c7103d17..194e88723 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index c8534b59c..0d6a22b91 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 63bf95b41..f7d610464 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 9c4c79912..10c1470d9 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.19</version>",
                "+        <version>1.19-SNAPSHOT</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 505f08e86..26ec9ec42 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 253dfbf8f..84c341963 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 0edb3941f..5f270cf33 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index a5c7a7013..61ec0abf6 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 54182058e..db9b07a58 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.19</version>",
                "+  <version>1.19-SNAPSHOT</version>",
                "   <packaging>pom</packaging>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index db26e7e8d..8c9f1f5f1 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 27e723986..fa81291a1 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 88100cca7..e0b35fef0 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 75dd98d8e..704d5d9d2 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index d63635f27..11358a5af 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19</version>",
                "+    <version>1.19-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "03e0942cb4aed5fbb97b82899c643f49f1de2503"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ef2cf1c9e1bcf596def63e21efd0a5170902b0e2",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541716179,
            "hunks": 1,
            "message": "TIKA-2773 -- get rid debugging println...the horror",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "index 7c7d41ee5..171c7ea6d 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java",
                "@@ -65,3 +65,2 @@ class JDBCTableReader {",
                "     public JDBCTableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {",
                "-        System.out.println(\"new table: \"+tableName);",
                "         this.connection = connection;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2773": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2773",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "49ed3099f557349531076f7265db1b453a9627fb",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536247033,
            "hunks": 17,
            "message": "TIKA-2552 -- upgrade to POI 4.0.0 -- fix merge conflicts",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index 30f29755c..e5da8ce4c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -18,13 +18,8 @@ package org.apache.tika.parser.microsoft.ooxml;",
                "-import java.math.BigDecimal;",
                "-import java.util.Date;",
                "-",
                "-import org.apache.poi.POIXMLProperties.CoreProperties;",
                "-import org.apache.poi.POIXMLProperties.CustomProperties;",
                "-import org.apache.poi.POIXMLProperties.ExtendedProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;",
                "-import org.apache.poi.openxml4j.util.Nullable;",
                " import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -44,2 +39,6 @@ import org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProp",
                "+import java.math.BigDecimal;",
                "+import java.util.Date;",
                "+import java.util.Optional;",
                "+",
                " /**",
                "@@ -72,3 +71,3 @@ public class MetadataExtractor {",
                "-    private void extractMetadata(CoreProperties properties, Metadata metadata) {",
                "+    private void extractMetadata(POIXMLProperties.CoreProperties properties, Metadata metadata) {",
                "         PackagePropertiesPart propsHolder = properties",
                "@@ -89,3 +88,3 @@ public class MetadataExtractor {",
                "                 propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "+        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "@@ -101,3 +100,5 @@ public class MetadataExtractor {",
                "                 .getRevisionProperty());",
                "-",
                "+        // TODO: Move to OO subject in Tika 2.0",
                "+        setProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "         setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "@@ -105,5 +106,13 @@ public class MetadataExtractor {",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "+                .getContentStatusProperty());",
                "+        setProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "+                .getRevisionProperty());",
                "+        setProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "     }",
                "-    private void extractMetadata(ExtendedProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.ExtendedProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -145,5 +154,22 @@ public class MetadataExtractor {",
                "         setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "+        setProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "+        setProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "-    private void extractMetadata(CustomProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.CustomProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -231,14 +257,15 @@ public class MetadataExtractor {",
                "-    private <T> void setProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "-        T value = nullableValue.getValue();",
                "-        if (value != null) {",
                "-            if (value instanceof Date) {",
                "-                metadata.set(property, (Date) value);",
                "-            } else if (value instanceof String) {",
                "-                metadata.set(property, (String) value);",
                "-            } else if (value instanceof Integer) {",
                "-                metadata.set(property, (Integer) value);",
                "-            } else if (value instanceof Double) {",
                "-                metadata.set(property, (Double) value);",
                "-            }",
                "+    private <T> void setProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "+        if (value instanceof Date) {",
                "+            metadata.set(property, (Date) value);",
                "+        } else if (value instanceof String) {",
                "+            metadata.set(property, (String) value);",
                "+        } else if (value instanceof Integer) {",
                "+            metadata.set(property, (Integer) value);",
                "+        } else if (value instanceof Double) {",
                "+            metadata.set(property, (Double) value);",
                "         }",
                "@@ -246,16 +273,20 @@ public class MetadataExtractor {",
                "-    private <T> void addProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "-        T value = nullableValue.getValue();",
                "-        if (value != null) {",
                "-            if (value instanceof String) {",
                "-                metadata.add(property, (String) value);",
                "-            } else {",
                "-                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "-            }",
                "+    private <T> void addProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "+        if (value instanceof String) {",
                "+            metadata.add(property, (String) value);",
                "+        } else {",
                "+            throw new IllegalArgumentException(\"Can't add property of class: \" + nullableValue.getClass());",
                "         }",
                "     }",
                "-    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "-        if (value.getValue() != null) {",
                "-            setProperty(metadata, name, value.getValue().toString());",
                "+",
                "+    private void setProperty(Metadata metadata, String property, Optional<String> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "         }",
                "+        String value = nullableValue.get();",
                "+        metadata.set(property, value);",
                "     }",
                "@@ -286,7 +317,7 @@ public class MetadataExtractor {",
                "-    private void addMultiProperty(Metadata metadata, Property property, Nullable<String> value) {",
                "-        if (value == null) {",
                "+    private void addMultiProperty(Metadata metadata, Property property, Optional<String> value) {",
                "+        if (!value.isPresent()) {",
                "             return;",
                "         }",
                "-        SummaryExtractor.addMulti(metadata, property, value.getValue());",
                "+        SummaryExtractor.addMulti(metadata, property, value.get());",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "199112bde63e64af3de7ec8c98475907e7513128",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536957411,
            "hunks": 17,
            "message": "[maven-release-plugin] prepare release 1.19-rc1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d7a447fd3..c0d447c24 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index f40ecb4c9..697422ef7 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index 48c09caaa..bb8dee97e 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 194e88723..2c7103d17 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 0d6a22b91..c8534b59c 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index f7d610464..63bf95b41 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 10c1470d9..9c4c79912 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.19-SNAPSHOT</version>",
                "+        <version>1.19</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 26ec9ec42..505f08e86 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 84c341963..253dfbf8f 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 5f270cf33..0edb3941f 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 61ec0abf6..a5c7a7013 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index db9b07a58..54182058e 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.19-SNAPSHOT</version>",
                "+  <version>1.19</version>",
                "   <packaging>pom</packaging>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 8c9f1f5f1..db26e7e8d 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index fa81291a1..27e723986 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index e0b35fef0..88100cca7 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 704d5d9d2..75dd98d8e 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 11358a5af..d63635f27 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19-SNAPSHOT</version>",
                "+    <version>1.19</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "90285dcd25ade6ff9d93ea75cb7b2624403ef71c"
                ],
                [
                    "no-tag",
                    "48e76da1b8cd1121c5fc21a4b6f27597c9dcfcc4"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8ea6b22f58feb73e3399fc82811cbd738a6f3cd1",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526652932,
            "hunks": 6,
            "message": "TIKA-2479 Update XLS missing cell/row handling to match XLSX and XLSB, add unit test for missing rows, and enable the Columnar tests for the Excel formats",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "index 0dc33ee06..ff5971aab 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "@@ -18,3 +18,3 @@ package org.apache.tika.parser.microsoft;",
                "-import java.awt.*;",
                "+import java.awt.Point;",
                " import java.io.IOException;",
                "@@ -44,3 +44,2 @@ import org.apache.poi.hssf.record.DrawingGroupRecord;",
                " import org.apache.poi.hssf.record.EOFRecord;",
                "-import org.apache.poi.hssf.record.ExtSSTRecord;",
                " import org.apache.poi.hssf.record.ExtendedFormatRecord;",
                "@@ -283,3 +282,2 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                 throws IOException, SAXException, TikaException {",
                "-",
                "             // Set up listener and register the records we want to process",
                "@@ -496,3 +494,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                     }",
                "-                \tbreak;",
                "+                    break;",
                "@@ -503,4 +501,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                     }",
                "-                \tbreak;",
                "-",
                "+                    break;",
                "             }",
                "@@ -601,8 +598,13 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "             for (Map.Entry<Point, Cell> entry : currentSheet.entrySet()) {",
                "-                while (currentRow < entry.getKey().y) {",
                "-                    handler.endElement(\"td\");",
                "-                    handler.endElement(\"tr\");",
                "-                    handler.startElement(\"tr\");",
                "-                    handler.startElement(\"td\");",
                "-                    currentRow++;",
                "+                if (currentRow != entry.getKey().y) {",
                "+                    // We've moved onto a new row, possibly skipping some",
                "+                    do {",
                "+                        handler.endElement(\"td\");",
                "+                        handler.endElement(\"tr\");",
                "+                        handler.startElement(\"tr\");",
                "+                        handler.startElement(\"td\");",
                "+                        currentRow++;",
                "+                    } while (officeParserConfig.getIncludeMissingRows() &&",
                "+                             currentRow < entry.getKey().y);",
                "+                    currentRow = entry.getKey().y;",
                "                     currentColumn = 0;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ba436227b987199717b5b94689d10c7b0d1deb14",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533187246,
            "hunks": 2,
            "message": "fix for TIKA-2701 contributed by grigoriy",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "index e0a2507da..806c7d9ba 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "@@ -64,2 +64,3 @@ public class WMFParser extends AbstractParser {",
                "             HwmfPicture picture = new HwmfPicture(stream);",
                "+            Charset charset = LocaleUtil.CHARSET_1252;",
                "             //TODO: make x/y info public in POI so that we can use it here",
                "@@ -67,3 +68,2 @@ public class WMFParser extends AbstractParser {",
                "             for (HwmfRecord record : picture.getRecords()) {",
                "-                Charset charset = LocaleUtil.CHARSET_1252;",
                "                 //this is pure hackery for specifying the font"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "67981dce07a59ed444306f1a32a47c9b216db101",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537537248,
            "hunks": 3,
            "message": "fix for TIKA-2731 contributed by @jkakavas",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 0069a9a22..4ccdad485 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -82,10 +82,9 @@ public class XMLReaderUtils implements Serializable {",
                "     private static int determineMaxEntityExpansions() {",
                "-        Properties properties = System.getProperties();",
                "-        if (properties != null && properties.containsKey(JAXP_ENTITY_EXPANSION_LIMIT_KEY)) {",
                "+        String expansionLimit = System.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY);",
                "+        if (expansionLimit != null) {",
                "             try {",
                "-                return Integer.parseInt(properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY));",
                "+                return Integer.parseInt(expansionLimit);",
                "             } catch (NumberFormatException e) {",
                "-                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\"+",
                "-                        properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY)+",
                "-                        \"; backing off to default: \"+DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "+                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\" + expansionLimit +",
                "+                        \"; backing off to default: \" + DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "             }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2731": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2731",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5c7dafada7caee90635283d16b04d403eef7e047",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536157230,
            "hunks": 3,
            "message": "TIKA-2722 -- cleanup Calendar metadata in PDFParser",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "index f47e5e9ed..43a216a6d 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "@@ -272,7 +272,8 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         addMetadata(metadata, PDF.DOC_INFO_TRAPPED, info.getTrapped());",
                "-        addMetadata(metadata, PDF.DOC_INFO_CREATED, info.getCreationDate());",
                "-        addMetadata(metadata, TikaCoreProperties.CREATED, info.getCreationDate());",
                "+        Calendar created = info.getCreationDate();",
                "+        addMetadata(metadata, PDF.DOC_INFO_CREATED, created);",
                "+        addMetadata(metadata, TikaCoreProperties.CREATED, created);",
                "         Calendar modified = info.getModificationDate();",
                "         addMetadata(metadata, TikaCoreProperties.MODIFIED, modified);",
                "-        addMetadata(metadata, PDF.DOC_INFO_MODIFICATION_DATE, info.getModificationDate());",
                "+        addMetadata(metadata, PDF.DOC_INFO_MODIFICATION_DATE, modified);",
                "@@ -490,3 +491,3 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         if (value != null) {",
                "-            metadata.set(property, value.getTime());",
                "+            metadata.set(property, value);",
                "         }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "73232252c84a74c598014a7ba9d6ef63732a75d4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533308818,
            "hunks": 0,
            "message": "Merge branch 'TIKA-2673' of https://github.com/GerardBouchar/tika into GerardBouchar-TIKA-2673",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c25671c3a1542f3a714ad687afe30dfc8759c450",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537562390,
            "hunks": 3,
            "message": "TIKA-2731 via jkakavas.  This closes 250.",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 0069a9a22..4ccdad485 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -82,10 +82,9 @@ public class XMLReaderUtils implements Serializable {",
                "     private static int determineMaxEntityExpansions() {",
                "-        Properties properties = System.getProperties();",
                "-        if (properties != null && properties.containsKey(JAXP_ENTITY_EXPANSION_LIMIT_KEY)) {",
                "+        String expansionLimit = System.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY);",
                "+        if (expansionLimit != null) {",
                "             try {",
                "-                return Integer.parseInt(properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY));",
                "+                return Integer.parseInt(expansionLimit);",
                "             } catch (NumberFormatException e) {",
                "-                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\"+",
                "-                        properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY)+",
                "-                        \"; backing off to default: \"+DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "+                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\" + expansionLimit +",
                "+                        \"; backing off to default: \" + DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "             }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2731": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2731",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5482dd4595ea663c9d32a74d2f1a71885938adf9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533661156,
            "hunks": 4,
            "message": "TIKA-2672 -- need more exclusions to avoid conflicts",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index ee27bd5ee..fba81106e 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -147,2 +147,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -201,2 +205,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-lang3</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -217,2 +225,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-lang</groupId>",
                "+          <artifactId>commons-lang</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -228,2 +240,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "734358f9870c87dd1739f4e995d0d71765965542",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536939818,
            "hunks": 2,
            "message": "Fix missing license headers; h/t rat!",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index cbc6e352d..6e5838cd4 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -522,2 +522,12 @@",
                "       </plugin>",
                "+      <plugin>",
                "+        <groupId>org.apache.rat</groupId>",
                "+        <artifactId>apache-rat-plugin</artifactId>",
                "+        <configuration>",
                "+          <excludes>",
                "+            <exclude>src/main/resources/META-INF/MANIFEST.MF</exclude>",
                "+          </excludes>",
                "+        </configuration>",
                "+      </plugin>",
                "+",
                "     </plugins>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java b/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "index 588a00bd2..83beda2dc 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java",
                "@@ -1 +1,17 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ * <p>",
                "+ * http://www.apache.org/licenses/LICENSE-2.0",
                "+ * <p>",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                " package org.apache.tika.utils;"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-core/src/main/java/org/apache/tika/utils/ProcessUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "383dcefe230136b41e24cd43537175d62a0ed67b"
                ],
                [
                    "no-tag",
                    "10c75a16e490a9db05e925941e92537e1d746cec"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1ff63b0c8dd5a21e7eb5f83e1a96f1fbd5107966",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536238667,
            "hunks": 8,
            "message": "improve xml parsing",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 382be2d04..0069a9a22 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -48,2 +48,3 @@ import java.io.StringReader;",
                " import java.lang.reflect.Method;",
                "+import java.util.Properties;",
                " import java.util.concurrent.ArrayBlockingQueue;",
                "@@ -75,2 +76,21 @@ public class XMLReaderUtils implements Serializable {",
                "+    private static final String JAXP_ENTITY_EXPANSION_LIMIT_KEY = \"jdk.xml.entityExpansionLimit\";",
                "+    private static final int DEFAULT_MAX_ENTITY_EXPANSIONS = 20;",
                "+",
                "+    private static int MAX_ENTITY_EXPANSIONS = determineMaxEntityExpansions();",
                "+",
                "+    private static int determineMaxEntityExpansions() {",
                "+        Properties properties = System.getProperties();",
                "+        if (properties != null && properties.containsKey(JAXP_ENTITY_EXPANSION_LIMIT_KEY)) {",
                "+            try {",
                "+                return Integer.parseInt(properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY));",
                "+            } catch (NumberFormatException e) {",
                "+                LOG.log(Level.WARNING, \"Couldn't parse an integer for the entity expansion limit:\"+",
                "+                        properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY)+",
                "+                        \"; backing off to default: \"+DEFAULT_MAX_ENTITY_EXPANSIONS);",
                "+            }",
                "+        }",
                "+        return DEFAULT_MAX_ENTITY_EXPANSIONS;",
                "+    }",
                "+",
                "     //TODO: figure out if the rw lock is any better than a simple lock",
                "@@ -106,2 +126,15 @@ public class XMLReaderUtils implements Serializable {",
                "+    /**",
                "+     * Set the maximum number of entity expansions allowable in SAX/DOM/StAX parsing.",
                "+     * <b>NOTE:</b>A value less than or equal to zero indicates no limit.",
                "+     * This will override the system property {@link #JAXP_ENTITY_EXPANSION_LIMIT_KEY}",
                "+     * and the {@link #DEFAULT_MAX_ENTITY_EXPANSIONS} value for pa",
                "+     *",
                "+     * @param maxEntityExpansions -- maximum number of allowable entity expansions",
                "+     * @since Apache Tika 1.19",
                "+     */",
                "+    public static void setMaxEntityExpansions(int maxEntityExpansions) {",
                "+        MAX_ENTITY_EXPANSIONS = maxEntityExpansions;",
                "+    }",
                "+",
                "     /**",
                "@@ -519,3 +552,3 @@ public class XMLReaderUtils implements Serializable {",
                "                 Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "-                setLimit.invoke(mgr, 4096);",
                "+                setLimit.invoke(mgr, MAX_ENTITY_EXPANSIONS);",
                "                 factory.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "@@ -536,3 +569,3 @@ public class XMLReaderUtils implements Serializable {",
                "         try {",
                "-            factory.setAttribute(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+            factory.setAttribute(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", MAX_ENTITY_EXPANSIONS);",
                "         } catch (IllegalArgumentException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "@@ -556,3 +589,3 @@ public class XMLReaderUtils implements Serializable {",
                "                 Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "-                setLimit.invoke(mgr, 4096);",
                "+                setLimit.invoke(mgr, MAX_ENTITY_EXPANSIONS);",
                "                 parser.setProperty(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "@@ -573,3 +606,3 @@ public class XMLReaderUtils implements Serializable {",
                "         try {",
                "-            parser.setProperty(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+            parser.setProperty(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", MAX_ENTITY_EXPANSIONS);",
                "         } catch (SAXException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "@@ -585,3 +618,3 @@ public class XMLReaderUtils implements Serializable {",
                "         try {",
                "-            inputFactory.setProperty(\"com.ctc.wstx.maxEntityCount\", 4096);",
                "+            inputFactory.setProperty(\"com.ctc.wstx.maxEntityCount\", MAX_ENTITY_EXPANSIONS);",
                "         } catch (IllegalArgumentException e) {"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4e67928412ad56333d400f3728ecdb59d07d9d63"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6fbc59a696b8254fde57e79130daa54837e0f136",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533820484,
            "hunks": 14,
            "message": "TIKA-2552 -- Add back the 1.x metadata variants",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index 09556b099..e5da8ce4c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -18,6 +18,2 @@ package org.apache.tika.parser.microsoft.ooxml;",
                "-import java.math.BigDecimal;",
                "-import java.util.Date;",
                "-import java.util.Optional;",
                "-",
                " import org.apache.poi.ooxml.POIXMLProperties;",
                "@@ -25,6 +21,5 @@ import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;",
                "-import org.apache.poi.openxml4j.util.Nullable;",
                "-import org.apache.poi.ss.formula.functions.T;",
                " import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -44,2 +39,6 @@ import org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProp",
                "+import java.math.BigDecimal;",
                "+import java.util.Date;",
                "+import java.util.Optional;",
                "+",
                " /**",
                "@@ -89,3 +88,3 @@ public class MetadataExtractor {",
                "                 propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "+        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "@@ -101,3 +100,5 @@ public class MetadataExtractor {",
                "                 .getRevisionProperty());",
                "-",
                "+        // TODO: Move to OO subject in Tika 2.0",
                "+        setProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "         setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "@@ -105,2 +106,10 @@ public class MetadataExtractor {",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "+                .getContentStatusProperty());",
                "+        setProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "+                .getRevisionProperty());",
                "+        setProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "     }",
                "@@ -145,2 +154,19 @@ public class MetadataExtractor {",
                "         setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "+        setProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "+        setProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "@@ -232,3 +258,3 @@ public class MetadataExtractor {",
                "     private <T> void setProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "-        if (! nullableValue.isPresent()) {",
                "+        if (!nullableValue.isPresent()) {",
                "             return;",
                "@@ -236,11 +262,11 @@ public class MetadataExtractor {",
                "         T value = nullableValue.get();",
                "-            if (value instanceof Date) {",
                "-                metadata.set(property, (Date) value);",
                "-            } else if (value instanceof String) {",
                "-                metadata.set(property, (String) value);",
                "-            } else if (value instanceof Integer) {",
                "-                metadata.set(property, (Integer) value);",
                "-            } else if (value instanceof Double) {",
                "-                metadata.set(property, (Double) value);",
                "-            }",
                "+        if (value instanceof Date) {",
                "+            metadata.set(property, (Date) value);",
                "+        } else if (value instanceof String) {",
                "+            metadata.set(property, (String) value);",
                "+        } else if (value instanceof Integer) {",
                "+            metadata.set(property, (Integer) value);",
                "+        } else if (value instanceof Double) {",
                "+            metadata.set(property, (Double) value);",
                "+        }",
                "     }",
                "@@ -252,12 +278,15 @@ public class MetadataExtractor {",
                "         T value = nullableValue.get();",
                "-            if (value instanceof String) {",
                "-                metadata.add(property, (String) value);",
                "-            } else {",
                "-                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "-            }",
                "+        if (value instanceof String) {",
                "+            metadata.add(property, (String) value);",
                "+        } else {",
                "+            throw new IllegalArgumentException(\"Can't add property of class: \" + nullableValue.getClass());",
                "+        }",
                "     }",
                "-    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "-        if (value.getValue() != null) {",
                "-            setProperty(metadata, name, value.getValue().toString());",
                "+",
                "+    private void setProperty(Metadata metadata, String property, Optional<String> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "         }",
                "+        String value = nullableValue.get();",
                "+        metadata.set(property, value);",
                "     }",
                "@@ -289,3 +318,3 @@ public class MetadataExtractor {",
                "     private void addMultiProperty(Metadata metadata, Property property, Optional<String> value) {",
                "-        if (! value.isPresent()) {",
                "+        if (!value.isPresent()) {",
                "             return;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "46dee91157976a36ff69cc0dd3c8f8cca9e910da",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537915429,
            "hunks": 17,
            "message": "reset to 1.19.1-SNAPSHOT after timed-out rc1 attempt",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a5f4185a1..3a94e2e0b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 2549e9443..0a33ecde4 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index cb9afe182..c0aa376ca 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index fadbafc3d..b18e8e422 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 06eb9e85d..1f6d91156 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fa5e50e7d..4665f45e4 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index d6bdbb8bc..3197cc078 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.20-SNAPSHOT</version>",
                "+        <version>1.19.1-SNAPSHOT</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 28518c397..57c431f1f 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 1fcebb32b..e0bccea8b 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index e72c7ff7d..d504b5fdf 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 57aae2dbf..e0514f963 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 07a8b2163..597d02c9b 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.20-SNAPSHOT</version>",
                "+  <version>1.19.1-SNAPSHOT</version>",
                "   <packaging>pom</packaging>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 16ae68e0a..b2c50ddab 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 2f101ce60..0554ed132 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 6de0d3ba3..5ad093658 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 566f7f6bb..0769a6296 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 96657a750..90b142b6a 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "aa9aeb73c0ea636c6fcd4a73a0fd78d0711b3bc5"
                ],
                [
                    "no-tag",
                    "019bd303beef46c0342862c3d98474783e2ba7ae"
                ],
                [
                    "no-tag",
                    "481481a3827c3181282ef841a361a7c02a118730"
                ]
            ],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "de53df98a9523955fbdbaeefce00c13eb1b719b3",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525987116,
            "hunks": 2,
            "message": "Mime magic for DPX and ACES, thanks to Andreas Meier (TIKA-2628 and TIKA-2629) # Conflicts: #\tCHANGES.txt",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 77db75216..3c4b4ca78 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -5021,2 +5021,11 @@",
                "+  <mime-type type=\"image/aces\">",
                "+    <_comment>ACES Image Container File</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x762F310102000000\" type=\"string\" offset=\"0\"/>",
                "+      <match value=\"0x762F310102040000\" type=\"string\" offset=\"0\"/>",
                "+    </magic>",
                "+    <glob pattern=\"*.exr\"/>",
                "+  </mime-type> ",
                "+",
                "   <mime-type type=\"image/bmp\">",
                "@@ -5070,2 +5079,12 @@",
                "+  <mime-type type=\"image/x-dpx\">",
                "+    <acronym>DPX</acronym>",
                "+    <_comment>Digital Picture Exchange from SMPTE</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"SDPX\" type=\"string\" offset=\"0\" />",
                "+      <match value=\"XPDS\" type=\"string\" offset=\"0\" />",
                "+    </magic>",
                "+    <glob pattern=\"*.dpx\"/>",
                "+  </mime-type>",
                "+",
                "   <mime-type type=\"image/emf\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2628": "",
                "TIKA-2629": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2628, TIKA-2629",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f44e109d423ac99e74cc55fc78c7daf4fb81a8fd",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534261753,
            "hunks": 59,
            "message": "TIKA-2672 -- upgrade deeplearning4j to 1.0.0-beta2 via Thejan Wijesinghe.  Thank you, Thejan!!!",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fbed520c4..278852e18 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -38,4 +38,3 @@",
                "     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    <dl4j.version>0.8.0</dl4j.version>",
                "-    <dl4j.model.version>0.8.0-2</dl4j.model.version>",
                "+    <dl4j.version>1.0.0-beta2</dl4j.version>",
                "   </properties>",
                "@@ -53,2 +52,14 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-compress</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>com.google.guava</groupId>",
                "+          <artifactId>guava</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -62,31 +73,20 @@",
                "       <groupId>org.deeplearning4j</groupId>",
                "-      <artifactId>deeplearning4j-keras</artifactId>",
                "-      <version>${dl4j.model.version}</version>",
                "-      <!-- exclude this because of non-ASF friendly \"do no evil\" license.",
                "-        Because this relies on tika-parsers, that should have ted-dunning's drop-in",
                "-      -->",
                "+      <artifactId>deeplearning4j-zoo</artifactId>",
                "+      <version>${dl4j.version}</version>",
                "       <exclusions>",
                "-        <exclusion>",
                "-          <groupId>org.json</groupId>",
                "-          <artifactId>json</artifactId>",
                "-        </exclusion>",
                "-        <exclusion>",
                "-          <groupId>com.google.guava</groupId>",
                "-          <artifactId>guava</artifactId>",
                "-        </exclusion>",
                "         <exclusion>",
                "           <groupId>org.deeplearning4j</groupId>",
                "-          <artifactId>deeplearning4j-modelimport</artifactId>",
                "+          <artifactId>deeplearning4j-nn</artifactId>",
                "         </exclusion>",
                "         <exclusion>",
                "-          <groupId>org.apache.commons</groupId>",
                "-          <artifactId>commons-compress</artifactId>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "         </exclusion>",
                "         <exclusion>",
                "-          <groupId>org.apache.commons</groupId>",
                "-          <artifactId>commons-math3</artifactId>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>jackson</artifactId>",
                "         </exclusion>",
                "         <exclusion>",
                "-          <groupId>commons-io</groupId>",
                "-          <artifactId>commons-io</artifactId>",
                "+          <groupId>com.google.guava</groupId>",
                "+          <artifactId>guava</artifactId>",
                "         </exclusion>",
                "@@ -102,8 +102,16 @@",
                "       <artifactId>deeplearning4j-modelimport</artifactId>",
                "-      <version>${dl4j.model.version}</version>",
                "+      <version>${dl4j.version}</version>",
                "       <exclusions>",
                "-         <exclusion>",
                "-            <groupId>org.deeplearning4j</groupId>",
                "-            <artifactId>deeplearning4j-keras</artifactId>",
                "-         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.deeplearning4j</groupId>",
                "+          <artifactId>deeplearning4j-keras</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>jackson</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -118,2 +126,41 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>org.deeplearning4j</groupId>",
                "+      <artifactId>deeplearning4j-nn</artifactId>",
                "+      <version>${dl4j.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>jackson</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-compress</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>com.google.guava</groupId>",
                "+          <artifactId>guava</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.datavec</groupId>",
                "+          <artifactId>datavec-data-image</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "+    </dependency>",
                "     <dependency>",
                "@@ -123,2 +170,6 @@",
                "       <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -145,2 +196,65 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>org.datavec</groupId>",
                "+      <artifactId>datavec-api</artifactId>",
                "+      <version>${dl4j.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-compress</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-lang3</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>joda-time</groupId>",
                "+          <artifactId>joda-time</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>jackson</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-lang</groupId>",
                "+          <artifactId>commons-lang</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>org.objenesis</groupId>",
                "+      <artifactId>objenesis</artifactId>",
                "+      <version>2.6</version>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>org.nd4j</groupId>",
                "+      <artifactId>nd4j-api</artifactId>",
                "+      <version>${dl4j.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.objenesis</groupId>",
                "+          <artifactId>objenesis</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>com.google.guava</groupId>",
                "+          <artifactId>guava</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "+    </dependency>",
                "     <dependency>",
                "@@ -150,2 +264,6 @@",
                "       <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.nd4j</groupId>",
                "+          <artifactId>nd4j-api</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -157,10 +275,36 @@",
                "     <dependency>",
                "-      <groupId>org.bytedeco</groupId>",
                "-      <artifactId>javacpp</artifactId>",
                "-      <version>1.3.2</version>",
                "+      <groupId>org.nd4j</groupId>",
                "+      <artifactId>jackson</artifactId>",
                "+      <version>${dl4j.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>joda-time</groupId>",
                "+          <artifactId>joda-time</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>org.apache.commons</groupId>",
                "+      <artifactId>commons-compress</artifactId>",
                "+      <version>${commons.compress.version}</version>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>org.projectlombok</groupId>",
                "+      <artifactId>lombok</artifactId>",
                "+      <version>1.16.22</version>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>com.google.guava</groupId>",
                "+      <artifactId>guava</artifactId>",
                "+      <version>20.0</version>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>joda-time</groupId>",
                "+      <artifactId>joda-time</artifactId>",
                "+      <version>2.9.2</version>",
                "     </dependency>",
                "     <dependency>",
                "-        <groupId>org.apache.commons</groupId>",
                "-        <artifactId>commons-compress</artifactId>",
                "-        <version>${commons.compress.version}</version>",
                "+      <groupId>commons-io</groupId>",
                "+      <artifactId>commons-io</artifactId>",
                "+      <version>2.6</version>",
                "     </dependency>",
                "@@ -199,5 +343,2 @@",
                "         <configuration>",
                "-          <excludes>",
                "-            <exclude>src/main/resources/org/apache/tika/dl/imagerec/*.json</exclude>",
                "-          </excludes>",
                "         </configuration>",
                "@@ -207,12 +348,2 @@",
                "   </build>",
                "-  <repositories>",
                "-    <repository>",
                "-      <id>oss-sonatype</id>",
                "-      <name>oss-sonatype</name>",
                "-      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>",
                "-      <snapshots>",
                "-        <enabled>true</enabled>",
                "-      </snapshots>",
                "-    </repository>",
                "-  </repositories>",
                " </project>",
                "diff --git a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "index 608e7eb50..59307659e 100644",
                "--- a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "+++ b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "@@ -18,18 +18,2 @@ package org.apache.tika.dl.imagerec;",
                "-import java.io.File;",
                "-import java.io.FileInputStream;",
                "-import java.io.FileNotFoundException;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.net.URI;",
                "-import java.net.URISyntaxException;",
                "-import java.net.URL;",
                "-import java.nio.charset.Charset;",
                "-import java.util.ArrayList;",
                "-import java.util.Collections;",
                "-import java.util.HashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-",
                " import org.apache.commons.io.FileUtils;",
                "@@ -48,5 +32,6 @@ import org.datavec.image.loader.NativeImageLoader;",
                " import org.deeplearning4j.nn.graph.ComputationGraph;",
                "-import org.deeplearning4j.nn.modelimport.keras.InvalidKerasConfigurationException;",
                "-import org.deeplearning4j.nn.modelimport.keras.KerasModelImport;",
                "-import org.deeplearning4j.nn.modelimport.keras.UnsupportedKerasConfigurationException;",
                "+import org.deeplearning4j.nn.modelimport.keras.KerasModel;",
                "+import org.deeplearning4j.nn.modelimport.keras.exceptions.InvalidKerasConfigurationException;",
                "+import org.deeplearning4j.nn.modelimport.keras.exceptions.UnsupportedKerasConfigurationException;",
                "+import org.deeplearning4j.nn.modelimport.keras.utils.KerasModelBuilder;",
                " import org.json.simple.JSONArray;",
                "@@ -61,2 +46,18 @@ import org.xml.sax.SAXException;",
                "+import java.io.File;",
                "+import java.io.FileInputStream;",
                "+import java.io.FileNotFoundException;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.net.URI;",
                "+import java.net.URISyntaxException;",
                "+import java.net.URL;",
                "+import java.nio.charset.Charset;",
                "+import java.util.ArrayList;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+",
                " /**",
                "@@ -71,3 +72,2 @@ import org.xml.sax.SAXException;",
                "  * <li>{@link #modelWeightsPath}</li>",
                "- * <li>{@link #modelJsonPath}</li>",
                "  * <li>{@link #labelFile}</li>",
                "@@ -93,5 +93,7 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "     private static final Logger LOG = LoggerFactory.getLogger(DL4JInceptionV3Net.class);",
                "-    private static final String DEF_WEIGHTS_URL = \"https://raw.githubusercontent.com/USCDataScience/dl4j-kerasimport-examples/98ec48b56a5b8fb7d54a2994ce9cb23bfefac821/dl4j-import-example/data/inception-model-weights.h5\";",
                "-    public static final String DEF_MODEL_JSON = \"org/apache/tika/dl/imagerec/inceptionv3-model.json\";",
                "-    public static final String DEF_LABEL_MAPPING = \"org/apache/tika/dl/imagerec/imagenet_incpetionv3_class_index.json\";",
                "+    private static final String DEF_WEIGHTS_URL = \"https://github.com/USCDataScience/tika-dockers/releases/download/v0.2/inception_v3_keras_2.h5\";",
                "+    private static final String DEF_LABEL_MAPPING_URL = \"https://github.com/USCDataScience/tika-dockers/releases/download/v0.2/imagenet_class_index.json\";",
                "+    private static final String BASE_DIR = System.getProperty(\"user.home\") + File.separator + \".tika-dl\" +",
                "+            File.separator + \"models\" + File.separator + \"keras\";",
                "+    private static final String MODEL_DIR = BASE_DIR + File.separator + \"inception-v3\";",
                "@@ -102,3 +104,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "     @Field",
                "-    private File cacheDir = new File(\".tmp-inception\");",
                "+    private File cacheDir = new File(MODEL_DIR);",
                "@@ -114,10 +116,2 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "-    /**",
                "-     * Path to a JSON file that contains network (graph) structure exported from Keras.",
                "-     * <p>",
                "-     * <br/>",
                "-     * Default is retrieved from {@value DEF_MODEL_JSON}",
                "-     */",
                "-    @Field",
                "-    private String modelJsonPath = DEF_MODEL_JSON;",
                "     /***",
                "@@ -125,6 +119,6 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "      * <br/>",
                "-     * The default is retrieved from {@value DEF_LABEL_MAPPING}",
                "+     * The default is retrieved from {@value DEF_LABEL_MAPPING_URL}",
                "      */",
                "     @Field",
                "-    private String labelFile = DEF_LABEL_MAPPING;",
                "+    private String labelFile = DEF_LABEL_MAPPING_URL;",
                "@@ -140,4 +134,6 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "     private int imgHeight = 299;",
                "+",
                "     @Field",
                "     private int imgWidth = 299;",
                "+",
                "     @Field",
                "@@ -171,6 +167,6 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "             if (url == null) {",
                "-                LOG.debug(\"Classloader does not knows the file {}\", path);",
                "+                LOG.debug(\"Classloader does not know the file {}\", path);",
                "                 file = null;",
                "             } else {",
                "-                LOG.debug(\"Class loader knows the file {}\", path);",
                "+                LOG.debug(\"Classloader knows the file {}\", path);",
                "                 try {",
                "@@ -194,3 +190,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "-    public static synchronized File cachedDownload(File cacheDir, URI uri)",
                "+    private static synchronized File cachedDownload(File cacheDir, URI uri)",
                "             throws IOException {",
                "@@ -224,10 +220,8 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "-    @Override",
                "-    public void initialize(Map<String, Param> params)",
                "-            throws TikaConfigException {",
                "-        //STEP 1: resolve weights file, download if necessary",
                "-        if (modelWeightsPath.startsWith(\"http://\") || modelWeightsPath.startsWith(\"https://\")) {",
                "-            LOG.debug(\"Config instructed to download the weights file, doing so.\");",
                "+    private String mayBeDownloadFile(String path) throws TikaConfigException {",
                "+        String resolvedFilePath;",
                "+        if (path.startsWith(\"http://\") || path.startsWith(\"https://\")) {",
                "+            LOG.debug(\"Config instructed to download the file, doing so.\");",
                "             try {",
                "-                modelWeightsPath = cachedDownload(cacheDir, URI.create(modelWeightsPath)).getAbsolutePath();",
                "+                resolvedFilePath = cachedDownload(cacheDir, URI.create(path)).getAbsolutePath();",
                "             } catch (IOException e) {",
                "@@ -236,20 +230,20 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "         } else {",
                "-            File modelFile = retrieveFile(modelWeightsPath);",
                "-            if (!modelFile.exists()) {",
                "-                LOG.error(\"modelWeights does not exist at :: {}\", modelWeightsPath);",
                "-                return;",
                "+            File file = retrieveFile(path);",
                "+            if (!file.exists()) {",
                "+                LOG.error(\"File does not exist at :: {}\", path);",
                "             }",
                "-            modelWeightsPath = modelFile.getAbsolutePath();",
                "+            resolvedFilePath = file.getAbsolutePath();",
                "         }",
                "+        return resolvedFilePath;",
                "+    }",
                "-        //STEP 2: resolve model JSON",
                "-        File modelJsonFile = retrieveFile(modelJsonPath);",
                "-        if (modelJsonFile == null || !modelJsonFile.exists()) {",
                "-            LOG.error(\"Could not locate file {}\", modelJsonPath);",
                "-            return;",
                "-        }",
                "-        modelJsonPath = modelJsonFile.getAbsolutePath();",
                "+    @Override",
                "+    public void initialize(Map<String, Param> params)",
                "+            throws TikaConfigException {",
                "+",
                "+        //STEP 1: resolve weights file, download if necessary",
                "+        modelWeightsPath = mayBeDownloadFile(modelWeightsPath);",
                "-        //STEP 3: Load labels map",
                "-        try (InputStream stream = retrieveResource(labelFile)) {",
                "+        //STEP 2: Load labels map",
                "+        try (InputStream stream = retrieveResource(mayBeDownloadFile(labelFile))) {",
                "             this.labelMap = loadClassIndex(stream);",
                "@@ -260,3 +254,3 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "-        //STEP 4: initialize the graph",
                "+        //STEP 3: initialize the graph",
                "         try {",
                "@@ -265,4 +259,9 @@ public class DL4JInceptionV3Net implements ObjectRecogniser {",
                "             long st = System.currentTimeMillis();",
                "-            this.graph = KerasModelImport.importKerasModelAndWeights(modelJsonPath,",
                "-                    modelWeightsPath, false);",
                "+",
                "+            KerasModelBuilder builder = new KerasModel().modelBuilder().modelHdf5Filename(modelWeightsPath)",
                "+                    .enforceTrainingConfig(false);",
                "+            builder.inputShape(new int[]{299, 299, 3});",
                "+            KerasModel model = builder.buildModel();",
                "+            this.graph = model.getComputationGraph();",
                "+",
                "             long time = System.currentTimeMillis() - st;",
                "diff --git a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JVGG16Net.java b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JVGG16Net.java",
                "index 778d00f9c..e142d8d11 100644",
                "--- a/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JVGG16Net.java",
                "+++ b/tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JVGG16Net.java",
                "@@ -20,4 +20,4 @@ package org.apache.tika.dl.imagerec;",
                " import org.apache.tika.config.Field;",
                "-import org.apache.tika.config.Param;",
                " import org.apache.tika.config.InitializableProblemHandler;",
                "+import org.apache.tika.config.Param;",
                " import org.apache.tika.exception.TikaConfigException;",
                "@@ -31,5 +31,7 @@ import org.datavec.image.loader.NativeImageLoader;",
                " import org.deeplearning4j.nn.graph.ComputationGraph;",
                "-import org.deeplearning4j.nn.modelimport.keras.trainedmodels.TrainedModelHelper;",
                "-import org.deeplearning4j.nn.modelimport.keras.trainedmodels.TrainedModels;",
                " import org.deeplearning4j.util.ModelSerializer;",
                "+import org.deeplearning4j.zoo.PretrainedType;",
                "+import org.deeplearning4j.zoo.ZooModel;",
                "+import org.deeplearning4j.zoo.model.VGG16;",
                "+import org.deeplearning4j.zoo.util.imagenet.ImageNetLabels;",
                " import org.nd4j.linalg.api.ndarray.INDArray;",
                "@@ -42,3 +44,3 @@ import org.xml.sax.ContentHandler;",
                " import org.xml.sax.SAXException;",
                "-import org.deeplearning4j.nn.modelimport.keras.trainedmodels.Utils.ImageNetLabels;",
                "+",
                " import java.io.File;",
                "@@ -56,14 +58,8 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "     public static final Set<MediaType> SUPPORTED_MIMES = Collections.singleton(MediaType.image(\"jpeg\"));",
                "-    private static final String HOME_DIR = System.getProperty(\"user.home\");",
                "-    private static final String BASE_DIR = \".dl4j\" + File.separator + \"trainedmodels\";",
                "-    private static String MODEL_DIR = HOME_DIR + File.separator + BASE_DIR;",
                "-    private static String MODEL_DIR_PREPROCESSED = MODEL_DIR + File.separator + \"tikaPreprocessed\" + File.separator;",
                "-    private static TrainedModelHelper MODEL_HELPER = new TrainedModelHelper(TrainedModels.VGG16);",
                "+    private static final String BASE_DIR = System.getProperty(\"user.home\") + File.separator + \".tika-dl\" +",
                "+            File.separator + \"models\" + File.separator + \"dl4j\";",
                "+    private static final String MODEL_DIR = BASE_DIR + File.separator + \"vgg-16\";",
                "     @Field",
                "-    private File modelFile = new File(MODEL_DIR_PREPROCESSED + File.separator + \"vgg16.zip\");",
                "-",
                "-    @Field",
                "-    private File locationToSave = new File(MODEL_DIR + File.separator",
                "-            + \"tikaPreprocessed\" + File.separator + \"vgg16.zip\");",
                "+    private File cacheDir = new File(MODEL_DIR + File.separator + \"vgg16.zip\");",
                "@@ -71,4 +67,6 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "     private boolean serialize = true;",
                "+",
                "     @Field",
                "     private int topN;",
                "+",
                "     private NativeImageLoader imageLoader = new NativeImageLoader(224, 224, 3);",
                "@@ -80,2 +78,3 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "     }",
                "+    private ImageNetLabels imageNetLabels;",
                "@@ -88,3 +87,3 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                " \tpublic void checkInitialization(InitializableProblemHandler problemHandler) throws TikaConfigException {",
                "-\t//TODO: what do we want to check here?                                                                                                                                                                                                               ",
                "+\t    //TODO: what do we want to check here?",
                "     }",
                "@@ -95,11 +94,12 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "             if (serialize) {",
                "-                if (locationToSave.exists()) {",
                "-                    model = ModelSerializer.restoreComputationGraph(locationToSave);",
                "-                    LOG.info(\"Preprocessed Model Loaded from {}\", locationToSave);",
                "+                if (cacheDir.exists()) {",
                "+                    model = ModelSerializer.restoreComputationGraph(cacheDir);",
                "+                    LOG.info(\"Preprocessed Model Loaded from {}\", cacheDir);",
                "                 } else {",
                "-                    LOG.warn(\"Preprocessed Model doesn't exist at {}\", locationToSave);",
                "-                    locationToSave.getParentFile().mkdirs();",
                "-                    model = MODEL_HELPER.loadModel();",
                "+                    LOG.warn(\"Preprocessed Model doesn't exist at {}\", cacheDir);",
                "+                    cacheDir.getParentFile().mkdirs();",
                "+                    ZooModel zooModel = VGG16.builder().build();",
                "+                    model = (ComputationGraph)zooModel.initPretrained(PretrainedType.IMAGENET);",
                "                     LOG.info(\"Saving the Loaded model for future use. Saved models are more optimised to consume less resources.\");",
                "-                    ModelSerializer.writeModel(model, locationToSave, true);",
                "+                    ModelSerializer.writeModel(model, cacheDir, true);",
                "                 }",
                "@@ -107,4 +107,6 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "                 LOG.info(\"Weight graph model loaded via dl4j Helper functions\");",
                "-                model = MODEL_HELPER.loadModel();",
                "+                ZooModel zooModel = VGG16.builder().build();",
                "+                model = (ComputationGraph)zooModel.initPretrained(PretrainedType.IMAGENET);",
                "             }",
                "+            imageNetLabels = new ImageNetLabels();",
                "             available = true;",
                "@@ -128,4 +130,2 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "     {",
                "-        ArrayList<String> labels;",
                "-        labels=ImageNetLabels.getLabels();",
                "         List<RecognisedObject> objects = new ArrayList<>();",
                "@@ -142,3 +142,3 @@ public class DL4JVGG16Net implements ObjectRecogniser {",
                "                 currentBatch.putScalar(0, topNPredictions[i], 0);",
                "-                outLabels[i]= labels.get(topNPredictions[i]);",
                "+                outLabels[i]= imageNetLabels.getLabel(topNPredictions[i]);",
                "                 objects.add(new RecognisedObject(outLabels[i], \"eng\", outLabels[i], topNProb[i]));",
                "diff --git a/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/imagenet_incpetionv3_class_index.json b/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/imagenet_incpetionv3_class_index.json",
                "deleted file mode 100644",
                "index c286b5871..000000000",
                "--- a/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/imagenet_incpetionv3_class_index.json",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-{\"0\":[\"n01440764\",\"tench\"],\"1\":[\"n01443537\",\"goldfish\"],\"2\":[\"n01484850\",\"great_white_shark\"],\"3\":[\"n01491361\",\"tiger_shark\"],\"4\":[\"n01494475\",\"hammerhead\"],\"5\":[\"n01496331\",\"electric_ray\"],\"6\":[\"n01498041\",\"stingray\"],\"7\":[\"n01514668\",\"cock\"],\"8\":[\"n01514859\",\"hen\"],\"9\":[\"n01518878\",\"ostrich\"],\"10\":[\"n01530575\",\"brambling\"],\"11\":[\"n01531178\",\"goldfinch\"],\"12\":[\"n01532829\",\"house_finch\"],\"13\":[\"n01534433\",\"junco\"],\"14\":[\"n01537544\",\"indigo_bunting\"],\"15\":[\"n01558993\",\"robin\"],\"16\":[\"n01560419\",\"bulbul\"],\"17\":[\"n01580077\",\"jay\"],\"18\":[\"n01582220\",\"magpie\"],\"19\":[\"n01592084\",\"chickadee\"],\"20\":[\"n01601694\",\"water_ouzel\"],\"21\":[\"n01608432\",\"kite\"],\"22\":[\"n01614925\",\"bald_eagle\"],\"23\":[\"n01616318\",\"vulture\"],\"24\":[\"n01622779\",\"great_grey_owl\"],\"25\":[\"n01629819\",\"European_fire_salamander\"],\"26\":[\"n01630670\",\"common_newt\"],\"27\":[\"n01631663\",\"eft\"],\"28\":[\"n01632458\",\"spotted_salamander\"],\"29\":[\"n01632777\",\"axolotl\"],\"30\":[\"n01641577\",\"bullfrog\"],\"31\":[\"n01644373\",\"tree_frog\"],\"32\":[\"n01644900\",\"tailed_frog\"],\"33\":[\"n01664065\",\"loggerhead\"],\"34\":[\"n01665541\",\"leatherback_turtle\"],\"35\":[\"n01667114\",\"mud_turtle\"],\"36\":[\"n01667778\",\"terrapin\"],\"37\":[\"n01669191\",\"box_turtle\"],\"38\":[\"n01675722\",\"banded_gecko\"],\"39\":[\"n01677366\",\"common_iguana\"],\"40\":[\"n01682714\",\"American_chameleon\"],\"41\":[\"n01685808\",\"whiptail\"],\"42\":[\"n01687978\",\"agama\"],\"43\":[\"n01688243\",\"frilled_lizard\"],\"44\":[\"n01689811\",\"alligator_lizard\"],\"45\":[\"n01692333\",\"Gila_monster\"],\"46\":[\"n01693334\",\"green_lizard\"],\"47\":[\"n01694178\",\"African_chameleon\"],\"48\":[\"n01695060\",\"Komodo_dragon\"],\"49\":[\"n01697457\",\"African_crocodile\"],\"50\":[\"n01698640\",\"American_alligator\"],\"51\":[\"n01704323\",\"triceratops\"],\"52\":[\"n01728572\",\"thunder_snake\"],\"53\":[\"n01728920\",\"ringneck_snake\"],\"54\":[\"n01729322\",\"hognose_snake\"],\"55\":[\"n01729977\",\"green_snake\"],\"56\":[\"n01734418\",\"king_snake\"],\"57\":[\"n01735189\",\"garter_snake\"],\"58\":[\"n01737021\",\"water_snake\"],\"59\":[\"n01739381\",\"vine_snake\"],\"60\":[\"n01740131\",\"night_snake\"],\"61\":[\"n01742172\",\"boa_constrictor\"],\"62\":[\"n01744401\",\"rock_python\"],\"63\":[\"n01748264\",\"Indian_cobra\"],\"64\":[\"n01749939\",\"green_mamba\"],\"65\":[\"n01751748\",\"sea_snake\"],\"66\":[\"n01753488\",\"horned_viper\"],\"67\":[\"n01755581\",\"diamondback\"],\"68\":[\"n01756291\",\"sidewinder\"],\"69\":[\"n01768244\",\"trilobite\"],\"70\":[\"n01770081\",\"harvestman\"],\"71\":[\"n01770393\",\"scorpion\"],\"72\":[\"n01773157\",\"black_and_gold_garden_spider\"],\"73\":[\"n01773549\",\"barn_spider\"],\"74\":[\"n01773797\",\"garden_spider\"],\"75\":[\"n01774384\",\"black_widow\"],\"76\":[\"n01774750\",\"tarantula\"],\"77\":[\"n01775062\",\"wolf_spider\"],\"78\":[\"n01776313\",\"tick\"],\"79\":[\"n01784675\",\"centipede\"],\"80\":[\"n01795545\",\"black_grouse\"],\"81\":[\"n01796340\",\"ptarmigan\"],\"82\":[\"n01797886\",\"ruffed_grouse\"],\"83\":[\"n01798484\",\"prairie_chicken\"],\"84\":[\"n01806143\",\"peacock\"],\"85\":[\"n01806567\",\"quail\"],\"86\":[\"n01807496\",\"partridge\"],\"87\":[\"n01817953\",\"African_grey\"],\"88\":[\"n01818515\",\"macaw\"],\"89\":[\"n01819313\",\"sulphur-crested_cockatoo\"],\"90\":[\"n01820546\",\"lorikeet\"],\"91\":[\"n01824575\",\"coucal\"],\"92\":[\"n01828970\",\"bee_eater\"],\"93\":[\"n01829413\",\"hornbill\"],\"94\":[\"n01833805\",\"hummingbird\"],\"95\":[\"n01843065\",\"jacamar\"],\"96\":[\"n01843383\",\"toucan\"],\"97\":[\"n01847000\",\"drake\"],\"98\":[\"n01855032\",\"red-breasted_merganser\"],\"99\":[\"n01855672\",\"goose\"],\"100\":[\"n01860187\",\"black_swan\"],\"101\":[\"n01871265\",\"tusker\"],\"102\":[\"n01872401\",\"echidna\"],\"103\":[\"n01873310\",\"platypus\"],\"104\":[\"n01877812\",\"wallaby\"],\"105\":[\"n01882714\",\"koala\"],\"106\":[\"n01883070\",\"wombat\"],\"107\":[\"n01910747\",\"jellyfish\"],\"108\":[\"n01914609\",\"sea_anemone\"],\"109\":[\"n01917289\",\"brain_coral\"],\"110\":[\"n01924916\",\"flatworm\"],\"111\":[\"n01930112\",\"nematode\"],\"112\":[\"n01943899\",\"conch\"],\"113\":[\"n01944390\",\"snail\"],\"114\":[\"n01945685\",\"slug\"],\"115\":[\"n01950731\",\"sea_slug\"],\"116\":[\"n01955084\",\"chiton\"],\"117\":[\"n01968897\",\"chambered_nautilus\"],\"118\":[\"n01978287\",\"Dungeness_crab\"],\"119\":[\"n01978455\",\"rock_crab\"],\"120\":[\"n01980166\",\"fiddler_crab\"],\"121\":[\"n01981276\",\"king_crab\"],\"122\":[\"n01983481\",\"American_lobster\"],\"123\":[\"n01984695\",\"spiny_lobster\"],\"124\":[\"n01985128\",\"crayfish\"],\"125\":[\"n01986214\",\"hermit_crab\"],\"126\":[\"n01990800\",\"isopod\"],\"127\":[\"n02002556\",\"white_stork\"],\"128\":[\"n02002724\",\"black_stork\"],\"129\":[\"n02006656\",\"spoonbill\"],\"130\":[\"n02007558\",\"flamingo\"],\"131\":[\"n02009229\",\"little_blue_heron\"],\"132\":[\"n02009912\",\"American_egret\"],\"133\":[\"n02011460\",\"bittern\"],\"134\":[\"n02012849\",\"crane\"],\"135\":[\"n02013706\",\"limpkin\"],\"136\":[\"n02017213\",\"European_gallinule\"],\"137\":[\"n02018207\",\"American_coot\"],\"138\":[\"n02018795\",\"bustard\"],\"139\":[\"n02025239\",\"ruddy_turnstone\"],\"140\":[\"n02027492\",\"red-backed_sandpiper\"],\"141\":[\"n02028035\",\"redshank\"],\"142\":[\"n02033041\",\"dowitcher\"],\"143\":[\"n02037110\",\"oystercatcher\"],\"144\":[\"n02051845\",\"pelican\"],\"145\":[\"n02056570\",\"king_penguin\"],\"146\":[\"n02058221\",\"albatross\"],\"147\":[\"n02066245\",\"grey_whale\"],\"148\":[\"n02071294\",\"killer_whale\"],\"149\":[\"n02074367\",\"dugong\"],\"150\":[\"n02077923\",\"sea_lion\"],\"151\":[\"n02085620\",\"Chihuahua\"],\"152\":[\"n02085782\",\"Japanese_spaniel\"],\"153\":[\"n02085936\",\"Maltese_dog\"],\"154\":[\"n02086079\",\"Pekinese\"],\"155\":[\"n02086240\",\"Shih-Tzu\"],\"156\":[\"n02086646\",\"Blenheim_spaniel\"],\"157\":[\"n02086910\",\"papillon\"],\"158\":[\"n02087046\",\"toy_terrier\"],\"159\":[\"n02087394\",\"Rhodesian_ridgeback\"],\"160\":[\"n02088094\",\"Afghan_hound\"],\"161\":[\"n02088238\",\"basset\"],\"162\":[\"n02088364\",\"beagle\"],\"163\":[\"n02088466\",\"bloodhound\"],\"164\":[\"n02088632\",\"bluetick\"],\"165\":[\"n02089078\",\"black-and-tan_coonhound\"],\"166\":[\"n02089867\",\"Walker_hound\"],\"167\":[\"n02089973\",\"English_foxhound\"],\"168\":[\"n02090379\",\"redbone\"],\"169\":[\"n02090622\",\"borzoi\"],\"170\":[\"n02090721\",\"Irish_wolfhound\"],\"171\":[\"n02091032\",\"Italian_greyhound\"],\"172\":[\"n02091134\",\"whippet\"],\"173\":[\"n02091244\",\"Ibizan_hound\"],\"174\":[\"n02091467\",\"Norwegian_elkhound\"],\"175\":[\"n02091635\",\"otterhound\"],\"176\":[\"n02091831\",\"Saluki\"],\"177\":[\"n02092002\",\"Scottish_deerhound\"],\"178\":[\"n02092339\",\"Weimaraner\"],\"179\":[\"n02093256\",\"Staffordshire_bullterrier\"],\"180\":[\"n02093428\",\"American_Staffordshire_terrier\"],\"181\":[\"n02093647\",\"Bedlington_terrier\"],\"182\":[\"n02093754\",\"Border_terrier\"],\"183\":[\"n02093859\",\"Kerry_blue_terrier\"],\"184\":[\"n02093991\",\"Irish_terrier\"],\"185\":[\"n02094114\",\"Norfolk_terrier\"],\"186\":[\"n02094258\",\"Norwich_terrier\"],\"187\":[\"n02094433\",\"Yorkshire_terrier\"],\"188\":[\"n02095314\",\"wire-haired_fox_terrier\"],\"189\":[\"n02095570\",\"Lakeland_terrier\"],\"190\":[\"n02095889\",\"Sealyham_terrier\"],\"191\":[\"n02096051\",\"Airedale\"],\"192\":[\"n02096177\",\"cairn\"],\"193\":[\"n02096294\",\"Australian_terrier\"],\"194\":[\"n02096437\",\"Dandie_Dinmont\"],\"195\":[\"n02096585\",\"Boston_bull\"],\"196\":[\"n02097047\",\"miniature_schnauzer\"],\"197\":[\"n02097130\",\"giant_schnauzer\"],\"198\":[\"n02097209\",\"standard_schnauzer\"],\"199\":[\"n02097298\",\"Scotch_terrier\"],\"200\":[\"n02097474\",\"Tibetan_terrier\"],\"201\":[\"n02097658\",\"silky_terrier\"],\"202\":[\"n02098105\",\"soft-coated_wheaten_terrier\"],\"203\":[\"n02098286\",\"West_Highland_white_terrier\"],\"204\":[\"n02098413\",\"Lhasa\"],\"205\":[\"n02099267\",\"flat-coated_retriever\"],\"206\":[\"n02099429\",\"curly-coated_retriever\"],\"207\":[\"n02099601\",\"golden_retriever\"],\"208\":[\"n02099712\",\"Labrador_retriever\"],\"209\":[\"n02099849\",\"Chesapeake_Bay_retriever\"],\"210\":[\"n02100236\",\"German_short-haired_pointer\"],\"211\":[\"n02100583\",\"vizsla\"],\"212\":[\"n02100735\",\"English_setter\"],\"213\":[\"n02100877\",\"Irish_setter\"],\"214\":[\"n02101006\",\"Gordon_setter\"],\"215\":[\"n02101388\",\"Brittany_spaniel\"],\"216\":[\"n02101556\",\"clumber\"],\"217\":[\"n02102040\",\"English_springer\"],\"218\":[\"n02102177\",\"Welsh_springer_spaniel\"],\"219\":[\"n02102318\",\"cocker_spaniel\"],\"220\":[\"n02102480\",\"Sussex_spaniel\"],\"221\":[\"n02102973\",\"Irish_water_spaniel\"],\"222\":[\"n02104029\",\"kuvasz\"],\"223\":[\"n02104365\",\"schipperke\"],\"224\":[\"n02105056\",\"groenendael\"],\"225\":[\"n02105162\",\"malinois\"],\"226\":[\"n02105251\",\"briard\"],\"227\":[\"n02105412\",\"kelpie\"],\"228\":[\"n02105505\",\"komondor\"],\"229\":[\"n02105641\",\"Old_English_sheepdog\"],\"230\":[\"n02105855\",\"Shetland_sheepdog\"],\"231\":[\"n02106030\",\"collie\"],\"232\":[\"n02106166\",\"Border_collie\"],\"233\":[\"n02106382\",\"Bouvier_des_Flandres\"],\"234\":[\"n02106550\",\"Rottweiler\"],\"235\":[\"n02106662\",\"German_shepherd\"],\"236\":[\"n02107142\",\"Doberman\"],\"237\":[\"n02107312\",\"miniature_pinscher\"],\"238\":[\"n02107574\",\"Greater_Swiss_Mountain_dog\"],\"239\":[\"n02107683\",\"Bernese_mountain_dog\"],\"240\":[\"n02107908\",\"Appenzeller\"],\"241\":[\"n02108000\",\"EntleBucher\"],\"242\":[\"n02108089\",\"boxer\"],\"243\":[\"n02108422\",\"bull_mastiff\"],\"244\":[\"n02108551\",\"Tibetan_mastiff\"],\"245\":[\"n02108915\",\"French_bulldog\"],\"246\":[\"n02109047\",\"Great_Dane\"],\"247\":[\"n02109525\",\"Saint_Bernard\"],\"248\":[\"n02109961\",\"Eskimo_dog\"],\"249\":[\"n02110063\",\"malamute\"],\"250\":[\"n02110185\",\"Siberian_husky\"],\"251\":[\"n02110341\",\"dalmatian\"],\"252\":[\"n02110627\",\"affenpinscher\"],\"253\":[\"n02110806\",\"basenji\"],\"254\":[\"n02110958\",\"pug\"],\"255\":[\"n02111129\",\"Leonberg\"],\"256\":[\"n02111277\",\"Newfoundland\"],\"257\":[\"n02111500\",\"Great_Pyrenees\"],\"258\":[\"n02111889\",\"Samoyed\"],\"259\":[\"n02112018\",\"Pomeranian\"],\"260\":[\"n02112137\",\"chow\"],\"261\":[\"n02112350\",\"keeshond\"],\"262\":[\"n02112706\",\"Brabancon_griffon\"],\"263\":[\"n02113023\",\"Pembroke\"],\"264\":[\"n02113186\",\"Cardigan\"],\"265\":[\"n02113624\",\"toy_poodle\"],\"266\":[\"n02113712\",\"miniature_poodle\"],\"267\":[\"n02113799\",\"standard_poodle\"],\"268\":[\"n02113978\",\"Mexican_hairless\"],\"269\":[\"n02114367\",\"timber_wolf\"],\"270\":[\"n02114548\",\"white_wolf\"],\"271\":[\"n02114712\",\"red_wolf\"],\"272\":[\"n02114855\",\"coyote\"],\"273\":[\"n02115641\",\"dingo\"],\"274\":[\"n02115913\",\"dhole\"],\"275\":[\"n02116738\",\"African_hunting_dog\"],\"276\":[\"n02117135\",\"hyena\"],\"277\":[\"n02119022\",\"red_fox\"],\"278\":[\"n02119789\",\"kit_fox\"],\"279\":[\"n02120079\",\"Arctic_fox\"],\"280\":[\"n02120505\",\"grey_fox\"],\"281\":[\"n02123045\",\"tabby\"],\"282\":[\"n02123159\",\"tiger_cat\"],\"283\":[\"n02123394\",\"Persian_cat\"],\"284\":[\"n02123597\",\"Siamese_cat\"],\"285\":[\"n02124075\",\"Egyptian_cat\"],\"286\":[\"n02125311\",\"cougar\"],\"287\":[\"n02127052\",\"lynx\"],\"288\":[\"n02128385\",\"leopard\"],\"289\":[\"n02128757\",\"snow_leopard\"],\"290\":[\"n02128925\",\"jaguar\"],\"291\":[\"n02129165\",\"lion\"],\"292\":[\"n02129604\",\"tiger\"],\"293\":[\"n02130308\",\"cheetah\"],\"294\":[\"n02132136\",\"brown_bear\"],\"295\":[\"n02133161\",\"American_black_bear\"],\"296\":[\"n02134084\",\"ice_bear\"],\"297\":[\"n02134418\",\"sloth_bear\"],\"298\":[\"n02137549\",\"mongoose\"],\"299\":[\"n02138441\",\"meerkat\"],\"300\":[\"n02165105\",\"tiger_beetle\"],\"301\":[\"n02165456\",\"ladybug\"],\"302\":[\"n02167151\",\"ground_beetle\"],\"303\":[\"n02168699\",\"long-horned_beetle\"],\"304\":[\"n02169497\",\"leaf_beetle\"],\"305\":[\"n02172182\",\"dung_beetle\"],\"306\":[\"n02174001\",\"rhinoceros_beetle\"],\"307\":[\"n02177972\",\"weevil\"],\"308\":[\"n02190166\",\"fly\"],\"309\":[\"n02206856\",\"bee\"],\"310\":[\"n02219486\",\"ant\"],\"311\":[\"n02226429\",\"grasshopper\"],\"312\":[\"n02229544\",\"cricket\"],\"313\":[\"n02231487\",\"walking_stick\"],\"314\":[\"n02233338\",\"cockroach\"],\"315\":[\"n02236044\",\"mantis\"],\"316\":[\"n02256656\",\"cicada\"],\"317\":[\"n02259212\",\"leafhopper\"],\"318\":[\"n02264363\",\"lacewing\"],\"319\":[\"n02268443\",\"dragonfly\"],\"320\":[\"n02268853\",\"damselfly\"],\"321\":[\"n02276258\",\"admiral\"],\"322\":[\"n02277742\",\"ringlet\"],\"323\":[\"n02279972\",\"monarch\"],\"324\":[\"n02280649\",\"cabbage_butterfly\"],\"325\":[\"n02281406\",\"sulphur_butterfly\"],\"326\":[\"n02281787\",\"lycaenid\"],\"327\":[\"n02317335\",\"starfish\"],\"328\":[\"n02319095\",\"sea_urchin\"],\"329\":[\"n02321529\",\"sea_cucumber\"],\"330\":[\"n02325366\",\"wood_rabbit\"],\"331\":[\"n02326432\",\"hare\"],\"332\":[\"n02328150\",\"Angora\"],\"333\":[\"n02342885\",\"hamster\"],\"334\":[\"n02346627\",\"porcupine\"],\"335\":[\"n02356798\",\"fox_squirrel\"],\"336\":[\"n02361337\",\"marmot\"],\"337\":[\"n02363005\",\"beaver\"],\"338\":[\"n02364673\",\"guinea_pig\"],\"339\":[\"n02389026\",\"sorrel\"],\"340\":[\"n02391049\",\"zebra\"],\"341\":[\"n02395406\",\"hog\"],\"342\":[\"n02396427\",\"wild_boar\"],\"343\":[\"n02397096\",\"warthog\"],\"344\":[\"n02398521\",\"hippopotamus\"],\"345\":[\"n02403003\",\"ox\"],\"346\":[\"n02408429\",\"water_buffalo\"],\"347\":[\"n02410509\",\"bison\"],\"348\":[\"n02412080\",\"ram\"],\"349\":[\"n02415577\",\"bighorn\"],\"350\":[\"n02417914\",\"ibex\"],\"351\":[\"n02422106\",\"hartebeest\"],\"352\":[\"n02422699\",\"impala\"],\"353\":[\"n02423022\",\"gazelle\"],\"354\":[\"n02437312\",\"Arabian_camel\"],\"355\":[\"n02437616\",\"llama\"],\"356\":[\"n02441942\",\"weasel\"],\"357\":[\"n02442845\",\"mink\"],\"358\":[\"n02443114\",\"polecat\"],\"359\":[\"n02443484\",\"black-footed_ferret\"],\"360\":[\"n02444819\",\"otter\"],\"361\":[\"n02445715\",\"skunk\"],\"362\":[\"n02447366\",\"badger\"],\"363\":[\"n02454379\",\"armadillo\"],\"364\":[\"n02457408\",\"three-toed_sloth\"],\"365\":[\"n02480495\",\"orangutan\"],\"366\":[\"n02480855\",\"gorilla\"],\"367\":[\"n02481823\",\"chimpanzee\"],\"368\":[\"n02483362\",\"gibbon\"],\"369\":[\"n02483708\",\"siamang\"],\"370\":[\"n02484975\",\"guenon\"],\"371\":[\"n02486261\",\"patas\"],\"372\":[\"n02486410\",\"baboon\"],\"373\":[\"n02487347\",\"macaque\"],\"374\":[\"n02488291\",\"langur\"],\"375\":[\"n02488702\",\"colobus\"],\"376\":[\"n02489166\",\"proboscis_monkey\"],\"377\":[\"n02490219\",\"marmoset\"],\"378\":[\"n02492035\",\"capuchin\"],\"379\":[\"n02492660\",\"howler_monkey\"],\"380\":[\"n02493509\",\"titi\"],\"381\":[\"n02493793\",\"spider_monkey\"],\"382\":[\"n02494079\",\"squirrel_monkey\"],\"383\":[\"n02497673\",\"Madagascar_cat\"],\"384\":[\"n02500267\",\"indri\"],\"385\":[\"n02504013\",\"Indian_elephant\"],\"386\":[\"n02504458\",\"African_elephant\"],\"387\":[\"n02509815\",\"lesser_panda\"],\"388\":[\"n02510455\",\"giant_panda\"],\"389\":[\"n02514041\",\"barracouta\"],\"390\":[\"n02526121\",\"eel\"],\"391\":[\"n02536864\",\"coho\"],\"392\":[\"n02606052\",\"rock_beauty\"],\"393\":[\"n02607072\",\"anemone_fish\"],\"394\":[\"n02640242\",\"sturgeon\"],\"395\":[\"n02641379\",\"gar\"],\"396\":[\"n02643566\",\"lionfish\"],\"397\":[\"n02655020\",\"puffer\"],\"398\":[\"n02666196\",\"abacus\"],\"399\":[\"n02667093\",\"abaya\"],\"400\":[\"n02669723\",\"academic_gown\"],\"401\":[\"n02672831\",\"accordion\"],\"402\":[\"n02676566\",\"acoustic_guitar\"],\"403\":[\"n02687172\",\"aircraft_carrier\"],\"404\":[\"n02690373\",\"airliner\"],\"405\":[\"n02692877\",\"airship\"],\"406\":[\"n02699494\",\"altar\"],\"407\":[\"n02701002\",\"ambulance\"],\"408\":[\"n02704792\",\"amphibian\"],\"409\":[\"n02708093\",\"analog_clock\"],\"410\":[\"n02727426\",\"apiary\"],\"411\":[\"n02730930\",\"apron\"],\"412\":[\"n02747177\",\"ashcan\"],\"413\":[\"n02749479\",\"assault_rifle\"],\"414\":[\"n02769748\",\"backpack\"],\"415\":[\"n02776631\",\"bakery\"],\"416\":[\"n02777292\",\"balance_beam\"],\"417\":[\"n02782093\",\"balloon\"],\"418\":[\"n02783161\",\"ballpoint\"],\"419\":[\"n02786058\",\"Band_Aid\"],\"420\":[\"n02787622\",\"banjo\"],\"421\":[\"n02788148\",\"bannister\"],\"422\":[\"n02790996\",\"barbell\"],\"423\":[\"n02791124\",\"barber_chair\"],\"424\":[\"n02791270\",\"barbershop\"],\"425\":[\"n02793495\",\"barn\"],\"426\":[\"n02794156\",\"barometer\"],\"427\":[\"n02795169\",\"barrel\"],\"428\":[\"n02797295\",\"barrow\"],\"429\":[\"n02799071\",\"baseball\"],\"430\":[\"n02802426\",\"basketball\"],\"431\":[\"n02804414\",\"bassinet\"],\"432\":[\"n02804610\",\"bassoon\"],\"433\":[\"n02807133\",\"bathing_cap\"],\"434\":[\"n02808304\",\"bath_towel\"],\"435\":[\"n02808440\",\"bathtub\"],\"436\":[\"n02814533\",\"beach_wagon\"],\"437\":[\"n02814860\",\"beacon\"],\"438\":[\"n02815834\",\"beaker\"],\"439\":[\"n02817516\",\"bearskin\"],\"440\":[\"n02823428\",\"beer_bottle\"],\"441\":[\"n02823750\",\"beer_glass\"],\"442\":[\"n02825657\",\"bell_cote\"],\"443\":[\"n02834397\",\"bib\"],\"444\":[\"n02835271\",\"bicycle-built-for-two\"],\"445\":[\"n02837789\",\"bikini\"],\"446\":[\"n02840245\",\"binder\"],\"447\":[\"n02841315\",\"binoculars\"],\"448\":[\"n02843684\",\"birdhouse\"],\"449\":[\"n02859443\",\"boathouse\"],\"450\":[\"n02860847\",\"bobsled\"],\"451\":[\"n02865351\",\"bolo_tie\"],\"452\":[\"n02869837\",\"bonnet\"],\"453\":[\"n02870880\",\"bookcase\"],\"454\":[\"n02871525\",\"bookshop\"],\"455\":[\"n02877765\",\"bottlecap\"],\"456\":[\"n02879718\",\"bow\"],\"457\":[\"n02883205\",\"bow_tie\"],\"458\":[\"n02892201\",\"brass\"],\"459\":[\"n02892767\",\"brassiere\"],\"460\":[\"n02894605\",\"breakwater\"],\"461\":[\"n02895154\",\"breastplate\"],\"462\":[\"n02906734\",\"broom\"],\"463\":[\"n02909870\",\"bucket\"],\"464\":[\"n02910353\",\"buckle\"],\"465\":[\"n02916936\",\"bulletproof_vest\"],\"466\":[\"n02917067\",\"bullet_train\"],\"467\":[\"n02927161\",\"butcher_shop\"],\"468\":[\"n02930766\",\"cab\"],\"469\":[\"n02939185\",\"caldron\"],\"470\":[\"n02948072\",\"candle\"],\"471\":[\"n02950826\",\"cannon\"],\"472\":[\"n02951358\",\"canoe\"],\"473\":[\"n02951585\",\"can_opener\"],\"474\":[\"n02963159\",\"cardigan\"],\"475\":[\"n02965783\",\"car_mirror\"],\"476\":[\"n02966193\",\"carousel\"],\"477\":[\"n02966687\",\"carpenter's_kit\"],\"478\":[\"n02971356\",\"carton\"],\"479\":[\"n02974003\",\"car_wheel\"],\"480\":[\"n02977058\",\"cash_machine\"],\"481\":[\"n02978881\",\"cassette\"],\"482\":[\"n02979186\",\"cassette_player\"],\"483\":[\"n02980441\",\"castle\"],\"484\":[\"n02981792\",\"catamaran\"],\"485\":[\"n02988304\",\"CD_player\"],\"486\":[\"n02992211\",\"cello\"],\"487\":[\"n02992529\",\"cellular_telephone\"],\"488\":[\"n02999410\",\"chain\"],\"489\":[\"n03000134\",\"chainlink_fence\"],\"490\":[\"n03000247\",\"chain_mail\"],\"491\":[\"n03000684\",\"chain_saw\"],\"492\":[\"n03014705\",\"chest\"],\"493\":[\"n03016953\",\"chiffonier\"],\"494\":[\"n03017168\",\"chime\"],\"495\":[\"n03018349\",\"china_cabinet\"],\"496\":[\"n03026506\",\"Christmas_stocking\"],\"497\":[\"n03028079\",\"church\"],\"498\":[\"n03032252\",\"cinema\"],\"499\":[\"n03041632\",\"cleaver\"],\"500\":[\"n03042490\",\"cliff_dwelling\"],\"501\":[\"n03045698\",\"cloak\"],\"502\":[\"n03047690\",\"clog\"],\"503\":[\"n03062245\",\"cocktail_shaker\"],\"504\":[\"n03063599\",\"coffee_mug\"],\"505\":[\"n03063689\",\"coffeepot\"],\"506\":[\"n03065424\",\"coil\"],\"507\":[\"n03075370\",\"combination_lock\"],\"508\":[\"n03085013\",\"computer_keyboard\"],\"509\":[\"n03089624\",\"confectionery\"],\"510\":[\"n03095699\",\"container_ship\"],\"511\":[\"n03100240\",\"convertible\"],\"512\":[\"n03109150\",\"corkscrew\"],\"513\":[\"n03110669\",\"cornet\"],\"514\":[\"n03124043\",\"cowboy_boot\"],\"515\":[\"n03124170\",\"cowboy_hat\"],\"516\":[\"n03125729\",\"cradle\"],\"517\":[\"n03126707\",\"crane\"],\"518\":[\"n03127747\",\"crash_helmet\"],\"519\":[\"n03127925\",\"crate\"],\"520\":[\"n03131574\",\"crib\"],\"521\":[\"n03133878\",\"Crock_Pot\"],\"522\":[\"n03134739\",\"croquet_ball\"],\"523\":[\"n03141823\",\"crutch\"],\"524\":[\"n03146219\",\"cuirass\"],\"525\":[\"n03160309\",\"dam\"],\"526\":[\"n03179701\",\"desk\"],\"527\":[\"n03180011\",\"desktop_computer\"],\"528\":[\"n03187595\",\"dial_telephone\"],\"529\":[\"n03188531\",\"diaper\"],\"530\":[\"n03196217\",\"digital_clock\"],\"531\":[\"n03197337\",\"digital_watch\"],\"532\":[\"n03201208\",\"dining_table\"],\"533\":[\"n03207743\",\"dishrag\"],\"534\":[\"n03207941\",\"dishwasher\"],\"535\":[\"n03208938\",\"disk_brake\"],\"536\":[\"n03216828\",\"dock\"],\"537\":[\"n03218198\",\"dogsled\"],\"538\":[\"n03220513\",\"dome\"],\"539\":[\"n03223299\",\"doormat\"],\"540\":[\"n03240683\",\"drilling_platform\"],\"541\":[\"n03249569\",\"drum\"],\"542\":[\"n03250847\",\"drumstick\"],\"543\":[\"n03255030\",\"dumbbell\"],\"544\":[\"n03259280\",\"Dutch_oven\"],\"545\":[\"n03271574\",\"electric_fan\"],\"546\":[\"n03272010\",\"electric_guitar\"],\"547\":[\"n03272562\",\"electric_locomotive\"],\"548\":[\"n03290653\",\"entertainment_center\"],\"549\":[\"n03291819\",\"envelope\"],\"550\":[\"n03297495\",\"espresso_maker\"],\"551\":[\"n03314780\",\"face_powder\"],\"552\":[\"n03325584\",\"feather_boa\"],\"553\":[\"n03337140\",\"file\"],\"554\":[\"n03344393\",\"fireboat\"],\"555\":[\"n03345487\",\"fire_engine\"],\"556\":[\"n03347037\",\"fire_screen\"],\"557\":[\"n03355925\",\"flagpole\"],\"558\":[\"n03372029\",\"flute\"],\"559\":[\"n03376595\",\"folding_chair\"],\"560\":[\"n03379051\",\"football_helmet\"],\"561\":[\"n03384352\",\"forklift\"],\"562\":[\"n03388043\",\"fountain\"],\"563\":[\"n03388183\",\"fountain_pen\"],\"564\":[\"n03388549\",\"four-poster\"],\"565\":[\"n03393912\",\"freight_car\"],\"566\":[\"n03394916\",\"French_horn\"],\"567\":[\"n03400231\",\"frying_pan\"],\"568\":[\"n03404251\",\"fur_coat\"],\"569\":[\"n03417042\",\"garbage_truck\"],\"570\":[\"n03424325\",\"gasmask\"],\"571\":[\"n03425413\",\"gas_pump\"],\"572\":[\"n03443371\",\"goblet\"],\"573\":[\"n03444034\",\"go-kart\"],\"574\":[\"n03445777\",\"golf_ball\"],\"575\":[\"n03445924\",\"golfcart\"],\"576\":[\"n03447447\",\"gondola\"],\"577\":[\"n03447721\",\"gong\"],\"578\":[\"n03450230\",\"gown\"],\"579\":[\"n03452741\",\"grand_piano\"],\"580\":[\"n03457902\",\"greenhouse\"],\"581\":[\"n03459775\",\"grille\"],\"582\":[\"n03461385\",\"grocery_store\"],\"583\":[\"n03467068\",\"guillotine\"],\"584\":[\"n03476684\",\"hair_slide\"],\"585\":[\"n03476991\",\"hair_spray\"],\"586\":[\"n03478589\",\"half_track\"],\"587\":[\"n03481172\",\"hammer\"],\"588\":[\"n03482405\",\"hamper\"],\"589\":[\"n03483316\",\"hand_blower\"],\"590\":[\"n03485407\",\"hand-held_computer\"],\"591\":[\"n03485794\",\"handkerchief\"],\"592\":[\"n03492542\",\"hard_disc\"],\"593\":[\"n03494278\",\"harmonica\"],\"594\":[\"n03495258\",\"harp\"],\"595\":[\"n03496892\",\"harvester\"],\"596\":[\"n03498962\",\"hatchet\"],\"597\":[\"n03527444\",\"holster\"],\"598\":[\"n03529860\",\"home_theater\"],\"599\":[\"n03530642\",\"honeycomb\"],\"600\":[\"n03532672\",\"hook\"],\"601\":[\"n03534580\",\"hoopskirt\"],\"602\":[\"n03535780\",\"horizontal_bar\"],\"603\":[\"n03538406\",\"horse_cart\"],\"604\":[\"n03544143\",\"hourglass\"],\"605\":[\"n03584254\",\"iPod\"],\"606\":[\"n03584829\",\"iron\"],\"607\":[\"n03590841\",\"jack-o'-lantern\"],\"608\":[\"n03594734\",\"jean\"],\"609\":[\"n03594945\",\"jeep\"],\"610\":[\"n03595614\",\"jersey\"],\"611\":[\"n03598930\",\"jigsaw_puzzle\"],\"612\":[\"n03599486\",\"jinrikisha\"],\"613\":[\"n03602883\",\"joystick\"],\"614\":[\"n03617480\",\"kimono\"],\"615\":[\"n03623198\",\"knee_pad\"],\"616\":[\"n03627232\",\"knot\"],\"617\":[\"n03630383\",\"lab_coat\"],\"618\":[\"n03633091\",\"ladle\"],\"619\":[\"n03637318\",\"lampshade\"],\"620\":[\"n03642806\",\"laptop\"],\"621\":[\"n03649909\",\"lawn_mower\"],\"622\":[\"n03657121\",\"lens_cap\"],\"623\":[\"n03658185\",\"letter_opener\"],\"624\":[\"n03661043\",\"library\"],\"625\":[\"n03662601\",\"lifeboat\"],\"626\":[\"n03666591\",\"lighter\"],\"627\":[\"n03670208\",\"limousine\"],\"628\":[\"n03673027\",\"liner\"],\"629\":[\"n03676483\",\"lipstick\"],\"630\":[\"n03680355\",\"Loafer\"],\"631\":[\"n03690938\",\"lotion\"],\"632\":[\"n03691459\",\"loudspeaker\"],\"633\":[\"n03692522\",\"loupe\"],\"634\":[\"n03697007\",\"lumbermill\"],\"635\":[\"n03706229\",\"magnetic_compass\"],\"636\":[\"n03709823\",\"mailbag\"],\"637\":[\"n03710193\",\"mailbox\"],\"638\":[\"n03710637\",\"maillot\"],\"639\":[\"n03710721\",\"maillot\"],\"640\":[\"n03717622\",\"manhole_cover\"],\"641\":[\"n03720891\",\"maraca\"],\"642\":[\"n03721384\",\"marimba\"],\"643\":[\"n03724870\",\"mask\"],\"644\":[\"n03729826\",\"matchstick\"],\"645\":[\"n03733131\",\"maypole\"],\"646\":[\"n03733281\",\"maze\"],\"647\":[\"n03733805\",\"measuring_cup\"],\"648\":[\"n03742115\",\"medicine_chest\"],\"649\":[\"n03743016\",\"megalith\"],\"650\":[\"n03759954\",\"microphone\"],\"651\":[\"n03761084\",\"microwave\"],\"652\":[\"n03763968\",\"military_uniform\"],\"653\":[\"n03764736\",\"milk_can\"],\"654\":[\"n03769881\",\"minibus\"],\"655\":[\"n03770439\",\"miniskirt\"],\"656\":[\"n03770679\",\"minivan\"],\"657\":[\"n03773504\",\"missile\"],\"658\":[\"n03775071\",\"mitten\"],\"659\":[\"n03775546\",\"mixing_bowl\"],\"660\":[\"n03776460\",\"mobile_home\"],\"661\":[\"n03777568\",\"Model_T\"],\"662\":[\"n03777754\",\"modem\"],\"663\":[\"n03781244\",\"monastery\"],\"664\":[\"n03782006\",\"monitor\"],\"665\":[\"n03785016\",\"moped\"],\"666\":[\"n03786901\",\"mortar\"],\"667\":[\"n03787032\",\"mortarboard\"],\"668\":[\"n03788195\",\"mosque\"],\"669\":[\"n03788365\",\"mosquito_net\"],\"670\":[\"n03791053\",\"motor_scooter\"],\"671\":[\"n03792782\",\"mountain_bike\"],\"672\":[\"n03792972\",\"mountain_tent\"],\"673\":[\"n03793489\",\"mouse\"],\"674\":[\"n03794056\",\"mousetrap\"],\"675\":[\"n03796401\",\"moving_van\"],\"676\":[\"n03803284\",\"muzzle\"],\"677\":[\"n03804744\",\"nail\"],\"678\":[\"n03814639\",\"neck_brace\"],\"679\":[\"n03814906\",\"necklace\"],\"680\":[\"n03825788\",\"nipple\"],\"681\":[\"n03832673\",\"notebook\"],\"682\":[\"n03837869\",\"obelisk\"],\"683\":[\"n03838899\",\"oboe\"],\"684\":[\"n03840681\",\"ocarina\"],\"685\":[\"n03841143\",\"odometer\"],\"686\":[\"n03843555\",\"oil_filter\"],\"687\":[\"n03854065\",\"organ\"],\"688\":[\"n03857828\",\"oscilloscope\"],\"689\":[\"n03866082\",\"overskirt\"],\"690\":[\"n03868242\",\"oxcart\"],\"691\":[\"n03868863\",\"oxygen_mask\"],\"692\":[\"n03871628\",\"packet\"],\"693\":[\"n03873416\",\"paddle\"],\"694\":[\"n03874293\",\"paddlewheel\"],\"695\":[\"n03874599\",\"padlock\"],\"696\":[\"n03876231\",\"paintbrush\"],\"697\":[\"n03877472\",\"pajama\"],\"698\":[\"n03877845\",\"palace\"],\"699\":[\"n03884397\",\"panpipe\"],\"700\":[\"n03887697\",\"paper_towel\"],\"701\":[\"n03888257\",\"parachute\"],\"702\":[\"n03888605\",\"parallel_bars\"],\"703\":[\"n03891251\",\"park_bench\"],\"704\":[\"n03891332\",\"parking_meter\"],\"705\":[\"n03895866\",\"passenger_car\"],\"706\":[\"n03899768\",\"patio\"],\"707\":[\"n03902125\",\"pay-phone\"],\"708\":[\"n03903868\",\"pedestal\"],\"709\":[\"n03908618\",\"pencil_box\"],\"710\":[\"n03908714\",\"pencil_sharpener\"],\"711\":[\"n03916031\",\"perfume\"],\"712\":[\"n03920288\",\"Petri_dish\"],\"713\":[\"n03924679\",\"photocopier\"],\"714\":[\"n03929660\",\"pick\"],\"715\":[\"n03929855\",\"pickelhaube\"],\"716\":[\"n03930313\",\"picket_fence\"],\"717\":[\"n03930630\",\"pickup\"],\"718\":[\"n03933933\",\"pier\"],\"719\":[\"n03935335\",\"piggy_bank\"],\"720\":[\"n03937543\",\"pill_bottle\"],\"721\":[\"n03938244\",\"pillow\"],\"722\":[\"n03942813\",\"ping-pong_ball\"],\"723\":[\"n03944341\",\"pinwheel\"],\"724\":[\"n03947888\",\"pirate\"],\"725\":[\"n03950228\",\"pitcher\"],\"726\":[\"n03954731\",\"plane\"],\"727\":[\"n03956157\",\"planetarium\"],\"728\":[\"n03958227\",\"plastic_bag\"],\"729\":[\"n03961711\",\"plate_rack\"],\"730\":[\"n03967562\",\"plow\"],\"731\":[\"n03970156\",\"plunger\"],\"732\":[\"n03976467\",\"Polaroid_camera\"],\"733\":[\"n03976657\",\"pole\"],\"734\":[\"n03977966\",\"police_van\"],\"735\":[\"n03980874\",\"poncho\"],\"736\":[\"n03982430\",\"pool_table\"],\"737\":[\"n03983396\",\"pop_bottle\"],\"738\":[\"n03991062\",\"pot\"],\"739\":[\"n03992509\",\"potter's_wheel\"],\"740\":[\"n03995372\",\"power_drill\"],\"741\":[\"n03998194\",\"prayer_rug\"],\"742\":[\"n04004767\",\"printer\"],\"743\":[\"n04005630\",\"prison\"],\"744\":[\"n04008634\",\"projectile\"],\"745\":[\"n04009552\",\"projector\"],\"746\":[\"n04019541\",\"puck\"],\"747\":[\"n04023962\",\"punching_bag\"],\"748\":[\"n04026417\",\"purse\"],\"749\":[\"n04033901\",\"quill\"],\"750\":[\"n04033995\",\"quilt\"],\"751\":[\"n04037443\",\"racer\"],\"752\":[\"n04039381\",\"racket\"],\"753\":[\"n04040759\",\"radiator\"],\"754\":[\"n04041544\",\"radio\"],\"755\":[\"n04044716\",\"radio_telescope\"],\"756\":[\"n04049303\",\"rain_barrel\"],\"757\":[\"n04065272\",\"recreational_vehicle\"],\"758\":[\"n04067472\",\"reel\"],\"759\":[\"n04069434\",\"reflex_camera\"],\"760\":[\"n04070727\",\"refrigerator\"],\"761\":[\"n04074963\",\"remote_control\"],\"762\":[\"n04081281\",\"restaurant\"],\"763\":[\"n04086273\",\"revolver\"],\"764\":[\"n04090263\",\"rifle\"],\"765\":[\"n04099969\",\"rocking_chair\"],\"766\":[\"n04111531\",\"rotisserie\"],\"767\":[\"n04116512\",\"rubber_eraser\"],\"768\":[\"n04118538\",\"rugby_ball\"],\"769\":[\"n04118776\",\"rule\"],\"770\":[\"n04120489\",\"running_shoe\"],\"771\":[\"n04125021\",\"safe\"],\"772\":[\"n04127249\",\"safety_pin\"],\"773\":[\"n04131690\",\"saltshaker\"],\"774\":[\"n04133789\",\"sandal\"],\"775\":[\"n04136333\",\"sarong\"],\"776\":[\"n04141076\",\"sax\"],\"777\":[\"n04141327\",\"scabbard\"],\"778\":[\"n04141975\",\"scale\"],\"779\":[\"n04146614\",\"school_bus\"],\"780\":[\"n04147183\",\"schooner\"],\"781\":[\"n04149813\",\"scoreboard\"],\"782\":[\"n04152593\",\"screen\"],\"783\":[\"n04153751\",\"screw\"],\"784\":[\"n04154565\",\"screwdriver\"],\"785\":[\"n04162706\",\"seat_belt\"],\"786\":[\"n04179913\",\"sewing_machine\"],\"787\":[\"n04192698\",\"shield\"],\"788\":[\"n04200800\",\"shoe_shop\"],\"789\":[\"n04201297\",\"shoji\"],\"790\":[\"n04204238\",\"shopping_basket\"],\"791\":[\"n04204347\",\"shopping_cart\"],\"792\":[\"n04208210\",\"shovel\"],\"793\":[\"n04209133\",\"shower_cap\"],\"794\":[\"n04209239\",\"shower_curtain\"],\"795\":[\"n04228054\",\"ski\"],\"796\":[\"n04229816\",\"ski_mask\"],\"797\":[\"n04235860\",\"sleeping_bag\"],\"798\":[\"n04238763\",\"slide_rule\"],\"799\":[\"n04239074\",\"sliding_door\"],\"800\":[\"n04243546\",\"slot\"],\"801\":[\"n04251144\",\"snorkel\"],\"802\":[\"n04252077\",\"snowmobile\"],\"803\":[\"n04252225\",\"snowplow\"],\"804\":[\"n04254120\",\"soap_dispenser\"],\"805\":[\"n04254680\",\"soccer_ball\"],\"806\":[\"n04254777\",\"sock\"],\"807\":[\"n04258138\",\"solar_dish\"],\"808\":[\"n04259630\",\"sombrero\"],\"809\":[\"n04263257\",\"soup_bowl\"],\"810\":[\"n04264628\",\"space_bar\"],\"811\":[\"n04265275\",\"space_heater\"],\"812\":[\"n04266014\",\"space_shuttle\"],\"813\":[\"n04270147\",\"spatula\"],\"814\":[\"n04273569\",\"speedboat\"],\"815\":[\"n04275548\",\"spider_web\"],\"816\":[\"n04277352\",\"spindle\"],\"817\":[\"n04285008\",\"sports_car\"],\"818\":[\"n04286575\",\"spotlight\"],\"819\":[\"n04296562\",\"stage\"],\"820\":[\"n04310018\",\"steam_locomotive\"],\"821\":[\"n04311004\",\"steel_arch_bridge\"],\"822\":[\"n04311174\",\"steel_drum\"],\"823\":[\"n04317175\",\"stethoscope\"],\"824\":[\"n04325704\",\"stole\"],\"825\":[\"n04326547\",\"stone_wall\"],\"826\":[\"n04328186\",\"stopwatch\"],\"827\":[\"n04330267\",\"stove\"],\"828\":[\"n04332243\",\"strainer\"],\"829\":[\"n04335435\",\"streetcar\"],\"830\":[\"n04336792\",\"stretcher\"],\"831\":[\"n04344873\",\"studio_couch\"],\"832\":[\"n04346328\",\"stupa\"],\"833\":[\"n04347754\",\"submarine\"],\"834\":[\"n04350905\",\"suit\"],\"835\":[\"n04355338\",\"sundial\"],\"836\":[\"n04355933\",\"sunglass\"],\"837\":[\"n04356056\",\"sunglasses\"],\"838\":[\"n04357314\",\"sunscreen\"],\"839\":[\"n04366367\",\"suspension_bridge\"],\"840\":[\"n04367480\",\"swab\"],\"841\":[\"n04370456\",\"sweatshirt\"],\"842\":[\"n04371430\",\"swimming_trunks\"],\"843\":[\"n04371774\",\"swing\"],\"844\":[\"n04372370\",\"switch\"],\"845\":[\"n04376876\",\"syringe\"],\"846\":[\"n04380533\",\"table_lamp\"],\"847\":[\"n04389033\",\"tank\"],\"848\":[\"n04392985\",\"tape_player\"],\"849\":[\"n04398044\",\"teapot\"],\"850\":[\"n04399382\",\"teddy\"],\"851\":[\"n04404412\",\"television\"],\"852\":[\"n04409515\",\"tennis_ball\"],\"853\":[\"n04417672\",\"thatch\"],\"854\":[\"n04418357\",\"theater_curtain\"],\"855\":[\"n04423845\",\"thimble\"],\"856\":[\"n04428191\",\"thresher\"],\"857\":[\"n04429376\",\"throne\"],\"858\":[\"n04435653\",\"tile_roof\"],\"859\":[\"n04442312\",\"toaster\"],\"860\":[\"n04443257\",\"tobacco_shop\"],\"861\":[\"n04447861\",\"toilet_seat\"],\"862\":[\"n04456115\",\"torch\"],\"863\":[\"n04458633\",\"totem_pole\"],\"864\":[\"n04461696\",\"tow_truck\"],\"865\":[\"n04462240\",\"toyshop\"],\"866\":[\"n04465501\",\"tractor\"],\"867\":[\"n04467665\",\"trailer_truck\"],\"868\":[\"n04476259\",\"tray\"],\"869\":[\"n04479046\",\"trench_coat\"],\"870\":[\"n04482393\",\"tricycle\"],\"871\":[\"n04483307\",\"trimaran\"],\"872\":[\"n04485082\",\"tripod\"],\"873\":[\"n04486054\",\"triumphal_arch\"],\"874\":[\"n04487081\",\"trolleybus\"],\"875\":[\"n04487394\",\"trombone\"],\"876\":[\"n04493381\",\"tub\"],\"877\":[\"n04501370\",\"turnstile\"],\"878\":[\"n04505470\",\"typewriter_keyboard\"],\"879\":[\"n04507155\",\"umbrella\"],\"880\":[\"n04509417\",\"unicycle\"],\"881\":[\"n04515003\",\"upright\"],\"882\":[\"n04517823\",\"vacuum\"],\"883\":[\"n04522168\",\"vase\"],\"884\":[\"n04523525\",\"vault\"],\"885\":[\"n04525038\",\"velvet\"],\"886\":[\"n04525305\",\"vending_machine\"],\"887\":[\"n04532106\",\"vestment\"],\"888\":[\"n04532670\",\"viaduct\"],\"889\":[\"n04536866\",\"violin\"],\"890\":[\"n04540053\",\"volleyball\"],\"891\":[\"n04542943\",\"waffle_iron\"],\"892\":[\"n04548280\",\"wall_clock\"],\"893\":[\"n04548362\",\"wallet\"],\"894\":[\"n04550184\",\"wardrobe\"],\"895\":[\"n04552348\",\"warplane\"],\"896\":[\"n04553703\",\"washbasin\"],\"897\":[\"n04554684\",\"washer\"],\"898\":[\"n04557648\",\"water_bottle\"],\"899\":[\"n04560804\",\"water_jug\"],\"900\":[\"n04562935\",\"water_tower\"],\"901\":[\"n04579145\",\"whiskey_jug\"],\"902\":[\"n04579432\",\"whistle\"],\"903\":[\"n04584207\",\"wig\"],\"904\":[\"n04589890\",\"window_screen\"],\"905\":[\"n04590129\",\"window_shade\"],\"906\":[\"n04591157\",\"Windsor_tie\"],\"907\":[\"n04591713\",\"wine_bottle\"],\"908\":[\"n04592741\",\"wing\"],\"909\":[\"n04596742\",\"wok\"],\"910\":[\"n04597913\",\"wooden_spoon\"],\"911\":[\"n04599235\",\"wool\"],\"912\":[\"n04604644\",\"worm_fence\"],\"913\":[\"n04606251\",\"wreck\"],\"914\":[\"n04612504\",\"yawl\"],\"915\":[\"n04613696\",\"yurt\"],\"916\":[\"n06359193\",\"web_site\"],\"917\":[\"n06596364\",\"comic_book\"],\"918\":[\"n06785654\",\"crossword_puzzle\"],\"919\":[\"n06794110\",\"street_sign\"],\"920\":[\"n06874185\",\"traffic_light\"],\"921\":[\"n07248320\",\"book_jacket\"],\"922\":[\"n07565083\",\"menu\"],\"923\":[\"n07579787\",\"plate\"],\"924\":[\"n07583066\",\"guacamole\"],\"925\":[\"n07584110\",\"consomme\"],\"926\":[\"n07590611\",\"hot_pot\"],\"927\":[\"n07613480\",\"trifle\"],\"928\":[\"n07614500\",\"ice_cream\"],\"929\":[\"n07615774\",\"ice_lolly\"],\"930\":[\"n07684084\",\"French_loaf\"],\"931\":[\"n07693725\",\"bagel\"],\"932\":[\"n07695742\",\"pretzel\"],\"933\":[\"n07697313\",\"cheeseburger\"],\"934\":[\"n07697537\",\"hotdog\"],\"935\":[\"n07711569\",\"mashed_potato\"],\"936\":[\"n07714571\",\"head_cabbage\"],\"937\":[\"n07714990\",\"broccoli\"],\"938\":[\"n07715103\",\"cauliflower\"],\"939\":[\"n07716358\",\"zucchini\"],\"940\":[\"n07716906\",\"spaghetti_squash\"],\"941\":[\"n07717410\",\"acorn_squash\"],\"942\":[\"n07717556\",\"butternut_squash\"],\"943\":[\"n07718472\",\"cucumber\"],\"944\":[\"n07718747\",\"artichoke\"],\"945\":[\"n07720875\",\"bell_pepper\"],\"946\":[\"n07730033\",\"cardoon\"],\"947\":[\"n07734744\",\"mushroom\"],\"948\":[\"n07742313\",\"Granny_Smith\"],\"949\":[\"n07745940\",\"strawberry\"],\"950\":[\"n07747607\",\"orange\"],\"951\":[\"n07749582\",\"lemon\"],\"952\":[\"n07753113\",\"fig\"],\"953\":[\"n07753275\",\"pineapple\"],\"954\":[\"n07753592\",\"banana\"],\"955\":[\"n07754684\",\"jackfruit\"],\"956\":[\"n07760859\",\"custard_apple\"],\"957\":[\"n07768694\",\"pomegranate\"],\"958\":[\"n07802026\",\"hay\"],\"959\":[\"n07831146\",\"carbonara\"],\"960\":[\"n07836838\",\"chocolate_sauce\"],\"961\":[\"n07860988\",\"dough\"],\"962\":[\"n07871810\",\"meat_loaf\"],\"963\":[\"n07873807\",\"pizza\"],\"964\":[\"n07875152\",\"potpie\"],\"965\":[\"n07880968\",\"burrito\"],\"966\":[\"n07892512\",\"red_wine\"],\"967\":[\"n07920052\",\"espresso\"],\"968\":[\"n07930864\",\"cup\"],\"969\":[\"n07932039\",\"eggnog\"],\"970\":[\"n09193705\",\"alp\"],\"971\":[\"n09229709\",\"bubble\"],\"972\":[\"n09246464\",\"cliff\"],\"973\":[\"n09256479\",\"coral_reef\"],\"974\":[\"n09288635\",\"geyser\"],\"975\":[\"n09332890\",\"lakeside\"],\"976\":[\"n09399592\",\"promontory\"],\"977\":[\"n09421951\",\"sandbar\"],\"978\":[\"n09428293\",\"seashore\"],\"979\":[\"n09468604\",\"valley\"],\"980\":[\"n09472597\",\"volcano\"],\"981\":[\"n09835506\",\"ballplayer\"],\"982\":[\"n10148035\",\"groom\"],\"983\":[\"n10565667\",\"scuba_diver\"],\"984\":[\"n11879895\",\"rapeseed\"],\"985\":[\"n11939491\",\"daisy\"],\"986\":[\"n12057211\",\"yellow_lady's_slipper\"],\"987\":[\"n12144580\",\"corn\"],\"988\":[\"n12267677\",\"acorn\"],\"989\":[\"n12620546\",\"hip\"],\"990\":[\"n12768682\",\"buckeye\"],\"991\":[\"n12985857\",\"coral_fungus\"],\"992\":[\"n12998815\",\"agaric\"],\"993\":[\"n13037406\",\"gyromitra\"],\"994\":[\"n13040303\",\"stinkhorn\"],\"995\":[\"n13044778\",\"earthstar\"],\"996\":[\"n13052670\",\"hen-of-the-woods\"],\"997\":[\"n13054560\",\"bolete\"],\"998\":[\"n13133613\",\"ear\"],\"999\":[\"n15075141\",\"toilet_tissue\"]}",
                "diff --git a/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/inceptionv3-model.json b/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/inceptionv3-model.json",
                "deleted file mode 100644",
                "index 6f62c232f..000000000",
                "--- a/tika-dl/src/main/resources/org/apache/tika/dl/imagerec/inceptionv3-model.json",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-{\"class_name\":\"Model\",\"keras_version\":\"1.1.0\",\"config\":{\"layers\":[{\"class_name\":\"InputLayer\",\"config\":{\"batch_input_shape\":[null,299,299,3],\"input_dtype\":\"float32\",\"sparse\":false,\"name\":\"input_1\"},\"inbound_nodes\":[],\"name\":\"input_1\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_1\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[2,2],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":32,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"input_1\",0,0]]],\"name\":\"convolution2d_1\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_1\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_1\",0,0]]],\"name\":\"batchnormalization_1\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_2\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":32,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_1\",0,0]]],\"name\":\"convolution2d_2\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_2\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_2\",0,0]]],\"name\":\"batchnormalization_2\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_3\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_2\",0,0]]],\"name\":\"convolution2d_3\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_3\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_3\",0,0]]],\"name\":\"batchnormalization_3\"},{\"class_name\":\"MaxPooling2D\",\"config\":{\"name\":\"maxpooling2d_1\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[2,2],\"border_mode\":\"valid\"},\"inbound_nodes\":[[[\"batchnormalization_3\",0,0]]],\"name\":\"maxpooling2d_1\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_4\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":80,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"maxpooling2d_1\",0,0]]],\"name\":\"convolution2d_4\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_4\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_4\",0,0]]],\"name\":\"batchnormalization_4\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_5\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_4\",0,0]]],\"name\":\"convolution2d_5\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_5\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_5\",0,0]]],\"name\":\"batchnormalization_5\"},{\"class_name\":\"MaxPooling2D\",\"config\":{\"name\":\"maxpooling2d_2\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[2,2],\"border_mode\":\"valid\"},\"inbound_nodes\":[[[\"batchnormalization_5\",0,0]]],\"name\":\"maxpooling2d_2\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_9\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"maxpooling2d_2\",0,0]]],\"name\":\"convolution2d_9\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_9\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_9\",0,0]]],\"name\":\"batchnormalization_9\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_7\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":48,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"maxpooling2d_2\",0,0]]],\"name\":\"convolution2d_7\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_10\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_9\",0,0]]],\"name\":\"convolution2d_10\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_7\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_7\",0,0]]],\"name\":\"batchnormalization_7\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_10\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_10\",0,0]]],\"name\":\"batchnormalization_10\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_1\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"maxpooling2d_2\",0,0]]],\"name\":\"averagepooling2d_1\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_6\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"maxpooling2d_2\",0,0]]],\"name\":\"convolution2d_6\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_8\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":5,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":5},\"inbound_nodes\":[[[\"batchnormalization_7\",0,0]]],\"name\":\"convolution2d_8\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_11\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_10\",0,0]]],\"name\":\"convolution2d_11\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_12\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":32,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_1\",0,0]]],\"name\":\"convolution2d_12\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_6\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_6\",0,0]]],\"name\":\"batchnormalization_6\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_8\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_8\",0,0]]],\"name\":\"batchnormalization_8\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_11\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_11\",0,0]]],\"name\":\"batchnormalization_11\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_12\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_12\",0,0]]],\"name\":\"batchnormalization_12\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed0\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_6\",0,0],[\"batchnormalization_8\",0,0],[\"batchnormalization_11\",0,0],[\"batchnormalization_12\",0,0]]],\"name\":\"mixed0\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_16\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed0\",0,0]]],\"name\":\"convolution2d_16\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_16\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_16\",0,0]]],\"name\":\"batchnormalization_16\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_14\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":48,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed0\",0,0]]],\"name\":\"convolution2d_14\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_17\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_16\",0,0]]],\"name\":\"convolution2d_17\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_14\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_14\",0,0]]],\"name\":\"batchnormalization_14\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_17\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_17\",0,0]]],\"name\":\"batchnormalization_17\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_2\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed0\",0,0]]],\"name\":\"averagepooling2d_2\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_13\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed0\",0,0]]],\"name\":\"convolution2d_13\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_15\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":5,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":5},\"inbound_nodes\":[[[\"batchnormalization_14\",0,0]]],\"name\":\"convolution2d_15\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_18\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_17\",0,0]]],\"name\":\"convolution2d_18\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_19\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":32,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_2\",0,0]]],\"name\":\"convolution2d_19\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_13\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_13\",0,0]]],\"name\":\"batchnormalization_13\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_15\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_15\",0,0]]],\"name\":\"batchnormalization_15\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_18\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_18\",0,0]]],\"name\":\"batchnormalization_18\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_19\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_19\",0,0]]],\"name\":\"batchnormalization_19\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed1\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_13\",0,0],[\"batchnormalization_15\",0,0],[\"batchnormalization_18\",0,0],[\"batchnormalization_19\",0,0]]],\"name\":\"mixed1\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_23\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed1\",0,0]]],\"name\":\"convolution2d_23\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_23\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_23\",0,0]]],\"name\":\"batchnormalization_23\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_21\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":48,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed1\",0,0]]],\"name\":\"convolution2d_21\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_24\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_23\",0,0]]],\"name\":\"convolution2d_24\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_21\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_21\",0,0]]],\"name\":\"batchnormalization_21\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_24\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_24\",0,0]]],\"name\":\"batchnormalization_24\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_3\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed1\",0,0]]],\"name\":\"averagepooling2d_3\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_20\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed1\",0,0]]],\"name\":\"convolution2d_20\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_22\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":5,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":5},\"inbound_nodes\":[[[\"batchnormalization_21\",0,0]]],\"name\":\"convolution2d_22\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_25\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_24\",0,0]]],\"name\":\"convolution2d_25\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_26\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":32,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_3\",0,0]]],\"name\":\"convolution2d_26\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_20\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_20\",0,0]]],\"name\":\"batchnormalization_20\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_22\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_22\",0,0]]],\"name\":\"batchnormalization_22\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_25\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_25\",0,0]]],\"name\":\"batchnormalization_25\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_26\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_26\",0,0]]],\"name\":\"batchnormalization_26\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed2\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_20\",0,0],[\"batchnormalization_22\",0,0],[\"batchnormalization_25\",0,0],[\"batchnormalization_26\",0,0]]],\"name\":\"mixed2\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_28\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":64,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed2\",0,0]]],\"name\":\"convolution2d_28\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_28\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_28\",0,0]]],\"name\":\"batchnormalization_28\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_29\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_28\",0,0]]],\"name\":\"convolution2d_29\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_29\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_29\",0,0]]],\"name\":\"batchnormalization_29\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_27\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[2,2],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"mixed2\",0,0]]],\"name\":\"convolution2d_27\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_30\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[2,2],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":96,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_29\",0,0]]],\"name\":\"convolution2d_30\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_27\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_27\",0,0]]],\"name\":\"batchnormalization_27\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_30\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_30\",0,0]]],\"name\":\"batchnormalization_30\"},{\"class_name\":\"MaxPooling2D\",\"config\":{\"name\":\"maxpooling2d_3\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[2,2],\"border_mode\":\"valid\"},\"inbound_nodes\":[[[\"mixed2\",0,0]]],\"name\":\"maxpooling2d_3\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed3\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_27\",0,0],[\"batchnormalization_30\",0,0],[\"maxpooling2d_3\",0,0]]],\"name\":\"mixed3\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_35\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed3\",0,0]]],\"name\":\"convolution2d_35\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_35\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_35\",0,0]]],\"name\":\"batchnormalization_35\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_36\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_35\",0,0]]],\"name\":\"convolution2d_36\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_36\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_36\",0,0]]],\"name\":\"batchnormalization_36\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_32\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed3\",0,0]]],\"name\":\"convolution2d_32\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_37\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_36\",0,0]]],\"name\":\"convolution2d_37\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_32\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_32\",0,0]]],\"name\":\"batchnormalization_32\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_37\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_37\",0,0]]],\"name\":\"batchnormalization_37\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_33\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_32\",0,0]]],\"name\":\"convolution2d_33\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_38\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":128,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_37\",0,0]]],\"name\":\"convolution2d_38\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_33\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_33\",0,0]]],\"name\":\"batchnormalization_33\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_38\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_38\",0,0]]],\"name\":\"batchnormalization_38\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_4\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed3\",0,0]]],\"name\":\"averagepooling2d_4\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_31\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed3\",0,0]]],\"name\":\"convolution2d_31\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_34\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_33\",0,0]]],\"name\":\"convolution2d_34\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_39\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_38\",0,0]]],\"name\":\"convolution2d_39\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_40\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_4\",0,0]]],\"name\":\"convolution2d_40\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_31\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_31\",0,0]]],\"name\":\"batchnormalization_31\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_34\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_34\",0,0]]],\"name\":\"batchnormalization_34\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_39\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_39\",0,0]]],\"name\":\"batchnormalization_39\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_40\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_40\",0,0]]],\"name\":\"batchnormalization_40\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed4\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_31\",0,0],[\"batchnormalization_34\",0,0],[\"batchnormalization_39\",0,0],[\"batchnormalization_40\",0,0]]],\"name\":\"mixed4\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_45\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed4\",0,0]]],\"name\":\"convolution2d_45\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_45\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_45\",0,0]]],\"name\":\"batchnormalization_45\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_46\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_45\",0,0]]],\"name\":\"convolution2d_46\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_46\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_46\",0,0]]],\"name\":\"batchnormalization_46\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_42\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed4\",0,0]]],\"name\":\"convolution2d_42\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_47\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_46\",0,0]]],\"name\":\"convolution2d_47\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_42\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_42\",0,0]]],\"name\":\"batchnormalization_42\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_47\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_47\",0,0]]],\"name\":\"batchnormalization_47\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_43\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_42\",0,0]]],\"name\":\"convolution2d_43\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_48\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_47\",0,0]]],\"name\":\"convolution2d_48\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_43\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_43\",0,0]]],\"name\":\"batchnormalization_43\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_48\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_48\",0,0]]],\"name\":\"batchnormalization_48\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_5\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed4\",0,0]]],\"name\":\"averagepooling2d_5\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_41\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed4\",0,0]]],\"name\":\"convolution2d_41\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_44\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_43\",0,0]]],\"name\":\"convolution2d_44\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_49\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_48\",0,0]]],\"name\":\"convolution2d_49\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_50\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_5\",0,0]]],\"name\":\"convolution2d_50\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_41\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_41\",0,0]]],\"name\":\"batchnormalization_41\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_44\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_44\",0,0]]],\"name\":\"batchnormalization_44\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_49\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_49\",0,0]]],\"name\":\"batchnormalization_49\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_50\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_50\",0,0]]],\"name\":\"batchnormalization_50\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed5\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_41\",0,0],[\"batchnormalization_44\",0,0],[\"batchnormalization_49\",0,0],[\"batchnormalization_50\",0,0]]],\"name\":\"mixed5\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_55\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed5\",0,0]]],\"name\":\"convolution2d_55\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_55\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_55\",0,0]]],\"name\":\"batchnormalization_55\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_56\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_55\",0,0]]],\"name\":\"convolution2d_56\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_56\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_56\",0,0]]],\"name\":\"batchnormalization_56\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_52\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed5\",0,0]]],\"name\":\"convolution2d_52\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_57\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_56\",0,0]]],\"name\":\"convolution2d_57\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_52\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_52\",0,0]]],\"name\":\"batchnormalization_52\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_57\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_57\",0,0]]],\"name\":\"batchnormalization_57\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_53\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_52\",0,0]]],\"name\":\"convolution2d_53\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_58\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_57\",0,0]]],\"name\":\"convolution2d_58\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_53\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_53\",0,0]]],\"name\":\"batchnormalization_53\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_58\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_58\",0,0]]],\"name\":\"batchnormalization_58\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_6\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed5\",0,0]]],\"name\":\"averagepooling2d_6\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_51\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed5\",0,0]]],\"name\":\"convolution2d_51\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_54\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_53\",0,0]]],\"name\":\"convolution2d_54\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_59\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_58\",0,0]]],\"name\":\"convolution2d_59\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_60\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_6\",0,0]]],\"name\":\"convolution2d_60\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_51\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_51\",0,0]]],\"name\":\"batchnormalization_51\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_54\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_54\",0,0]]],\"name\":\"batchnormalization_54\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_59\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_59\",0,0]]],\"name\":\"batchnormalization_59\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_60\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_60\",0,0]]],\"name\":\"batchnormalization_60\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed6\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_51\",0,0],[\"batchnormalization_54\",0,0],[\"batchnormalization_59\",0,0],[\"batchnormalization_60\",0,0]]],\"name\":\"mixed6\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_65\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":160,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed6\",0,0]]],\"name\":\"convolution2d_65\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_65\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_65\",0,0]]],\"name\":\"batchnormalization_65\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_66\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_65\",0,0]]],\"name\":\"convolution2d_66\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_66\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_66\",0,0]]],\"name\":\"batchnormalization_66\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_62\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed6\",0,0]]],\"name\":\"convolution2d_62\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_67\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_66\",0,0]]],\"name\":\"convolution2d_67\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_62\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_62\",0,0]]],\"name\":\"batchnormalization_62\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_67\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_67\",0,0]]],\"name\":\"batchnormalization_67\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_63\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_62\",0,0]]],\"name\":\"convolution2d_63\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_68\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_67\",0,0]]],\"name\":\"convolution2d_68\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_63\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_63\",0,0]]],\"name\":\"batchnormalization_63\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_68\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_68\",0,0]]],\"name\":\"batchnormalization_68\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_7\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed6\",0,0]]],\"name\":\"averagepooling2d_7\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_61\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed6\",0,0]]],\"name\":\"convolution2d_61\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_64\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_63\",0,0]]],\"name\":\"convolution2d_64\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_69\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_68\",0,0]]],\"name\":\"convolution2d_69\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_70\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_7\",0,0]]],\"name\":\"convolution2d_70\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_61\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_61\",0,0]]],\"name\":\"batchnormalization_61\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_64\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_64\",0,0]]],\"name\":\"batchnormalization_64\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_69\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_69\",0,0]]],\"name\":\"batchnormalization_69\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_70\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_70\",0,0]]],\"name\":\"batchnormalization_70\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed7\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_61\",0,0],[\"batchnormalization_64\",0,0],[\"batchnormalization_69\",0,0],[\"batchnormalization_70\",0,0]]],\"name\":\"mixed7\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_73\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed7\",0,0]]],\"name\":\"convolution2d_73\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_73\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_73\",0,0]]],\"name\":\"batchnormalization_73\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_74\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":7,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_73\",0,0]]],\"name\":\"convolution2d_74\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_74\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_74\",0,0]]],\"name\":\"batchnormalization_74\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_71\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed7\",0,0]]],\"name\":\"convolution2d_71\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_75\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":7},\"inbound_nodes\":[[[\"batchnormalization_74\",0,0]]],\"name\":\"convolution2d_75\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_71\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_71\",0,0]]],\"name\":\"batchnormalization_71\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_75\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_75\",0,0]]],\"name\":\"batchnormalization_75\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_72\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[2,2],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":320,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_71\",0,0]]],\"name\":\"convolution2d_72\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_76\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[2,2],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"valid\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_75\",0,0]]],\"name\":\"convolution2d_76\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_72\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_72\",0,0]]],\"name\":\"batchnormalization_72\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_76\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_76\",0,0]]],\"name\":\"batchnormalization_76\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_8\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[2,2],\"border_mode\":\"valid\"},\"inbound_nodes\":[[[\"mixed7\",0,0]]],\"name\":\"averagepooling2d_8\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed8\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_72\",0,0],[\"batchnormalization_76\",0,0],[\"averagepooling2d_8\",0,0]]],\"name\":\"mixed8\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_81\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":448,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed8\",0,0]]],\"name\":\"convolution2d_81\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_81\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_81\",0,0]]],\"name\":\"batchnormalization_81\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_78\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed8\",0,0]]],\"name\":\"convolution2d_78\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_82\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_81\",0,0]]],\"name\":\"convolution2d_82\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_78\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_78\",0,0]]],\"name\":\"batchnormalization_78\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_82\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_82\",0,0]]],\"name\":\"batchnormalization_82\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_79\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_78\",0,0]]],\"name\":\"convolution2d_79\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_80\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_78\",0,0]]],\"name\":\"convolution2d_80\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_83\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_82\",0,0]]],\"name\":\"convolution2d_83\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_84\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_82\",0,0]]],\"name\":\"convolution2d_84\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_9\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed8\",0,0]]],\"name\":\"averagepooling2d_9\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_77\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":320,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed8\",0,0]]],\"name\":\"convolution2d_77\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_79\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_79\",0,0]]],\"name\":\"batchnormalization_79\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_80\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_80\",0,0]]],\"name\":\"batchnormalization_80\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_83\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_83\",0,0]]],\"name\":\"batchnormalization_83\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_84\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_84\",0,0]]],\"name\":\"batchnormalization_84\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_85\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_9\",0,0]]],\"name\":\"convolution2d_85\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_77\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_77\",0,0]]],\"name\":\"batchnormalization_77\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed9_0\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_79\",0,0],[\"batchnormalization_80\",0,0]]],\"name\":\"mixed9_0\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"merge_1\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_83\",0,0],[\"batchnormalization_84\",0,0]]],\"name\":\"merge_1\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_85\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_85\",0,0]]],\"name\":\"batchnormalization_85\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed9\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_77\",0,0],[\"mixed9_0\",0,0],[\"merge_1\",0,0],[\"batchnormalization_85\",0,0]]],\"name\":\"mixed9\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_90\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":448,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed9\",0,0]]],\"name\":\"convolution2d_90\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_90\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_90\",0,0]]],\"name\":\"batchnormalization_90\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_87\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed9\",0,0]]],\"name\":\"convolution2d_87\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_91\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_90\",0,0]]],\"name\":\"convolution2d_91\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_87\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_87\",0,0]]],\"name\":\"batchnormalization_87\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_91\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_91\",0,0]]],\"name\":\"batchnormalization_91\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_88\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_87\",0,0]]],\"name\":\"convolution2d_88\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_89\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_87\",0,0]]],\"name\":\"convolution2d_89\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_92\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":3,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"batchnormalization_91\",0,0]]],\"name\":\"convolution2d_92\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_93\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":384,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":3},\"inbound_nodes\":[[[\"batchnormalization_91\",0,0]]],\"name\":\"convolution2d_93\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"averagepooling2d_10\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[3,3],\"strides\":[1,1],\"border_mode\":\"same\"},\"inbound_nodes\":[[[\"mixed9\",0,0]]],\"name\":\"averagepooling2d_10\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_86\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":320,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"mixed9\",0,0]]],\"name\":\"convolution2d_86\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_88\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_88\",0,0]]],\"name\":\"batchnormalization_88\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_89\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_89\",0,0]]],\"name\":\"batchnormalization_89\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_92\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_92\",0,0]]],\"name\":\"batchnormalization_92\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_93\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_93\",0,0]]],\"name\":\"batchnormalization_93\"},{\"class_name\":\"Convolution2D\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"convolution2d_94\",\"activity_regularizer\":null,\"trainable\":true,\"dim_ordering\":\"tf\",\"nb_col\":1,\"subsample\":[1,1],\"init\":\"glorot_uniform\",\"bias\":true,\"nb_filter\":192,\"border_mode\":\"same\",\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"relu\",\"nb_row\":1},\"inbound_nodes\":[[[\"averagepooling2d_10\",0,0]]],\"name\":\"convolution2d_94\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_86\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_86\",0,0]]],\"name\":\"batchnormalization_86\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed9_1\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_88\",0,0],[\"batchnormalization_89\",0,0]]],\"name\":\"mixed9_1\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"merge_2\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_92\",0,0],[\"batchnormalization_93\",0,0]]],\"name\":\"merge_2\"},{\"class_name\":\"BatchNormalization\",\"config\":{\"gamma_regularizer\":null,\"name\":\"batchnormalization_94\",\"epsilon\":1e-05,\"trainable\":true,\"mode\":0,\"beta_regularizer\":null,\"momentum\":0.99,\"axis\":3},\"inbound_nodes\":[[[\"convolution2d_94\",0,0]]],\"name\":\"batchnormalization_94\"},{\"class_name\":\"Merge\",\"config\":{\"name\":\"mixed10\",\"concat_axis\":3,\"mode_type\":\"raw\",\"dot_axes\":-1,\"mode\":\"concat\",\"output_shape\":null,\"output_shape_type\":\"raw\"},\"inbound_nodes\":[[[\"batchnormalization_86\",0,0],[\"mixed9_1\",0,0],[\"merge_2\",0,0],[\"batchnormalization_94\",0,0]]],\"name\":\"mixed10\"},{\"class_name\":\"AveragePooling2D\",\"config\":{\"name\":\"avg_pool\",\"trainable\":true,\"dim_ordering\":\"tf\",\"pool_size\":[8,8],\"strides\":[8,8],\"border_mode\":\"valid\"},\"inbound_nodes\":[[[\"mixed10\",0,0]]],\"name\":\"avg_pool\"},{\"class_name\":\"Flatten\",\"config\":{\"trainable\":true,\"name\":\"flatten\"},\"inbound_nodes\":[[[\"avg_pool\",0,0]]],\"name\":\"flatten\"},{\"class_name\":\"Dense\",\"config\":{\"W_constraint\":null,\"b_constraint\":null,\"name\":\"predictions\",\"activity_regularizer\":null,\"trainable\":true,\"init\":\"glorot_uniform\",\"bias\":true,\"input_dim\":null,\"b_regularizer\":null,\"W_regularizer\":null,\"activation\":\"softmax\",\"output_dim\":1000},\"inbound_nodes\":[[[\"flatten\",0,0]]],\"name\":\"predictions\"}],\"input_layers\":[[\"input_1\",0,0]],\"output_layers\":[[\"predictions\",0,0]],\"name\":\"model_1\"}}"
            ],
            "changed_files": [
                "tika-dl/pom.xml",
                "tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JInceptionV3Net.java",
                "tika-dl/src/main/java/org/apache/tika/dl/imagerec/DL4JVGG16Net.java",
                "tika-dl/src/main/resources/org/apache/tika/dl/imagerec/imagenet_incpetionv3_class_index.json",
                "tika-dl/src/main/resources/org/apache/tika/dl/imagerec/inceptionv3-model.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "927c224cde7a7358325c349a3c439766e8ad2988",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537278841,
            "hunks": 5,
            "message": "Cosmetics",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "index f9af2e1a4..24e3ae0f2 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "@@ -282,5 +282,5 @@ public interface TikaCoreProperties {",
                "      */",
                "-     Property EMBEDDED_RESOURCE_TYPE =",
                "-            Property.internalClosedChoise(EMBEDDED_RESOURCE_TYPE_KEY,",
                "-                    new String[]{EmbeddedResourceType.ATTACHMENT.toString(), EmbeddedResourceType.INLINE.toString()});",
                "+     Property EMBEDDED_RESOURCE_TYPE = Property.internalClosedChoise(EMBEDDED_RESOURCE_TYPE_KEY,",
                "+                                                                     EmbeddedResourceType.ATTACHMENT.toString(),",
                "+                                                                     EmbeddedResourceType.INLINE.toString());",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "index ad8dd59c1..86742792c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "@@ -50,5 +50,3 @@ public class SpreadsheetMLParser extends AbstractXML2003Parser {",
                "     private static final MediaType MEDIA_TYPE = MediaType.application(\"vnd.ms-spreadsheetml\");",
                "-    private static final Set<MediaType> SUPPORTED_TYPES =",
                "-            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(",
                "-                    MEDIA_TYPE)));",
                "+    private static final Set<MediaType> SUPPORTED_TYPES = Collections.singleton(MEDIA_TYPE);",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "index 3b5a5fd96..19fde20a6 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "@@ -51,4 +51,2 @@ import org.xml.sax.helpers.DefaultHandler;",
                " public class WordMLParser extends AbstractXML2003Parser {",
                "-",
                "-",
                "     //map between wordml and xhtml entities",
                "@@ -74,4 +72,3 @@ public class WordMLParser extends AbstractXML2003Parser {",
                "     private static final MediaType MEDIA_TYPE = MediaType.application(\"vnd.ms-wordml\");",
                "-    private static final Set<MediaType> SUPPORTED_TYPES =",
                "-            Collections.singleton(MEDIA_TYPE); //immutable",
                "+    private static final Set<MediaType> SUPPORTED_TYPES = Collections.singleton(MEDIA_TYPE); //immutable",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "index 63577e672..b8d723f1f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java",
                "@@ -214,3 +214,3 @@ public interface ID3Tags {",
                "      */",
                "-    public static class ID3Comment {",
                "+    class ID3Comment {",
                "         private String language;"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/SpreadsheetMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/WordMLParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a24976a8dff12899fc46e41575b6b846a291c678"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f8f5e23841d23cfcaa13bfba6dccf7f44f33fdd5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533309908,
            "hunks": 5,
            "message": "TIKA-2673 -- small modifications",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "deleted file mode 100644",
                "index ab1edad7a..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,20 +0,0 @@",
                "-package org.apache.tika.parser.html.charsetdetector;",
                "-",
                "-import org.apache.tika.detect.CompositeEncodingDetector;",
                "-",
                "-import static java.util.Arrays.asList;",
                "-",
                "-/**",
                "- * A composite encoding detector chaining a {@link StandardHtmlEncodingDetector}",
                "- * (that may return null) and a {@link StandardIcu4JEncodingDetector} (that always returns a value)",
                "- * This full detector thus always returns an encoding, and still works very well with data coming",
                "- * from the web.",
                "- */",
                "-public class FullStandardEncodingDetector extends CompositeEncodingDetector {",
                "-    public FullStandardEncodingDetector() {",
                "-        super(asList(",
                "-                new StandardHtmlEncodingDetector(),",
                "-                StandardIcu4JEncodingDetector.STANDARD_ICU4J_ENCODING_DETECTOR",
                "-        ));",
                "-    }",
                "-}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "index 85b35a0e0..a00aeb1a1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "@@ -87,5 +87,7 @@ class PreScanner {",
                "     Charset scan() {",
                "-        while (processAtLeastOneByte())",
                "-            if (detectedCharset.isFound())",
                "+        while (processAtLeastOneByte()) {",
                "+            if (detectedCharset.isFound()) {",
                "                 return detectedCharset.getCharset();",
                "+            }",
                "+        }",
                "         return null;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "index 041827066..f9d1a1bbf 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "@@ -38,3 +38,3 @@ import static org.apache.tika.parser.html.charsetdetector.CharsetAliases.getChar",
                "  * If a resource was fetched over HTTP, then HTTP headers should be added to tika metadata",
                "- * when using {@link #detect}, especially {@link Metadata.CONTENT_TYPE}, as it may contain charset information.",
                "+ * when using {@link #detect}, especially {@link Metadata#CONTENT_TYPE}, as it may contain charset information.",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java",
                "deleted file mode 100644",
                "index f7ed53f46..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,51 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.tika.parser.html.charsetdetector;",
                "-",
                "-import org.apache.tika.detect.EncodingDetector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.txt.CharsetDetector;",
                "-import org.apache.tika.parser.txt.CharsetMatch;",
                "-",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.charset.StandardCharsets;",
                "-",
                "-/**",
                "- * Last resort detector, that never returns null.",
                "- * Uses ICU4J for sniffing the charset, and uses standard charset aliases in {@link CharsetAliases}",
                "- * to convert the charset name detected by ICU to a java charset.",
                "- * This detector is stateless and a single instance can be used several times for different streams.",
                "- */",
                "-public class StandardIcu4JEncodingDetector implements EncodingDetector {",
                "-    public static EncodingDetector STANDARD_ICU4J_ENCODING_DETECTOR = new StandardIcu4JEncodingDetector();",
                "-",
                "-    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "-        CharsetDetector detector = new CharsetDetector();",
                "-        detector.enableInputFilter(true); // enabling input filtering (stripping of HTML tags)",
                "-        detector.setText(input);",
                "-        for (CharsetMatch match : detector.detectAll()) {",
                "-            Charset detected = CharsetAliases.getCharsetByLabel(match.getName());",
                "-            if (detected != null) return detected;",
                "-        }",
                "-        // This detector is meant to be used in last resort. It should never return null",
                "-        // So if no charset was found, decode the input as simple ASCII.",
                "-        // The ASCII charset is guaranteed to be present in all JVMs.",
                "-        return StandardCharsets.US_ASCII;",
                "-    }",
                "-}"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b13bb1528184f865f0e3170676b97c023a6a35bc",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540361332,
            "hunks": 0,
            "message": "Merge branch 'master' of https://github.com/apache/tika into TIKA-2762",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2762": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2762",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "589ee7f1d0fddd48d871cba0a09c8e5a51dd788b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541792602,
            "hunks": 66,
            "message": "TIKA-2775 -- bulk upgrades",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a5f4185a1..c21b7f1e1 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -40,2 +40,3 @@",
                "     <module>tika-parsers</module>",
                "+    <module>tika-bundle</module>",
                "     <module>tika-xmp</module>",
                "@@ -44,3 +45,2 @@",
                "     <module>tika-app</module>",
                "-    <module>tika-bundle</module>",
                "     <module>tika-server</module>",
                "@@ -65,2 +65,3 @@",
                "             <artifactId>maven-assembly-plugin</artifactId>",
                "+            <version>${maven.assembly.version}</version>",
                "             <executions>",
                "@@ -88,2 +89,3 @@",
                "             <artifactId>maven-antrun-plugin</artifactId>",
                "+            <version>${maven.antrun.version}</version>",
                "             <executions>",
                "@@ -175,2 +177,3 @@ least three +1 Tika PMC votes are cast.",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 2549e9443..1b624e78c 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -106,2 +106,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "+        <version>${maven.shade.version}</version>",
                "         <executions>",
                "@@ -184,2 +185,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -205,2 +207,3 @@",
                "             <artifactId>maven-antrun-plugin</artifactId>",
                "+            <version>${maven.antrun.version}</version>",
                "             <executions>",
                "@@ -241,3 +244,3 @@",
                "             <artifactId>build-helper-maven-plugin</artifactId>",
                "-            <version>1.7</version>",
                "+            <version>3.0.0</version>",
                "             <executions>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index cb9afe182..ff6ce05ab 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -126,2 +126,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -140,2 +141,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -165,21 +167,2 @@",
                "       </plugin>",
                "-      <plugin>",
                "-        <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "-        <configuration>",
                "-          <additionalClasspathElements>",
                "-            <additionalClasspathElement>",
                "-              ${project.build.directory}/${project.build.finalName}.jar",
                "-            </additionalClasspathElement>",
                "-          </additionalClasspathElements>",
                "-        </configuration>",
                "-        <executions>",
                "-          <execution>",
                "-            <goals>",
                "-              <goal>integration-test</goal>",
                "-              <goal>verify</goal>",
                "-            </goals>",
                "-          </execution>",
                "-        </executions>",
                "-      </plugin>",
                "     </plugins>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index e6b35477f..de98f48f4 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -43,3 +43,3 @@",
                "   <properties>",
                "-    <pax.exam.version>4.11.0</pax.exam.version>",
                "+    <pax.exam.version>4.12.0</pax.exam.version>",
                "   </properties>",
                "@@ -142,2 +142,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -483,2 +484,3 @@",
                "         <artifactId>forbiddenapis</artifactId>",
                "+        <version>${forbiddenapis.version}</version>",
                "         <configuration>",
                "@@ -507,3 +509,3 @@",
                "         <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "+        <version>${maven.failsafe.version}</version>",
                "         <executions>",
                "@@ -527,2 +529,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 06eb9e85d..3de62ce72 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -71,2 +71,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -85,2 +86,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -150,3 +152,3 @@",
                "         <artifactId>maven-failsafe-plugin</artifactId>",
                "-        <version>2.10</version>",
                "+        <version>2.22.1</version>",
                "         <configuration>",
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index 5ea4a6541..3cbb159b4 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -18,2 +18,3 @@ package org.apache.tika.fork;",
                "+import java.io.Closeable;",
                " import java.io.IOException;",
                "@@ -42,3 +43,3 @@ import org.xml.sax.SAXException;",
                "-public class ForkParser extends AbstractParser {",
                "+public class ForkParser extends AbstractParser implements Closeable {",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 67981f9ac..70c008f2a 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -362,2 +362,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 0c4e86e7c..989e51983 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -158,2 +158,3 @@",
                "                 <artifactId>maven-shade-plugin</artifactId>",
                "+                <version>${maven.shade.version}</version>",
                "                 <executions>",
                "@@ -200,2 +201,3 @@",
                "                     <artifactId>maven-bundle-plugin</artifactId>",
                "+                    <version>${maven.bundle.version}</version>",
                "                     <extensions>true</extensions>",
                "@@ -214,2 +216,3 @@",
                "                     <artifactId>apache-rat-plugin</artifactId>",
                "+                    <version>${rat.version}</version>",
                "                     <configuration>",
                "@@ -243,3 +246,3 @@",
                "                     <artifactId>maven-failsafe-plugin</artifactId>",
                "-                    <version>2.10</version>",
                "+                    <version>${maven.failsafe.version}</version>",
                "                     <configuration>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 1fcebb32b..2238d8e1d 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -46,3 +46,3 @@",
                "         <artifactId>maven-scr-plugin</artifactId>",
                "-        <version>1.7.4</version>",
                "+        <version>${maven.scr.version}</version>",
                "       </plugin>",
                "@@ -52,2 +52,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -65,2 +66,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index ede01dfa4..3eaf2afc1 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -107,2 +107,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -125,2 +126,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -168,3 +170,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 57aae2dbf..c8b50c597 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -247,2 +247,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 7c6dbae28..bb0544fb3 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -307,2 +307,14 @@",
                "     <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>",
                "+    <!-- plugin versions -->",
                "+    <forbiddenapis.version>2.6</forbiddenapis.version>",
                "+    <groovy.maven.version>2.1</groovy.maven.version>",
                "+    <maven.antrun.version>1.8</maven.antrun.version>",
                "+    <maven.assembly.version>3.1.0</maven.assembly.version>",
                "+    <maven.bundle.version>4.1.0</maven.bundle.version>",
                "+    <maven.failsafe.version>2.22.1</maven.failsafe.version>",
                "+    <maven.javadoc.version>3.0.1</maven.javadoc.version>",
                "+    <maven.scr.version>1.26.0</maven.scr.version>",
                "+    <maven.surefire.version>2.22.1</maven.surefire.version>",
                "+    <maven.shade.version>3.2.0</maven.shade.version>",
                "+    <rat.version>0.12</rat.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parsers -->",
                "@@ -323,3 +335,3 @@",
                "         <artifactId>maven-compiler-plugin</artifactId>",
                "-        <version>3.2</version>",
                "+        <version>3.8.0</version>",
                "         <configuration>",
                "@@ -336,3 +348,3 @@",
                "         <artifactId>versions-maven-plugin</artifactId>",
                "-        <version>2.5</version>",
                "+        <version>2.7</version>",
                "         <configuration>",
                "@@ -344,3 +356,4 @@",
                "         <artifactId>forbiddenapis</artifactId>",
                "-        <version>2.6</version>",
                "+        <!-- if this version contains commons-io 2.6, remove hard-coded commons-io version below -->",
                "+        <version>${forbiddenapis.version}</version>",
                "         <configuration>",
                "@@ -369,3 +382,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.5.1</version>",
                "+        <version>${maven.bundle.version}</version>",
                "       </plugin>",
                "@@ -374,3 +387,3 @@",
                "         <artifactId>maven-surefire-plugin</artifactId>",
                "-        <version>2.18.1</version> <!-- versions greater than this don't like System.exit calls in tika-batch -->",
                "+        <version>${maven.surefire.version}</version> <!-- versions greater than this don't like System.exit calls in tika-batch -->",
                "         <configuration>",
                "@@ -382,3 +395,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "-        <version>2.4.3</version>",
                "+        <version>${maven.shade.version}</version>",
                "       </plugin>",
                "@@ -399,3 +412,3 @@",
                "         <artifactId>maven-enforcer-plugin</artifactId>",
                "-        <version>3.0.0-M1</version>",
                "+        <version>3.0.0-M2</version>",
                "         <executions>",
                "@@ -405,3 +418,6 @@",
                "               <rules>",
                "-                <dependencyConvergence />",
                "+                <dependencyConvergence/>",
                "+                <requireMavenVersion>",
                "+                  <version>3.5</version>",
                "+                </requireMavenVersion>",
                "               </rules>",
                "@@ -425,2 +441,3 @@",
                "             <artifactId>apache-rat-plugin</artifactId>",
                "+            <version>${rat.version}</version>",
                "             <executions>",
                "@@ -463,4 +480,5 @@",
                "             <artifactId>maven-javadoc-plugin</artifactId>",
                "+            <version>${maven.javadoc.version}</version>",
                "             <configuration>",
                "-              <additionalparam>-Xdoclint:none</additionalparam>",
                "+              <doclint>none</doclint>",
                "             </configuration>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 902e66e75..e3f08cb89 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -820,2 +820,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -838,2 +839,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -881,3 +883,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "@@ -894,3 +896,3 @@",
                "                     <artifactId>groovy-maven-plugin</artifactId>",
                "-                    <versionRange>[2.0,)</versionRange>",
                "+                    <version>${groovy.maven.version}</version>",
                "                     <goals>",
                "@@ -938,3 +940,3 @@",
                "             <artifactId>groovy-maven-plugin</artifactId>",
                "-            <version>2.0</version>",
                "+            <version>${groovy.maven.version}</version>",
                "             <dependencies>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "index e84023ccc..bc5a59c3a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "@@ -64,21 +64,28 @@ public class Pkcs7Parser extends AbstractParser {",
                "                     new JcaDigestCalculatorProviderBuilder().setProvider(\"BC\").build();",
                "-            CMSSignedDataParser parser =",
                "-                    new CMSSignedDataParser(digestCalculatorProvider, new CloseShieldInputStream(stream));",
                "+            CMSSignedDataParser parser = null;",
                "+            CMSTypedStream content = null;",
                "             try {",
                "-                CMSTypedStream content = parser.getSignedContent();",
                "-                if (content == null) {",
                "-                    throw new TikaException(\"cannot parse detached pkcs7 signature (no signed data to parse)\");",
                "-                }",
                "-                try (InputStream input = content.getContentStream()) {",
                "-                    Parser delegate =",
                "-                            context.get(Parser.class, EmptyParser.INSTANCE);",
                "-                    delegate.parse(input, handler, metadata, context);",
                "-                }",
                "+                parser = new CMSSignedDataParser(digestCalculatorProvider,",
                "+                        new CloseShieldInputStream(stream));",
                "+                content = parser.getSignedContent();",
                "+            } catch (CMSException e) {",
                "+                throw new TikaException(\"Unable to parse pkcs7 signed data\", e);",
                "+",
                "             } finally {",
                "-                parser.close();",
                "+                if (parser != null) {",
                "+                    parser.close();",
                "+                }",
                "             }",
                "+",
                "+            if (content == null) {",
                "+                throw new TikaException(\"cannot parse detached pkcs7 signature (no signed data to parse)\");",
                "+            }",
                "+            try (InputStream input = content.getContentStream()) {",
                "+                Parser delegate =",
                "+                        context.get(Parser.class, EmptyParser.INSTANCE);",
                "+                delegate.parse(input, handler, metadata, context);",
                "+            }",
                "+",
                "         } catch (OperatorCreationException e) {",
                "             throw new TikaException(\"Unable to create DigestCalculatorProvider\", e);",
                "-        } catch (CMSException e) {",
                "-            throw new TikaException(\"Unable to parse pkcs7 signed data\", e);",
                "         }",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index b55aed87a..cdbe99171 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -173,2 +173,3 @@",
                "         <artifactId>maven-shade-plugin</artifactId>",
                "+        <version>${maven.shade.version}</version>",
                "         <executions>",
                "@@ -267,3 +268,3 @@",
                "         <artifactId>dockerfile-maven-plugin</artifactId>",
                "-        <version>1.3.7</version>",
                "+        <version>1.4.7</version>",
                "         <configuration>",
                "@@ -297,2 +298,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -316,2 +318,3 @@",
                "             <artifactId>exec-maven-plugin</artifactId>",
                "+            <version>1.6.0</version>",
                "             <executions>",
                "@@ -331,3 +334,3 @@",
                "             <artifactId>miredot-plugin</artifactId>",
                "-            <version>2.0.3</version>",
                "+            <version>2.1.2</version>",
                "             <executions>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 566f7f6bb..a6dd073f0 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -109,2 +109,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>",
                "@@ -127,2 +128,3 @@",
                "         <artifactId>apache-rat-plugin</artifactId>",
                "+        <version>${rat.version}</version>",
                "         <configuration>",
                "@@ -169,3 +171,3 @@",
                "                     <artifactId>maven-scr-plugin</artifactId>",
                "-                    <versionRange>[1.7.2,)</versionRange>",
                "+                    <version>${maven.scr.version}</version>",
                "                     <goals>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 96657a750..35f949949 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -41,3 +41,3 @@",
                "         <artifactId>maven-scr-plugin</artifactId>",
                "-        <version>1.7.4</version>",
                "+        <version>${maven.scr.version}</version>",
                "       </plugin>",
                "@@ -47,2 +47,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "+        <version>${maven.bundle.version}</version>",
                "         <extensions>true</extensions>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2775": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2775",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d66dcbbbcf59f5b4034a47fed3346ad513b1fcc9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533308275,
            "hunks": 2,
            "message": "TIKA-2701 -- via Grigoriy Alekseev",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "index e0a2507da..534375142 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "@@ -66,4 +66,4 @@ public class WMFParser extends AbstractParser {",
                "             //to determine when to keep two text parts on the same line",
                "+            Charset charset = LocaleUtil.CHARSET_1252;",
                "             for (HwmfRecord record : picture.getRecords()) {",
                "-                Charset charset = LocaleUtil.CHARSET_1252;",
                "                 //this is pure hackery for specifying the font"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71e59d51c1bf3e4c278ef84c924e70671b49d6be",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541791386,
            "hunks": 2,
            "message": "Added Closable interface to support pull request #247 from diffblue-assistant/finallyclosetotrywithresources",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index 011324afd..ac043e703 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@ -18,2 +18,3 @@ package org.apache.tika.fork;",
                "+import java.io.Closeable;",
                " import java.io.IOException;",
                "@@ -42,3 +43,4 @@ import org.xml.sax.SAXException;",
                "-public class ForkParser extends AbstractParser {",
                "+public class ForkParser extends AbstractParser implements Closeable",
                "+{"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/fork/ForkParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "247": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 247",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4b5b780623ba874c399098a1ed7720a12ee1d207",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532632658,
            "hunks": 21,
            "message": "TIKA-2692 -- general upgrades in prep for 1.19",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 4be5c2c73..dc0aa52c3 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -146,2 +146,3 @@",
                "             <_runsystempackages>com.sun.xml.bind.marshaller, com.sun.xml.internal.bind.marshaller</_runsystempackages>",
                "+            <_noee>true</_noee>",
                "             <Bundle-Activator>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index d566ae8d2..ee27bd5ee 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -143,2 +143,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -197,2 +201,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index bb9348a3a..a7e413e0b 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -310,6 +310,6 @@",
                "     <commons.io.version>2.6</commons.io.version>",
                "-    <gson.version>2.8.1</gson.version>",
                "+    <gson.version>2.8.5</gson.version>",
                "     <cxf.version>3.2.5</cxf.version>",
                "-    <slf4j.version>1.7.24</slf4j.version>",
                "-    <jackson.version>2.9.5</jackson.version>",
                "+    <slf4j.version>1.7.25</slf4j.version>",
                "+    <jackson.version>2.9.6</jackson.version>",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "@@ -357,3 +357,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.3.0</version>",
                "+        <version>3.5.1</version>",
                "       </plugin>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 655322b81..12e48d98e 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -39,3 +39,3 @@",
                "     <!-- NOTE: sync codec version with POI -->",
                "-    <codec.version>1.10</codec.version>",
                "+    <codec.version>1.11</codec.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parent-->",
                "@@ -44,3 +44,3 @@",
                "     <brotli.version>0.1.2</brotli.version>",
                "-    <mime4j.version>0.8.1</mime4j.version>",
                "+    <mime4j.version>0.8.2</mime4j.version>",
                "     <vorbis.version>0.8</vorbis.version>",
                "@@ -118,3 +118,3 @@",
                "       <artifactId>jackcess</artifactId>",
                "-      <version>2.1.10</version>",
                "+      <version>2.1.12</version>",
                "       <exclusions>",
                "@@ -247,2 +247,8 @@",
                "       <version>${poi.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -276,3 +282,3 @@",
                "       <artifactId>asm</artifactId>",
                "-      <version>5.0.4</version>",
                "+      <version>6.2</version>",
                "     </dependency>",
                "@@ -281,3 +287,3 @@",
                "       <artifactId>isoparser</artifactId>",
                "-      <version>1.1.18</version>",
                "+      <version>1.1.22</version>",
                "     </dependency>",
                "@@ -286,3 +292,3 @@",
                "       <artifactId>metadata-extractor</artifactId>",
                "-      <version>2.10.1</version>",
                "+      <version>2.11.0</version>",
                "     </dependency>",
                "@@ -317,3 +323,9 @@",
                "       <artifactId>jhighlight</artifactId>",
                "-      <version>1.0.2</version>",
                "+      <version>1.0.3</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -329,3 +341,3 @@",
                "       <artifactId>junrar</artifactId>",
                "-      <version>1.0.1</version>",
                "+      <version>2.0.0</version>",
                "       <exclusions>",
                "@@ -371,3 +383,3 @@",
                "       <artifactId>opennlp-tools</artifactId>",
                "-      <version>1.8.4</version>",
                "+      <version>1.9.0</version>",
                "     </dependency>",
                "@@ -494,3 +506,3 @@",
                "       <artifactId>jsoup</artifactId>",
                "-      <version>1.11.2</version>",
                "+      <version>1.11.3</version>",
                "     </dependency>",
                "@@ -552,2 +564,6 @@",
                "         </exclusion>",
                "+          <exclusion>",
                "+            <groupId>commons-codec</groupId>",
                "+            <artifactId>commons-codec</artifactId>",
                "+          </exclusion>",
                "       </exclusions>",
                "@@ -564,3 +580,3 @@",
                "       <artifactId>commons-csv</artifactId>",
                "-      <version>1.0</version>",
                "+      <version>1.5</version>",
                "     </dependency>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "index cf80e4727..633b2ccdd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "@@ -25,2 +25,3 @@ import com.github.junrar.Archive;",
                " import com.github.junrar.exception.RarException;",
                "+import com.github.junrar.impl.FileVolumeManager;",
                " import com.github.junrar.rarfile.FileHeader;",
                "@@ -67,3 +68,3 @@ public class RarParser extends AbstractParser {",
                "             TikaInputStream tis = TikaInputStream.get(stream, tmp);",
                "-            rar = new Archive(tis.getFile());",
                "+            rar = new Archive(new FileVolumeManager(tis.getFile()));"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-dl/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "98d7ca08bebe4f62cf44896883aaf36d52088158",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533830625,
            "hunks": 2,
            "message": "TIKA-2672 -- upgrade to dl4j 1.0.0-beta2",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index d7d599212..fb9225096 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -38,3 +38,3 @@",
                "     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    <dl4j.version>1.0.0-SNAPSHOT</dl4j.version>",
                "+    <dl4j.version>1.0.0-beta2</dl4j.version>",
                "   </properties>",
                "@@ -348,12 +348,2 @@",
                "   </build>",
                "-  <repositories>",
                "-    <repository>",
                "-      <id>oss-sonatype</id>",
                "-      <name>oss-sonatype</name>",
                "-      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>",
                "-      <snapshots>",
                "-        <enabled>true</enabled>",
                "-      </snapshots>",
                "-    </repository>",
                "-  </repositories>",
                " </project>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "68801273967bba2ed5fee90adbd06c9c19f27abc",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526591734,
            "hunks": 3,
            "message": "TIKA-2479 Option to request missing rows where possible in Excel-like formats",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "index 34b865e67..5d34b2e0c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "@@ -31,2 +31,3 @@ public class OfficeParserConfig implements Serializable {",
                "     private boolean includeHeadersAndFooters = true;",
                "+    private boolean includeMissingRows = false;",
                "     private boolean concatenatePhoneticRuns = true;",
                "@@ -190,3 +191,2 @@ public class OfficeParserConfig implements Serializable {",
                "-",
                "     public boolean getExtractAllAlternativesFromMSG() {",
                "@@ -194,2 +194,16 @@ public class OfficeParserConfig implements Serializable {",
                "     }",
                "+",
                "+    /**",
                "+     * For table-like formats, and tables within other formats, should",
                "+     *  missing rows in sparse tables be output where detected?",
                "+     * The default is to only output rows defined within the file, which",
                "+     *  avoid lots of blank lines, but means layout isn't preserved.",
                "+     */",
                "+    public void setIncludeMissingRows(boolean includeMissingRows) {",
                "+        this.includeMissingRows = includeMissingRows;",
                "+    }",
                "+",
                "+    public boolean getIncludeMissingRows() {",
                "+        return includeMissingRows;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d9dba56dbe5fdc677b80d2453acab8e0a3b53b9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536940349,
            "hunks": 4,
            "message": "TIKA-2725 -- further cleanups",
            "diff": [
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "index 2ffcb1273..eb0d330ee 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "@@ -67,2 +67,3 @@ public class DetectorResource {",
                "         } catch (OutOfMemoryError e) {",
                "+            LOG.error(\"{}: OOM\", filename, e);",
                "             serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 1f5d8c172..582fafe87 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -390,4 +390,3 @@ public class TikaResource {",
                "-        long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE,",
                "-                metadata.get(TikaCoreProperties.RESOURCE_NAME_KEY));",
                "+        long taskId = SERVER_STATUS.start(ServerStatus.TASK.PARSE, path);",
                "         try {",
                "@@ -403,2 +402,3 @@ public class TikaResource {",
                "         } catch (OutOfMemoryError e) {",
                "+            logger.error(\"{}: OOM\", path, e);",
                "             SERVER_STATUS.setStatus(ServerStatus.STATUS.ERROR);",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "index 041707746..0d5dc6cdf 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java",
                "@@ -106,3 +106,4 @@ public class TranslateResource {",
                " \t\t} catch (OutOfMemoryError e) {",
                "-\t\t    serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                "+            LOG.error(\"OOM\", e);",
                "+            serverStatus.setStatus(ServerStatus.STATUS.ERROR);",
                " \t\t    throw e;"
            ],
            "changed_files": [
                "tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TranslateResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2725": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2725",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4538f1d68f0dc3e807663ac67ffe1aaa30506e4d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541225101,
            "hunks": 6,
            "message": "TIKA-2770 fix merge conflicts from 81430d51c kristencheung",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "index 8b3e1ef06..ec5f92c55 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "@@ -118,6 +118,6 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "     private void writeParagraphAndSetMetadata(String line, Metadata metadata) throws SAXException {",
                "-        if(line.length() < 150) {",
                "+        if(line.length() < 300) {",
                "             String[] keyValue = line.split(\"=\");",
                "             if(keyValue.length != 1) {",
                "-                if (keyValue[0].equals(\"map info\")) {",
                "+                if (keyValue[0].trim().equals(\"map info\")) {",
                "                     StringBuilder mapInfoValueStringBuilder = new StringBuilder();",
                "@@ -130,3 +130,8 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "                     String[] mapInfoValues = mapInfoValueStringBuilder.toString().split(\",\");",
                "-                    convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                    metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "+                    String [] latLonStringArray = convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                    String xhtmlLatLongLine = \"lat/lon = { \" + latLonStringArray[0] + \", \" + latLonStringArray[1] + \" }\";",
                "+                    xhtml.startElement(\"p\");",
                "+                    xhtml.characters(xhtmlLatLongLine);",
                "+                    xhtml.endElement(\"p\");",
                "                 } else {",
                "@@ -142,7 +147,11 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "     // Conversion logic taken from https://stackoverflow.com/questions/343865/how-to-convert-from-utm-to-latlng-in-python-or-javascript/344083#344083",
                "-    private void convertMapInfoValuesToLatLngAndSetMetadata(String[] mapInfoValues, Metadata metadata) {",
                "+    private String [] convertMapInfoValuesToLatLngAndSetMetadata(String[] mapInfoValues, Metadata metadata) {",
                "         // Based on the map info data, pixelEasting is at index 3 and pixelNorthing is at index 4",
                "-        double pixelEasting = Double.valueOf(mapInfoValues[3]);",
                "-        double pixelNorthing = Double.valueOf(mapInfoValues[4]);",
                "-        int zone = Integer.parseInt(mapInfoValues[7]);",
                "+        double pixelEasting = Double.valueOf(mapInfoValues[3].trim());",
                "+        double pixelNorthing = Double.valueOf(mapInfoValues[4].trim());",
                "+        int zone = 0;",
                "+        if(!mapInfoValues[7].trim().isEmpty()){",
                "+            zone = Integer.parseInt(mapInfoValues[7].trim());",
                "+        }",
                "+",
                "         double a = 6378137.0;",
                "@@ -184,3 +193,5 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "         double longitude = zoneCM - _a3;",
                "-        metadata.set(\"envi.lat/lng\" , latitude+\",\"+longitude);",
                "+        metadata.set(\"envi.lat/lon\" , latitude + \", \" + longitude);",
                "+",
                "+        return new String [] {Double.toString(latitude), Double.toString(longitude)};",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2770": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2770",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d70109af35dc94e0c7ce9437764cc2b7d064112",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536157230,
            "hunks": 5,
            "message": "TIKA-2722 -- clean up setting calendar values",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "index 750239feb..c76494058 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "@@ -18,3 +18,2 @@ package org.apache.tika.parser.pdf;",
                "-import javax.xml.parsers.DocumentBuilder;",
                " import javax.xml.stream.XMLStreamException;",
                "@@ -74,3 +73,2 @@ import org.w3c.dom.Document;",
                " import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.ErrorHandler;",
                " import org.xml.sax.SAXException;",
                "@@ -270,6 +268,6 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         addMetadata(metadata, PDF.DOC_INFO_TRAPPED, info.getTrapped());",
                "-            // TODO Remove these in Tika 2.0",
                "-        addMetadata(metadata, \"created\", info.getCreationDate());",
                "-        addMetadata(metadata, PDF.DOC_INFO_CREATED, info.getCreationDate());",
                "-        addMetadata(metadata, TikaCoreProperties.CREATED, info.getCreationDate());",
                "+        // TODO Remove these in Tika 2.0",
                "+        Calendar created = info.getCreationDate();",
                "+        addMetadata(metadata, PDF.DOC_INFO_CREATED, created);",
                "+        addMetadata(metadata, TikaCoreProperties.CREATED, created);",
                "         Calendar modified = info.getModificationDate();",
                "@@ -277,3 +275,3 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         addMetadata(metadata, TikaCoreProperties.MODIFIED, modified);",
                "-        addMetadata(metadata, PDF.DOC_INFO_MODIFICATION_DATE, info.getModificationDate());",
                "+        addMetadata(metadata, PDF.DOC_INFO_MODIFICATION_DATE, modified);",
                "@@ -491,3 +489,3 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         if (value != null) {",
                "-            metadata.set(property, value.getTime());",
                "+            metadata.set(property, value);",
                "         }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c723878ff15fc3b75f1a57fd1a91cf1d9f2577d3",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541170818,
            "hunks": 0,
            "message": "Merge pull request #247 from diffblue-assistant/finallyclosetotrywithresources Use try-with-resources",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "247": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 247",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "81430d51c45c2674efc6194e09e4cb3e3d1e3177",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541225101,
            "hunks": 6,
            "message": "fixing TIKA-2770 for lat/lon",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "index 8b3e1ef06..ec5f92c55 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java",
                "@@ -118,6 +118,6 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "     private void writeParagraphAndSetMetadata(String line, Metadata metadata) throws SAXException {",
                "-        if(line.length() < 150) {",
                "+        if(line.length() < 300) {",
                "             String[] keyValue = line.split(\"=\");",
                "             if(keyValue.length != 1) {",
                "-                if (keyValue[0].equals(\"map info\")) {",
                "+                if (keyValue[0].trim().equals(\"map info\")) {",
                "                     StringBuilder mapInfoValueStringBuilder = new StringBuilder();",
                "@@ -130,3 +130,8 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "                     String[] mapInfoValues = mapInfoValueStringBuilder.toString().split(\",\");",
                "-                    convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                    metadata.set(\"envi.\" + keyValue[0].trim().replace(\" \", \".\"), keyValue[1].trim());",
                "+                    String [] latLonStringArray = convertMapInfoValuesToLatLngAndSetMetadata(mapInfoValues, metadata);",
                "+                    String xhtmlLatLongLine = \"lat/lon = { \" + latLonStringArray[0] + \", \" + latLonStringArray[1] + \" }\";",
                "+                    xhtml.startElement(\"p\");",
                "+                    xhtml.characters(xhtmlLatLongLine);",
                "+                    xhtml.endElement(\"p\");",
                "                 } else {",
                "@@ -142,7 +147,11 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "     // Conversion logic taken from https://stackoverflow.com/questions/343865/how-to-convert-from-utm-to-latlng-in-python-or-javascript/344083#344083",
                "-    private void convertMapInfoValuesToLatLngAndSetMetadata(String[] mapInfoValues, Metadata metadata) {",
                "+    private String [] convertMapInfoValuesToLatLngAndSetMetadata(String[] mapInfoValues, Metadata metadata) {",
                "         // Based on the map info data, pixelEasting is at index 3 and pixelNorthing is at index 4",
                "-        double pixelEasting = Double.valueOf(mapInfoValues[3]);",
                "-        double pixelNorthing = Double.valueOf(mapInfoValues[4]);",
                "-        int zone = Integer.parseInt(mapInfoValues[7]);",
                "+        double pixelEasting = Double.valueOf(mapInfoValues[3].trim());",
                "+        double pixelNorthing = Double.valueOf(mapInfoValues[4].trim());",
                "+        int zone = 0;",
                "+        if(!mapInfoValues[7].trim().isEmpty()){",
                "+            zone = Integer.parseInt(mapInfoValues[7].trim());",
                "+        }",
                "+",
                "         double a = 6378137.0;",
                "@@ -184,3 +193,5 @@ public class EnviHeaderParser extends AbstractEncodingDetectorParser {",
                "         double longitude = zoneCM - _a3;",
                "-        metadata.set(\"envi.lat/lng\" , latitude+\",\"+longitude);",
                "+        metadata.set(\"envi.lat/lon\" , latitude + \", \" + longitude);",
                "+",
                "+        return new String [] {Double.toString(latitude), Double.toString(longitude)};",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2770": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2770",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dcfbe5a2d578696dfba309dec400e977f047cfb2",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526594824,
            "hunks": 10,
            "message": "TIKA-2479 Output missing left/mid cells in XLSX and XLSB, and optionally also missing rows",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index 0a511c21d..0367afca8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -120,3 +120,3 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "-            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config.getIncludeHeadersAndFooters(), xhtml);",
                "+            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config, xhtml);",
                "             XSSFBCommentsTable comments = iter.getXSSFBSheetComments();",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index bf6505b1e..314114802 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -27,3 +27,2 @@ import java.util.Map;",
                "-import org.apache.poi.POIXMLDocument;",
                " import org.apache.poi.POIXMLTextExtractor;",
                "@@ -41,2 +40,3 @@ import org.apache.poi.ss.usermodel.DataFormatter;",
                " import org.apache.poi.ss.usermodel.HeaderFooter;",
                "+import org.apache.poi.ss.util.CellReference;",
                " import org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;",
                "@@ -59,2 +59,3 @@ import org.apache.tika.metadata.TikaMetadataKeys;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.microsoft.OfficeParserConfig;",
                " import org.apache.tika.parser.microsoft.TikaExcelDataFormatter;",
                "@@ -148,4 +149,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         while (iter.hasNext()) {",
                "-",
                "-            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config.getIncludeHeadersAndFooters(), xhtml);",
                "+            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config, xhtml);",
                "             PackagePart sheetPart = null;",
                "@@ -398,7 +398,11 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         private final boolean includeHeadersFooters;",
                "+        private final boolean includeMissingRows;",
                "         protected List<String> headers;",
                "         protected List<String> footers;",
                "+        private int lastSeenRow = -1;",
                "+        private int lastSeenCol = -1;",
                "-        protected SheetTextAsHTML(boolean includeHeaderFooters, XHTMLContentHandler xhtml) {",
                "-            this.includeHeadersFooters = includeHeaderFooters;",
                "+        protected SheetTextAsHTML(OfficeParserConfig config, XHTMLContentHandler xhtml) {",
                "+            this.includeHeadersFooters = config.getIncludeHeadersAndFooters();",
                "+            this.includeMissingRows = config.getIncludeMissingRows();",
                "             this.xhtml = xhtml;",
                "@@ -410,3 +414,15 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             try {",
                "+                // Missing rows, if desired, with a single empty row",
                "+                if (includeMissingRows && rowNum > (lastSeenRow+1)) {",
                "+                    for (int rn=lastSeenRow+1; rn<rowNum; rn++) {",
                "+                        xhtml.startElement(\"tr\");",
                "+                        xhtml.startElement(\"td\");",
                "+                        xhtml.endElement(\"td\");",
                "+                        xhtml.endElement(\"tr\");",
                "+                    }",
                "+                }",
                "+",
                "+                // Start the new row",
                "                 xhtml.startElement(\"tr\");",
                "+                lastSeenCol = -1;",
                "             } catch (SAXException e) {",
                "@@ -424,2 +440,11 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             try {",
                "+                // Handle any missing cells",
                "+                int colNum = (new CellReference(cellRef)).getCol();",
                "+                for (int cn=lastSeenCol+1; cn<colNum; cn++) {",
                "+                    xhtml.startElement(\"td\");",
                "+                    xhtml.endElement(\"td\");",
                "+                }",
                "+                lastSeenCol = colNum;",
                "+",
                "+                // Start this cell",
                "                 xhtml.startElement(\"td\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2fd54ff31865089f154390fed42849e4572929e7",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536158144,
            "hunks": 2,
            "message": "TIKA-2722 -- clean up setting calendar values, take2",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "index c76494058..bee971ea4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java",
                "@@ -105,2 +105,4 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "     private static final Object[] LOCK = new Object[0];",
                "+    //the old \"created\" metadata.  This will go away in Tika 2.0",
                "+    private static final Property DEPRECATED_CREATED = Property.externalDate(\"created\");",
                "@@ -270,2 +272,3 @@ public class PDFParser extends AbstractParser implements Initializable {",
                "         Calendar created = info.getCreationDate();",
                "+        addMetadata(metadata, DEPRECATED_CREATED, created);",
                "         addMetadata(metadata, PDF.DOC_INFO_CREATED, created);"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6badaead79e3350414536a5e4972871f66e97e90",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533310369,
            "hunks": 8,
            "message": "TIKA-2673 -- add StandardHtmlEncodingDetector via Gerard Bouchar",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "deleted file mode 100644",
                "index 487f747c4..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,491 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.tika.parser.html;",
                "-",
                "-import org.apache.tika.detect.EncodingDetector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-",
                "-import java.io.*;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.charset.IllegalCharsetNameException;",
                "-import java.nio.charset.StandardCharsets;",
                "-import java.nio.charset.UnsupportedCharsetException;",
                "-import java.util.*;",
                "-import java.util.regex.Matcher;",
                "-import java.util.regex.Pattern;",
                "-import java.util.stream.Collectors;",
                "-import java.util.stream.IntStream;",
                "-",
                "-import static java.nio.charset.StandardCharsets.*;",
                "-import static org.apache.tika.parser.html.StrictHtmlEncodingDetector.SequenceMatcher.caseInsensitive;",
                "-import static org.apache.tika.parser.html.StrictHtmlEncodingDetector.SingleByteMatcher.matchers;",
                "-",
                "-/**",
                "- * This is a strict html encoding detector that enforces the standard",
                "- * far more strictly than the HtmlEncodingDetector.",
                "- */",
                "-public class StrictHtmlEncodingDetector implements EncodingDetector {",
                "-    private static final String CHARSET_LABEL_FILE = \"whatwg-encoding-labels.tsv\";",
                "-    private static Map<String, Charset> CHARSET_LABELS = getCharsetLabels();",
                "-",
                "-    private static Map<String, Charset> getCharsetLabels() {",
                "-        String path = StrictHtmlEncodingDetector.class.getPackage().getName().replace('.', '/');",
                "-        String filename = '/' + path + '/' + CHARSET_LABEL_FILE;",
                "-        InputStream inputStream = StrictHtmlEncodingDetector.class.getResourceAsStream(filename);",
                "-        Objects.requireNonNull(inputStream, \"Missing charset label mapping file : \" + filename);",
                "-        try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.US_ASCII))) {",
                "-            return buffer.lines()",
                "-                    .filter(s -> !s.startsWith(\"#\"))",
                "-                    .map(s -> s.split(\"\\t\"))",
                "-                    .filter(parts -> parts.length >= 2)",
                "-                    .collect(Collectors.toMap(",
                "-                            parts -> parts[0],",
                "-                            StrictHtmlEncodingDetector::charsetFromStandard",
                "-                    ));",
                "-        } catch (IOException e) {",
                "-            throw new UncheckedIOException(\"Unable to read the charset label mapping\", e);",
                "-        }",
                "-    }",
                "-",
                "-    private static Charset charsetFromStandard(String[] names) {",
                "-        for (int i = 1; i < names.length; i++) {",
                "-            try {",
                "-                return Charset.forName(names[1]);",
                "-            } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {/* pass */}",
                "-        }",
                "-        // The only single-byte charset extended charset that must be present on every Java platform",
                "-        return StandardCharsets.ISO_8859_1;",
                "-    }",
                "-",
                "-    private static Charset getCharsetByLabel(String label) {",
                "-        if (label == null) return null;",
                "-        label = label.trim().toLowerCase(Locale.US);",
                "-        return CHARSET_LABELS.get(label);",
                "-    }",
                "-",
                "-    @Override",
                "-    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "-        PreScanner preScanner = new PreScanner(input);",
                "-",
                "-        // If there is a BOM at the beginning, the detection does not go further",
                "-        Charset bomCharset = preScanner.detectBOM();",
                "-        if (bomCharset != null) return bomCharset;",
                "-",
                "-        // Assume that if there was a charset specified either by the end user or the transport level,",
                "-        // it was stored in the metadata",
                "-        String incomingCharsetName = metadata.get(Metadata.CONTENT_ENCODING);",
                "-        if (incomingCharsetName != null) {",
                "-            Charset incomingCharset = getCharsetByLabel(incomingCharsetName);",
                "-            if (incomingCharset != null) return incomingCharset;",
                "-        }",
                "-",
                "-        return preScanner.scan();",
                "-    }",
                "-",
                "-    static class PreScanner {",
                "-",
                "-        private static final Pattern META_CHARSET_PATTERN = Pattern.compile(\"charset\\\\s*=\\\\s*([\\\"']?)([^\\\"'\\\\s;]+)\\\\1\");",
                "-        private static ByteMatcher COMMENT_START = new SequenceMatcher(\"<!--\");",
                "-        private static ByteMatcher COMMENT_END = new SequenceMatcher(\"-->\");",
                "-        private static ByteMatcher LETTER = new OrMatcher(",
                "-                new RangeMatcher((byte) 'a', (byte) 'z'),",
                "-                new RangeMatcher((byte) 'A', (byte) 'Z')",
                "-        );",
                "-        private static ByteMatcher SPACE = new OrMatcher(matchers(0x09, 0x0A, 0x0C, 0x0D, 0x20));",
                "-        private static ByteMatcher SLASH = new SingleByteMatcher((byte) '/');",
                "-        private static ByteMatcher EQUAL = new SingleByteMatcher((byte) '=');",
                "-        private static ByteMatcher TAG_END = new SingleByteMatcher((byte) '>');",
                "-        private static ByteMatcher SINGLE_QUOTE = new SingleByteMatcher((byte) '\\'');",
                "-        private static ByteMatcher DOUBLE_QUOTE = new SingleByteMatcher((byte) '\"');",
                "-        private static ByteMatcher QUOTE = new OrMatcher(SINGLE_QUOTE, DOUBLE_QUOTE);",
                "-        private static ByteMatcher TAG_END_OR_SLASH = new OrMatcher(SLASH, TAG_END);",
                "-        private static ByteMatcher SPACE_OR_SLASH = new OrMatcher(SPACE, SLASH);",
                "-        private static ByteMatcher SPACE_OR_TAG_END = new OrMatcher(SPACE, TAG_END);",
                "-        private static ByteMatcher META_START = new SequenceMatcher(caseInsensitive(\"<meta\"), SPACE_OR_SLASH);",
                "-        private static ByteMatcher TAG_START = new SequenceMatcher(",
                "-                new SingleByteMatcher((byte) '<'),",
                "-                new OrMatcher(SLASH, LETTER)",
                "-        );",
                "-        private static ByteMatcher TAG_BODY = new NegativeMatcher(new OrMatcher(SPACE, TAG_END));",
                "-        private static ByteMatcher SPECIAL_TAG_START = new SequenceMatcher(",
                "-                new SingleByteMatcher((byte) '<'),",
                "-                new OrMatcher(matchers(\"!/?\"))",
                "-        );",
                "-        private static ByteMatcher UTF8_BOM = new SequenceMatcher(matchers(0xEF, 0xBB, 0xBF));",
                "-        private static ByteMatcher UTF16_BE_BOM = new SequenceMatcher(matchers(0xFE, 0xFF));",
                "-        private static ByteMatcher UTF16_LE_BOM = new SequenceMatcher(matchers(0xFF, 0xFE));",
                "-",
                "-",
                "-        PushbackInputStream stream;",
                "-        private CharsetDetectionResult detectedCharset = new CharsetDetectionResult();",
                "-",
                "-        public PreScanner(InputStream inputStream) {",
                "-            this.stream = new PushbackInputStream(inputStream, 32);",
                "-        }",
                "-",
                "-        public Charset scan() {",
                "-            while (processAtLeastOneByte()) {",
                "-                if (detectedCharset.isFound()) {",
                "-                    return detectedCharset.getCharset();",
                "-                }",
                "-            }",
                "-            return null;",
                "-        }",
                "-",
                "-        private Charset detectBOM() {",
                "-            try {",
                "-                if (UTF8_BOM.matches(stream)) return StandardCharsets.UTF_8;",
                "-                else if (UTF16_BE_BOM.matches(stream)) return StandardCharsets.UTF_16BE;",
                "-                else if (UTF16_LE_BOM.matches(stream)) return StandardCharsets.UTF_16LE;",
                "-            } catch (IOException e) { /* stream could not be read, also return null */ }",
                "-            return null;",
                "-        }",
                "-",
                "-        private boolean processAtLeastOneByte() {",
                "-            try {",
                "-                return processComment() ||",
                "-                        processMeta() ||",
                "-                        processTag() ||",
                "-                        processSpecialTag() ||",
                "-                        processAny();",
                "-            } catch (IOException e) {",
                "-                return false;",
                "-            }",
                "-        }",
                "-",
                "-        private boolean processAny() throws IOException {",
                "-            int read = stream.read();",
                "-            return read != -1;",
                "-        }",
                "-",
                "-        private boolean hasBytes() throws IOException {",
                "-            int read = stream.read();",
                "-            if (read != -1) stream.unread(read);",
                "-            return read != -1;",
                "-        }",
                "-",
                "-        private boolean processComment() throws IOException {",
                "-            if (COMMENT_START.matches(stream)) {",
                "-                // The two '-' in the '-->' sequence can be the same as those in the '<!--' sequence.",
                "-                stream.unread(\"--\".getBytes(StandardCharsets.US_ASCII));",
                "-                return COMMENT_END.advanceUntilMatches(stream);",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processTag() throws IOException {",
                "-            if (TAG_START.matches(stream)) {",
                "-                TAG_BODY.skipAll(stream);",
                "-                while (getAttribute() != null) {/*ignore the attribute*/}",
                "-                return true;",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processSpecialTag() throws IOException {",
                "-            if (SPECIAL_TAG_START.matches(stream)) {",
                "-                TAG_BODY.skipAll(stream);",
                "-                return TAG_END.advanceUntilMatches(stream);",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processMeta() throws IOException {",
                "-            if (META_START.matches(stream)) {",
                "-                Set<String> attributeNames = new HashSet<>();",
                "-                boolean gotPragma = false;",
                "-                Boolean needPragma = null;",
                "-                CharsetDetectionResult charset = new CharsetDetectionResult();",
                "-                while (hasBytes()) {",
                "-                    Attribute attribute = getAttribute();",
                "-                    if (attribute == null) break;",
                "-                    if (attributeNames.contains(attribute.getName())) continue;",
                "-                    attributeNames.add(attribute.getName());",
                "-                    switch (attribute.getName()) {",
                "-                        case \"http-equiv\":",
                "-                            if (attribute.getValue().equals(\"content-type\"))",
                "-                                gotPragma = true;",
                "-                            break;",
                "-                        case \"content\":",
                "-                            String charsetName = getEncodingFromMeta(attribute.getValue());",
                "-                            if (!charset.isFound() && charsetName != null) {",
                "-                                charset.find(charsetName);",
                "-                                needPragma = true;",
                "-                            }",
                "-                            break;",
                "-                        case \"charset\":",
                "-                            charset.find(attribute.getValue());",
                "-                            needPragma = false;",
                "-                            break;",
                "-                        default: // Ignore non-charset related attributes",
                "-                    }",
                "-                }",
                "-                if (needPragma != null && !(needPragma && !gotPragma)) {",
                "-                    detectedCharset = charset;",
                "-                    return true;",
                "-                }",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private String getEncodingFromMeta(String attributeValue) {",
                "-            Matcher matcher = META_CHARSET_PATTERN.matcher(attributeValue);",
                "-            if (!matcher.find()) return null;",
                "-            return matcher.group(2);",
                "-        }",
                "-",
                "-        private Attribute getAttribute() throws IOException {",
                "-            SPACE_OR_SLASH.skipAll(stream);",
                "-            if (TAG_END.peekMatches(stream)) return null;",
                "-            StringBuilder name = new StringBuilder();",
                "-            while (!EQUAL.peekMatches(stream) || name.length() == 0) {",
                "-                if (TAG_END_OR_SLASH.peekMatches(stream)) {",
                "-                    break;",
                "-                } else if (SPACE.peekMatches(stream)) {",
                "-                    SPACE.skipAll(stream);",
                "-                    break;",
                "-                } else {",
                "-                    name.append(getLowerCaseChar());",
                "-                }",
                "-            }",
                "-",
                "-            if (!EQUAL.matches(stream)) return new Attribute(name.toString(), \"\");",
                "-            SPACE.skipAll(stream);",
                "-",
                "-            StringBuilder value = new StringBuilder();",
                "-            byte[] quoteMatched = QUOTE.match(stream);",
                "-            if (quoteMatched != null) {",
                "-                char quote = (char) quoteMatched[0];",
                "-                int nextChar = -1;",
                "-                while (nextChar != quote) {",
                "-                    if (nextChar != -1) value.append((char) nextChar);",
                "-                    nextChar = getLowerCaseChar();",
                "-                }",
                "-            } else {",
                "-                while (!SPACE_OR_TAG_END.peekMatches(stream)) {",
                "-                    value.append(getLowerCaseChar());",
                "-                }",
                "-            }",
                "-            return new Attribute(name.toString(), value.toString());",
                "-        }",
                "-",
                "-        private char getLowerCaseChar() throws IOException {",
                "-            int nextPoint = stream.read();",
                "-            if (nextPoint == -1) throw new IOException();",
                "-            if (nextPoint >= 'A' && nextPoint <= 'Z') nextPoint += 0x20; // lowercase",
                "-            return (char) nextPoint;",
                "-        }",
                "-    }",
                "-",
                "-    static class Attribute {",
                "-        String name;",
                "-        String value;",
                "-",
                "-        public Attribute(String name, String value) {",
                "-            this.name = name;",
                "-            this.value = value;",
                "-        }",
                "-",
                "-        public String getName() {",
                "-            return name;",
                "-        }",
                "-",
                "-        public String getValue() {",
                "-            return value;",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * A detection may either not find a charset, find an invalid charset, or find a valid charset",
                "-     */",
                "-    static class CharsetDetectionResult {",
                "-        private boolean found = false;",
                "-        private Charset charset = null;",
                "-",
                "-        public CharsetDetectionResult() { /* default result: not found */}",
                "-",
                "-        public boolean isFound() {",
                "-            return found;",
                "-        }",
                "-",
                "-        public void find(String charsetName) {",
                "-            this.found = true;",
                "-            charsetName = charsetName.trim();",
                "-            if (\"x-user-defined\".equals(charsetName)) charsetName = \"windows-1252\";",
                "-            this.charset = getCharsetByLabel(charsetName);",
                "-            // The specification states: If charset is a UTF-16 encoding, then set charset to UTF-8.",
                "-            if (UTF_16LE.equals(charset) || UTF_16BE.equals(charset)) charset = UTF_8;",
                "-        }",
                "-",
                "-        public Charset getCharset() {",
                "-            // the result may be null even if found is true, in the case there is a charset specified,",
                "-            // but it is invalid",
                "-            return charset;",
                "-        }",
                "-    }",
                "-",
                "-    static abstract class ByteMatcher {",
                "-",
                "-        abstract byte[] match(PushbackInputStream pushbackInputStream) throws IOException;",
                "-",
                "-        boolean matches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            return this.match(pushbackInputStream) != null;",
                "-        }",
                "-",
                "-        boolean advanceUntilMatches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            while (!this.matches(pushbackInputStream)) {",
                "-                int nextByte = pushbackInputStream.read();",
                "-                if (nextByte == -1) return false;",
                "-            }",
                "-            return true;",
                "-        }",
                "-",
                "-        void skipAll(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            while (matches(pushbackInputStream)) {/* just skip the byte */}",
                "-        }",
                "-",
                "-        public boolean peekMatches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            byte[] matched = this.match(pushbackInputStream);",
                "-            if (matched != null) pushbackInputStream.unread(matched);",
                "-            return matched != null;",
                "-        }",
                "-    }",
                "-",
                "-    static class SingleByteMatcher extends ByteMatcher {",
                "-        private byte b;",
                "-",
                "-        public SingleByteMatcher(byte b) {",
                "-            this.b = b;",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(String s) {",
                "-            return matchers(s.chars());",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(int... bytes) {",
                "-            return matchers(IntStream.of(bytes));",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(IntStream byteStream) {",
                "-            return byteStream",
                "-                    .mapToObj(i -> new SingleByteMatcher((byte) i))",
                "-                    .toArray(ByteMatcher[]::new);",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            int read = pushbackInputStream.read();",
                "-            if ((byte) read == b) return new byte[]{b};",
                "-            if (read != -1) pushbackInputStream.unread(read);",
                "-            return null;",
                "-        }",
                "-    }",
                "-",
                "-    static class SequenceMatcher extends ByteMatcher {",
                "-        private ByteMatcher[] matchers;",
                "-",
                "-        public SequenceMatcher(ByteMatcher... matchers) {",
                "-            this.matchers = matchers;",
                "-        }",
                "-",
                "-        public SequenceMatcher(String s) {",
                "-            this(matchers(s));",
                "-        }",
                "-",
                "-        public static SequenceMatcher caseInsensitive(String s) {",
                "-            ByteMatcher[] lowerMatchers = matchers(s.toLowerCase(Locale.US));",
                "-            ByteMatcher[] upperMatchers = matchers(s.toUpperCase(Locale.US));",
                "-            OrMatcher[] matchers = IntStream",
                "-                    .range(0, Math.min(lowerMatchers.length, upperMatchers.length))",
                "-                    .mapToObj(i -> new OrMatcher(lowerMatchers[i], upperMatchers[i]))",
                "-                    .toArray(OrMatcher[]::new);",
                "-            return new SequenceMatcher(matchers);",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            ByteArrayOutputStream allMatched = new ByteArrayOutputStream();",
                "-            for (ByteMatcher m : matchers) {",
                "-                byte[] matched = m.match(pushbackInputStream);",
                "-                if (matched == null) {",
                "-                    pushbackInputStream.unread(allMatched.toByteArray());",
                "-                    return null;",
                "-                } else {",
                "-                    allMatched.write(matched);",
                "-                }",
                "-            }",
                "-            return allMatched.toByteArray();",
                "-        }",
                "-    }",
                "-",
                "-    static class OrMatcher extends ByteMatcher {",
                "-        private ByteMatcher[] matchers;",
                "-",
                "-        public OrMatcher(ByteMatcher... matchers) {",
                "-            this.matchers = matchers;",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            for (ByteMatcher m : matchers) {",
                "-                byte[] matched = m.match(pushbackInputStream);",
                "-                if (matched != null) return matched;",
                "-            }",
                "-            return null;",
                "-        }",
                "-    }",
                "-",
                "-    static class NegativeMatcher extends ByteMatcher {",
                "-        private ByteMatcher matcher;",
                "-",
                "-        public NegativeMatcher(ByteMatcher matcher) {",
                "-            this.matcher = matcher;",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            byte[] matched = matcher.match(pushbackInputStream);",
                "-            if (matched == null) {",
                "-                int read = pushbackInputStream.read();",
                "-                if (read == -1) return null;",
                "-                return new byte[]{(byte) read};",
                "-            } else {",
                "-                pushbackInputStream.unread(matched);",
                "-                return null;",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    static class RangeMatcher extends ByteMatcher {",
                "-        private byte low;",
                "-        private byte high;",
                "-",
                "-        public RangeMatcher(byte low, byte high) {",
                "-            this.low = low;",
                "-            this.high = high;",
                "-        }",
                "-",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            int read = pushbackInputStream.read();",
                "-            if (read >= low && read <= high) return new byte[]{(byte) read};",
                "-            if (read != -1) pushbackInputStream.unread(read);",
                "-            return null;",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "new file mode 100644",
                "index 000000000..4d4c7c2b4",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "@@ -0,0 +1,145 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+",
                "+import org.apache.tika.parser.html.charsetdetector.charsets.ReplacementCharset;",
                "+import org.apache.tika.parser.html.charsetdetector.charsets.XUserDefinedCharset;",
                "+",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.IllegalCharsetNameException;",
                "+import java.nio.charset.StandardCharsets;",
                "+import java.nio.charset.UnsupportedCharsetException;",
                "+import java.util.HashMap;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+",
                "+/**",
                "+ * Singleton class that associates standard charset names to java charset implementations",
                "+ * https://encoding.spec.whatwg.org/#ref-for-iso-8859-8-i",
                "+ */",
                "+final class CharsetAliases {",
                "+",
                "+    private static final Map<String, Charset> charsetsByLabel = new HashMap<>();",
                "+",
                "+    private CharsetAliases() {",
                "+    }",
                "+",
                "+    /**",
                "+     * @param label a charset name",
                "+     * @return the corresponding java charset, if there is one. Otherwise, null",
                "+     */",
                "+    static Charset getCharsetByLabel(String label) {",
                "+        if (label == null) return null;",
                "+        synchronized (charsetsByLabel) {",
                "+            // Lazy initialization",
                "+            if (charsetsByLabel.isEmpty()) addAll();",
                "+        }",
                "+        label = label.trim().toLowerCase(Locale.US);",
                "+        return charsetsByLabel.get(label);",
                "+    }",
                "+",
                "+    private static void addAll() {",
                "+        addCharset(charset(\"Big5\"), \"big5\", \"big5-hkscs\", \"cn-big5\", \"csbig5\", \"x-x-big5\");",
                "+        addCharset(charset(\"EUC-JP\"), \"cseucpkdfmtjapanese\", \"euc-jp\", \"x-euc-jp\");",
                "+        addCharset(charset(\"EUC-KR\"), \"cseuckr\", \"csksc56011987\", \"euc-kr\", \"iso-ir-149\", \"korean\",",
                "+                \"ks_c_5601-1987\", \"ks_c_5601-1989\", \"ksc5601\", \"ksc_5601\", \"windows-949\");",
                "+        addCharset(charset(\"GBK\"), \"chinese\", \"csgb2312\", \"csiso58gb231280\", \"gb2312\", \"gb_2312\",",
                "+                \"gb_2312-80\", \"gbk\", \"iso-ir-58\", \"x-gbk\");",
                "+        addCharset(charset(\"IBM866\"), \"866\", \"cp866\", \"csibm866\", \"ibm866\");",
                "+        addCharset(charset(\"ISO-2022-JP\"), \"csiso2022jp\", \"iso-2022-jp\");",
                "+        addCharset(charset(\"ISO-8859-10\", \"ISO-8859-4\"), \"csisolatin6\", \"iso-8859-10\", \"iso-ir-157\",",
                "+                \"iso8859-10\", \"iso885910\", \"l6\", \"latin6\");",
                "+        addCharset(charset(\"ISO-8859-13\"), \"iso-8859-13\", \"iso8859-13\", \"iso885913\");",
                "+        addCharset(charset(\"ISO-8859-14\", \"ISO-8859-1\"), \"iso-8859-14\", \"iso8859-14\", \"iso885914\");",
                "+        addCharset(charset(\"ISO-8859-15\"), \"csisolatin9\", \"iso-8859-15\", \"iso8859-15\", \"iso885915\",",
                "+                \"iso_8859-15\", \"l9\");",
                "+        addCharset(charset(\"ISO-8859-16\", \"ISO-8859-1\"), \"iso-8859-16\");",
                "+        addCharset(charset(\"ISO-8859-2\"), \"csisolatin2\", \"iso-8859-2\", \"iso-ir-101\", \"iso8859-2\",",
                "+                \"iso88592\", \"iso_8859-2\", \"iso_8859-2:1987\", \"l2\", \"latin2\");",
                "+        addCharset(charset(\"ISO-8859-3\"), \"csisolatin3\", \"iso-8859-3\", \"iso-ir-109\", \"iso8859-3\",",
                "+                \"iso88593\", \"iso_8859-3\", \"iso_8859-3:1988\", \"l3\", \"latin3\");",
                "+        addCharset(charset(\"ISO-8859-4\"), \"csisolatin4\", \"iso-8859-4\", \"iso-ir-110\", \"iso8859-4\",",
                "+                \"iso88594\", \"iso_8859-4\", \"iso_8859-4:1988\", \"l4\", \"latin4\");",
                "+        addCharset(charset(\"ISO-8859-5\"), \"csisolatincyrillic\", \"cyrillic\", \"iso-8859-5\", \"iso-ir-144\",",
                "+                \"iso8859-5\", \"iso88595\", \"iso_8859-5\", \"iso_8859-5:1988\");",
                "+        addCharset(charset(\"ISO-8859-6\"), \"arabic\", \"asmo-708\", \"csiso88596e\", \"csiso88596i\",",
                "+                \"csisolatinarabic\", \"ecma-114\", \"iso-8859-6\", \"iso-8859-6-e\", \"iso-8859-6-i\", \"iso-ir-127\",",
                "+                \"iso8859-6\", \"iso88596\", \"iso_8859-6\", \"iso_8859-6:1987\");",
                "+        addCharset(charset(\"ISO-8859-7\"), \"csisolatingreek\", \"ecma-118\", \"elot_928\", \"greek\", \"greek8\",",
                "+                \"iso-8859-7\", \"iso-ir-126\", \"iso8859-7\", \"iso88597\", \"iso_8859-7\", \"iso_8859-7:1987\", \"sun_eu_greek\");",
                "+        // ISO-8859-8 actually should have an influence on the layout direction",
                "+        // (text should be decoded in the visual order). However, this is not implemented in tika.",
                "+        addCharset(charset(\"ISO-8859-8\"), \"csiso88598e\", \"csisolatinhebrew\", \"hebrew\", \"iso-8859-8\",",
                "+                \"iso-8859-8-e\", \"iso-ir-138\", \"iso8859-8\", \"iso88598\", \"iso_8859-8\", \"iso_8859-8:1988\", \"visual\");",
                "+        addCharset(charset(\"ISO-8859-8-I\", \"ISO-8859-8\"), \"csiso88598i\", \"iso-8859-8-i\", \"logical\");",
                "+        addCharset(charset(\"KOI8-R\"), \"cskoi8r\", \"koi\", \"koi8\", \"koi8-r\", \"koi8_r\");",
                "+        addCharset(charset(\"KOI8-U\"), \"koi8-ru\", \"koi8-u\");",
                "+        addCharset(charset(\"Shift_JIS\"), \"csshiftjis\", \"ms932\", \"ms_kanji\", \"shift-jis\", \"shift_jis\",",
                "+                \"sjis\", \"windows-31j\", \"x-sjis\");",
                "+        addCharset(charset(\"UTF-16BE\"), \"utf-16be\");",
                "+        addCharset(charset(\"UTF-16LE\"), \"utf-16\", \"utf-16le\");",
                "+        addCharset(charset(\"UTF-8\"), \"unicode-1-1-utf-8\", \"utf-8\", \"utf8\");",
                "+        addCharset(charset(\"gb18030\"), \"gb18030\");",
                "+        addCharset(charset(\"windows-1250\"), \"cp1250\", \"windows-1250\", \"x-cp1250\");",
                "+        addCharset(charset(\"windows-1251\"), \"cp1251\", \"windows-1251\", \"x-cp1251\");",
                "+        addCharset(charset(\"windows-1252\"), \"ansi_x3.4-1968\", \"ascii\", \"cp1252\", \"cp819\", \"csisolatin1\",",
                "+                \"ibm819\", \"iso-8859-1\", \"iso-ir-100\", \"iso8859-1\", \"iso88591\", \"iso_8859-1\", \"iso_8859-1:1987\",",
                "+                \"l1\", \"latin1\", \"us-ascii\", \"windows-1252\", \"x-cp1252\");",
                "+        addCharset(charset(\"windows-1253\"), \"cp1253\", \"windows-1253\", \"x-cp1253\");",
                "+        addCharset(charset(\"windows-1254\"), \"cp1254\", \"csisolatin5\", \"iso-8859-9\", \"iso-ir-148\",",
                "+                \"iso8859-9\", \"iso88599\", \"iso_8859-9\", \"iso_8859-9:1989\", \"l5\", \"latin5\", \"windows-1254\", \"x-cp1254\");",
                "+        addCharset(charset(\"windows-1255\"), \"cp1255\", \"windows-1255\", \"x-cp1255\");",
                "+        addCharset(charset(\"windows-1256\"), \"cp1256\", \"windows-1256\", \"x-cp1256\");",
                "+        addCharset(charset(\"windows-1257\"), \"cp1257\", \"windows-1257\", \"x-cp1257\");",
                "+        addCharset(charset(\"windows-1258\"), \"cp1258\", \"windows-1258\", \"x-cp1258\");",
                "+        addCharset(charset(\"windows-874\"), \"dos-874\", \"iso-8859-11\", \"iso8859-11\", \"iso885911\",",
                "+                \"tis-620\", \"windows-874\");",
                "+        addCharset(charset(\"x-MacCyrillic\"), \"x-mac-cyrillic\", \"x-mac-ukrainian\");",
                "+        addCharset(charset(\"x-MacRoman\"), \"csmacintosh\", \"mac\", \"macintosh\", \"x-mac-roman\");",
                "+        // The \"replacement\" charset is a dummy charset. It is present to mitigate wrong-charset attacks",
                "+        addCharset(new ReplacementCharset(), \"csiso2022kr\", \"hz-gb-2312\", \"iso-2022-cn\", \"iso-2022-cn-ext\",",
                "+                \"iso-2022-kr\", \"replacement\");",
                "+        // The x-user-defined charset is not present in java",
                "+        addCharset(new XUserDefinedCharset(), \"x-user-defined\");",
                "+    }",
                "+",
                "+    /**",
                "+     * @param names jvm charset names",
                "+     * @return the first of the given charsets that exists in the current JVM,",
                "+     * or ISO_8859_1 if none exists",
                "+     */",
                "+    private static Charset charset(String... names) {",
                "+        for (String name : names) {",
                "+            try {",
                "+                return Charset.forName(name);",
                "+            } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {/* pass */}",
                "+        }",
                "+        // The only single-byte charset extended charset that must be present on every Java platform",
                "+        return StandardCharsets.ISO_8859_1;",
                "+    }",
                "+",
                "+    /**",
                "+     * @param charset name of the charset in the JVM",
                "+     * @param names   standard W3C charset names",
                "+     */",
                "+    private static void addCharset(Charset charset, String... names) {",
                "+        for (String name : names) {",
                "+            charsetsByLabel.put(name, charset);",
                "+        }",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "new file mode 100644",
                "index 000000000..0ba363743",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "@@ -0,0 +1,62 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.nio.charset.Charset;",
                "+",
                "+import static java.nio.charset.StandardCharsets.UTF_16BE;",
                "+import static java.nio.charset.StandardCharsets.UTF_16LE;",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "+",
                "+",
                "+/**",
                "+ * A detection may either not find a charset, find an invalid charset, or find a valid charset",
                "+ */",
                "+class CharsetDetectionResult {",
                "+    private boolean found = false;",
                "+    private Charset charset = null;",
                "+",
                "+    private CharsetDetectionResult() { /* default result: not found */}",
                "+",
                "+    static CharsetDetectionResult notFound() {",
                "+        return new CharsetDetectionResult();",
                "+    }",
                "+",
                "+    public boolean isFound() {",
                "+        return found;",
                "+    }",
                "+",
                "+    public void find(String charsetName) {",
                "+        this.found = true;",
                "+        charsetName = charsetName.trim();",
                "+        if (\"x-user-defined\".equals(charsetName)) charsetName = \"windows-1252\";",
                "+        this.charset = CharsetAliases.getCharsetByLabel(charsetName);",
                "+        // The specification states: If charset is a UTF-16 encoding, then set charset to UTF-8.",
                "+        if (UTF_16LE.equals(charset) || UTF_16BE.equals(charset)) charset = UTF_8;",
                "+    }",
                "+",
                "+    public Charset getCharset() {",
                "+        // the result may be null even if found is true, in the case there is a charset specified,",
                "+        // but it is invalid",
                "+        return charset;",
                "+    }",
                "+",
                "+    public void setCharset(Charset charset) {",
                "+        this.found = true;",
                "+        this.charset = charset;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "new file mode 100644",
                "index 000000000..8ce250c43",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "@@ -0,0 +1,74 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.util.HashSet;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+",
                "+import static org.apache.tika.parser.html.charsetdetector.PreScanner.getEncodingFromMeta;",
                "+",
                "+",
                "+/**",
                "+ * A class to process the attributes of an HTML meta tag in order to extract a character set.",
                "+ * The user should repeatedly call {@link #processAttribute} on each attributes of the tag,",
                "+ * then update its current detection result with {@link #updateDetectedCharset(CharsetDetectionResult)}",
                "+ * <p>",
                "+ * The algorithm implemented is meant to match the one described by the W3C here:",
                "+ * https://html.spec.whatwg.org/multipage/parsing.html#prescan-a-byte-stream-to-determine-its-encoding",
                "+ */",
                "+class MetaProcessor {",
                "+    private Set<String> attributeNames = new HashSet<>();",
                "+    private boolean gotPragma = false;",
                "+    private Boolean needPragma = null; // needPragma can be null, true, or false",
                "+    private CharsetDetectionResult detectionResult = CharsetDetectionResult.notFound();",
                "+",
                "+    void updateDetectedCharset(CharsetDetectionResult currentDetectionResult) {",
                "+        if (detectionResult.isFound() &&",
                "+                needPragma != null &&",
                "+                !(needPragma && !gotPragma)) {",
                "+            currentDetectionResult.setCharset(detectionResult.getCharset());",
                "+        }",
                "+    }",
                "+",
                "+    void processAttribute(Map.Entry<String, String> attribute) {",
                "+        // Ignore duplicate attributes",
                "+        if (attributeNames.contains(attribute.getKey())) return;",
                "+",
                "+        attributeNames.add(attribute.getKey());",
                "+",
                "+        // Handle charset-related attributes",
                "+        switch (attribute.getKey()) {",
                "+            case \"http-equiv\":",
                "+                if (attribute.getValue().equals(\"content-type\"))",
                "+                    gotPragma = true;",
                "+                break;",
                "+            case \"content\":",
                "+                String charsetName = getEncodingFromMeta(attribute.getValue());",
                "+                if (!detectionResult.isFound() && charsetName != null) {",
                "+                    detectionResult.find(charsetName);",
                "+                    needPragma = true;",
                "+                }",
                "+                break;",
                "+            case \"charset\":",
                "+                detectionResult.find(attribute.getValue());",
                "+                needPragma = false;",
                "+                break;",
                "+            default: // Ignore non-charset related attributes",
                "+        }",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "new file mode 100644",
                "index 000000000..a00aeb1a1",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "@@ -0,0 +1,270 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.io.BufferedInputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.StandardCharsets;",
                "+import java.util.AbstractMap;",
                "+import java.util.BitSet;",
                "+import java.util.Map;",
                "+import java.util.regex.Matcher;",
                "+import java.util.regex.Pattern;",
                "+",
                "+/**",
                "+ * A scanner meant to detect charset meta tags in a byte stream",
                "+ * See: https://html.spec.whatwg.org/multipage/parsing.html#prescan-a-byte-stream-to-determine-its-encoding",
                "+ */",
                "+class PreScanner {",
                "+",
                "+    private static final Pattern CHARSET_PATTERN = Pattern.compile(\"charset\\\\s*=\\\\s*([\\\"']?)([^\\\"'\\\\s;]+)\\\\1\");",
                "+    private static final byte[] COMMENT_START = {(byte) '<', (byte) '!', (byte) '-', (byte) '-'};",
                "+    private static final byte[] COMMENT_END = {(byte) '-', (byte) '-', (byte) '>'};",
                "+    private static final byte[] META_TAG_START = {(byte) '<', (byte) 'm', (byte) 'e', (byte) 't', (byte) 'a'};",
                "+    private static final byte SLASH = (byte) '/';",
                "+    private static final byte EQUAL = (byte) '=';",
                "+    private static final byte TAG_START = (byte) '<';",
                "+    private static final byte TAG_END = (byte) '>';",
                "+    private static final BitSet QUOTE = bitSet('\"', '\\'');",
                "+",
                "+    private static final BitSet WHITESPACE = bitSet(0x09, 0x0A, 0x0C, 0x0D, 0x0D, 0x20);",
                "+    private static final BitSet SPACE_OR_TAG_END = bitSet(WHITESPACE, TAG_END);",
                "+    private static final BitSet SPACE_OR_SLASH = bitSet(WHITESPACE, SLASH);",
                "+    private static final BitSet SPECIAL_TAGS = bitSet('!', '/', '?');",
                "+",
                "+    private static final byte[] UTF8_BOM = {(byte) 0xEF, (byte) 0xBB, (byte) 0xBF};",
                "+    private static final byte[] UTF16_BE_BOM = {(byte) 0xFE, (byte) 0xFF};",
                "+    private static final byte[] UTF16_LE_BOM = {(byte) 0xFF, (byte) 0xFE};",
                "+    private static final byte LOWER_A = (byte) 'a';",
                "+    private static final byte LOWER_Z = (byte) 'z';",
                "+    private static final byte UPPER_A = (byte) 'A';",
                "+    private static final byte UPPER_Z = (byte) 'Z';",
                "+    private BufferedInputStream stream;",
                "+    private CharsetDetectionResult detectedCharset = CharsetDetectionResult.notFound();",
                "+",
                "+    PreScanner(InputStream inputStream) {",
                "+        this.stream = new BufferedInputStream(inputStream);",
                "+    }",
                "+",
                "+    private static BitSet bitSet(int... bs) {",
                "+        BitSet bitSet = new BitSet(0xFF);",
                "+        for (int b : bs) bitSet.set(b);",
                "+        return bitSet;",
                "+    }",
                "+",
                "+    private static BitSet bitSet(BitSet base, int... bs) {",
                "+        BitSet bitSet = (BitSet) base.clone();",
                "+        for (int b : bs) bitSet.set(b);",
                "+        return bitSet;",
                "+    }",
                "+",
                "+    static String getEncodingFromMeta(String attributeValue) {",
                "+        Matcher matcher = CHARSET_PATTERN.matcher(attributeValue);",
                "+        if (!matcher.find()) return null;",
                "+        return matcher.group(2);",
                "+    }",
                "+",
                "+    private static boolean contains(BitSet bitSet, byte b) {",
                "+        return bitSet.get(b & 0xFF);",
                "+    }",
                "+",
                "+    Charset scan() {",
                "+        while (processAtLeastOneByte()) {",
                "+            if (detectedCharset.isFound()) {",
                "+                return detectedCharset.getCharset();",
                "+            }",
                "+        }",
                "+        return null;",
                "+    }",
                "+",
                "+    Charset detectBOM() {",
                "+        try {",
                "+            if (expect(UTF8_BOM)) return StandardCharsets.UTF_8;",
                "+            else if (expect(UTF16_BE_BOM)) return StandardCharsets.UTF_16BE;",
                "+            else if (expect(UTF16_LE_BOM)) return StandardCharsets.UTF_16LE;",
                "+        } catch (IOException e) { /* stream could not be read, also return null */ }",
                "+        return null;",
                "+    }",
                "+",
                "+    private boolean processAtLeastOneByte() {",
                "+        try {",
                "+            return processComment() ||",
                "+                    processMeta() ||",
                "+                    processTag() ||",
                "+                    processSpecialTag() ||",
                "+                    processAny();",
                "+        } catch (IOException e) {",
                "+            return false;",
                "+        }",
                "+    }",
                "+",
                "+    private boolean processAny() throws IOException {",
                "+        int read = stream.read();",
                "+        return read != -1;",
                "+    }",
                "+",
                "+    private boolean processTag() throws IOException {",
                "+        stream.mark(3);",
                "+        if (read() == TAG_START) {",
                "+            int read = stream.read();",
                "+            if (read == SLASH) read = stream.read();",
                "+            if ((LOWER_A <= read && read <= LOWER_Z) ||",
                "+                    (UPPER_A <= read && read <= UPPER_Z)) {",
                "+                do stream.mark(1);",
                "+                while (!contains(SPACE_OR_TAG_END, read()));",
                "+                stream.reset();",
                "+                while (getAttribute() != null) {/* ignore the attribute*/}",
                "+                return true;",
                "+            }",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    private boolean processSpecialTag() throws IOException {",
                "+        stream.mark(2);",
                "+        if (read() == TAG_START && contains(SPECIAL_TAGS, read())) {",
                "+            skipUntil(TAG_END);",
                "+            return true;",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    private boolean processMeta() throws IOException {",
                "+        stream.mark(6); // len(\"<meta \") == 6",
                "+        if (readCaseInsensitive(META_TAG_START) && contains(SPACE_OR_SLASH, read())) {",
                "+            MetaProcessor metaProcessor = new MetaProcessor();",
                "+            for (Map.Entry<String, String> attribute = getAttribute(); attribute != null; attribute = getAttribute()) {",
                "+                metaProcessor.processAttribute(attribute);",
                "+            }",
                "+            metaProcessor.updateDetectedCharset(detectedCharset);",
                "+            return true;",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    /**",
                "+     * Read an attribute from the stream",
                "+     *",
                "+     * @return the attribute as a Map.Entry, where the key is the attribute's name and",
                "+     * the value is the attribute's value. If there is no attribute, return null",
                "+     */",
                "+    private Map.Entry<String, String> getAttribute() throws IOException {",
                "+        String name = getAttributeName();",
                "+        if (name == null) return null;",
                "+",
                "+        if (!expect(EQUAL)) return new AbstractMap.SimpleEntry<>(name, \"\");",
                "+        skipAll(WHITESPACE);",
                "+",
                "+        String value = getAttributeValue();",
                "+        return new AbstractMap.SimpleEntry<>(name, value);",
                "+    }",
                "+",
                "+    private String getAttributeName() throws IOException {",
                "+        skipAll(SPACE_OR_SLASH);",
                "+        if (expect(TAG_END)) return null;",
                "+        StringBuilder name = new StringBuilder();",
                "+        while (!(peek() == EQUAL && name.length() > 0) &&",
                "+                !(peek() == TAG_END || peek() == SLASH) &&",
                "+                !skipAll(WHITESPACE)) {",
                "+            name.append((char) getLowerCaseChar());",
                "+        }",
                "+        return name.toString();",
                "+    }",
                "+",
                "+    private String getAttributeValue() throws IOException {",
                "+        StringBuilder value = new StringBuilder();",
                "+        stream.mark(1);",
                "+        byte quote = read();",
                "+        if (contains(QUOTE, quote)) {",
                "+            for (byte b = getLowerCaseChar(); b != quote; b = getLowerCaseChar()) {",
                "+                value.append((char) b);",
                "+            }",
                "+        } else {",
                "+            stream.reset();",
                "+            for (byte b = getLowerCaseChar(); !contains(SPACE_OR_TAG_END, b); b = getLowerCaseChar()) {",
                "+                value.append((char) b);",
                "+                stream.mark(1);",
                "+            }",
                "+            stream.reset(); // unread the space or tag end",
                "+        }",
                "+        return value.toString();",
                "+    }",
                "+",
                "+    private boolean skipAll(BitSet bitSet) throws IOException {",
                "+        boolean skipped = false;",
                "+        stream.mark(1);",
                "+        for (byte read = read(); contains(bitSet, read); read = read()) {",
                "+            skipped = true;",
                "+            stream.mark(1);",
                "+        }",
                "+        stream.reset();",
                "+        return skipped;",
                "+    }",
                "+",
                "+    private byte getLowerCaseChar() throws IOException {",
                "+        byte nextPoint = read();",
                "+        if (nextPoint >= 'A' && nextPoint <= 'Z') nextPoint += 0x20; // lowercase",
                "+        return nextPoint;",
                "+    }",
                "+",
                "+    private boolean processComment() throws IOException {",
                "+        if (!expect(COMMENT_START)) return false;",
                "+        if (!expect(TAG_END)) skipUntil(COMMENT_END);",
                "+        return true;",
                "+    }",
                "+",
                "+    private boolean expect(byte... expected) throws IOException {",
                "+        stream.mark(expected.length);",
                "+        for (byte b : expected) {",
                "+            byte read = read();",
                "+            if (read != b) {",
                "+                stream.reset();",
                "+                return false;",
                "+            }",
                "+        }",
                "+        return true;",
                "+    }",
                "+",
                "+    private void skipUntil(byte... expected) throws IOException {",
                "+        while (!expect(expected)) {",
                "+            if (stream.read() == -1) return;",
                "+        }",
                "+    }",
                "+",
                "+    private boolean readCaseInsensitive(byte... bs) throws IOException {",
                "+        for (byte b : bs) if (getLowerCaseChar() != b) return false;",
                "+        return true;",
                "+    }",
                "+",
                "+    private byte read() throws IOException {",
                "+        int r = stream.read();",
                "+        if (r == -1) throw new IOException();",
                "+        return (byte) r;",
                "+    }",
                "+",
                "+    private byte peek() throws IOException {",
                "+        stream.mark(1);",
                "+        byte b = read();",
                "+        stream.reset();",
                "+        return b;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "new file mode 100644",
                "index 000000000..f9d1a1bbf",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "@@ -0,0 +1,104 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import org.apache.commons.io.input.BoundedInputStream;",
                "+import org.apache.tika.config.Field;",
                "+import org.apache.tika.detect.EncodingDetector;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.mime.MediaType;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.nio.charset.Charset;",
                "+",
                "+import static org.apache.tika.parser.html.charsetdetector.CharsetAliases.getCharsetByLabel;",
                "+",
                "+/**",
                "+ * An encoding detector that tries to respect the spirit of the HTML spec",
                "+ * part 12.2.3 \"The input byte stream\", or at least the part that is compatible with",
                "+ * the implementation of tika.",
                "+ * <p>",
                "+ * https://html.spec.whatwg.org/multipage/parsing.html#the-input-byte-stream",
                "+ * <p>",
                "+ * If a resource was fetched over HTTP, then HTTP headers should be added to tika metadata",
                "+ * when using {@link #detect}, especially {@link Metadata#CONTENT_TYPE}, as it may contain charset information.",
                "+ * <p>",
                "+ * This encoding detector may return null if no encoding is detected.",
                "+ * It is meant to be used inside a {@link org.apache.tika.detect.CompositeDetector}.",
                "+ * For instance:",
                "+ * <pre> {@code",
                "+ *     EncodingDetector detector = new CompositeDetector(",
                "+ *         new StandardHtmlEncodingDetector(),",
                "+ *         new Icu4jEncodingDetector()",
                "+ *     );",
                "+ * }</pre>",
                "+ * <p>",
                "+ */",
                "+public final class StandardHtmlEncodingDetector implements EncodingDetector {",
                "+    private static final int META_TAG_BUFFER_SIZE = 8192;",
                "+",
                "+    @Field",
                "+    private int markLimit = META_TAG_BUFFER_SIZE;",
                "+",
                "+    /**",
                "+     * Extracts a charset from a Content-Type HTTP header.",
                "+     *",
                "+     * @param metadata parser metadata",
                "+     * @return a charset if there is one specified, or null",
                "+     */",
                "+    private static Charset charsetFromContentType(Metadata metadata) {",
                "+        String contentType = metadata.get(Metadata.CONTENT_TYPE);",
                "+        MediaType mediatype = MediaType.parse(contentType);",
                "+        if (mediatype == null) return null;",
                "+        String charsetLabel = mediatype.getParameters().get(\"charset\");",
                "+        return getCharsetByLabel(charsetLabel);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "+        int limit = getMarkLimit();",
                "+        input.mark(limit);",
                "+        // Never read more than the first META_TAG_BUFFER_SIZE bytes",
                "+        InputStream limitedStream = new BoundedInputStream(input, limit);",
                "+        PreScanner preScanner = new PreScanner(limitedStream);",
                "+",
                "+        // The order of priority for detection is:",
                "+        // 1. Byte Order Mark",
                "+        Charset detectedCharset = preScanner.detectBOM();",
                "+        // 2. Transport-level information (Content-Type HTTP header)",
                "+        if (detectedCharset == null) detectedCharset = charsetFromContentType(metadata);",
                "+        // 3. HTML <meta> tag",
                "+        if (detectedCharset == null) detectedCharset = preScanner.scan();",
                "+",
                "+        input.reset();",
                "+        return detectedCharset;",
                "+    }",
                "+",
                "+    public int getMarkLimit() {",
                "+        return markLimit;",
                "+    }",
                "+",
                "+    /**",
                "+     * How far into the stream to read for charset detection.",
                "+     * Default is 8192.",
                "+     */",
                "+    @Field",
                "+    public void setMarkLimit(int markLimit) {",
                "+        this.markLimit = markLimit;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "new file mode 100644",
                "index 000000000..32b96cf4c",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "@@ -0,0 +1,65 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector.charsets;",
                "+",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.CharBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.CharsetDecoder;",
                "+import java.nio.charset.CharsetEncoder;",
                "+import java.nio.charset.CoderResult;",
                "+",
                "+/**",
                "+ * An implementation of the standard \"replacement\" charset defined by the W3C.",
                "+ * See: https://encoding.spec.whatwg.org/#replacement",
                "+ */",
                "+public class ReplacementCharset extends Charset {",
                "+",
                "+    public ReplacementCharset() {",
                "+        super(\"replacement\", null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean contains(Charset cs) {",
                "+        return cs.equals(this);",
                "+    }",
                "+",
                "+    public CharsetDecoder newDecoder() {",
                "+        return new CharsetDecoder(this, Float.MIN_VALUE, 1) {",
                "+            private boolean replacementErrorReturned = false;",
                "+",
                "+            @Override",
                "+            protected CoderResult decodeLoop(ByteBuffer in, CharBuffer out) {",
                "+                if (in.hasRemaining() && !replacementErrorReturned) {",
                "+                    replacementErrorReturned = true;",
                "+                    return CoderResult.malformedForLength(in.remaining());",
                "+                }",
                "+                in.position(in.limit());",
                "+                return CoderResult.UNDERFLOW;",
                "+            }",
                "+",
                "+            @Override",
                "+            protected void implReset() {",
                "+                replacementErrorReturned = false;",
                "+            }",
                "+        };",
                "+    }",
                "+",
                "+    public CharsetEncoder newEncoder() {",
                "+        throw new UnsupportedOperationException(\"This charset does not support encoding\");",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "new file mode 100644",
                "index 000000000..650694a6e",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "@@ -0,0 +1,57 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector.charsets;",
                "+",
                "+import org.apache.commons.lang.NotImplementedException;",
                "+",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.CharBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.CharsetDecoder;",
                "+import java.nio.charset.CharsetEncoder;",
                "+import java.nio.charset.CoderResult;",
                "+import java.nio.charset.StandardCharsets;",
                "+",
                "+public class XUserDefinedCharset extends Charset {",
                "+",
                "+    public XUserDefinedCharset() {",
                "+        super(\"x-user-defined\", null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean contains(Charset cs) {",
                "+        return cs.equals(StandardCharsets.US_ASCII);",
                "+    }",
                "+",
                "+    public CharsetDecoder newDecoder() {",
                "+        return new CharsetDecoder(this, 1, 1) {",
                "+            @Override",
                "+            protected CoderResult decodeLoop(ByteBuffer in, CharBuffer out) {",
                "+                while (true) {",
                "+                    if (!in.hasRemaining()) return CoderResult.UNDERFLOW;",
                "+                    if (!out.hasRemaining()) return CoderResult.OVERFLOW;",
                "+                    byte b = in.get();",
                "+                    out.append((char) ((b >= 0) ? b : 0xF700 + (b & 0xFF)));",
                "+                }",
                "+            }",
                "+        };",
                "+    }",
                "+",
                "+    public CharsetEncoder newEncoder() {",
                "+        throw new NotImplementedException(\"Encoding to x-user-defined is not implemented\");",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e4f0fe5184db47724c6bf366a12ea0868972a83f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536167668,
            "hunks": 5,
            "message": "Use DateUtils to format dates to strings, rather than relying on explicit/implicit toString calls",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java",
                "index 27b80407b..268dd935f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java",
                "@@ -50,2 +50,3 @@ import org.apache.tika.parser.ParseContext;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "+import org.apache.tika.utils.DateUtils;",
                " import org.opengis.metadata.Identifier;",
                "@@ -229,5 +230,7 @@ public class GeographicInformationParser extends AbstractParser{",
                "             ArrayList<CitationDate> dateArrayList= (ArrayList<CitationDate>) i.getCitation().getDates();",
                "-            for (CitationDate d:dateArrayList){",
                "-                if(d.getDateType()!=null)",
                "-                    metadata.add(\"CitationDate \",d.getDateType().name()+\"-->\"+d.getDate());",
                "+            for (CitationDate d:dateArrayList) {",
                "+                if (d.getDateType()!=null) {",
                "+                    String date = DateUtils.formatDate(d.getDate());",
                "+                    metadata.add(\"CitationDate \",d.getDateType().name()+\"-->\"+date);",
                "+                }",
                "             }",
                "@@ -284,5 +287,7 @@ public class GeographicInformationParser extends AbstractParser{",
                "                 ArrayList<CitationDate>citationDates= (ArrayList<CitationDate>) k.getThesaurusName().getDates();",
                "-                for(CitationDate cd:citationDates) {",
                "-                   if(cd.getDateType()!=null)",
                "-                        metadata.add(\"ThesaurusNameDate \",cd.getDateType().name() +\"-->\" + cd.getDate());",
                "+                for (CitationDate cd:citationDates) {",
                "+                   if (cd.getDateType()!=null) {",
                "+                       String date = DateUtils.formatDate(cd.getDate());",
                "+                       metadata.add(\"ThesaurusNameDate \",cd.getDateType().name() +\"-->\" + date);",
                "+                   }",
                "                 }",
                "@@ -317,5 +322,7 @@ public class GeographicInformationParser extends AbstractParser{",
                "                         }",
                "-                        for(CitationDate cd:((DefaultGeographicDescription) g).getGeographicIdentifier().getAuthority().getDates()){",
                "-                            if(cd.getDateType()!=null && cd.getDate()!=null)",
                "-                                metadata.add(\"GeographicIdentifierAuthorityDate \",cd.getDateType().name()+\" \"+cd.getDate().toString());",
                "+                        for (CitationDate cd:((DefaultGeographicDescription) g).getGeographicIdentifier().getAuthority().getDates()){",
                "+                            if (cd.getDateType()!=null && cd.getDate()!=null) {",
                "+                                String date = DateUtils.formatDate(cd.getDate());",
                "+                                metadata.add(\"GeographicIdentifierAuthorityDate \",cd.getDateType().name()+\" \"+date);",
                "+                            }",
                "                         }",
                "@@ -365,4 +372,6 @@ public class GeographicInformationParser extends AbstractParser{",
                "         for(CitationDate c:citationDateList){",
                "-            if(c.getDateType()!=null)",
                "-                metadata.add(\"DateInfo \",c.getDateType().name()+\" \"+c.getDate());",
                "+            if(c.getDateType()!=null) {",
                "+                String date = DateUtils.formatDate(c.getDate());",
                "+                metadata.add(\"DateInfo \",c.getDateType().name()+\" \"+date);",
                "+            }",
                "         }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "53c8434f497795885ff129e17440881f059c1624",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536177500,
            "hunks": 0,
            "message": "Merge branch 'master' of https://github.com/apache/tika",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "719826a984f29c7a0847efd3436647c203c5be3d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534249532,
            "hunks": 3,
            "message": "fix doubled junit dependency in tika-nlp",
            "diff": [
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index c2798755c..61ec0abf6 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -47,7 +47,2 @@",
                "     </dependency>",
                "-    <dependency>",
                "-      <groupId>junit</groupId>",
                "-      <artifactId>junit</artifactId>",
                "-      <scope>test</scope>",
                "-    </dependency>",
                "@@ -211,6 +206,2 @@",
                "     <!-- Test dependencies -->",
                "-    <dependency>",
                "-      <groupId>junit</groupId>",
                "-      <artifactId>junit</artifactId>",
                "-    </dependency>",
                "     <dependency>",
                "@@ -226,3 +217,8 @@",
                "     </dependency>",
                "-        ",
                "+    <dependency>",
                "+      <groupId>junit</groupId>",
                "+      <artifactId>junit</artifactId>",
                "+      <scope>test</scope>",
                "+    </dependency>",
                "+",
                "   </dependencies>"
            ],
            "changed_files": [
                "tika-nlp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b02d96bb928575328c4f83af16608343c7a9fc38",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1534432688,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "69555a98e56f4fef62abb91bee48bad27c58a6ce",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1535023401,
            "hunks": 2,
            "message": "Use try-with-resources Replace try statements that close a resource in the finally block with a try-with-resources statement [1]. This commit was created automatically by Diffblue refactorings (https://www.diffblue.com/). [1] https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "index e84023ccc..9897e4b27 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
                "@@ -64,5 +64,4 @@ public class Pkcs7Parser extends AbstractParser {",
                "                     new JcaDigestCalculatorProviderBuilder().setProvider(\"BC\").build();",
                "-            CMSSignedDataParser parser =",
                "-                    new CMSSignedDataParser(digestCalculatorProvider, new CloseShieldInputStream(stream));",
                "-            try {",
                "+            try (CMSSignedDataParser parser = new CMSSignedDataParser(digestCalculatorProvider,",
                "+                    new CloseShieldInputStream(stream))) {",
                "                 CMSTypedStream content = parser.getSignedContent();",
                "@@ -76,4 +75,2 @@ public class Pkcs7Parser extends AbstractParser {",
                "                 }",
                "-            } finally {",
                "-                parser.close();",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "962c0152f3e89a9b2002b4f7436ffea78e0e21b0",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537295498,
            "hunks": 1,
            "message": "upgrade to forbiddenapis 2.6 https://github.com/apache/tika/pull/249 via Uwe Schindler",
            "diff": [
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 6c816185e..07a8b2163 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -331,4 +331,3 @@",
                "         <artifactId>forbiddenapis</artifactId>",
                "-        <!-- if this version contains commons-io 2.6, remove hard-coded commons-io version below -->",
                "-        <version>2.5</version>",
                "+        <version>2.6</version>",
                "         <configuration>"
            ],
            "changed_files": [
                "tika-parent/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "657046d0c1bb230aa956e916cbfe7ba2904c9e78",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536156336,
            "hunks": 51,
            "message": "NPOIFS->POIFS and add jackcess shim",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index c7d28fdbe..9289116e3 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -38,3 +38,3 @@",
                "         <lucene.version>7.4.0</lucene.version>",
                "-        <poi.version>3.17</poi.version>",
                "+        <poi.version>4.0.0</poi.version>",
                "     </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index f279f32e3..9c6437e1e 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -37,3 +37,3 @@",
                "   <properties>",
                "-    <poi.version>4.0.0-SNAPSHOT</poi.version>",
                "+    <poi.version>4.0.0</poi.version>",
                "     <!-- NOTE: sync codec version with POI -->",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "index ff5971aab..0dd86ba92 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "@@ -66,3 +66,3 @@ import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "@@ -141,3 +141,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml,",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml,",
                "             Locale locale) throws IOException, SAXException, TikaException {",
                "@@ -275,3 +275,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "          */",
                "-        public void processFile(NPOIFSFileSystem filesystem, boolean listenForAllRecords)",
                "+        public void processFile(POIFSFileSystem filesystem, boolean listenForAllRecords)",
                "                 throws IOException, SAXException, TikaException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "index 9990f3008..5095709f4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "@@ -47,3 +47,3 @@ import org.apache.poi.hslf.usermodel.HSLFTextShape;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.sl.usermodel.Comment;",
                "@@ -70,3 +70,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "@@ -272,5 +272,5 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             if (objData.getExOleObjStg().getPersistId() == persistId) {",
                "-                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getInputStream())) {",
                "+                try (POIFSFileSystem poifsFileSystem = new POIFSFileSystem(objData.getInputStream())) {",
                "                     try {",
                "-                        OfficeParser.extractMacros(npoifsFileSystem, xhtml,",
                "+                        OfficeParser.extractMacros(poifsFileSystem, xhtml,",
                "                                 EmbeddedDocumentUtil.getEmbeddedDocumentExtractor(context));",
                "@@ -496,6 +496,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                                 || mediaType.equals(\"application/x-tika-msoffice\")) {",
                "-                            NPOIFSFileSystem npoifs = null;",
                "+                            POIFSFileSystem poifs = null;",
                "                             try {",
                "-                                npoifs = new NPOIFSFileSystem(new CloseShieldInputStream(stream));",
                "+                                poifs = new POIFSFileSystem(new CloseShieldInputStream(stream));",
                "                             } catch (RuntimeException e) {",
                "@@ -504,6 +504,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                             try {",
                "-                                handleEmbeddedOfficeDoc(npoifs.getRoot(), objID, xhtml);",
                "+                                handleEmbeddedOfficeDoc(poifs.getRoot(), objID, xhtml);",
                "                             } finally {",
                "-                                if (npoifs != null) {",
                "-                                    npoifs.close();",
                "+                                if (poifs != null) {",
                "+                                    poifs.close();",
                "                                 }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "new file mode 100644",
                "index 000000000..b09f19d59",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "@@ -0,0 +1,268 @@",
                "+/*",
                "+Copyright (c) 2013 James Ahlborn",
                "+",
                "+Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+you may not use this file except in compliance with the License.",
                "+You may obtain a copy of the License at",
                "+",
                "+http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+Unless required by applicable law or agreed to in writing, software",
                "+distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+See the License for the specific language governing permissions and",
                "+limitations under the License.",
                "+*/",
                "+",
                "+package org.apache.tika.parser.microsoft;",
                "+",
                "+import com.healthmarketscience.jackcess.RuntimeIOException;",
                "+import com.healthmarketscience.jackcess.impl.ByteUtil;",
                "+import com.healthmarketscience.jackcess.impl.CustomToStringStyle;",
                "+import com.healthmarketscience.jackcess.util.MemFileChannel;",
                "+import com.healthmarketscience.jackcess.util.OleBlob;",
                "+import org.apache.commons.lang.builder.ToStringBuilder;",
                "+import org.apache.poi.poifs.filesystem.DirectoryEntry;",
                "+import org.apache.poi.poifs.filesystem.DocumentEntry;",
                "+import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "+",
                "+import java.io.FileNotFoundException;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+import java.io.UnsupportedEncodingException;",
                "+import java.net.URLDecoder;",
                "+import java.net.URLEncoder;",
                "+import java.nio.ByteBuffer;",
                "+import java.util.ArrayList;",
                "+import java.util.Iterator;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * Temporary copy/paste from Jackcess to allow upgrade to POI 4.0.0.",
                "+ * This class will be removed once POI 4.0.0 is released and jackcess",
                "+ * updates to the most recent version of POI.",
                "+ * @deprecated -- this class will be removed in Tika >= 1.20",
                "+ */",
                "+@Deprecated",
                "+class JackcessCompoundOleUtil implements JackcessOleUtil.CompoundPackageFactory {",
                "+    private static final String ENTRY_NAME_CHARSET = \"UTF-8\";",
                "+    private static final String ENTRY_SEPARATOR = \"/\";",
                "+    private static final String CONTENTS_ENTRY = \"CONTENTS\";",
                "+",
                "+    static {",
                "+        // force a poi class to be loaded to ensure that when this class is",
                "+        // loaded, we know that the poi classes are available",
                "+        POIFSFileSystem.class.getName();",
                "+    }",
                "+",
                "+    public JackcessCompoundOleUtil() {",
                "+    }",
                "+",
                "+    /**",
                "+     * Creates a nes CompoundContent for the given blob information.",
                "+     */",
                "+    public JackcessOleUtil.ContentImpl createCompoundPackageContent(",
                "+            JackcessOleUtil.OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+            ByteBuffer blobBb, int dataBlockLen) {",
                "+        return new CompoundContentImpl(blob, prettyName, className, typeName,",
                "+                blobBb.position(), dataBlockLen);",
                "+    }",
                "+",
                "+    /**",
                "+     * Gets a DocumentEntry from compound storage based on a fully qualified,",
                "+     * encoded entry name.",
                "+     *",
                "+     * @param entryName fully qualified, encoded entry name",
                "+     * @param dir       root directory of the compound storage",
                "+     * @return the relevant DocumentEntry",
                "+     * @throws FileNotFoundException if the entry does not exist",
                "+     * @throws IOException           if some other io error occurs",
                "+     */",
                "+    public static DocumentEntry getDocumentEntry(String entryName,",
                "+                                                 DirectoryEntry dir)",
                "+            throws IOException {",
                "+        // split entry name into individual components and decode them",
                "+        List<String> entryNames = new ArrayList<String>();",
                "+        for (String str : entryName.split(ENTRY_SEPARATOR)) {",
                "+            if (str.length() == 0) {",
                "+                continue;",
                "+            }",
                "+            entryNames.add(decodeEntryName(str));",
                "+        }",
                "+",
                "+        DocumentEntry entry = null;",
                "+        Iterator<String> iter = entryNames.iterator();",
                "+        while (iter.hasNext()) {",
                "+            org.apache.poi.poifs.filesystem.Entry tmpEntry = dir.getEntry(iter.next());",
                "+            if (tmpEntry instanceof DirectoryEntry) {",
                "+                dir = (DirectoryEntry) tmpEntry;",
                "+            } else if (!iter.hasNext() && (tmpEntry instanceof DocumentEntry)) {",
                "+                entry = (DocumentEntry) tmpEntry;",
                "+            } else {",
                "+                break;",
                "+            }",
                "+        }",
                "+",
                "+        if (entry == null) {",
                "+            throw new FileNotFoundException(\"Could not find document \" + entryName);",
                "+        }",
                "+",
                "+        return entry;",
                "+    }",
                "+",
                "+    private static String encodeEntryName(String name) {",
                "+        try {",
                "+            return URLEncoder.encode(name, ENTRY_NAME_CHARSET);",
                "+        } catch (UnsupportedEncodingException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    private static String decodeEntryName(String name) {",
                "+        try {",
                "+            return URLDecoder.decode(name, ENTRY_NAME_CHARSET);",
                "+        } catch (UnsupportedEncodingException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "+    }",
                "+",
                "+    private static final class CompoundContentImpl",
                "+            extends JackcessOleUtil.EmbeddedPackageContentImpl",
                "+            implements OleBlob.CompoundContent {",
                "+        private POIFSFileSystem _fs;",
                "+",
                "+        private CompoundContentImpl(",
                "+                JackcessOleUtil.OleBlobImpl blob, String prettyName, String className,",
                "+                String typeName, int position, int length) {",
                "+            super(blob, prettyName, className, typeName, position, length);",
                "+        }",
                "+",
                "+        public OleBlob.ContentType getType() {",
                "+            return OleBlob.ContentType.COMPOUND_STORAGE;",
                "+        }",
                "+",
                "+        private POIFSFileSystem getFileSystem() throws IOException {",
                "+            if (_fs == null) {",
                "+                _fs = new POIFSFileSystem(MemFileChannel.newChannel(getStream(), \"r\"));",
                "+            }",
                "+            return _fs;",
                "+        }",
                "+",
                "+        public Iterator<Entry> iterator() {",
                "+            try {",
                "+                return getEntries(new ArrayList<Entry>(), getFileSystem().getRoot(),",
                "+                        ENTRY_SEPARATOR).iterator();",
                "+            } catch (IOException e) {",
                "+                throw new RuntimeIOException(e);",
                "+            }",
                "+        }",
                "+",
                "+        public EntryImpl getEntry(String entryName) throws IOException {",
                "+            return new EntryImpl(entryName,",
                "+                    getDocumentEntry(entryName, getFileSystem().getRoot()));",
                "+        }",
                "+",
                "+        public boolean hasContentsEntry() throws IOException {",
                "+            return getFileSystem().getRoot().hasEntry(CONTENTS_ENTRY);",
                "+        }",
                "+",
                "+        public EntryImpl getContentsEntry() throws IOException {",
                "+            return getEntry(CONTENTS_ENTRY);",
                "+        }",
                "+",
                "+        private List<Entry> getEntries(List<Entry> entries, DirectoryEntry dir,",
                "+                                       String prefix) {",
                "+            for (org.apache.poi.poifs.filesystem.Entry entry : dir) {",
                "+                if (entry instanceof DirectoryEntry) {",
                "+                    // .. recurse into this directory",
                "+                    getEntries(entries, (DirectoryEntry) entry, prefix + ENTRY_SEPARATOR);",
                "+                } else if (entry instanceof DocumentEntry) {",
                "+                    // grab the entry name/detils",
                "+                    DocumentEntry de = (DocumentEntry) entry;",
                "+                    String entryName = prefix + encodeEntryName(entry.getName());",
                "+                    entries.add(new EntryImpl(entryName, de));",
                "+                }",
                "+            }",
                "+            return entries;",
                "+        }",
                "+",
                "+        @Override",
                "+        public void close() {",
                "+            ByteUtil.closeQuietly(_fs);",
                "+            _fs = null;",
                "+            super.close();",
                "+        }",
                "+",
                "+        @Override",
                "+        public String toString() {",
                "+            ToStringBuilder sb = toString(CustomToStringStyle.builder(this));",
                "+",
                "+            try {",
                "+                sb.append(\"hasContentsEntry\", hasContentsEntry());",
                "+                sb.append(\"entries\", getEntries(new ArrayList<Entry>(),",
                "+                        getFileSystem().getRoot(),",
                "+                        ENTRY_SEPARATOR));",
                "+            } catch (IOException e) {",
                "+                sb.append(\"entries\", \"<\" + e + \">\");",
                "+            }",
                "+",
                "+            return sb.toString();",
                "+        }",
                "+",
                "+        private final class EntryImpl implements OleBlob.CompoundContent.Entry {",
                "+            private final String _name;",
                "+            private final DocumentEntry _docEntry;",
                "+",
                "+            private EntryImpl(String name, DocumentEntry docEntry) {",
                "+                _name = name;",
                "+                _docEntry = docEntry;",
                "+            }",
                "+",
                "+            public OleBlob.ContentType getType() {",
                "+                return OleBlob.ContentType.UNKNOWN;",
                "+            }",
                "+",
                "+            public String getName() {",
                "+                return _name;",
                "+            }",
                "+",
                "+            public CompoundContentImpl getParent() {",
                "+                return CompoundContentImpl.this;",
                "+            }",
                "+",
                "+            public JackcessOleUtil.OleBlobImpl getBlob() {",
                "+                return getParent().getBlob();",
                "+            }",
                "+",
                "+            public long length() {",
                "+                return _docEntry.getSize();",
                "+            }",
                "+",
                "+            public InputStream getStream() throws IOException {",
                "+                return new DocumentInputStream(_docEntry);",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                InputStream in = null;",
                "+                try {",
                "+                    ByteUtil.copy(in = getStream(), out);",
                "+                } finally {",
                "+                    ByteUtil.closeQuietly(in);",
                "+                }",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return CustomToStringStyle.valueBuilder(this)",
                "+                        .append(\"name\", _name)",
                "+                        .append(\"length\", length())",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+    }",
                "+}",
                "+",
                "+",
                "+",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "index bf5c5d0cc..3a10346b2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "@@ -43,3 +43,3 @@ import com.healthmarketscience.jackcess.query.Query;",
                " import com.healthmarketscience.jackcess.util.OleBlob;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -304,4 +304,5 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "+",
                "     private void handleOLE(Row row, String cName, XHTMLContentHandler xhtml) throws IOException, SAXException, TikaException {",
                "-        OleBlob blob = row.getBlob(cName);",
                "+        OleBlob blob = getBlob(row, cName);",
                "         //lifted shamelessly from Jackcess's OleBlobTest",
                "@@ -369,5 +370,17 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "+    /*",
                "+       Temporary work around until POI 4.0.0 is released and jackcess upgrades",
                "+       This is copy/pasted from jackcess",
                "+    */",
                "+    private OleBlob getBlob(Row row, String cName) {",
                "+        byte[] bytes = row.getBytes(cName);",
                "+        if (bytes == null) {",
                "+            return null;",
                "+        }",
                "+        return JackcessOleUtil.parseBlob(bytes);",
                "+    }",
                "+",
                "     private void handleCompoundContent(OleBlob.CompoundContent cc, XHTMLContentHandler xhtml) throws IOException, SAXException, TikaException {",
                "         InputStream is = null;",
                "-        NPOIFSFileSystem nfs = null;",
                "+        POIFSFileSystem fileSystem = null;",
                "         try {",
                "@@ -381,3 +394,3 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "             try {",
                "-                nfs = new NPOIFSFileSystem(is);",
                "+                fileSystem = new POIFSFileSystem(is);",
                "             } catch (Exception e) {",
                "@@ -387,8 +400,8 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "-            handleEmbeddedOfficeDoc(nfs.getRoot(), xhtml);",
                "+            handleEmbeddedOfficeDoc(fileSystem.getRoot(), xhtml);",
                "         } finally {",
                "-            if (nfs != null) {",
                "+            if (fileSystem != null) {",
                "                 try {",
                "-                    nfs.close();",
                "+                    fileSystem.close();",
                "                 } catch (IOException e) {",
                "@@ -416,2 +429,3 @@ class JackcessExtractor extends AbstractPOIFSExtractor {",
                "     }",
                "+",
                " }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "new file mode 100644",
                "index 000000000..a1432d641",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "@@ -0,0 +1,813 @@",
                "+/*",
                "+Copyright (c) 2013 James Ahlborn",
                "+",
                "+Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+you may not use this file except in compliance with the License.",
                "+You may obtain a copy of the License at",
                "+",
                "+    http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+Unless required by applicable law or agreed to in writing, software",
                "+distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+See the License for the specific language governing permissions and",
                "+limitations under the License.",
                "+*/",
                "+",
                "+package org.apache.tika.parser.microsoft;",
                "+",
                "+import java.io.ByteArrayInputStream;",
                "+import java.io.Closeable;",
                "+import java.io.FileInputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.sql.Blob;",
                "+import java.sql.SQLException;",
                "+import java.sql.SQLFeatureNotSupportedException;",
                "+import java.text.Normalizer;",
                "+import java.util.EnumSet;",
                "+import java.util.Set;",
                "+import java.util.regex.Pattern;",
                "+",
                "+import com.healthmarketscience.jackcess.DataType;",
                "+import com.healthmarketscience.jackcess.util.OleBlob;",
                "+import static com.healthmarketscience.jackcess.util.OleBlob.*;",
                "+import org.apache.commons.lang.builder.ToStringBuilder;",
                "+",
                "+import com.healthmarketscience.jackcess.impl.ByteUtil;",
                "+import com.healthmarketscience.jackcess.impl.CustomToStringStyle;",
                "+import com.healthmarketscience.jackcess.impl.PageChannel;",
                "+",
                "+/**",
                "+ * Utility code for working with OLE data.",
                "+ * Temporary workaround until POI 4.0.0 is released and Jackcess is updated",
                "+ *",
                "+ *",
                "+ * @author James Ahlborn",
                "+ * @usage _advanced_class_",
                "+ * @deprecated this class will be removed in Tika >= 1.20",
                "+ */",
                "+@Deprecated",
                "+class JackcessOleUtil {",
                "+",
                "+",
                "+        /**",
                "+         * Interface used to allow optional inclusion of the poi library for working",
                "+         * with compound ole data.",
                "+         */",
                "+        interface CompoundPackageFactory",
                "+        {",
                "+            public ContentImpl createCompoundPackageContent(",
                "+                    OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+                    ByteBuffer blobBb, int dataBlockLen);",
                "+        }",
                "+",
                "+        private static final int PACKAGE_SIGNATURE = 0x1C15;",
                "+        private static final Charset OLE_CHARSET = Charset.forName(\"US-ASCII\");",
                "+        private static final Charset OLE_UTF_CHARSET = Charset.forName(\"UTF-16LE\");",
                "+        private static final byte[] COMPOUND_STORAGE_SIGNATURE =",
                "+                {(byte)0xd0,(byte)0xcf,(byte)0x11,(byte)0xe0,",
                "+                        (byte)0xa1,(byte)0xb1,(byte)0x1a,(byte)0xe1};",
                "+        private static final String SIMPLE_PACKAGE_TYPE = \"Package\";",
                "+        private static final int PACKAGE_OBJECT_TYPE = 0x02;",
                "+        private static final int OLE_VERSION = 0x0501;",
                "+        private static final int OLE_FORMAT = 0x02;",
                "+        private static final int PACKAGE_STREAM_SIGNATURE = 0x02;",
                "+        private static final int PS_EMBEDDED_FILE = 0x030000;",
                "+        private static final int PS_LINKED_FILE = 0x010000;",
                "+        private static final Set<ContentType> WRITEABLE_TYPES = EnumSet.of(",
                "+                ContentType.LINK, ContentType.SIMPLE_PACKAGE, ContentType.OTHER);",
                "+        private static final byte[] NO_DATA = new byte[0];",
                "+        private static final int LINK_HEADER = 0x01;",
                "+        private static final byte[] PACKAGE_FOOTER = {",
                "+                0x01, 0x05, 0x00, 0x00, 0x00, 0x00,",
                "+                0x00, 0x00, 0x01, (byte)0xAD, 0x05, (byte)0xFE",
                "+        };",
                "+",
                "+        // regex pattern which matches all the crazy extra stuff in unicode",
                "+        private static final Pattern UNICODE_ACCENT_PATTERN =",
                "+                Pattern.compile(\"[\\\\p{InCombiningDiacriticalMarks}\\\\p{IsLm}\\\\p{IsSk}]+\");",
                "+",
                "+        private static final CompoundPackageFactory COMPOUND_FACTORY;",
                "+",
                "+        static {",
                "+            CompoundPackageFactory compoundFactory = null;",
                "+            try {",
                "+                compoundFactory = (CompoundPackageFactory)",
                "+                        Class.forName(\"org.apache.tika.parser.microsoft.JackcessCompoundOleUtil\")",
                "+                                .newInstance();",
                "+            } catch(Throwable t) {",
                "+                // must not have poi, will load compound ole data as \"other\"",
                "+            }",
                "+            COMPOUND_FACTORY = compoundFactory;",
                "+        }",
                "+",
                "+        /**",
                "+         * Parses an access database blob structure and returns an appropriate",
                "+         * OleBlob instance.",
                "+         */",
                "+        public static OleBlob parseBlob(byte[] bytes) {",
                "+            return new OleBlobImpl(bytes);",
                "+        }",
                "+",
                "+        /**",
                "+         * Creates a new OlBlob instance using the given information.",
                "+         */",
                "+        public static OleBlob createBlob(Builder oleBuilder)",
                "+                throws IOException",
                "+        {",
                "+            try {",
                "+",
                "+                if(!WRITEABLE_TYPES.contains(oleBuilder.getType())) {",
                "+                    throw new IllegalArgumentException(",
                "+                            \"Cannot currently create ole values of type \" +",
                "+                                    oleBuilder.getType());",
                "+                }",
                "+",
                "+                long contentLen = oleBuilder.getContentLength();",
                "+                byte[] contentBytes = oleBuilder.getBytes();",
                "+                InputStream contentStream = oleBuilder.getStream();",
                "+                byte[] packageStreamHeader = NO_DATA;",
                "+                byte[] packageStreamFooter = NO_DATA;",
                "+",
                "+                switch(oleBuilder.getType()) {",
                "+                    case LINK:",
                "+                        packageStreamHeader = writePackageStreamHeader(oleBuilder);",
                "+",
                "+                        // link \"content\" is file path",
                "+                        contentBytes = getZeroTermStrBytes(oleBuilder.getFilePath());",
                "+                        contentLen = contentBytes.length;",
                "+                        break;",
                "+",
                "+                    case SIMPLE_PACKAGE:",
                "+                        packageStreamHeader = writePackageStreamHeader(oleBuilder);",
                "+                        packageStreamFooter = writePackageStreamFooter(oleBuilder);",
                "+                        break;",
                "+",
                "+                    case OTHER:",
                "+                        // nothing more to do",
                "+                        break;",
                "+                    default:",
                "+                        throw new RuntimeException(\"unexpected type \" + oleBuilder.getType());",
                "+                }",
                "+",
                "+                long payloadLen = packageStreamHeader.length + packageStreamFooter.length +",
                "+                        contentLen;",
                "+                byte[] packageHeader = writePackageHeader(oleBuilder, payloadLen);",
                "+",
                "+                long totalOleLen = packageHeader.length + PACKAGE_FOOTER.length +",
                "+                        payloadLen;",
                "+                if(totalOleLen > DataType.OLE.getMaxSize()) {",
                "+                    throw new IllegalArgumentException(\"Content size of \" + totalOleLen +",
                "+                            \" is too large for ole column\");",
                "+                }",
                "+",
                "+                byte[] oleBytes = new byte[(int)totalOleLen];",
                "+                ByteBuffer bb = PageChannel.wrap(oleBytes);",
                "+                bb.put(packageHeader);",
                "+                bb.put(packageStreamHeader);",
                "+",
                "+                if(contentLen > 0L) {",
                "+                    if(contentBytes != null) {",
                "+                        bb.put(contentBytes);",
                "+                    } else {",
                "+                        byte[] buf = new byte[8192];",
                "+                        int numBytes = 0;",
                "+                        while((numBytes = contentStream.read(buf)) >= 0) {",
                "+                            bb.put(buf, 0, numBytes);",
                "+                        }",
                "+                    }",
                "+                }",
                "+",
                "+                bb.put(packageStreamFooter);",
                "+                bb.put(PACKAGE_FOOTER);",
                "+",
                "+                return parseBlob(oleBytes);",
                "+",
                "+            } finally {",
                "+                ByteUtil.closeQuietly(oleBuilder.getStream());",
                "+            }",
                "+        }",
                "+",
                "+        private static byte[] writePackageHeader(Builder oleBuilder,",
                "+                                                 long contentLen) {",
                "+",
                "+            byte[] prettyNameBytes = getZeroTermStrBytes(oleBuilder.getPrettyName());",
                "+            String className = oleBuilder.getClassName();",
                "+            String typeName = oleBuilder.getTypeName();",
                "+            if(className == null) {",
                "+                className = typeName;",
                "+            } else if(typeName == null) {",
                "+                typeName = className;",
                "+            }",
                "+            byte[] classNameBytes = getZeroTermStrBytes(className);",
                "+            byte[] typeNameBytes = getZeroTermStrBytes(typeName);",
                "+",
                "+            int packageHeaderLen = 20 + prettyNameBytes.length + classNameBytes.length;",
                "+",
                "+            int oleHeaderLen = 24 + typeNameBytes.length;",
                "+",
                "+            byte[] headerBytes = new byte[packageHeaderLen + oleHeaderLen];",
                "+",
                "+            ByteBuffer bb = PageChannel.wrap(headerBytes);",
                "+",
                "+            // write outer package header",
                "+            bb.putShort((short)PACKAGE_SIGNATURE);",
                "+            bb.putShort((short)packageHeaderLen);",
                "+            bb.putInt(PACKAGE_OBJECT_TYPE);",
                "+            bb.putShort((short)prettyNameBytes.length);",
                "+            bb.putShort((short)classNameBytes.length);",
                "+            int prettyNameOff = bb.position() + 8;",
                "+            bb.putShort((short)prettyNameOff);",
                "+            bb.putShort((short)(prettyNameOff + prettyNameBytes.length));",
                "+            bb.putInt(-1);",
                "+            bb.put(prettyNameBytes);",
                "+            bb.put(classNameBytes);",
                "+",
                "+            // put ole header",
                "+            bb.putInt(OLE_VERSION);",
                "+            bb.putInt(OLE_FORMAT);",
                "+            bb.putInt(typeNameBytes.length);",
                "+            bb.put(typeNameBytes);",
                "+            bb.putLong(0L);",
                "+            bb.putInt((int)contentLen);",
                "+",
                "+            return headerBytes;",
                "+        }",
                "+",
                "+        private static byte[] writePackageStreamHeader(Builder oleBuilder) {",
                "+",
                "+            byte[] fileNameBytes = getZeroTermStrBytes(oleBuilder.getFileName());",
                "+            byte[] filePathBytes = getZeroTermStrBytes(oleBuilder.getFilePath());",
                "+",
                "+            int headerLen = 6 + fileNameBytes.length + filePathBytes.length;",
                "+",
                "+            if(oleBuilder.getType() == ContentType.SIMPLE_PACKAGE) {",
                "+",
                "+                headerLen += 8 + filePathBytes.length;",
                "+",
                "+            } else {",
                "+",
                "+                headerLen += 2;",
                "+            }",
                "+",
                "+            byte[] headerBytes = new byte[headerLen];",
                "+            ByteBuffer bb = PageChannel.wrap(headerBytes);",
                "+            bb.putShort((short)PACKAGE_STREAM_SIGNATURE);",
                "+            bb.put(fileNameBytes);",
                "+            bb.put(filePathBytes);",
                "+",
                "+            if(oleBuilder.getType() == ContentType.SIMPLE_PACKAGE) {",
                "+                bb.putInt(PS_EMBEDDED_FILE);",
                "+                bb.putInt(filePathBytes.length);",
                "+                bb.put(filePathBytes, 0, filePathBytes.length);",
                "+                bb.putInt((int) oleBuilder.getContentLength());",
                "+            } else {",
                "+                bb.putInt(PS_LINKED_FILE);",
                "+                bb.putShort((short)LINK_HEADER);",
                "+            }",
                "+",
                "+            return headerBytes;",
                "+        }",
                "+",
                "+        private static byte[] writePackageStreamFooter(Builder oleBuilder) {",
                "+",
                "+            // note, these are _not_ zero terminated",
                "+            byte[] fileNameBytes = oleBuilder.getFileName().getBytes(OLE_UTF_CHARSET);",
                "+            byte[] filePathBytes = oleBuilder.getFilePath().getBytes(OLE_UTF_CHARSET);",
                "+",
                "+            int footerLen = 12 + (filePathBytes.length * 2) + fileNameBytes.length;",
                "+",
                "+            byte[] footerBytes = new byte[footerLen];",
                "+            ByteBuffer bb = PageChannel.wrap(footerBytes);",
                "+",
                "+            bb.putInt(filePathBytes.length/2);",
                "+            bb.put(filePathBytes);",
                "+            bb.putInt(fileNameBytes.length/2);",
                "+            bb.put(fileNameBytes);",
                "+            bb.putInt(filePathBytes.length/2);",
                "+            bb.put(filePathBytes);",
                "+",
                "+            return footerBytes;",
                "+        }",
                "+",
                "+        /**",
                "+         * creates the appropriate ContentImpl for the given blob.",
                "+         */",
                "+        private static ContentImpl parseContent(OleBlobImpl blob)",
                "+                throws IOException",
                "+        {",
                "+            ByteBuffer bb = PageChannel.wrap(blob.getBytes());",
                "+",
                "+            if((bb.remaining() < 2) || (bb.getShort() != PACKAGE_SIGNATURE)) {",
                "+                return new UnknownContentImpl(blob);",
                "+            }",
                "+",
                "+            // read outer package header",
                "+            int headerSize = bb.getShort();",
                "+            /* int objType = */ bb.getInt();",
                "+            int prettyNameLen = bb.getShort();",
                "+            int classNameLen = bb.getShort();",
                "+            int prettyNameOff = bb.getShort();",
                "+            int classNameOff = bb.getShort();",
                "+            /* int objSize = */ bb.getInt();",
                "+            String prettyName = readStr(bb, prettyNameOff, prettyNameLen);",
                "+            String className = readStr(bb, classNameOff, classNameLen);",
                "+            bb.position(headerSize);",
                "+",
                "+            // read ole header",
                "+            int oleVer = bb.getInt();",
                "+            /* int format = */ bb.getInt();",
                "+",
                "+            if(oleVer != OLE_VERSION) {",
                "+                return new UnknownContentImpl(blob);",
                "+            }",
                "+",
                "+            int typeNameLen = bb.getInt();",
                "+            String typeName = readStr(bb, bb.position(), typeNameLen);",
                "+            bb.getLong(); // unused",
                "+            int dataBlockLen = bb.getInt();",
                "+            int dataBlockPos = bb.position();",
                "+",
                "+",
                "+            if(SIMPLE_PACKAGE_TYPE.equalsIgnoreCase(typeName)) {",
                "+                return createSimplePackageContent(",
                "+                        blob, prettyName, className, typeName, bb, dataBlockLen);",
                "+            }",
                "+",
                "+            // if COMPOUND_FACTORY is null, the poi library isn't available, so just",
                "+            // load compound data as \"other\"",
                "+            if((COMPOUND_FACTORY != null) &&",
                "+                    (bb.remaining() >= COMPOUND_STORAGE_SIGNATURE.length) &&",
                "+                    ByteUtil.matchesRange(bb, bb.position(), COMPOUND_STORAGE_SIGNATURE)) {",
                "+                return COMPOUND_FACTORY.createCompoundPackageContent(",
                "+                        blob, prettyName, className, typeName, bb, dataBlockLen);",
                "+            }",
                "+",
                "+            // this is either some other \"special\" (as yet unhandled) format, or it is",
                "+            // simply an embedded file (or it is compound data and poi isn't available)",
                "+            return new OtherContentImpl(blob, prettyName, className,",
                "+                    typeName, dataBlockPos, dataBlockLen);",
                "+        }",
                "+",
                "+        private static ContentImpl createSimplePackageContent(",
                "+                OleBlobImpl blob, String prettyName, String className, String typeName,",
                "+                ByteBuffer blobBb, int dataBlockLen) {",
                "+",
                "+            int dataBlockPos = blobBb.position();",
                "+            ByteBuffer bb = PageChannel.narrowBuffer(blobBb, dataBlockPos,",
                "+                    dataBlockPos + dataBlockLen);",
                "+",
                "+            int packageSig = bb.getShort();",
                "+            if(packageSig != PACKAGE_STREAM_SIGNATURE) {",
                "+                return new OtherContentImpl(blob, prettyName, className,",
                "+                        typeName, dataBlockPos, dataBlockLen);",
                "+            }",
                "+",
                "+            String fileName = readZeroTermStr(bb);",
                "+            String filePath = readZeroTermStr(bb);",
                "+            int packageType = bb.getInt();",
                "+",
                "+            if(packageType == PS_EMBEDDED_FILE) {",
                "+",
                "+                int localFilePathLen = bb.getInt();",
                "+                String localFilePath = readStr(bb, bb.position(), localFilePathLen);",
                "+                int dataLen = bb.getInt();",
                "+                int dataPos = bb.position();",
                "+                bb.position(dataLen + dataPos);",
                "+",
                "+                // remaining strings are in \"reverse\" order (local file path, file name,",
                "+                // file path).  these string usee a real utf charset, and therefore can",
                "+                // \"fix\" problems with ascii based names (so we prefer these strings to",
                "+                // the original strings we found)",
                "+                int strNum = 0;",
                "+                while(true) {",
                "+",
                "+                    int rem = bb.remaining();",
                "+                    if(rem < 4) {",
                "+                        break;",
                "+                    }",
                "+",
                "+                    int strLen = bb.getInt();",
                "+                    String remStr = readStr(bb, bb.position(), strLen * 2, OLE_UTF_CHARSET);",
                "+",
                "+                    switch(strNum) {",
                "+                        case 0:",
                "+                            localFilePath = remStr;",
                "+                            break;",
                "+                        case 1:",
                "+                            fileName = remStr;",
                "+                            break;",
                "+                        case 2:",
                "+                            filePath = remStr;",
                "+                            break;",
                "+                        default:",
                "+                            // ignore",
                "+                    }",
                "+",
                "+                    ++strNum;",
                "+                }",
                "+",
                "+                return new SimplePackageContentImpl(",
                "+                        blob, prettyName, className, typeName, dataPos, dataLen,",
                "+                        fileName, filePath, localFilePath);",
                "+            }",
                "+",
                "+            if(packageType == PS_LINKED_FILE) {",
                "+",
                "+                bb.getShort(); //unknown",
                "+                String linkStr = readZeroTermStr(bb);",
                "+",
                "+                return new LinkContentImpl(blob, prettyName, className, typeName,",
                "+                        fileName, linkStr, filePath);",
                "+            }",
                "+",
                "+            return new OtherContentImpl(blob, prettyName, className,",
                "+                    typeName, dataBlockPos, dataBlockLen);",
                "+        }",
                "+",
                "+        private static String readStr(ByteBuffer bb, int off, int len) {",
                "+            return readStr(bb, off, len, OLE_CHARSET);",
                "+        }",
                "+",
                "+        private static String readZeroTermStr(ByteBuffer bb) {",
                "+            int off = bb.position();",
                "+            while(bb.hasRemaining()) {",
                "+                byte b = bb.get();",
                "+                if(b == 0) {",
                "+                    break;",
                "+                }",
                "+            }",
                "+            int len = bb.position() - off;",
                "+            return readStr(bb, off, len);",
                "+        }",
                "+",
                "+        private static String readStr(ByteBuffer bb, int off, int len,",
                "+                                      Charset charset) {",
                "+            String str = new String(bb.array(), off, len, charset);",
                "+            bb.position(off + len);",
                "+            if(str.charAt(str.length() - 1) == '\\0') {",
                "+                str = str.substring(0, str.length() - 1);",
                "+            }",
                "+            return str;",
                "+        }",
                "+",
                "+        private static byte[] getZeroTermStrBytes(String str) {",
                "+            // since we are converting to ascii, try to make \"nicer\" versions of crazy",
                "+            // chars (e.g. convert \"u with an umlaut\" to just \"u\").  this may not",
                "+            // ultimately help anything but it is what ms access does.",
                "+",
                "+            // decompose complex chars into combos of char and accent",
                "+            str = Normalizer.normalize(str, Normalizer.Form.NFD);",
                "+            // strip the accents",
                "+            str = UNICODE_ACCENT_PATTERN.matcher(str).replaceAll(\"\");",
                "+            // (re)normalize what is left",
                "+            str = Normalizer.normalize(str, Normalizer.Form.NFC);",
                "+",
                "+            return (str + '\\0').getBytes(OLE_CHARSET);",
                "+        }",
                "+",
                "+",
                "+        static final class OleBlobImpl implements OleBlob",
                "+        {",
                "+            private byte[] _bytes;",
                "+            private ContentImpl _content;",
                "+",
                "+            private OleBlobImpl(byte[] bytes) {",
                "+                _bytes = bytes;",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                out.write(_bytes);",
                "+            }",
                "+",
                "+            public Content getContent() throws IOException {",
                "+                if(_content == null) {",
                "+                    _content = parseContent(this);",
                "+                }",
                "+                return _content;",
                "+            }",
                "+",
                "+            public InputStream getBinaryStream() throws SQLException {",
                "+                return new ByteArrayInputStream(_bytes);",
                "+            }",
                "+",
                "+            public InputStream getBinaryStream(long pos, long len)",
                "+                    throws SQLException",
                "+            {",
                "+                return new ByteArrayInputStream(_bytes, fromJdbcOffset(pos), (int)len);",
                "+            }",
                "+",
                "+            public long length() throws SQLException {",
                "+                return _bytes.length;",
                "+            }",
                "+",
                "+            public byte[] getBytes() throws IOException {",
                "+                if(_bytes == null) {",
                "+                    throw new IOException(\"blob is closed\");",
                "+                }",
                "+                return _bytes;",
                "+            }",
                "+",
                "+            public byte[] getBytes(long pos, int len) throws SQLException {",
                "+                return ByteUtil.copyOf(_bytes, fromJdbcOffset(pos), len);",
                "+            }",
                "+",
                "+            public long position(byte[] pattern, long start) throws SQLException {",
                "+                int pos = ByteUtil.findRange(PageChannel.wrap(_bytes),",
                "+                        fromJdbcOffset(start), pattern);",
                "+                return((pos >= 0) ? toJdbcOffset(pos) : pos);",
                "+            }",
                "+",
                "+            public long position(Blob pattern, long start) throws SQLException {",
                "+                return position(pattern.getBytes(1L, (int)pattern.length()), start);",
                "+            }",
                "+",
                "+            public OutputStream setBinaryStream(long position) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public void truncate(long len) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public int setBytes(long pos, byte[] bytes) throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public int setBytes(long pos, byte[] bytes, int offset, int lesn)",
                "+                    throws SQLException {",
                "+                throw new SQLFeatureNotSupportedException();",
                "+            }",
                "+",
                "+            public void free() {",
                "+                close();",
                "+            }",
                "+",
                "+            public void close() {",
                "+                _bytes = null;",
                "+                ByteUtil.closeQuietly(_content);",
                "+                _content = null;",
                "+            }",
                "+",
                "+            private static int toJdbcOffset(int off) {",
                "+                return off + 1;",
                "+            }",
                "+",
                "+            private static int fromJdbcOffset(long off) {",
                "+                return (int)off - 1;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                ToStringBuilder sb = CustomToStringStyle.builder(this);",
                "+                if(_content != null) {",
                "+                    sb.append(\"content\", _content);",
                "+                } else {",
                "+                    sb.append(\"bytes\", _bytes);",
                "+                    sb.append(\"content\", \"(uninitialized)\");",
                "+                }",
                "+                return sb.toString();",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class ContentImpl implements Content, Closeable",
                "+        {",
                "+            protected final OleBlobImpl _blob;",
                "+",
                "+            protected ContentImpl(OleBlobImpl blob) {",
                "+                _blob = blob;",
                "+            }",
                "+",
                "+            public OleBlobImpl getBlob() {",
                "+                return _blob;",
                "+            }",
                "+",
                "+            protected byte[] getBytes() throws IOException {",
                "+                return getBlob().getBytes();",
                "+            }",
                "+",
                "+            public void close() {",
                "+                // base does nothing",
                "+            }",
                "+",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                sb.append(\"type\", getType());",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class EmbeddedContentImpl extends ContentImpl",
                "+                implements EmbeddedContent",
                "+        {",
                "+            private final int _position;",
                "+            private final int _length;",
                "+",
                "+            protected EmbeddedContentImpl(OleBlobImpl blob, int position, int length)",
                "+            {",
                "+                super(blob);",
                "+                _position = position;",
                "+                _length = length;",
                "+            }",
                "+",
                "+            public long length() {",
                "+                return _length;",
                "+            }",
                "+",
                "+            public InputStream getStream() throws IOException {",
                "+                return new ByteArrayInputStream(getBytes(), _position, _length);",
                "+            }",
                "+",
                "+            public void writeTo(OutputStream out) throws IOException {",
                "+                out.write(getBytes(), _position, _length);",
                "+            }",
                "+",
                "+            @Override",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                super.toString(sb);",
                "+                if(_position >= 0) {",
                "+                    sb.append(\"content\", ByteBuffer.wrap(_blob._bytes, _position, _length));",
                "+                }",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        static abstract class EmbeddedPackageContentImpl",
                "+                extends EmbeddedContentImpl",
                "+                implements PackageContent",
                "+        {",
                "+            private final String _prettyName;",
                "+            private final String _className;",
                "+            private final String _typeName;",
                "+",
                "+            protected EmbeddedPackageContentImpl(",
                "+                    OleBlobImpl blob, String prettyName, String className,",
                "+                    String typeName, int position, int length)",
                "+            {",
                "+                super(blob, position, length);",
                "+                _prettyName = prettyName;",
                "+                _className = className;",
                "+                _typeName = typeName;",
                "+            }",
                "+",
                "+            public String getPrettyName() {",
                "+                return _prettyName;",
                "+            }",
                "+",
                "+            public String getClassName() {",
                "+                return _className;",
                "+            }",
                "+",
                "+            public String getTypeName() {",
                "+                return _typeName;",
                "+            }",
                "+",
                "+            @Override",
                "+            protected ToStringBuilder toString(ToStringBuilder sb) {",
                "+                sb.append(\"prettyName\", _prettyName)",
                "+                        .append(\"className\", _className)",
                "+                        .append(\"typeName\", _typeName);",
                "+                super.toString(sb);",
                "+                return sb;",
                "+            }",
                "+        }",
                "+",
                "+        private static final class LinkContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements LinkContent",
                "+        {",
                "+            private final String _fileName;",
                "+            private final String _linkPath;",
                "+            private final String _filePath;",
                "+",
                "+            private LinkContentImpl(OleBlobImpl blob, String prettyName,",
                "+                                    String className, String typeName,",
                "+                                    String fileName, String linkPath,",
                "+                                    String filePath)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, -1, -1);",
                "+                _fileName = fileName;",
                "+                _linkPath = linkPath;",
                "+                _filePath = filePath;",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.LINK;",
                "+            }",
                "+",
                "+            public String getFileName() {",
                "+                return _fileName;",
                "+            }",
                "+",
                "+            public String getLinkPath() {",
                "+                return _linkPath;",
                "+            }",
                "+",
                "+            public String getFilePath() {",
                "+                return _filePath;",
                "+            }",
                "+",
                "+            public InputStream getLinkStream() throws IOException {",
                "+                return new FileInputStream(getLinkPath());",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"fileName\", _fileName)",
                "+                        .append(\"linkPath\", _linkPath)",
                "+                        .append(\"filePath\", _filePath)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class SimplePackageContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements SimplePackageContent",
                "+        {",
                "+            private final String _fileName;",
                "+            private final String _filePath;",
                "+            private final String _localFilePath;",
                "+",
                "+            private SimplePackageContentImpl(OleBlobImpl blob, String prettyName,",
                "+                                             String className, String typeName,",
                "+                                             int position, int length,",
                "+                                             String fileName, String filePath,",
                "+                                             String localFilePath)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, position, length);",
                "+                _fileName = fileName;",
                "+                _filePath = filePath;",
                "+                _localFilePath = localFilePath;",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.SIMPLE_PACKAGE;",
                "+            }",
                "+",
                "+            public String getFileName() {",
                "+                return _fileName;",
                "+            }",
                "+",
                "+            public String getFilePath() {",
                "+                return _filePath;",
                "+            }",
                "+",
                "+            public String getLocalFilePath() {",
                "+                return _localFilePath;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"fileName\", _fileName)",
                "+                        .append(\"filePath\", _filePath)",
                "+                        .append(\"localFilePath\", _localFilePath)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class OtherContentImpl",
                "+                extends EmbeddedPackageContentImpl",
                "+                implements OtherContent",
                "+        {",
                "+            private OtherContentImpl(",
                "+                    OleBlobImpl blob, String prettyName, String className,",
                "+                    String typeName, int position, int length)",
                "+            {",
                "+                super(blob, prettyName, className, typeName, position, length);",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.OTHER;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+        private static final class UnknownContentImpl extends ContentImpl",
                "+        {",
                "+            private UnknownContentImpl(OleBlobImpl blob) {",
                "+                super(blob);",
                "+            }",
                "+",
                "+            public ContentType getType() {",
                "+                return ContentType.UNKNOWN;",
                "+            }",
                "+",
                "+            @Override",
                "+            public String toString() {",
                "+                return toString(CustomToStringStyle.builder(this))",
                "+                        .append(\"content\", _blob._bytes)",
                "+                        .toString();",
                "+            }",
                "+        }",
                "+",
                "+    }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "index 133d5e45f..779d5eecf 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "@@ -38,3 +38,2 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "@@ -107,6 +106,6 @@ public class OfficeParser extends AbstractOfficeParser {",
                "         TikaInputStream tstream = TikaInputStream.cast(stream);",
                "-        NPOIFSFileSystem mustCloseFs = null;",
                "+        POIFSFileSystem mustCloseFs = null;",
                "         try {",
                "             if (tstream == null) {",
                "-                mustCloseFs = new NPOIFSFileSystem(new CloseShieldInputStream(stream));",
                "+                mustCloseFs = new POIFSFileSystem(new CloseShieldInputStream(stream));",
                "                 root = mustCloseFs.getRoot();",
                "@@ -114,4 +113,4 @@ public class OfficeParser extends AbstractOfficeParser {",
                "                 final Object container = tstream.getOpenContainer();",
                "-                if (container instanceof NPOIFSFileSystem) {",
                "-                    root = ((NPOIFSFileSystem) container).getRoot();",
                "+                if (container instanceof POIFSFileSystem) {",
                "+                    root = ((POIFSFileSystem) container).getRoot();",
                "                 } else if (container instanceof DirectoryNode) {",
                "@@ -119,7 +118,7 @@ public class OfficeParser extends AbstractOfficeParser {",
                "                 } else {",
                "-                    NPOIFSFileSystem fs = null;",
                "+                    POIFSFileSystem fs = null;",
                "                     if (tstream.hasFile()) {",
                "-                        fs = new NPOIFSFileSystem(tstream.getFile(), true);",
                "+                        fs = new POIFSFileSystem(tstream.getFile(), true);",
                "                     } else {",
                "-                        fs = new NPOIFSFileSystem(new CloseShieldInputStream(tstream));",
                "+                        fs = new POIFSFileSystem(new CloseShieldInputStream(tstream));",
                "                     }",
                "@@ -276,6 +275,2 @@ public class OfficeParser extends AbstractOfficeParser {",
                "-        public static POIFSDocumentType detectType(NPOIFSFileSystem fs) {",
                "-            return detectType(fs.getRoot());",
                "-        }",
                "-",
                "         public static POIFSDocumentType detectType(DirectoryEntry node) {",
                "@@ -315,3 +310,3 @@ public class OfficeParser extends AbstractOfficeParser {",
                "      */",
                "-    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml,",
                "+    public static void extractMacros(POIFSFileSystem fs, ContentHandler xhtml,",
                "                                      EmbeddedDocumentExtractor embeddedDocumentExtractor)  throws IOException, SAXException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "index 0aed803d1..5d1335147 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "@@ -53,3 +53,3 @@ import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.util.CodePageUtil;",
                "@@ -128,3 +128,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "-    public OutlookExtractor(NPOIFSFileSystem filesystem, ParseContext context) throws TikaException {",
                "+    public OutlookExtractor(POIFSFileSystem filesystem, ParseContext context) throws TikaException {",
                "         this(filesystem.getRoot(), context);",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "index 1c9869003..1b5a0a9cd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "@@ -35,3 +35,3 @@ import org.apache.poi.poifs.filesystem.DocumentNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.detect.Detector;",
                "@@ -387,3 +387,3 @@ public class POIFSContainerDetector implements Detector {",
                "         try {",
                "-            NPOIFSFileSystem fs = new NPOIFSFileSystem(file, true);",
                "+            POIFSFileSystem fs = new POIFSFileSystem(file, true);",
                "@@ -425,4 +425,4 @@ public class POIFSContainerDetector implements Detector {",
                "             Object container = tis.getOpenContainer();",
                "-            if (container instanceof NPOIFSFileSystem) {",
                "-                names = getTopLevelNames(((NPOIFSFileSystem) container).getRoot());",
                "+            if (container instanceof POIFSFileSystem) {",
                "+                names = getTopLevelNames(((POIFSFileSystem) container).getRoot());",
                "             } else if (container instanceof DirectoryNode) {",
                "@@ -456,4 +456,4 @@ public class POIFSContainerDetector implements Detector {",
                "                 tis.getOpenContainer() != null &&",
                "-                tis.getOpenContainer() instanceof NPOIFSFileSystem) {",
                "-            return detect(names, ((NPOIFSFileSystem) tis.getOpenContainer()).getRoot());",
                "+                tis.getOpenContainer() instanceof POIFSFileSystem) {",
                "+            return detect(names, ((POIFSFileSystem) tis.getOpenContainer()).getRoot());",
                "         } else {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "index 3e2ea260d..801718404 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "@@ -34,3 +34,3 @@ import org.apache.poi.poifs.filesystem.DocumentEntry;",
                " import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -65,3 +65,3 @@ public class SummaryExtractor {",
                "-    public void parseSummaries(NPOIFSFileSystem filesystem)",
                "+    public void parseSummaries(POIFSFileSystem filesystem)",
                "             throws IOException, TikaException {",
                "@@ -96,4 +96,2 @@ public class SummaryExtractor {",
                "             throw new TikaException(\"Unexpected HPSF document\", e);",
                "-        } catch (MarkUnsupportedException e) {",
                "-            throw new TikaException(\"Invalid DocumentInputStream\", e);",
                "         } catch (Exception e) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "index 4a80420a8..30bd4bb96 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "@@ -51,3 +51,3 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.tika.exception.EncryptedDocumentException;",
                "@@ -147,3 +147,3 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "     protected void parse(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "@@ -663,3 +663,3 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "     protected void parseWord6(",
                "-            NPOIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "+            POIFSFileSystem filesystem, XHTMLContentHandler xhtml)",
                "             throws IOException, SAXException, TikaException {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "index ac5abc943..57c38a6dc 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "@@ -43,3 +43,2 @@ import org.apache.poi.openxml4j.opc.internal.FileHelper;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.Ole10Native;",
                "@@ -420,5 +419,5 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "             try (InputStream is = macroPart.getInputStream()) {",
                "-                try (NPOIFSFileSystem npoifs = new NPOIFSFileSystem(is)) {",
                "+                try (POIFSFileSystem poifs = new POIFSFileSystem(is)) {",
                "                     //Macro reading exceptions are already swallowed here",
                "-                    OfficeParser.extractMacros(npoifs, handler, embeddedExtractor);",
                "+                    OfficeParser.extractMacros(poifs, handler, embeddedExtractor);",
                "                 }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "index 4387ca403..90ea58b86 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "@@ -35,3 +35,3 @@ import org.apache.poi.poifs.filesystem.Entry;",
                " import org.apache.poi.poifs.filesystem.FileMagic;",
                "-import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                " import org.apache.poi.poifs.filesystem.Ole10Native;",
                "@@ -143,3 +143,3 @@ class RTFObjDataParser {",
                "         byte[] ret = null;",
                "-        try (NPOIFSFileSystem fs = new NPOIFSFileSystem(is)) {",
                "+        try (POIFSFileSystem fs = new POIFSFileSystem(is)) {"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessCompoundOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessOleUtil.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "6e3c26e45b1af10cd16eeb54f420826cf1330771",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1540225286,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b213fb3b5a50faf93e0da92b10adfa0d06d41f46",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537294057,
            "hunks": 2,
            "message": "Merge remote-tracking branch 'origin/branch_1x' into branch_1x # Conflicts: #\tCHANGES.txt #\ttika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
            "diff": [
                "diff --cc tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "index c6412d5e8,a37aed422..f1e515205",
                "--- a/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkParser.java",
                "@@@ -214,3 -214,3 +214,3 @@@ public class ForkParser extends Abstrac",
                "       * <p>",
                "-      * If using a {@link org.apache.tika.parser.RecursiveParserWrapper}, there are two options:",
                " -     * If using a {@link RecursiveParserWrapper}, there are two options:",
                "++     * If using a RecursiveParserWrapper, there are two options:",
                "       * </p>"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6afdf198d33beb12553957fcbc3f47830a45a942",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524777850,
            "hunks": 1,
            "message": "Depend on Parso for SAS7BDAT support",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 6b51f30e5..e9e5b83c6 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -177,2 +177,7 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>com.epam</groupId>",
                "+      <artifactId>parso</artifactId>",
                "+      <version>${parso.version}</version>",
                "+    </dependency>",
                "     <dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "57ff8797806d3ee6c9a792983a95f45f02372a37",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532545827,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3da39b8b5e03fb834894349275ed35db8af41bd9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526654106,
            "hunks": 1,
            "message": "Add the other jackcess jar to the bundle",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 691d436c5..57d2ba467 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -173,2 +173,3 @@",
                "               jackcess|",
                "+              jackcess-encrypt|",
                "               commons-lang|"
            ],
            "changed_files": [
                "tika-bundle/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c31d40f4478c6a7a83d535c3bb3cc2fe4678b3d6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525370294,
            "hunks": 2,
            "message": "SAS7BDAT html tests",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 56260cafa..121d95820 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -121,4 +121,7 @@ public class SAS7BDATParser extends AbstractParser {",
                "         for (Column c : sas.getColumns()) {",
                "+            String label = c.getLabel();",
                "+            if (label == null || label.isEmpty()) label = c.getName();",
                "+",
                "             xhtml.startElement(\"th\", \"title\", c.getName());",
                "-            xhtml.characters(c.getLabel());",
                "+            xhtml.characters(label);",
                "             xhtml.endElement(\"th\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "39e119413717cd618a203d4889214d044a5dd222",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525362747,
            "hunks": 7,
            "message": "More SAS7BDAT metadata",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/metadata/Database.java b/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "index 7f91a3730..190fe8995 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "@@ -22,4 +22,5 @@ public interface Database {",
                "     Property TABLE_NAME = Property.externalTextBag(PREFIX+\"table_name\");",
                "-    Property COLUMN_COUNT = Property.externalText(PREFIX+\"column_count\");",
                "+    Property ROW_COUNT = Property.externalInteger(PREFIX+\"row_count\");",
                "+    Property COLUMN_COUNT = Property.externalInteger(PREFIX+\"column_count\");",
                "     Property COLUMN_NAME = Property.externalTextBag(PREFIX+\"column_name\");",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 5992e15a4..56260cafa 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -24,3 +24,7 @@ import java.util.Set;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.Database;",
                "+import org.apache.tika.metadata.HttpHeaders;",
                " import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.OfficeOpenXMLExtended;",
                "+import org.apache.tika.metadata.PagedText;",
                " import org.apache.tika.metadata.TikaCoreProperties;",
                "@@ -29,2 +33,3 @@ import org.apache.tika.parser.AbstractParser;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.executable.MachineMetadata;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "@@ -73,47 +78,36 @@ public class SAS7BDATParser extends AbstractParser {",
                "-        // TODO What about these?",
                "-/*",
                "-u64 - false",
                "-compressionMethod - null",
                "-endianness - 1",
                "-encoding - windows-1252",
                "-sessionEncoding - null",
                "-fileType - DATA",
                "-sasRelease - 9.0101M3",
                "-serverType - XP_PRO",
                "-osName - ",
                "-osType - ",
                "-headerLength - 1024",
                "-pageLength - 8192",
                "-pageCount - 1",
                "-rowLength - 96",
                "-rowCount - 31",
                "-mixPageRowCount - 69",
                "-columnsCount - 5",
                "-*/",
                "+        metadata.set(PagedText.N_PAGES,     (int)props.getPageCount());",
                "+        metadata.set(Database.COLUMN_COUNT, (int)props.getColumnsCount());",
                "+        metadata.set(Database.ROW_COUNT,    (int)props.getRowCount());",
                "+",
                "+        // TODO Can we find more general properties for these / move",
                "+        //  these to more general places?",
                "+        metadata.set(HttpHeaders.CONTENT_ENCODING, props.getEncoding());",
                "+        metadata.set(OfficeOpenXMLExtended.APPLICATION, props.getServerType());",
                "+        metadata.set(OfficeOpenXMLExtended.APP_VERSION, props.getSasRelease());",
                "+        metadata.set(MachineMetadata.ARCHITECTURE_BITS, ",
                "+                     props.isU64() ? \"64\" : \"32\");",
                "+        metadata.set(MachineMetadata.ENDIAN, props.getEndianness() == 1 ? ",
                "+                     MachineMetadata.Endian.LITTLE.getName() : ",
                "+                     MachineMetadata.Endian.BIG.getName());",
                "+",
                "+        // The following SAS Metadata fields are currently ignored:",
                "+        // compressionMethod",
                "+        // sessionEncoding",
                "+        // fileType",
                "+        // osName - ",
                "+        // osType - ",
                "+        // mixPageRowCount",
                "+        // headerLength",
                "+        // pageLength",
                "+        // rowLength",
                "+",
                "+        // Process the column metadata",
                "+        // TODO Find keys to record the format and the type",
                "+        for (Column c : sas.getColumns()) {",
                "+            String name = c.getLabel();",
                "+            if (name == null || name.isEmpty()) name = c.getName();",
                "+            metadata.add(Database.COLUMN_NAME, name);",
                "+        }",
                "-        // TODO Should we output more Column info as metadata?",
                "-/*",
                "-5 Columns defined:",
                "- 1 - A",
                "-  Label: A",
                "-  Format: $58.",
                "-  Size 58 of java.lang.String",
                "- 2 - B",
                "-  Label: B",
                "-  Format: ",
                "-  Size 8 of java.lang.Number",
                "- 3 - C",
                "-  Label: C",
                "-  Format: DATE8.",
                "-  Size 8 of java.lang.Number",
                "- 4 - D",
                "-  Label: D",
                "-  Format: DATETIME17.",
                "-  Size 8 of java.lang.Number",
                "- 5 - E",
                "-  Label: E",
                "-  Format: ",
                "-  Size 8 of java.lang.Number",
                "-*/"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f3508f2ff4cb827be315de95dacf3e59ab23c7c8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524783981,
            "hunks": 3,
            "message": "XHTML improvements",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 1cef3cd6d..4944c1293 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -65,3 +65,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "         SasFileReader sas = new SasFileReaderImpl(stream);",
                "-        ",
                "+",
                "         // TODO Metadata",
                "@@ -87,5 +87,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "             for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "-                xhtml.startElement(\"td\");",
                "-                xhtml.characters(val);",
                "-                xhtml.endElement(\"td\");",
                "+                xhtml.element(\"td\", val);",
                "             }",
                "@@ -97,3 +95,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "         xhtml.endElement(\"table\");",
                "-        xhtml.newline();",
                "+        xhtml.endDocument();",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3c2c4101312aa5bf4f466638b4eec03a1ac9878b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1538688156,
            "hunks": 18,
            "message": "[maven-release-plugin] prepare release 1.19.1-rc2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a5f4185a1..6550d1993 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index 2549e9443..ee0d08a0c 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index cb9afe182..546d4cbae 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index fadbafc3d..e17e32e6b 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index 06eb9e85d..f9ae83f63 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fa5e50e7d..8ee7b8039 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index d6bdbb8bc..fbdabce11 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.20-SNAPSHOT</version>",
                "+        <version>1.19.1</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 28518c397..c31518532 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index 1fcebb32b..d38568b11 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index ede01dfa4..a7287e966 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 57aae2dbf..25e2020fb 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index b22dd3be1..f2428201a 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.20-SNAPSHOT</version>",
                "+  <version>1.19.1</version>",
                "   <packaging>pom</packaging>",
                "@@ -463,3 +463,3 @@",
                "     <url>https://github.com/apache/tika</url>",
                "-    <tag>1.19.1-rc1</tag>",
                "+    <tag>1.19.1-rc2</tag>",
                "   </scm>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 9adb65f5a..fcabd968f 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 2f101ce60..4de4fc69a 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 6de0d3ba3..a7721d501 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index 566f7f6bb..b79366b0c 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 96657a750..26e20c651 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f9eff6f0e434bee20f599ce38975612299f5c12a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542136517,
            "hunks": 0,
            "message": "Merge branch 'branch_1x' of https://github.com/apache/tika into branch_1x",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7d12decdb4bf29df1568010d8d5ad86704545634",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1542136622,
            "hunks": 0,
            "message": "Merge branch 'master' of https://github.com/apache/tika",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "284965e789ec86364c31d471f16d6732c5e4e41d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524846892,
            "hunks": 2,
            "message": "Some SAS7BDAT metadata and unit testing",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 4944c1293..5992e15a4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -35,2 +35,3 @@ import com.epam.parso.Column;",
                " import com.epam.parso.DataWriterUtil;",
                "+import com.epam.parso.SasFileProperties;",
                " import com.epam.parso.SasFileReader;",
                "@@ -65,6 +66,57 @@ public class SAS7BDATParser extends AbstractParser {",
                "         SasFileReader sas = new SasFileReaderImpl(stream);",
                "+        SasFileProperties props = sas.getSasFileProperties();",
                "-        // TODO Metadata",
                "+        // Record the interesting parts of the file's metadata",
                "+        metadata.set(TikaCoreProperties.TITLE, props.getName());",
                "+        metadata.set(TikaCoreProperties.CREATED, props.getDateCreated());",
                "+        metadata.set(TikaCoreProperties.MODIFIED, props.getDateModified());",
                "-        // Output as a table",
                "+        // TODO What about these?",
                "+/*",
                "+u64 - false",
                "+compressionMethod - null",
                "+endianness - 1",
                "+encoding - windows-1252",
                "+sessionEncoding - null",
                "+fileType - DATA",
                "+sasRelease - 9.0101M3",
                "+serverType - XP_PRO",
                "+osName - ",
                "+osType - ",
                "+headerLength - 1024",
                "+pageLength - 8192",
                "+pageCount - 1",
                "+rowLength - 96",
                "+rowCount - 31",
                "+mixPageRowCount - 69",
                "+columnsCount - 5",
                "+*/",
                "+",
                "+        // TODO Should we output more Column info as metadata?",
                "+/*",
                "+5 Columns defined:",
                "+ 1 - A",
                "+  Label: A",
                "+  Format: $58.",
                "+  Size 58 of java.lang.String",
                "+ 2 - B",
                "+  Label: B",
                "+  Format: ",
                "+  Size 8 of java.lang.Number",
                "+ 3 - C",
                "+  Label: C",
                "+  Format: DATE8.",
                "+  Size 8 of java.lang.Number",
                "+ 4 - D",
                "+  Label: D",
                "+  Format: DATETIME17.",
                "+  Size 8 of java.lang.Number",
                "+ 5 - E",
                "+  Label: E",
                "+  Format: ",
                "+  Size 8 of java.lang.Number",
                "+*/",
                "+",
                "+        // Output file contents as a table",
                "+        xhtml.element(\"h1\", props.getName());",
                "         xhtml.startElement(\"table\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "933ad02751de2e622ed8b98ca7a2ccaed9e8a3a5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533916211,
            "hunks": 4,
            "message": "specify read-only when opening packages in sax pptx and docx parsers",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "index 3e98203dc..af3eb7465 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "@@ -27,2 +27,3 @@ import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                " import org.apache.poi.openxml4j.opc.OPCPackage;",
                "+import org.apache.poi.openxml4j.opc.PackageAccess;",
                " import org.apache.tika.parser.microsoft.ooxml.OOXMLWordAndPowerPointTextHandler;",
                "@@ -40,3 +41,3 @@ public class XSLFEventBasedPowerPointExtractor extends POIXMLTextExtractor {",
                "     public XSLFEventBasedPowerPointExtractor(String path) throws XmlException, OpenXML4JException, IOException {",
                "-        this(OPCPackage.open(path));",
                "+        this(OPCPackage.open(path, PackageAccess.READ));",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "index 7a5c0c703..e0ad943fd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "@@ -34,2 +34,3 @@ import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                " import org.apache.poi.openxml4j.opc.OPCPackage;",
                "+import org.apache.poi.openxml4j.opc.PackageAccess;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "@@ -64,3 +65,3 @@ public class XWPFEventBasedWordExtractor extends POIXMLTextExtractor {",
                "     public XWPFEventBasedWordExtractor(String path) throws XmlException, OpenXML4JException, IOException {",
                "-        this(OPCPackage.open(path));",
                "+        this(OPCPackage.open(path, PackageAccess.READ));",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b26a0ccdbd5620b870df0dc434d2f9265b2df082",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536176816,
            "hunks": 0,
            "message": "Merge branch 'master' of https://github.com/wowselim/tika",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4c5bbaece63d4f60b4c4920a105f5cca3de6be58",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524779237,
            "hunks": 2,
            "message": "Add parso to the OSGi bundle",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 584d8e826..691d436c5 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -201,2 +201,3 @@",
                "               cdm|",
                "+              parso|",
                "               httpservices|",
                "@@ -235,2 +236,3 @@",
                "               com.ibm.icu.text;resolution:=optional,",
                "+              com.parso;resolution:=optional,",
                "               com.sleepycat.je;resolution:=optional,"
            ],
            "changed_files": [
                "tika-bundle/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b83dc002c771b2da50ef66afc22ffced2e54a487",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1541809408,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master' # Conflicts: #\ttika-core/src/main/java/org/apache/tika/fork/ForkParser.java #\ttika-parsers/src/main/java/org/apache/tika/parser/crypto/Pkcs7Parser.java",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b29e11fb4f5d0f5085f3611330aba5eb881cbb23",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537562548,
            "hunks": 0,
            "message": "Merge branch 'branch_1x' of https://github.com/apache/tika into branch_1x",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8a1392b660ee5f1947c03dc49b45a8fc816878d6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536156431,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/branch_1x' into branch_1x",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5d3dd69442605d4cec45a60cf46545f0baf8186a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525965982,
            "hunks": 1,
            "message": "Ensure that empty cells are still output",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 121d95820..8b28644a9 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -136,3 +136,7 @@ public class SAS7BDATParser extends AbstractParser {",
                "             for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "-                xhtml.element(\"td\", val);",
                "+                // Use explicit start/end, rather than element, to ",
                "+                //  ensure that empty cells still get output",
                "+                xhtml.startElement(\"td\");",
                "+                xhtml.characters(val);",
                "+                xhtml.endElement(\"td\");",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ea1f0c88fdcaacddbf53918052cf8561dbadf9fa",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1536156034,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a279490c517d45fb98195e374ebd399eecc60124",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1537980111,
            "hunks": 17,
            "message": "rolling back, again",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a5f4185a1..3a94e2e0b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.20-SNAPSHOT</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-app/pom.xml b/tika-app/pom.xml",
                "index ee0d08a0c..0a33ecde4 100644",
                "--- a/tika-app/pom.xml",
                "+++ b/tika-app/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-batch/pom.xml b/tika-batch/pom.xml",
                "index 546d4cbae..c0aa376ca 100644",
                "--- a/tika-batch/pom.xml",
                "+++ b/tika-batch/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index e17e32e6b..b18e8e422 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-core/pom.xml b/tika-core/pom.xml",
                "index f9ae83f63..1f6d91156 100644",
                "--- a/tika-core/pom.xml",
                "+++ b/tika-core/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index 8ee7b8039..4665f45e4 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index fbdabce11..3197cc078 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>tika-parent</artifactId>",
                "-        <version>1.19.1</version>",
                "+        <version>1.19.1-SNAPSHOT</version>",
                "         <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index c31518532..57c431f1f 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-java7/pom.xml b/tika-java7/pom.xml",
                "index d38568b11..e0bccea8b 100644",
                "--- a/tika-java7/pom.xml",
                "+++ b/tika-java7/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-langdetect/pom.xml b/tika-langdetect/pom.xml",
                "index 3a04f7eb3..d504b5fdf 100644",
                "--- a/tika-langdetect/pom.xml",
                "+++ b/tika-langdetect/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 25e2020fb..e0514f963 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 8563c4839..7b2848aba 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -33,3 +33,3 @@",
                "   <artifactId>tika-parent</artifactId>",
                "-  <version>1.19.1</version>",
                "+  <version>1.19.1-SNAPSHOT</version>",
                "   <packaging>pom</packaging>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index ee195bc75..b2c50ddab 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-serialization/pom.xml b/tika-serialization/pom.xml",
                "index 4de4fc69a..0554ed132 100644",
                "--- a/tika-serialization/pom.xml",
                "+++ b/tika-serialization/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index a7721d501..5ad093658 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -22,3 +22,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-translate/pom.xml b/tika-translate/pom.xml",
                "index b79366b0c..0769a6296 100644",
                "--- a/tika-translate/pom.xml",
                "+++ b/tika-translate/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>",
                "diff --git a/tika-xmp/pom.xml b/tika-xmp/pom.xml",
                "index 26e20c651..90b142b6a 100644",
                "--- a/tika-xmp/pom.xml",
                "+++ b/tika-xmp/pom.xml",
                "@@ -27,3 +27,3 @@",
                "     <artifactId>tika-parent</artifactId>",
                "-    <version>1.19.1</version>",
                "+    <version>1.19.1-SNAPSHOT</version>",
                "     <relativePath>../tika-parent/pom.xml</relativePath>"
            ],
            "changed_files": [
                "pom.xml",
                "tika-app/pom.xml",
                "tika-batch/pom.xml",
                "tika-bundle/pom.xml",
                "tika-core/pom.xml",
                "tika-dl/pom.xml",
                "tika-eval/pom.xml",
                "tika-example/pom.xml",
                "tika-java7/pom.xml",
                "tika-langdetect/pom.xml",
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-serialization/pom.xml",
                "tika-server/pom.xml",
                "tika-translate/pom.xml",
                "tika-xmp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        }
    ]
}
