{
    "advisory_record": {
        "cve_id": "CVE-2018-11761",
        "description": "In Apache Tika 0.1 to 1.18, the XML parsers were not configured to limit entity expansion. They were therefore vulnerable to an entity expansion vulnerability which can lead to a denial of service attack.",
        "reserved_timestamp": 1528156800,
        "published_timestamp": 1537315200,
        "updated_timestamp": 1573585628,
        "repository_url": null,
        "references": {
            "": 36,
            "https://access.redhat.com/support/": 10,
            "https://access.redhat.com/downloads/": 8,
            "https://access.redhat.com/errata/": 6,
            "https://access.redhat.com/labs/": 6,
            "https://access.redhat.com/security/security-updates/#/cve": 5,
            "https://access.redhat.com/management/": 4,
            "https://access.redhat.com/": 4,
            "https://access.redhat.com/documentation": 4,
            "https://access.redhat.com/product-life-cycles/": 4,
            "https://access.redhat.com/security": 4,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 4,
            "https://access.redhat.com/support/contact/": 4,
            "https://status.redhat.com": 4,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 3,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 3,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 3,
            "https://access.redhat.com/products/": 3,
            "http://www.securityfocus.com/bid/105514": 2,
            "https://lists.apache.org/thread.html/5553e10bba5604117967466618f219c0cae710075819c70cfb3fb421%40%3Cdev.tika.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451%40%3Csolr-user.lucene.apache.org%3E": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html": 2,
            "https://www.openwall.com/lists/oss-security/2018/09/19/4": 2,
            "https://lists.apache.org/thread.html/5553e10bba5604117967466618f219c0cae710075819c70cfb3fb421@%3Cdev.tika.apache.org%3E": 2,
            "commit::bd9d75d8b0a85af2937047bfad04288c3044b2a6": 2,
            "commit::c0c2eafe46224e5c316f2dede395308930a5ec0d": 2,
            "https://access.redhat.com/security/updates/classification/": 2,
            "https://access.redhat.com/security/cve/cve-2018-11761": 2,
            "https://access.redhat.com/downloads/content/package-browser": 2,
            "https://catalog.redhat.com/software/containers/explore/": 2,
            "https://access.redhat.com/articles/1202803": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 2,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 2,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 2,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 2,
            "https://access.redhat.com/documentation/": 2,
            "https://access.redhat.com/security/": 2,
            "https://access.redhat.com/security/vulnerabilities": 2,
            "https://access.redhat.com/security/data": 2,
            "https://access.redhat.com/security/security-updates/#/security-labs": 2,
            "https://access.redhat.com/security/updates/backporting/": 2,
            "https://access.redhat.com/support/cases/": 2,
            "https://access.redhat.com/support/cases/#/troubleshoot": 2,
            "https://access.redhat.com/community": 2,
            "https://access.redhat.com/community/": 2,
            "https://access.redhat.com/discussions/": 2,
            "https://access.redhat.com/announcements/": 2,
            "https://access.redhat.com/accelerators/": 2,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 2,
            "https://cloud.redhat.com/insights": 2,
            "https://access.redhat.com/changeLanguage?language=en": 2,
            "https://access.redhat.com/changeLanguage?language=ko": 2,
            "https://access.redhat.com/changeLanguage?language=ja": 2,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 2,
            "https://redhat.com/en": 2,
            "https://twitter.com/RedHat": 2,
            "https://access.redhat.com/management": 2,
            "https://access.redhat.com/support": 2,
            "https://access.redhat.com/support/customer-service": 2,
            "https://access.redhat.com/articles/33844": 2,
            "https://access.redhat.com/help/login_assistance": 2,
            "https://www.redhat.com/en/trust": 2,
            "https://www.redhat.com/en/about/browser-support": 2,
            "https://www.redhat.com/en/about/digital-accessibility": 2,
            "https://access.redhat.com/recognition/": 2,
            "https://access.redhat.com/help/colophon/": 2,
            "https://www.redhat.com/": 2,
            "http://developers.redhat.com/": 2,
            "https://connect.redhat.com/": 2,
            "https://cloud.redhat.com/": 2,
            "https://access.redhat.com/subscription-value": 2,
            "https://www.redhat.com/about/": 2,
            "http://jobs.redhat.com": 2,
            "https://redhat.com/en/about/company": 2,
            "https://redhat.com/en/jobs": 2,
            "https://redhat.com/en/events": 2,
            "https://redhat.com/en/about/office-locations": 2,
            "https://redhat.com/en/contact": 2,
            "https://redhat.com/en/blog": 2,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 2,
            "https://coolstuff.redhat.com/": 2,
            "https://www.redhat.com/en/summit": 2,
            "https://redhat.com/en/about/privacy-policy": 2,
            "https://redhat.com/en/about/terms-use": 2,
            "https://redhat.com/en/about/all-policies-guidelines": 2,
            "https://redhat.com/en/about/digital-accessibility": 2,
            "https://www.first.org/cvss/user-guide": 1,
            "https://access.redhat.com/security/cve/CVE-2019-9213": 1,
            "https://access.redhat.com/security/cve/CVE-2019-18634": 1,
            "https://access.redhat.com/security/cve/CVE-2020-11023": 1,
            "https://access.redhat.com/security/cve/CVE-2019-15031": 1,
            "https://access.redhat.com/security/cve/CVE-2018-1125": 1,
            "https://access.redhat.com/security/cve/CVE-2020-14060": 1,
            "https://nvd.nist.gov/vuln-metrics/cvss": 1,
            "https://access.redhat.com/site/security/team/contact/": 1,
            "https://access.redhat.com/changeLanguage?language=fr": 1,
            "https://access.redhat.com/products/red-hat-satellite/": 1,
            "https://access.redhat.com/products/red-hat-subscription-management/": 1,
            "https://access.redhat.com/products/red-hat-insights/": 1,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 1,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-quay/": 1,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 1,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 1,
            "https://access.redhat.com/products/red-hat-storage/": 1,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 1,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 1,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 1,
            "https://access.redhat.com/products/red-hat-runtimes/": 1,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 1,
            "https://access.redhat.com/products/red-hat-data-grid/": 1,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 1,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 1,
            "https://access.redhat.com/products/spring-boot/": 1,
            "https://access.redhat.com/products/nodejs/": 1,
            "https://access.redhat.com/products/quarkus/": 1,
            "https://access.redhat.com/products/red-hat-application-foundations/": 1,
            "https://access.redhat.com/products/red-hat-fuse/": 1,
            "https://access.redhat.com/products/red-hat-amq/": 1,
            "https://access.redhat.com/products/red-hat-3scale/": 1
        },
        "affected_products": [
            "Tika",
            "Apache",
            "Apache Tika"
        ],
        "versions": {
            "status": "affected",
            "version": "0.1 to 1.18"
        },
        "files": [
            "XML"
        ],
        "keywords": [
            "limit",
            "tika",
            "attack",
            "configure",
            "expansion",
            "service",
            "entity",
            "apache",
            "lead",
            "parser",
            "vulnerability",
            "denial"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "c0c2eafe46224e5c316f2dede395308930a5ec0d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505496267,
            "hunks": 37,
            "message": "TIKA-2467 refactor creation/configuration of XML parsers/factories/readers to be static methods.",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "index df5e4bf43..314ea76f6 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "@@ -38,2 +38,3 @@ import org.apache.tika.util.ClassLoaderUtil;",
                " import org.apache.tika.util.XMLDOMUtil;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -69,3 +70,3 @@ public class BatchProcessBuilder {",
                "         try {",
                "-            DocumentBuilder docBuilder = new ParseContext().getDocumentBuilder();",
                "+            DocumentBuilder docBuilder = XMLReaderUtils.getDocumentBuilder();",
                "             doc = docBuilder.parse(is);",
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/builders/CommandLineParserBuilder.java b/tika-batch/src/main/java/org/apache/tika/batch/builders/CommandLineParserBuilder.java",
                "index 66b55bf4d..e58f16339 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/builders/CommandLineParserBuilder.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/builders/CommandLineParserBuilder.java",
                "@@ -29,2 +29,3 @@ import org.apache.tika.io.IOExceptionWithCause;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -45,3 +46,3 @@ public class CommandLineParserBuilder {",
                "         try {",
                "-            DocumentBuilder docBuilder = new ParseContext().getDocumentBuilder();",
                "+            DocumentBuilder docBuilder = XMLReaderUtils.getDocumentBuilder();",
                "             doc = docBuilder.parse(is);",
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "index 8ca0d6b8a..28ac235d9 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "@@ -67,2 +67,3 @@ import org.apache.tika.parser.ParserDecorator;",
                " import org.apache.tika.utils.AnnotationUtils;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -129,3 +130,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(getBuilder().parse(path.toFile()), loader);",
                "+        this(XMLReaderUtils.getDocumentBuilder().parse(path.toFile()), loader);",
                "     }",
                "@@ -138,3 +139,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(getBuilder().parse(file), loader);",
                "+        this(XMLReaderUtils.getDocumentBuilder().parse(file), loader);",
                "     }",
                "@@ -147,3 +148,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(getBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "+        this(XMLReaderUtils.getDocumentBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "     }",
                "@@ -151,3 +152,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(getBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "+        this(XMLReaderUtils.getDocumentBuilder().parse(url.toString()).getDocumentElement(), loader);",
                "     }",
                "@@ -156,3 +157,3 @@ public class TikaConfig {",
                "             throws TikaException, IOException, SAXException {",
                "-        this(getBuilder().parse(stream));",
                "+        this(XMLReaderUtils.getDocumentBuilder().parse(stream));",
                "     }",
                "@@ -252,3 +253,3 @@ public class TikaConfig {",
                "             try (InputStream stream = getConfigInputStream(config, tmpServiceLoader)) {",
                "-                Element element = getBuilder().parse(stream).getDocumentElement();",
                "+                Element element = XMLReaderUtils.getDocumentBuilder().parse(stream).getDocumentElement();",
                "                 serviceLoader = serviceLoaderFromDomElement(element, tmpServiceLoader.getLoader());",
                "@@ -392,6 +393,2 @@ public class TikaConfig {",
                "-    private static DocumentBuilder getBuilder() throws TikaException {",
                "-        return new ParseContext().getDocumentBuilder();",
                "-    }",
                "-",
                "     private static Element getChild(Element element, String name) {",
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/TikaConfigSerializer.java b/tika-core/src/main/java/org/apache/tika/config/TikaConfigSerializer.java",
                "index 3a2249e8a..c67b03b13 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/TikaConfigSerializer.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/TikaConfigSerializer.java",
                "@@ -47,2 +47,3 @@ import org.apache.tika.parser.Parser;",
                " import org.apache.tika.parser.ParserDecorator;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -76,3 +77,3 @@ public class TikaConfigSerializer {",
                "             throws Exception {",
                "-        DocumentBuilder docBuilder = new ParseContext().getDocumentBuilder();",
                "+        DocumentBuilder docBuilder = XMLReaderUtils.getDocumentBuilder();",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java b/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "index 2521cc91d..332efcd16 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "@@ -25,8 +25,3 @@ import javax.xml.parsers.SAXParserFactory;",
                " import javax.xml.stream.XMLInputFactory;",
                "-import javax.xml.stream.XMLResolver;",
                "-import javax.xml.stream.XMLStreamException;",
                "-import java.io.IOException;",
                " import java.io.Serializable;",
                "-import java.io.StringReader;",
                "-import java.lang.reflect.Method;",
                " import java.util.HashMap;",
                "@@ -35,5 +30,3 @@ import java.util.Map;",
                " import org.apache.tika.exception.TikaException;",
                "-import org.xml.sax.EntityResolver;",
                "-import org.xml.sax.InputSource;",
                "-import org.xml.sax.SAXException;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.xml.sax.SAXNotRecognizedException;",
                "@@ -56,17 +49,2 @@ public class ParseContext implements Serializable {",
                "-    private static final EntityResolver IGNORING_SAX_ENTITY_RESOLVER = new EntityResolver() {",
                "-        public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {",
                "-            return new InputSource(new StringReader(\"\"));",
                "-        }",
                "-    };",
                "-",
                "-    private static final XMLResolver IGNORING_STAX_ENTITY_RESOLVER =",
                "-            new XMLResolver() {",
                "-                @Override",
                "-                public Object resolveEntity(String publicID, String systemID, String baseURI, String namespace) throws",
                "-                        XMLStreamException {",
                "-                    return \"\";",
                "-                }",
                "-            };",
                "-",
                "     /**",
                "@@ -131,9 +109,3 @@ public class ParseContext implements Serializable {",
                "         }",
                "-        try {",
                "-            reader = getSAXParser().getXMLReader();",
                "-        } catch (SAXException e) {",
                "-            throw new TikaException(\"Unable to create an XMLReader\", e);",
                "-        }",
                "-        reader.setEntityResolver(IGNORING_SAX_ENTITY_RESOLVER);",
                "-        return reader;",
                "+        return XMLReaderUtils.getXMLReader();",
                "     }",
                "@@ -155,9 +127,3 @@ public class ParseContext implements Serializable {",
                "         } else {",
                "-            try {",
                "-                return getSAXParserFactory().newSAXParser();",
                "-            } catch (ParserConfigurationException e) {",
                "-                throw new TikaException(\"Unable to configure a SAX parser\", e);",
                "-            } catch (SAXException e) {",
                "-                throw new TikaException(\"Unable to create a SAX parser\", e);",
                "-            }",
                "+            return XMLReaderUtils.getSAXParser();",
                "         }",
                "@@ -212,10 +178,5 @@ public class ParseContext implements Serializable {",
                "             return documentBuilderFactory;",
                "+        } else {",
                "+            return XMLReaderUtils.getDocumentBuilderFactory();",
                "         }",
                "-        documentBuilderFactory = DocumentBuilderFactory.newInstance();",
                "-        documentBuilderFactory.setNamespaceAware(true);",
                "-        documentBuilderFactory.setValidating(false);",
                "-        tryToSetSAXFeatureOnDOMFactory(documentBuilderFactory,",
                "-            XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "-        tryToSetXercesManager(documentBuilderFactory);",
                "-        return documentBuilderFactory;",
                "     }",
                "@@ -226,3 +187,3 @@ public class ParseContext implements Serializable {",
                "      * instance is created and returned. The builder instance is",
                "-     * configured to apply an {@link #IGNORING_SAX_ENTITY_RESOLVER},",
                "+     * configured to apply an {@link XMLReaderUtils#IGNORING_SAX_ENTITY_RESOLVER},",
                "      * and it sets the ErrorHandler to <code>null</code>.",
                "@@ -236,11 +197,4 @@ public class ParseContext implements Serializable {",
                "             return documentBuilder;",
                "-        }",
                "-        try {",
                "-            DocumentBuilderFactory documentBuilderFactory = getDocumentBuilderFactory();",
                "-            documentBuilder = documentBuilderFactory.newDocumentBuilder();",
                "-            documentBuilder.setEntityResolver(IGNORING_SAX_ENTITY_RESOLVER);",
                "-            documentBuilder.setErrorHandler(null);",
                "-            return documentBuilder;",
                "-        } catch (ParserConfigurationException e) {",
                "-            throw new TikaException(\"XML parser not available\", e);",
                "+        } else {",
                "+            return XMLReaderUtils.getDocumentBuilder();",
                "         }",
                "@@ -253,3 +207,3 @@ public class ParseContext implements Serializable {",
                "      * configured to be namespace-aware and to apply reasonable security",
                "-     * using the {@link #IGNORING_STAX_ENTITY_RESOLVER}.",
                "+     * using the {@link XMLReaderUtils#IGNORING_STAX_ENTITY_RESOLVER}.",
                "      *",
                "@@ -263,42 +217,3 @@ public class ParseContext implements Serializable {",
                "         }",
                "-        factory = XMLInputFactory.newFactory();",
                "-",
                "-        tryToSetStaxProperty(factory, XMLInputFactory.IS_NAMESPACE_AWARE, true);",
                "-        tryToSetStaxProperty(factory, XMLInputFactory.IS_VALIDATING, false);",
                "-",
                "-        factory.setXMLResolver(IGNORING_STAX_ENTITY_RESOLVER);",
                "-        return factory;",
                "-    }",
                "-",
                "-    private static void tryToSetSAXFeatureOnDOMFactory(DocumentBuilderFactory dbf, String feature, boolean value) {",
                "-        try {",
                "-            dbf.setFeature(feature, value);",
                "-        } catch (Exception|AbstractMethodError e) {",
                "-        }",
                "-    }",
                "-",
                "-    private static void tryToSetXercesManager(DocumentBuilderFactory dbf) {",
                "-        // Try built-in JVM one first, standalone if not",
                "-        for (String securityManagerClassName : new String[] {",
                "-                \"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "-                \"org.apache.xerces.util.SecurityManager\"",
                "-        }) {",
                "-            try {",
                "-                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "-                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "-                setLimit.invoke(mgr, 4096);",
                "-                dbf.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "-                // Stop once one can be setup without error",
                "-                return;",
                "-            } catch (Throwable t) {",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private void tryToSetStaxProperty(XMLInputFactory factory, String key, boolean value) {",
                "-        try {",
                "-            factory.setProperty(key, value);",
                "-        } catch (IllegalArgumentException e) {",
                "-            //swallow",
                "-        }",
                "+        return XMLReaderUtils.getXMLInputFactory();",
                "     }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java b/tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java",
                "index 2fd3cb518..1df02e266 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java",
                "@@ -34,2 +34,3 @@ import org.apache.tika.mime.MimeTypeException;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -56,3 +57,3 @@ public final class ExternalParsersConfigReader implements ExternalParsersConfigR",
                "       try {",
                "-          DocumentBuilder builder = new ParseContext().getDocumentBuilder();",
                "+          DocumentBuilder builder = XMLReaderUtils.getDocumentBuilder();",
                "           Document document = builder.parse(new InputSource(stream));",
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "new file mode 100644",
                "index 000000000..6f24708da",
                "--- /dev/null",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -0,0 +1,239 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ * <p>",
                "+ * http://www.apache.org/licenses/LICENSE-2.0",
                "+ * <p>",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.tika.utils;",
                "+",
                "+import org.apache.tika.exception.TikaException;",
                "+import org.xml.sax.EntityResolver;",
                "+import org.xml.sax.InputSource;",
                "+import org.xml.sax.SAXException;",
                "+import org.xml.sax.SAXNotRecognizedException;",
                "+import org.xml.sax.SAXNotSupportedException;",
                "+import org.xml.sax.XMLReader;",
                "+",
                "+import javax.xml.XMLConstants;",
                "+import javax.xml.parsers.DocumentBuilder;",
                "+import javax.xml.parsers.DocumentBuilderFactory;",
                "+import javax.xml.parsers.ParserConfigurationException;",
                "+import javax.xml.parsers.SAXParser;",
                "+import javax.xml.parsers.SAXParserFactory;",
                "+import javax.xml.stream.XMLInputFactory;",
                "+import javax.xml.stream.XMLResolver;",
                "+import javax.xml.stream.XMLStreamException;",
                "+import java.io.IOException;",
                "+import java.io.StringReader;",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * Utility functions for reading XML.  If you are doing SAX parsing, make sure",
                "+ * to use the {@link org.apache.tika.sax.OfflineContentHandler} to guard against",
                "+ * XML External Entity attacks.",
                "+ */",
                "+public class XMLReaderUtils {",
                "+",
                "+    private static final EntityResolver IGNORING_SAX_ENTITY_RESOLVER = new EntityResolver() {",
                "+        public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {",
                "+            return new InputSource(new StringReader(\"\"));",
                "+        }",
                "+    };",
                "+",
                "+    private static final XMLResolver IGNORING_STAX_ENTITY_RESOLVER =",
                "+            new XMLResolver() {",
                "+                @Override",
                "+                public Object resolveEntity(String publicID, String systemID, String baseURI, String namespace) throws",
                "+                        XMLStreamException {",
                "+                    return \"\";",
                "+                }",
                "+            };",
                "+",
                "+    /**",
                "+     * Returns the XMLReader specified in this parsing context. If a reader",
                "+     * is not explicitly specified, then one is created using the specified",
                "+     * or the default SAX parser.",
                "+     *",
                "+     * @see #getSAXParser()",
                "+     * @since Apache Tika 1.13",
                "+     * @return XMLReader",
                "+     * @throws TikaException",
                "+     */",
                "+    public static XMLReader getXMLReader() throws TikaException {",
                "+        XMLReader reader;",
                "+        try {",
                "+            reader = getSAXParser().getXMLReader();",
                "+        } catch (SAXException e) {",
                "+            throw new TikaException(\"Unable to create an XMLReader\", e);",
                "+        }",
                "+        reader.setEntityResolver(IGNORING_SAX_ENTITY_RESOLVER);",
                "+        return reader;",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns the SAX parser specified in this parsing context. If a parser",
                "+     * is not explicitly specified, then one is created using the specified",
                "+     * or the default SAX parser factory.",
                "+     * <p>",
                "+     * Make sure to wrap your handler in the {@link org.apache.tika.sax.OfflineContentHandler} to",
                "+     * prevent XML External Entity attacks",
                "+     * </p>",
                "+",
                "+     *",
                "+     * @see #getSAXParserFactory()",
                "+     * @since Apache Tika 0.8",
                "+     * @return SAX parser",
                "+     * @throws TikaException if a SAX parser could not be created",
                "+     */",
                "+    public static SAXParser getSAXParser() throws TikaException {",
                "+        try {",
                "+            return getSAXParserFactory().newSAXParser();",
                "+        } catch (ParserConfigurationException e) {",
                "+            throw new TikaException(\"Unable to configure a SAX parser\", e);",
                "+        } catch (SAXException e) {",
                "+            throw new TikaException(\"Unable to create a SAX parser\", e);",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns the SAX parser factory specified in this parsing context.",
                "+     * If a factory is not explicitly specified, then a default factory",
                "+     * instance is created and returned. The default factory instance is",
                "+     * configured to be namespace-aware, not validating, and to use",
                "+     * {@link XMLConstants#FEATURE_SECURE_PROCESSING secure XML processing}.",
                "+     * <p>",
                "+     * Make sure to wrap your handler in the {@link org.apache.tika.sax.OfflineContentHandler} to",
                "+     * prevent XML External Entity attacks",
                "+     * </p>",
                "+     *",
                "+     * @since Apache Tika 0.8",
                "+     * @return SAX parser factory",
                "+     */",
                "+    public static SAXParserFactory getSAXParserFactory() {",
                "+        SAXParserFactory factory = SAXParserFactory.newInstance();",
                "+        factory.setNamespaceAware(true);",
                "+        factory.setValidating(false);",
                "+        try {",
                "+            factory.setFeature(",
                "+                    XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "+        } catch (ParserConfigurationException e) {",
                "+        } catch (SAXNotSupportedException e) {",
                "+        } catch (SAXNotRecognizedException e) {",
                "+            // TIKA-271: Some XML parsers do not support the",
                "+            // secure-processing feature, even though it's required by",
                "+            // JAXP in Java 5. Ignoring the exception is fine here, as",
                "+            // deployments without this feature are inherently vulnerable",
                "+            // to XML denial-of-service attacks.",
                "+        }",
                "+",
                "+        return factory;",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns the DOM builder factory specified in this parsing context.",
                "+     * If a factory is not explicitly specified, then a default factory",
                "+     * instance is created and returned. The default factory instance is",
                "+     * configured to be namespace-aware and to apply reasonable security",
                "+     * features.",
                "+     *",
                "+     * @since Apache Tika 1.13",
                "+     * @return DOM parser factory",
                "+     */",
                "+    public static DocumentBuilderFactory getDocumentBuilderFactory() {",
                "+        //borrowed from Apache POI",
                "+        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();",
                "+        documentBuilderFactory.setNamespaceAware(true);",
                "+        documentBuilderFactory.setValidating(false);",
                "+        tryToSetSAXFeatureOnDOMFactory(documentBuilderFactory,",
                "+                XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "+        tryToSetXercesManager(documentBuilderFactory);",
                "+        return documentBuilderFactory;",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns the DOM builder specified in this parsing context.",
                "+     * If a builder is not explicitly specified, then a builder",
                "+     * instance is created and returned. The builder instance is",
                "+     * configured to apply an {@link #IGNORING_SAX_ENTITY_RESOLVER},",
                "+     * and it sets the ErrorHandler to <code>null</code>.",
                "+     *",
                "+     * @since Apache Tika 1.13",
                "+     * @return DOM Builder",
                "+     */",
                "+    public static DocumentBuilder getDocumentBuilder() throws TikaException {",
                "+        try {",
                "+            DocumentBuilderFactory documentBuilderFactory = getDocumentBuilderFactory();",
                "+            DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();",
                "+            documentBuilder.setEntityResolver(IGNORING_SAX_ENTITY_RESOLVER);",
                "+            documentBuilder.setErrorHandler(null);",
                "+            return documentBuilder;",
                "+        } catch (ParserConfigurationException e) {",
                "+            throw new TikaException(\"XML parser not available\", e);",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns the StAX input factory specified in this parsing context.",
                "+     * If a factory is not explicitly specified, then a default factory",
                "+     * instance is created and returned. The default factory instance is",
                "+     * configured to be namespace-aware and to apply reasonable security",
                "+     * using the {@link #IGNORING_STAX_ENTITY_RESOLVER}.",
                "+     *",
                "+     * @since Apache Tika 1.13",
                "+     * @return StAX input factory",
                "+     */",
                "+    public static XMLInputFactory getXMLInputFactory() {",
                "+        XMLInputFactory factory = XMLInputFactory.newFactory();",
                "+",
                "+        tryToSetStaxProperty(factory, XMLInputFactory.IS_NAMESPACE_AWARE, true);",
                "+        tryToSetStaxProperty(factory, XMLInputFactory.IS_VALIDATING, false);",
                "+",
                "+        factory.setXMLResolver(IGNORING_STAX_ENTITY_RESOLVER);",
                "+        return factory;",
                "+    }",
                "+",
                "+    private static void tryToSetSAXFeatureOnDOMFactory(DocumentBuilderFactory dbf, String feature, boolean value) {",
                "+        try {",
                "+            dbf.setFeature(feature, value);",
                "+        } catch (Exception | AbstractMethodError e) {",
                "+        }",
                "+    }",
                "+",
                "+    private static void tryToSetXercesManager(DocumentBuilderFactory dbf) {",
                "+        // Try built-in JVM one first, standalone if not",
                "+        for (String securityManagerClassName : new String[]{",
                "+                \"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "+                \"org.apache.xerces.util.SecurityManager\"",
                "+        }) {",
                "+            try {",
                "+                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "+                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+                setLimit.invoke(mgr, 4096);",
                "+                dbf.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+                // Stop once one can be setup without error",
                "+                return;",
                "+            } catch (Throwable t) {",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static void tryToSetStaxProperty(XMLInputFactory factory, String key, boolean value) {",
                "+        try {",
                "+            factory.setProperty(key, value);",
                "+        } catch (IllegalArgumentException e) {",
                "+            //swallow",
                "+        }",
                "+    }",
                "+",
                "+}",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/io/XMLLogReader.java b/tika-eval/src/main/java/org/apache/tika/eval/io/XMLLogReader.java",
                "index 753866bea..87e4c407a 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/io/XMLLogReader.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/io/XMLLogReader.java",
                "@@ -30,2 +30,3 @@ import org.apache.tika.io.IOUtils;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.slf4j.Logger;",
                "@@ -41,3 +42,3 @@ public class XMLLogReader {",
                "         InputStream is = new LogXMLWrappingInputStream(xmlLogFileIs);",
                "-        XMLInputFactory factory = new ParseContext().getXMLInputFactory();",
                "+        XMLInputFactory factory = XMLReaderUtils.getXMLInputFactory();",
                "         XMLStreamReader reader = factory.createXMLStreamReader(is);",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java b/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "index a9e541a48..db2a17175 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "@@ -47,2 +47,3 @@ import org.apache.tika.eval.db.JDBCUtil;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.slf4j.Logger;",
                "@@ -106,3 +107,3 @@ public class ResultsReporter {",
                "-        DocumentBuilder docBuilder = new ParseContext().getDocumentBuilder();",
                "+        DocumentBuilder docBuilder = XMLReaderUtils.getDocumentBuilder();",
                "         Document doc;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java",
                "index 64ddf734a..d2ee0c63e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java",
                "@@ -61,2 +61,3 @@ import org.apache.tika.parser.ParseContext;",
                " import org.apache.tika.parser.image.xmp.JempboxExtractor;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -185,3 +186,3 @@ public class ImageMetadataExtractor {",
                "         ) {",
                "-            Document dom = new ParseContext().getDocumentBuilder().parse(decoded);",
                "+            Document dom = XMLReaderUtils.getDocumentBuilder().parse(decoded);",
                "             if (dom != null) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java",
                "index 6d5038a51..e847615af 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java",
                "@@ -39,2 +39,3 @@ import org.apache.tika.parser.ParseContext;",
                " import org.apache.tika.utils.DateUtils;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                " import org.w3c.dom.Document;",
                "@@ -68,3 +69,3 @@ public class JempboxExtractor {",
                "         ) {",
                "-            Document dom = new ParseContext().getDocumentBuilder().parse(decoded);",
                "+            Document dom = XMLReaderUtils.getDocumentBuilder().parse(decoded);",
                "             if (dom != null) {"
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java",
                "tika-batch/src/main/java/org/apache/tika/batch/builders/CommandLineParserBuilder.java",
                "tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "tika-core/src/main/java/org/apache/tika/config/TikaConfigSerializer.java",
                "tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java",
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "tika-eval/src/main/java/org/apache/tika/eval/io/XMLLogReader.java",
                "tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2467": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2467",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bd9d75d8b0a85af2937047bfad04288c3044b2a6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533316569,
            "hunks": 7,
            "message": "improve xml reading",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 10c22745b..382be2d04 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -47,2 +47,3 @@ import java.io.Serializable;",
                " import java.io.StringReader;",
                "+import java.lang.reflect.Method;",
                " import java.util.concurrent.ArrayBlockingQueue;",
                "@@ -72,2 +73,4 @@ public class XMLReaderUtils implements Serializable {",
                "+    private static long LAST_LOG = -1;",
                "+",
                "     //TODO: figure out if the rw lock is any better than a simple lock",
                "@@ -140,3 +143,5 @@ public class XMLReaderUtils implements Serializable {",
                "         try {",
                "-            return getSAXParserFactory().newSAXParser();",
                "+            SAXParser parser = getSAXParserFactory().newSAXParser();",
                "+            trySetXercesSecurityManager(parser);",
                "+            return parser;",
                "         } catch (ParserConfigurationException e) {",
                "@@ -204,2 +209,3 @@ public class XMLReaderUtils implements Serializable {",
                "         trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-dtd-grammar\", false);",
                "+        trySetXercesSecurityManager(factory);",
                "         return factory;",
                "@@ -246,2 +252,3 @@ public class XMLReaderUtils implements Serializable {",
                "         factory.setXMLResolver(IGNORING_STAX_ENTITY_RESOLVER);",
                "+        trySetStaxSecurityManager(factory);",
                "         return factory;",
                "@@ -263,3 +270,3 @@ public class XMLReaderUtils implements Serializable {",
                "         } catch (IllegalArgumentException e) {",
                "-            //swallow",
                "+            LOG.log(Level.WARNING, \"StAX Feature unsupported: \" + key, e);",
                "         }",
                "@@ -501,2 +508,88 @@ public class XMLReaderUtils implements Serializable {",
                "     }",
                "+",
                "+    private static void trySetXercesSecurityManager(DocumentBuilderFactory factory) {",
                "+        //from POI",
                "+        // Try built-in JVM one first, standalone if not",
                "+        for (String securityManagerClassName : new String[] {",
                "+                //\"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "+                \"org.apache.xerces.util.SecurityManager\"",
                "+        }) {",
                "+            try {",
                "+                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "+                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+                setLimit.invoke(mgr, 4096);",
                "+                factory.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+                // Stop once one can be setup without error",
                "+                return;",
                "+            } catch (ClassNotFoundException e) {",
                "+                // continue without log, this is expected in some setups",
                "+            } catch (Throwable e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+                // throttle the log somewhat as it can spam the log otherwise",
                "+                if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                    LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                    LAST_LOG = System.currentTimeMillis();",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // separate old version of Xerces not found => use the builtin way of setting the property",
                "+        try {",
                "+            factory.setAttribute(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+        } catch (IllegalArgumentException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static void trySetXercesSecurityManager(SAXParser parser) {",
                "+        //from POI",
                "+        // Try built-in JVM one first, standalone if not",
                "+        for (String securityManagerClassName : new String[] {",
                "+                //\"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "+                \"org.apache.xerces.util.SecurityManager\"",
                "+        }) {",
                "+            try {",
                "+                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "+                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "+                setLimit.invoke(mgr, 4096);",
                "+                parser.setProperty(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "+                // Stop once one can be setup without error",
                "+                return;",
                "+            } catch (ClassNotFoundException e) {",
                "+                // continue without log, this is expected in some setups",
                "+            } catch (Throwable e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+                // throttle the log somewhat as it can spam the log otherwise",
                "+                if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                    LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                    LAST_LOG = System.currentTimeMillis();",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // separate old version of Xerces not found => use the builtin way of setting the property",
                "+        try {",
                "+            parser.setProperty(\"http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\", 4096);",
                "+        } catch (SAXException e) {     // NOSONAR - also catch things like NoClassDefError here",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private static void trySetStaxSecurityManager(XMLInputFactory inputFactory) {",
                "+        try {",
                "+            inputFactory.setProperty(\"com.ctc.wstx.maxEntityCount\", 4096);",
                "+        } catch (IllegalArgumentException e) {",
                "+            // throttle the log somewhat as it can spam the log otherwise",
                "+            if(System.currentTimeMillis() > LAST_LOG + TimeUnit.MINUTES.toMillis(5)) {",
                "+                LOG.log(Level.WARNING, \"SAX Security Manager could not be setup [log suppressed for 5 minutes]\", e);",
                "+                LAST_LOG = System.currentTimeMillis();",
                "+            }",
                "+        }",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "148adec1016acc122fa5e972f75d7029376998d9"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "70ca280f11fe4127df290b8027c6bc1d5180271f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504885008,
            "hunks": 4,
            "message": "TIKA-2460: load custom mimetypes XML from sys prop",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java",
                "index ac434fd3d..c6ffd25fa 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java",
                "@@ -18,2 +18,3 @@ package org.apache.tika.mime;",
                "+import java.io.File;",
                " import java.io.InputStream;",
                "@@ -31,2 +32,8 @@ import org.w3c.dom.Document;",
                " public class MimeTypesFactory {",
                "+    ",
                "+    /**",
                "+     * System property to set a path to an additional external custom mimetypes ",
                "+     * XML file to be loaded.",
                "+     */",
                "+    public static final String CUSTOM_MIMES_SYS_PROP = \"tika.custom-mimetypes\";",
                "@@ -141,2 +148,4 @@ public class MimeTypesFactory {",
                "      *  loader in getResource().",
                "+     *  It will also load custom mimetypes from the system property",
                "+     *  {@link #CUSTOM_MIMES_SYS_PROP}, if specified.",
                "      * ",
                "@@ -169,2 +178,12 @@ public class MimeTypesFactory {",
                "+        String customMimesPath = System.getProperty(CUSTOM_MIMES_SYS_PROP);",
                "+        if(customMimesPath != null){",
                "+            File externalFile = new File(customMimesPath);",
                "+            if(!externalFile.exists())",
                "+                throw new IOException(",
                "+                        \"Specified custom mimetypes file not found: \" + customMimesPath);",
                "+            URL externalURL = externalFile.toURI().toURL();",
                "+            urls.add(externalURL);",
                "+        }",
                "+        ",
                "         return create( urls.toArray(new URL[urls.size()]) );"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2460": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2460",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5cb8d9a9e091ee61c8dc0f334d23c7677f5f519b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533306885,
            "hunks": 11,
            "message": "TIKA-2703 -- related...simplify XSSFB to use more of XSSF rather copy/paste",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index 33dbb7e04..30013182e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -20,4 +20,2 @@ import java.io.IOException;",
                " import java.io.InputStream;",
                "-import java.util.ArrayList;",
                "-import java.util.HashMap;",
                " import java.util.List;",
                "@@ -30,7 +28,2 @@ import org.apache.poi.openxml4j.opc.OPCPackage;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "-import org.apache.poi.openxml4j.opc.PackagePartName;",
                "-import org.apache.poi.openxml4j.opc.PackageRelationship;",
                "-import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;",
                "-import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                "-import org.apache.poi.openxml4j.opc.TargetMode;",
                " import org.apache.poi.xssf.binary.XSSFBCommentsTable;",
                "@@ -42,6 +35,3 @@ import org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler.SheetContentsHandl",
                " import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;",
                "-import org.apache.poi.xssf.usermodel.XSSFDrawing;",
                "-import org.apache.poi.xssf.usermodel.XSSFRelation;",
                " import org.apache.poi.xssf.usermodel.XSSFShape;",
                "-import org.apache.poi.xssf.usermodel.XSSFSimpleShape;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -52,6 +42,2 @@ import org.apache.tika.sax.XHTMLContentHandler;",
                " import org.apache.xmlbeans.XmlException;",
                "-import org.openxmlformats.schemas.drawingml.x2006.main.CTHyperlink;",
                "-import org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps;",
                "-import org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape;",
                "-import org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual;",
                " import org.xml.sax.ContentHandler;",
                "@@ -167,90 +153,2 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "-    private void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "-        try {",
                "-            for (PackageRelationship rel : sheetPart.getRelationshipsByType(XSSFRelation.SHEET_HYPERLINKS.getRelation())) {",
                "-                xhtml.startElement(\"a\", \"href\", rel.getTargetURI().toString());",
                "-                xhtml.characters(rel.getTargetURI().toString());",
                "-                xhtml.endElement(\"a\");",
                "-            }",
                "-        } catch (InvalidFormatException e) {",
                "-            //swallow",
                "-        }",
                "-    }",
                "-",
                "-    private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "-        if (shapes == null) {",
                "-            return;",
                "-        }",
                "-        for (XSSFShape shape : shapes) {",
                "-            if (shape instanceof XSSFSimpleShape) {",
                "-                String sText = ((XSSFSimpleShape) shape).getText();",
                "-                if (sText != null && sText.length() > 0) {",
                "-                    xhtml.element(\"p\", sText);",
                "-                }",
                "-                extractHyperLinksFromShape(((XSSFSimpleShape)shape).getCTShape(), xhtml);",
                "-            }",
                "-            XSSFDrawing drawing = shape.getDrawing();",
                "-            if (drawing != null) {",
                "-                //dump diagram data",
                "-                handleGeneralTextContainingPart(",
                "-                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "-                        \"diagram-data\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-                //dump chart data",
                "-                handleGeneralTextContainingPart(",
                "-                        XSSFRelation.CHART.getRelation(),",
                "-                        \"chart\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    private void extractHyperLinksFromShape(CTShape ctShape, XHTMLContentHandler xhtml) throws SAXException {",
                "-",
                "-        if (ctShape == null)",
                "-            return;",
                "-",
                "-        CTShapeNonVisual nvSpPR = ctShape.getNvSpPr();",
                "-        if (nvSpPR == null)",
                "-            return;",
                "-",
                "-        CTNonVisualDrawingProps cNvPr = nvSpPR.getCNvPr();",
                "-        if (cNvPr == null)",
                "-            return;",
                "-",
                "-        CTHyperlink ctHyperlink = cNvPr.getHlinkClick();",
                "-        if (ctHyperlink == null)",
                "-            return;",
                "-",
                "-        String url = drawingHyperlinks.get(ctHyperlink.getId());",
                "-        if (url != null) {",
                "-            xhtml.startElement(\"a\", \"href\", url);",
                "-            xhtml.characters(url);",
                "-            xhtml.endElement(\"a\");",
                "-        }",
                "-",
                "-        CTHyperlink ctHoverHyperlink = cNvPr.getHlinkHover();",
                "-        if (ctHoverHyperlink == null)",
                "-            return;",
                "-",
                "-        url = drawingHyperlinks.get(ctHoverHyperlink.getId());",
                "-        if (url != null) {",
                "-            xhtml.startElement(\"a\", \"href\", url);",
                "-            xhtml.characters(url);",
                "-            xhtml.endElement(\"a\");",
                "-        }",
                "-",
                "-    }",
                "@@ -275,42 +173,2 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "     }",
                "-",
                "-    /**",
                "-     * In Excel files, sheets have things embedded in them,",
                "-     * and sheet drawings which have the images",
                "-     */",
                "-    @Override",
                "-    protected List<PackagePart> getMainDocumentParts() throws TikaException {",
                "-        List<PackagePart> parts = new ArrayList<PackagePart>();",
                "-        for (PackagePart part : sheetParts) {",
                "-            // Add the sheet",
                "-            parts.add(part);",
                "-",
                "-            // If it has drawings, return those too",
                "-            try {",
                "-                for (PackageRelationship rel : part.getRelationshipsByType(XSSFRelation.DRAWINGS.getRelation())) {",
                "-                    if (rel.getTargetMode() == TargetMode.INTERNAL) {",
                "-                        PackagePartName relName = PackagingURIHelper.createPartName(rel.getTargetURI());",
                "-                        parts.add(rel.getPackage().getPart(relName));",
                "-                    }",
                "-                }",
                "-                for (PackageRelationship rel : part.getRelationshipsByType(XSSFRelation.VML_DRAWINGS.getRelation())) {",
                "-                    if (rel.getTargetMode() == TargetMode.INTERNAL) {",
                "-                        PackagePartName relName = PackagingURIHelper.createPartName(rel.getTargetURI());",
                "-                        parts.add(rel.getPackage().getPart(relName));",
                "-                    }",
                "-                }",
                "-            } catch (InvalidFormatException e) {",
                "-                throw new TikaException(\"Broken OOXML file\", e);",
                "-            }",
                "-        }",
                "-",
                "-        //add main document so that macros can be extracted",
                "-        //by AbstractOOXMLExtractor",
                "-        for (PackagePart part : extractor.getPackage().",
                "-                getPartsByRelationshipType(PackageRelationshipTypes.CORE_DOCUMENT)) {",
                "-            parts.add(part);",
                "-        }",
                "-",
                "-        return parts;",
                "-    }",
                " }",
                "\\ No newline at end of file",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index b92ecc2d2..256fd0ff4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -72,6 +72,4 @@ import org.xml.sax.Attributes;",
                " import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.InputSource;",
                " import org.xml.sax.Locator;",
                " import org.xml.sax.SAXException;",
                "-import org.xml.sax.XMLReader;",
                " import org.xml.sax.helpers.DefaultHandler;",
                "@@ -232,3 +230,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "-    private void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "+    protected void extractHyperLinks(PackagePart sheetPart, XHTMLContentHandler xhtml) throws SAXException {",
                "         try {",
                "@@ -253,3 +251,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "-    private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "+    protected void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {",
                "         if (shapes == null) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2703": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2745cfde46123fc03ad0e7cd59c50aa6aef1f8df"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2703",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2cf0a964c3b1eb200864d3cfec881b4a9bad45fe",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533306066,
            "hunks": 5,
            "message": "TIKA-2703 make sure to process shape's parent drawing only once.",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index 314114802..4560153bd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -18,3 +18,3 @@ package org.apache.tika.parser.microsoft.ooxml;",
                "-import javax.xml.parsers.SAXParser;",
                "+",
                " import java.io.IOException;",
                "@@ -23,2 +23,3 @@ import java.util.ArrayList;",
                " import java.util.HashMap;",
                "+import java.util.HashSet;",
                " import java.util.List;",
                "@@ -26,2 +27,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Set;",
                "@@ -256,2 +258,8 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         }",
                "+        //We don't currently have an obvious way to get drawings",
                "+        //directly from sheetIter. Therefore, we grab the shapes and process those.",
                "+        //To get the diagrams and charts, we need to get the parent drawing for each",
                "+        //shape, and we need to make sure that we only process each parent shape once!",
                "+        //SEE TIKA-2703 TODO: add unit test",
                "+        Set<String> seenParentDrawings = new HashSet<>();",
                "         for (XSSFShape shape : shapes) {",
                "@@ -264,26 +272,30 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             }",
                "-            XSSFDrawing drawing = shape.getDrawing();",
                "-            if (drawing != null) {",
                "-                //dump diagram data",
                "-                handleGeneralTextContainingPart(",
                "-                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "-                        \"diagram-data\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "-                //dump chart data",
                "-                handleGeneralTextContainingPart(",
                "-                        XSSFRelation.CHART.getRelation(),",
                "-                        \"chart\",",
                "-                        drawing.getPackagePart(),",
                "-                        metadata,",
                "-                        new OOXMLWordAndPowerPointTextHandler(",
                "-                                new OOXMLTikaBodyPartHandler(xhtml),",
                "-                                new HashMap<String, String>()//empty",
                "-                        )",
                "-                );",
                "+",
                "+            XSSFDrawing parentDrawing = shape.getDrawing();",
                "+            if (parentDrawing != null) {",
                "+                if (! seenParentDrawings.contains(parentDrawing.getPackagePart().getPartName().toString())) {",
                "+                    //dump diagram data",
                "+                    handleGeneralTextContainingPart(",
                "+                            AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "+                            \"diagram-data\",",
                "+                            parentDrawing.getPackagePart(),",
                "+                            metadata,",
                "+                            new OOXMLWordAndPowerPointTextHandler(",
                "+                                    new OOXMLTikaBodyPartHandler(xhtml),",
                "+                                    new HashMap<String, String>()//empty",
                "+                            )",
                "+                    );",
                "+                    //dump chart data",
                "+                    handleGeneralTextContainingPart(",
                "+                            XSSFRelation.CHART.getRelation(),",
                "+                            \"chart\",",
                "+                            parentDrawing.getPackagePart(),",
                "+                            metadata,",
                "+                            new OOXMLWordAndPowerPointTextHandler(",
                "+                                    new OOXMLTikaBodyPartHandler(xhtml),",
                "+                                    new HashMap<String, String>()//empty",
                "+                            )",
                "+                    );",
                "+                }",
                "+                seenParentDrawings.add(parentDrawing.getPackagePart().getPartName().toString());",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2703": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0486852c46f42130c2f1c26cdd35f38005457a83"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2703",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "933ad02751de2e622ed8b98ca7a2ccaed9e8a3a5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533916211,
            "hunks": 4,
            "message": "specify read-only when opening packages in sax pptx and docx parsers",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "index 3e98203dc..af3eb7465 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "@@ -27,2 +27,3 @@ import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                " import org.apache.poi.openxml4j.opc.OPCPackage;",
                "+import org.apache.poi.openxml4j.opc.PackageAccess;",
                " import org.apache.tika.parser.microsoft.ooxml.OOXMLWordAndPowerPointTextHandler;",
                "@@ -40,3 +41,3 @@ public class XSLFEventBasedPowerPointExtractor extends POIXMLTextExtractor {",
                "     public XSLFEventBasedPowerPointExtractor(String path) throws XmlException, OpenXML4JException, IOException {",
                "-        this(OPCPackage.open(path));",
                "+        this(OPCPackage.open(path, PackageAccess.READ));",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "index 7a5c0c703..e0ad943fd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "@@ -34,2 +34,3 @@ import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                " import org.apache.poi.openxml4j.opc.OPCPackage;",
                "+import org.apache.poi.openxml4j.opc.PackageAccess;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "@@ -64,3 +65,3 @@ public class XWPFEventBasedWordExtractor extends POIXMLTextExtractor {",
                "     public XWPFEventBasedWordExtractor(String path) throws XmlException, OpenXML4JException, IOException {",
                "-        this(OPCPackage.open(path));",
                "+        this(OPCPackage.open(path, PackageAccess.READ));",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f16bd0e2dc8b86fc3cc58b9a80dc7544d549651d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505739703,
            "hunks": 21,
            "message": "TIKA-2429 -- upgrade to POI 3.17, last version of POI that runs on Java < 1.8",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index e92ae8a69..2f72371b6 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -39,3 +39,3 @@",
                "         <lucene.version>5.5.4</lucene.version>",
                "-        <poi.version>3.17-beta1</poi.version>",
                "+        <poi.version>3.17</poi.version>",
                "     </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 34c36694a..2f3e2a9bb 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -37,3 +37,3 @@",
                "   <properties>",
                "-    <poi.version>3.17-beta1</poi.version>",
                "+    <poi.version>3.17</poi.version>",
                "     <!-- NOTE: sync codec version with POI -->",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "index aef09f9d1..e0a2507da 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "@@ -73,5 +73,5 @@ public class WMFParser extends AbstractParser {",
                "                     HwmfFont font = ((HwmfText.WmfCreateFontIndirect) record).getFont();",
                "-                    charset = (font.getCharSet() == null || font.getCharSet().getCharset() == null)",
                "+                    charset = (font.getCharset() == null || font.getCharset().getCharset() == null)",
                "                             ? LocaleUtil.CHARSET_1252 :",
                "-                            font.getCharSet().getCharset();",
                "+                            font.getCharset().getCharset();",
                "                 }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "index 0b3bbd6cd..4e1bfd6ef 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "@@ -46,2 +46,3 @@ import org.apache.poi.poifs.filesystem.Ole10NativeException;",
                " import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
                "+import org.apache.poi.xssf.usermodel.XSSFRelation;",
                " import org.apache.poi.xwpf.usermodel.XWPFRelation;",
                "@@ -79,10 +80,3 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "     static final String RELATION_AUDIO = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/audio\";",
                "-    static final String RELATION_IMAGE = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";",
                "-    static final String RELATION_OLE_OBJECT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject\";",
                "-    static final String RELATION_PACKAGE = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/package\";",
                "-    static final String RELATION_MACRO = \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\";",
                "-    static final String RELATION_OFFICE_DOCUMENT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\";",
                "     static final String RELATION_DIAGRAM_DATA = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/diagramData\";",
                "-    //once we add this to XWPFRelation, we should swap that out and remove this",
                "-    static final String RELATION_CHART = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\";",
                "@@ -93,5 +87,5 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "             RELATION_AUDIO,",
                "-            RELATION_IMAGE,",
                "-            RELATION_PACKAGE,",
                "-            RELATION_OFFICE_DOCUMENT,",
                "+            PackageRelationshipTypes.IMAGE_PART,",
                "+            POIXMLDocument.PACK_OBJECT_REL_TYPE,",
                "+            PackageRelationshipTypes.CORE_DOCUMENT,",
                "             RELATION_DIAGRAM_DATA",
                "@@ -252,3 +246,3 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "             String type = rel.getRelationshipType();",
                "-            if (RELATION_OLE_OBJECT.equals(type)",
                "+            if (POIXMLDocument.OLE_OBJECT_REL_TYPE.equals(type)",
                "                     && TYPE_OLE_OBJECT.equals(target.getContentType())) {",
                "@@ -256,7 +250,7 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "             } else if (RELATION_AUDIO.equals(type)",
                "-                    || RELATION_IMAGE.equals(type)",
                "-                    || RELATION_PACKAGE.equals(type)",
                "-                    || RELATION_OLE_OBJECT.equals(type)) {",
                "+                    || PackageRelationshipTypes.IMAGE_PART.equals(type)",
                "+                    || POIXMLDocument.PACK_OBJECT_REL_TYPE.equals(type)",
                "+                    || POIXMLDocument.OLE_OBJECT_REL_TYPE.equals(type)) {",
                "                 handleEmbeddedFile(target, handler, sourceDesc + rel.getId());",
                "-            } else if (RELATION_MACRO.equals(type)) {",
                "+            } else if (XSSFRelation.VBA_MACROS.getRelation().equals(type)) {",
                "                 handleMacros(target, handler);",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java",
                "index 5c7352e4c..287a129d8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java",
                "@@ -32,2 +32,3 @@ import org.apache.poi.openxml4j.opc.PackageRelationship;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "+import org.apache.poi.xssf.usermodel.XSSFRelation;",
                " import org.apache.poi.xwpf.usermodel.XWPFNumbering;",
                "@@ -158,3 +159,3 @@ public class SXWPFWordExtractorDecorator extends AbstractOOXMLExtractor {",
                "                 AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,",
                "-                AbstractOOXMLExtractor.RELATION_CHART,",
                "+                XSSFRelation.CHART.getRelation(),",
                "                 XWPFRelation.FOOTNOTE.getRelation(),",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index a7516ac49..0a511c21d 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -32,2 +32,3 @@ import org.apache.poi.openxml4j.opc.PackagePartName;",
                " import org.apache.poi.openxml4j.opc.PackageRelationship;",
                "+import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;",
                " import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                "@@ -309,3 +310,3 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "         for (PackagePart part : extractor.getPackage().",
                "-                getPartsByRelationshipType(RELATION_OFFICE_DOCUMENT)) {",
                "+                getPartsByRelationshipType(PackageRelationshipTypes.CORE_DOCUMENT)) {",
                "             parts.add(part);",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index c12059ed2..c3b728540 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -27,2 +27,3 @@ import java.util.Map;",
                "+import org.apache.poi.POIXMLDocument;",
                " import org.apache.poi.POIXMLTextExtractor;",
                "@@ -35,2 +36,3 @@ import org.apache.poi.openxml4j.opc.PackagePartName;",
                " import org.apache.poi.openxml4j.opc.PackageRelationship;",
                "+import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;",
                " import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                "@@ -385,3 +387,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         for (PackagePart part : extractor.getPackage().",
                "-                getPartsByRelationshipType(RELATION_OFFICE_DOCUMENT)) {",
                "+                getPartsByRelationshipType(PackageRelationshipTypes.CORE_DOCUMENT)) {",
                "             parts.add(part);",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java",
                "index 181f77745..55a38fd08 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java",
                "@@ -27,2 +27,3 @@ import org.apache.poi.openxml4j.opc.PackagePart;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "+import org.apache.poi.xssf.usermodel.XSSFRelation;",
                " import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
                "@@ -134,3 +135,3 @@ public class XWPFWordExtractorDecorator extends AbstractOOXMLExtractor {",
                "         handleGeneralTextContainingPart(",
                "-                AbstractOOXMLExtractor.RELATION_CHART,",
                "+                XSSFRelation.CHART.getRelation(),",
                "                 \"chart\",",
                "@@ -396,3 +397,7 @@ public class XWPFWordExtractorDecorator extends AbstractOOXMLExtractor {",
                "-        xhtml.characters(run.toString());",
                "+        if (config.getConcatenatePhoneticRuns()) {",
                "+            xhtml.characters(run.toString());",
                "+        } else {",
                "+            xhtml.characters(run.text());",
                "+        }"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2429": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2429",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb01f0c4ee9255d6650566d28836c8d1c81d68a9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533763357,
            "hunks": 95,
            "message": "TIKA-2552 -- first draft. Need to put back in the 1.x metadata variants",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 57d2ba467..594b6cdc7 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -283,2 +283,4 @@",
                "               org.apache.commons.httpclient.util;resolution:=optional,",
                "+              org.apache.commons.math3.exception;resolution:=optional,",
                "+              org.apache.commons.math3.linear;resolution:=optional,",
                "               org.apache.commons.vfs2;resolution:=optional,",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index e9e5b83c6..52b0d8130 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -37,3 +37,3 @@",
                "   <properties>",
                "-    <poi.version>3.17</poi.version>",
                "+    <poi.version>4.0.0-SNAPSHOT</poi.version>",
                "     <!-- NOTE: sync codec version with POI -->",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "index 7057cbe0a..9990f3008 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "@@ -26,5 +26,3 @@ import org.apache.poi.common.usermodel.Hyperlink;",
                " import org.apache.poi.hslf.exceptions.EncryptedPowerPointFileException;",
                "-import org.apache.poi.hslf.model.Comment;",
                " import org.apache.poi.hslf.model.HeadersFooters;",
                "-import org.apache.poi.hslf.model.OLEShape;",
                " import org.apache.poi.hslf.record.DocInfoListContainer;",
                "@@ -37,2 +35,3 @@ import org.apache.poi.hslf.usermodel.HSLFNotes;",
                " import org.apache.poi.hslf.usermodel.HSLFObjectData;",
                "+import org.apache.poi.hslf.usermodel.HSLFObjectShape;",
                " import org.apache.poi.hslf.usermodel.HSLFPictureData;",
                "@@ -49,2 +48,4 @@ import org.apache.poi.poifs.filesystem.DirectoryNode;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "+import org.apache.poi.sl.usermodel.Comment;",
                "+import org.apache.poi.sl.usermodel.SimpleShape;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -271,3 +272,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "             if (objData.getExOleObjStg().getPersistId() == persistId) {",
                "-                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getData())) {",
                "+                try (NPOIFSFileSystem npoifsFileSystem = new NPOIFSFileSystem(objData.getInputStream())) {",
                "                     try {",
                "@@ -297,3 +298,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape != null && !HSLFMasterSheet.isPlaceholder(shape)) {",
                "+            if (shape != null && ! isPlaceholder(shape)) {",
                "                 if (shape instanceof HSLFTextShape) {",
                "@@ -310,2 +311,6 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "+    private boolean isPlaceholder(HSLFShape shape) {",
                "+        return shape instanceof SimpleShape && ((SimpleShape)shape).isPlaceholder();",
                "+    }",
                "+",
                "     private void extractTableText(XHTMLContentHandler xhtml, HSLFTable shape) throws SAXException {",
                "@@ -451,4 +456,4 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "         for (HSLFShape shape : shapes) {",
                "-            if (shape instanceof OLEShape) {",
                "-                OLEShape oleShape = (OLEShape) shape;",
                "+            if (shape instanceof HSLFObjectShape) {",
                "+                HSLFObjectShape oleShape = (HSLFObjectShape) shape;",
                "                 HSLFObjectData data = null;",
                "@@ -476,3 +481,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                     try {",
                "-                        dataStream = data.getData();",
                "+                        dataStream = data.getInputStream();",
                "                     } catch (Exception e) {",
                "@@ -483,3 +488,3 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {",
                "                         String mediaType = null;",
                "-                        if (\"Excel.Chart.8\".equals(oleShape.getProgID())) {",
                "+                        if (\"Excel.Chart.8\".equals(oleShape.getProgId())) {",
                "                             mediaType = \"application/vnd.ms-excel\";",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "index dc355ae7d..0aed803d1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "@@ -55,3 +55,2 @@ import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                " import org.apache.poi.util.CodePageUtil;",
                "-import org.apache.tika.config.Field;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -76,3 +75,2 @@ import org.apache.tika.sax.EmbeddedContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.bouncycastle.cms.Recipient;",
                " import org.xml.sax.SAXException;",
                "@@ -151,3 +149,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "             try {",
                "-                metadata.set(Office.MAPI_MESSAGE_CLASS, getMessageClass(msg.getMessageClass()));",
                "+                metadata.set(Office.MAPI_MESSAGE_CLASS, msg.getMessageClassEnum().name());",
                "             } catch (ChunkNotFoundException e){}",
                "@@ -487,3 +485,3 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {",
                "-    //TODO: replace this with getMessageClassEnum when we upgrade POI",
                "+    //Still needed by PSTParser",
                "     public static String getMessageClass(String messageClass){",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "index c0727233a..ac5abc943 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "@@ -27,3 +27,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.List;",
                "@@ -32,4 +31,5 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -43,4 +43,2 @@ import org.apache.poi.openxml4j.opc.internal.FileHelper;",
                " import org.apache.poi.poifs.filesystem.DirectoryNode;",
                "-import org.apache.poi.poifs.filesystem.DocumentEntry;",
                "-import org.apache.poi.poifs.filesystem.Entry;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "@@ -71,4 +69,2 @@ import org.xml.sax.helpers.AttributesImpl;",
                "-import javax.xml.parsers.SAXParser;",
                "-",
                " /**",
                "@@ -121,3 +117,3 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {",
                "     public POIXMLDocument getDocument() {",
                "-        return extractor.getDocument();",
                "+        return (POIXMLDocument)extractor.getDocument();",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index dbbb83957..09556b099 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -20,12 +20,11 @@ import java.math.BigDecimal;",
                " import java.util.Date;",
                "+import java.util.Optional;",
                "-import org.apache.poi.POIXMLProperties.CoreProperties;",
                "-import org.apache.poi.POIXMLProperties.CustomProperties;",
                "-import org.apache.poi.POIXMLProperties.ExtendedProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;",
                " import org.apache.poi.openxml4j.util.Nullable;",
                "+import org.apache.poi.ss.formula.functions.T;",
                " import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "-import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -73,3 +72,3 @@ public class MetadataExtractor {",
                "-    private void extractMetadata(CoreProperties properties, Metadata metadata) {",
                "+    private void extractMetadata(POIXMLProperties.CoreProperties properties, Metadata metadata) {",
                "         PackagePropertiesPart propsHolder = properties",
                "@@ -77,6 +76,6 @@ public class MetadataExtractor {",
                "-        addProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.CONTENT_STATUS, propsHolder",
                "                 .getContentStatusProperty());",
                "-        addProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.CREATED, propsHolder",
                "                 .getCreatedProperty());",
                "@@ -84,37 +83,27 @@ public class MetadataExtractor {",
                "                 .getCreatorProperty());",
                "-        addProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.DESCRIPTION, propsHolder",
                "                 .getDescriptionProperty());",
                "-        addProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.IDENTIFIER, propsHolder",
                "                 .getIdentifierProperty());",
                "-        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "+        addProperty(metadata, OfficeOpenXMLCore.SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "+        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "-        addProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.LANGUAGE, propsHolder",
                "                 .getLanguageProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIER, propsHolder",
                "                 .getLastModifiedByProperty());",
                "-        addProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.PRINT_DATE, propsHolder",
                "                 .getLastPrintedProperty());",
                "-        addProperty(metadata, Metadata.LAST_MODIFIED, propsHolder",
                "-                .getModifiedProperty());",
                "-        addProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "+        setProperty(metadata, TikaCoreProperties.MODIFIED, propsHolder",
                "                 .getModifiedProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "+        setProperty(metadata, OfficeOpenXMLCore.REVISION, propsHolder",
                "                 .getRevisionProperty());",
                "-        // TODO: Move to OO subject in Tika 2.0",
                "-        addProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "-                propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "-        addProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "-        addProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "-                .getContentStatusProperty());",
                "-        addProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "-                .getRevisionProperty());",
                "-        addProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "+        setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "+        setProperty(metadata, OfficeOpenXMLCore.VERSION, propsHolder.getVersionProperty());",
                "+",
                "     }",
                "-    private void extractMetadata(ExtendedProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.ExtendedProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -132,11 +121,11 @@ public class MetadataExtractor {",
                "         }",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APPLICATION, propsHolder.getApplication());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.APP_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, TikaCoreProperties.PUBLISHER, propsHolder.getCompany());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.COMPANY, propsHolder.getCompany());",
                "         SummaryExtractor.addMulti(metadata, OfficeOpenXMLExtended.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, OfficeOpenXMLExtended.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, totalTime);",
                "@@ -149,29 +138,12 @@ public class MetadataExtractor {",
                "         // Process the document statistics",
                "-        addProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "-",
                "-        // Legacy Tika-1.0 style stats",
                "-        // TODO Remove these in Tika 2.0",
                "-        addProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "-        addProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "-        addProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "-        addProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "-        addProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "-        addProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "-        addProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "-        addProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "-        addProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "-        addProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "-        addProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "-        addProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "-        addProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+        setProperty(metadata, Office.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, Office.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, Office.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, Office.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, Office.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "-    private void extractMetadata(CustomProperties properties,",
                "+    private void extractMetadata(POIXMLProperties.CustomProperties properties,",
                "                                  Metadata metadata) {",
                "@@ -259,5 +231,7 @@ public class MetadataExtractor {",
                "-    private <T> void addProperty(Metadata metadata, Property property, Nullable<T> nullableValue) {",
                "-        T value = nullableValue.getValue();",
                "-        if (value != null) {",
                "+    private <T> void setProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (! nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "             if (value instanceof Date) {",
                "@@ -271,8 +245,18 @@ public class MetadataExtractor {",
                "             }",
                "-        }",
                "     }",
                "-    private void addProperty(Metadata metadata, String name, Nullable<?> value) {",
                "+    private <T> void addProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "+        }",
                "+        T value = nullableValue.get();",
                "+            if (value instanceof String) {",
                "+                metadata.add(property, (String) value);",
                "+            } else {",
                "+                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "+            }",
                "+    }",
                "+    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "         if (value.getValue() != null) {",
                "-            addProperty(metadata, name, value.getValue().toString());",
                "+            setProperty(metadata, name, value.getValue().toString());",
                "         }",
                "@@ -280,3 +264,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, String value) {",
                "+    private void setProperty(Metadata metadata, Property property, String value) {",
                "         if (value != null) {",
                "@@ -286,3 +270,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, String value) {",
                "+    private void setProperty(Metadata metadata, String name, String value) {",
                "         if (value != null) {",
                "@@ -292,3 +276,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, Property property, int value) {",
                "+    private void setProperty(Metadata metadata, Property property, int value) {",
                "         if (value > 0) {",
                "@@ -298,3 +282,3 @@ public class MetadataExtractor {",
                "-    private void addProperty(Metadata metadata, String name, int value) {",
                "+    private void setProperty(Metadata metadata, String name, int value) {",
                "         if (value > 0) {",
                "@@ -304,7 +288,7 @@ public class MetadataExtractor {",
                "-    private void addMultiProperty(Metadata metadata, Property property, Nullable<String> value) {",
                "-        if (value == null) {",
                "+    private void addMultiProperty(Metadata metadata, Property property, Optional<String> value) {",
                "+        if (! value.isPresent()) {",
                "             return;",
                "         }",
                "-        SummaryExtractor.addMulti(metadata, property, value.getValue());",
                "+        SummaryExtractor.addMulti(metadata, property, value.get());",
                "     }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "index f52e52d80..4ef723e5e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "@@ -20,4 +20,3 @@ import java.io.IOException;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                " import org.apache.tika.exception.TikaException;",
                "@@ -32,3 +31,3 @@ import org.xml.sax.SAXException;",
                "  *",
                "- * @see org.apache.poi.POIXMLTextExtractor",
                "+ * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor",
                "  */",
                "@@ -39,3 +38,3 @@ public interface OOXMLExtractor {",
                "      *",
                "-     * @see POIXMLTextExtractor#getDocument()",
                "+     * @see org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getDocument()",
                "      */",
                "@@ -44,3 +43,3 @@ public interface OOXMLExtractor {",
                "     /**",
                "-     * {@link POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "+     * {@link org.apache.poi.ooxml.extractor.POIXMLTextExtractor#getMetadataTextExtractor()} not yet supported",
                "      * for OOXML by POI.",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "index 5230d6517..d68fa788e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "@@ -23,5 +23,6 @@ import java.util.Locale;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -32,5 +33,8 @@ import org.apache.poi.openxml4j.opc.PackagePart;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "+import org.apache.poi.sl.extractor.SlideShowExtractor;",
                " import org.apache.poi.util.LocaleUtil;",
                "+import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                " import org.apache.poi.xslf.usermodel.XSLFRelation;",
                "+import org.apache.poi.xslf.usermodel.XSLFSlideShow;",
                " import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;",
                "@@ -105,4 +109,4 @@ public class OOXMLExtractorFactory {",
                "             }",
                "-            if (poiExtractor == null && config.getUseSAXPptxExtractor()) {",
                "-                poiExtractor = trySXSLF(pkg);",
                "+            if (poiExtractor == null) {",
                "+                poiExtractor = tryXSLF(pkg, config.getUseSAXPptxExtractor());",
                "             }",
                "@@ -113,3 +117,3 @@ public class OOXMLExtractorFactory {",
                "             if (poiExtractor == null) {",
                "-                poiExtractor = ExtractorFactory.createExtractor(pkg);",
                "+                poiExtractor = (POIXMLTextExtractor) ExtractorFactory.createExtractor(pkg);",
                "             }",
                "@@ -192,3 +196,3 @@ public class OOXMLExtractorFactory {",
                "-    private static POIXMLTextExtractor trySXSLF(OPCPackage pkg) throws XmlException, OpenXML4JException, IOException {",
                "+    private static POIXMLTextExtractor tryXSLF(OPCPackage pkg, boolean eventBased) throws XmlException, OpenXML4JException, IOException {",
                "@@ -210,3 +214,7 @@ public class OOXMLExtractorFactory {",
                "             if (xslfRelation.getContentType().equals(targetContentType)) {",
                "-                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                if (eventBased) {",
                "+                    return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+                } else {",
                "+                    return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+                }",
                "             }",
                "@@ -215,3 +223,7 @@ public class OOXMLExtractorFactory {",
                "         if (XSLFRelation.THEME_MANAGER.getContentType().equals(targetContentType)) {",
                "-            return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            if (eventBased) {",
                "+                return new XSLFEventBasedPowerPointExtractor(pkg);",
                "+            } else {",
                "+                return new XSLFPowerPointExtractor(new XSLFSlideShow(pkg));",
                "+            }",
                "         }",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "index f6ec3bf2d..56d8a71c9 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "@@ -21,3 +21,3 @@ import java.util.List;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "index 35dba6d9f..c7dfc39c8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "@@ -32,2 +32,3 @@ import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
                " import org.apache.poi.openxml4j.opc.TargetMode;",
                "+import org.apache.poi.sl.extractor.SlideShowExtractor;",
                " import org.apache.poi.sl.usermodel.Placeholder;",
                "@@ -35,2 +36,3 @@ import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
                " import org.apache.poi.xslf.usermodel.XMLSlideShow;",
                "+import org.apache.poi.xslf.usermodel.XSLFComment;",
                " import org.apache.poi.xslf.usermodel.XSLFCommentAuthors;",
                "@@ -138,15 +140,13 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "             // comments (if present)",
                "-            XSLFComments comments = slide.getComments();",
                "+            List<XSLFComment> comments = slide.getComments();",
                "             if (comments != null) {",
                "                 StringBuilder authorStringBuilder = new StringBuilder();",
                "-                for (int i = 0; i < comments.getNumberOfComments(); i++) {",
                "+                for (int i = 0; i < comments.size(); i++) {",
                "                     authorStringBuilder.setLength(0);",
                "-                    CTComment comment = comments.getCommentAt(i);",
                "+                    XSLFComment comment = comments.get(i);",
                "                     xhtml.startElement(\"p\", \"class\", \"slide-comment\");",
                "-                    CTCommentAuthor cta = commentAuthors.getAuthorById(comment.getAuthorId());",
                "-                    if (cta != null) {",
                "-                        if (cta.getName() != null) {",
                "-                            authorStringBuilder.append(cta.getName());",
                "+                        if (comment.getAuthor() != null) {",
                "+                            authorStringBuilder.append(comment.getAuthor());",
                "                         }",
                "-                        if (cta.getInitials() != null) {",
                "+                        if (comment.getAuthorInitials() != null) {",
                "                             if (authorStringBuilder.length() > 0) {",
                "@@ -154,3 +154,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                             }",
                "-                            authorStringBuilder.append(\"(\"+cta.getInitials()+\")\");",
                "+                            authorStringBuilder.append(\"(\"+comment.getAuthorInitials()+\")\");",
                "                         }",
                "@@ -164,3 +164,3 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {",
                "                         }",
                "-                    }",
                "+",
                "                     xhtml.characters(comment.getText());",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index db263b29c..102f9a7dd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -23,3 +23,4 @@ import java.util.Locale;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.extractor.POITextExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index 4f8dfbdc2..7832bc967 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -29,4 +29,4 @@ import java.util.Set;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                " import org.apache.poi.hssf.extractor.ExcelExtractor;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "index 50e1e9a6d..2643a3a7a 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "@@ -19,6 +19,7 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "+import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;",
                " import org.apache.commons.io.IOUtils;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.PackagePart;",
                "@@ -31,3 +32,2 @@ import org.apache.tika.extractor.EmbeddedDocumentUtil;",
                " import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.metadata.TikaCoreProperties;",
                " import org.apache.tika.parser.ParseContext;",
                "@@ -37,3 +37,2 @@ import org.apache.tika.sax.OfflineContentHandler;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "-import org.apache.tika.utils.ExceptionUtils;",
                " import org.apache.tika.utils.XMLReaderUtils;",
                "@@ -43,3 +42,2 @@ import org.xml.sax.helpers.DefaultHandler;",
                "-import javax.xml.parsers.SAXParser;",
                " import java.io.IOException;",
                "@@ -51,3 +49,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.zip.ZipEntry;",
                "@@ -251,6 +248,6 @@ public class XPSExtractorDecorator extends AbstractOOXMLExtractor {",
                "         ZipEntrySource zipEntrySource = zipPackage.getZipArchive();",
                "-        Enumeration<? extends ZipEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "-        ZipEntry zipEntry = null;",
                "+        Enumeration<? extends ZipArchiveEntry> zipEntryEnumeration = zipEntrySource.getEntries();",
                "+        ZipArchiveEntry zipEntry = null;",
                "         while (zipEntryEnumeration.hasMoreElements()) {",
                "-            ZipEntry ze = zipEntryEnumeration.nextElement();",
                "+            ZipArchiveEntry ze = zipEntryEnumeration.nextElement();",
                "             if (ze.getName().equals(targPath)) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "index 30aaf0f3f..021292041 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "@@ -19,5 +19,6 @@ package org.apache.tika.parser.microsoft.ooxml.xps;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "index 3e98203dc..bd5615d23 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "@@ -22,5 +22,5 @@ import java.util.Date;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "index 7a5c0c703..ec6370439 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "@@ -28,5 +28,6 @@ import java.util.Map;",
                " import org.apache.commons.io.input.CloseShieldInputStream;",
                "-import org.apache.poi.POIXMLDocument;",
                "-import org.apache.poi.POIXMLProperties;",
                "-import org.apache.poi.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.POIXMLDocument;",
                "+import org.apache.poi.ooxml.POIXMLProperties;",
                "+import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                "+import org.apache.poi.ooxml.util.SAXHelper;",
                " import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
                "@@ -37,3 +38,2 @@ import org.apache.poi.openxml4j.opc.PackageRelationship;",
                " import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;",
                "-import org.apache.poi.util.SAXHelper;",
                " import org.apache.poi.xwpf.usermodel.XWPFNumbering;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "index e5b0b44bc..08174d0ee 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "@@ -240,3 +240,3 @@ public class ZipContainerDetector implements Detector {",
                "         try {",
                "-            zipEntrySource = new ZipFileZipEntrySource(new java.util.zip.ZipFile(stream.getFile()));",
                "+            zipEntrySource = new ZipFileZipEntrySource(new ZipFile(stream.getFile()));",
                "         } catch (IOException e) {",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "index a43c789f3..4387ca403 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "@@ -34,2 +34,3 @@ import org.apache.poi.poifs.filesystem.DocumentInputStream;",
                " import org.apache.poi.poifs.filesystem.Entry;",
                "+import org.apache.poi.poifs.filesystem.FileMagic;",
                " import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;",
                "@@ -37,2 +38,3 @@ import org.apache.poi.poifs.filesystem.Ole10Native;",
                " import org.apache.poi.poifs.filesystem.Ole10NativeException;",
                "+import org.apache.poi.poifs.storage.HeaderBlock;",
                " import org.apache.poi.util.IOUtils;",
                "@@ -117,3 +119,3 @@ class RTFObjDataParser {",
                "             try {",
                "-                hasPoifs = NPOIFSFileSystem.hasPOIFSHeader(embIs);",
                "+                hasPoifs = hasPOIFSHeader(embIs);",
                "             } catch (IOException e) {",
                "@@ -330,2 +332,6 @@ class RTFObjDataParser {",
                "     }",
                "+",
                "+    private static boolean hasPOIFSHeader(InputStream is) throws IOException {",
                "+        return FileMagic.valueOf(is) == FileMagic.OLE2;",
                "+    }",
                " }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index b21a03c77..4d8679c28 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -22,3 +22,3 @@ import org.apache.cxf.attachment.ContentDisposition;",
                " import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.poi.ooxml.extractor.ExtractorFactory;",
                " import org.apache.tika.Tika;"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/POIXMLTextExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSTextExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xslf/XSLFEventBasedPowerPointExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/XWPFEventBasedWordExtractor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6fbc59a696b8254fde57e79130daa54837e0f136",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533820484,
            "hunks": 14,
            "message": "TIKA-2552 -- Add back the 1.x metadata variants",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "index 09556b099..e5da8ce4c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java",
                "@@ -18,6 +18,2 @@ package org.apache.tika.parser.microsoft.ooxml;",
                "-import java.math.BigDecimal;",
                "-import java.util.Date;",
                "-import java.util.Optional;",
                "-",
                " import org.apache.poi.ooxml.POIXMLProperties;",
                "@@ -25,6 +21,5 @@ import org.apache.poi.ooxml.extractor.POIXMLTextExtractor;",
                " import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;",
                "-import org.apache.poi.openxml4j.util.Nullable;",
                "-import org.apache.poi.ss.formula.functions.T;",
                " import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.MSOffice;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -44,2 +39,6 @@ import org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProp",
                "+import java.math.BigDecimal;",
                "+import java.util.Date;",
                "+import java.util.Optional;",
                "+",
                " /**",
                "@@ -89,3 +88,3 @@ public class MetadataExtractor {",
                "                 propsHolder.getSubjectProperty());",
                "-        addProperty(metadata, Office.KEYWORDS, propsHolder",
                "+        addProperty(metadata, TikaCoreProperties.KEYWORDS, propsHolder",
                "                 .getKeywordsProperty());",
                "@@ -101,3 +100,5 @@ public class MetadataExtractor {",
                "                 .getRevisionProperty());",
                "-",
                "+        // TODO: Move to OO subject in Tika 2.0",
                "+        setProperty(metadata, TikaCoreProperties.TRANSITION_SUBJECT_TO_OO_SUBJECT,",
                "+                propsHolder.getSubjectProperty());",
                "         setProperty(metadata, TikaCoreProperties.TITLE, propsHolder.getTitleProperty());",
                "@@ -105,2 +106,10 @@ public class MetadataExtractor {",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.CATEGORY, propsHolder.getCategoryProperty());",
                "+        setProperty(metadata, Metadata.CONTENT_STATUS, propsHolder",
                "+                .getContentStatusProperty());",
                "+        setProperty(metadata, Metadata.REVISION_NUMBER, propsHolder",
                "+                .getRevisionProperty());",
                "+        setProperty(metadata, Metadata.VERSION, propsHolder.getVersionProperty());",
                "     }",
                "@@ -145,2 +154,19 @@ public class MetadataExtractor {",
                "         setProperty(metadata, Office.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "+",
                "+        // Legacy Tika-1.0 style stats",
                "+        // TODO Remove these in Tika 2.0",
                "+        setProperty(metadata, Metadata.APPLICATION_NAME, propsHolder.getApplication());",
                "+        setProperty(metadata, Metadata.APPLICATION_VERSION, propsHolder.getAppVersion());",
                "+        setProperty(metadata, Metadata.MANAGER, propsHolder.getManager());",
                "+        setProperty(metadata, Metadata.NOTES, propsHolder.getNotes());",
                "+        setProperty(metadata, Metadata.PRESENTATION_FORMAT, propsHolder.getPresentationFormat());",
                "+        setProperty(metadata, Metadata.TEMPLATE, propsHolder.getTemplate());",
                "+        setProperty(metadata, Metadata.TOTAL_TIME, totalTime);",
                "+        setProperty(metadata, MSOffice.PAGE_COUNT, propsHolder.getPages());",
                "+        setProperty(metadata, MSOffice.SLIDE_COUNT, propsHolder.getSlides());",
                "+        setProperty(metadata, MSOffice.PARAGRAPH_COUNT, propsHolder.getParagraphs());",
                "+        setProperty(metadata, MSOffice.LINE_COUNT, propsHolder.getLines());",
                "+        setProperty(metadata, MSOffice.WORD_COUNT, propsHolder.getWords());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT, propsHolder.getCharacters());",
                "+        setProperty(metadata, MSOffice.CHARACTER_COUNT_WITH_SPACES, propsHolder.getCharactersWithSpaces());",
                "     }",
                "@@ -232,3 +258,3 @@ public class MetadataExtractor {",
                "     private <T> void setProperty(Metadata metadata, Property property, Optional<T> nullableValue) {",
                "-        if (! nullableValue.isPresent()) {",
                "+        if (!nullableValue.isPresent()) {",
                "             return;",
                "@@ -236,11 +262,11 @@ public class MetadataExtractor {",
                "         T value = nullableValue.get();",
                "-            if (value instanceof Date) {",
                "-                metadata.set(property, (Date) value);",
                "-            } else if (value instanceof String) {",
                "-                metadata.set(property, (String) value);",
                "-            } else if (value instanceof Integer) {",
                "-                metadata.set(property, (Integer) value);",
                "-            } else if (value instanceof Double) {",
                "-                metadata.set(property, (Double) value);",
                "-            }",
                "+        if (value instanceof Date) {",
                "+            metadata.set(property, (Date) value);",
                "+        } else if (value instanceof String) {",
                "+            metadata.set(property, (String) value);",
                "+        } else if (value instanceof Integer) {",
                "+            metadata.set(property, (Integer) value);",
                "+        } else if (value instanceof Double) {",
                "+            metadata.set(property, (Double) value);",
                "+        }",
                "     }",
                "@@ -252,12 +278,15 @@ public class MetadataExtractor {",
                "         T value = nullableValue.get();",
                "-            if (value instanceof String) {",
                "-                metadata.add(property, (String) value);",
                "-            } else {",
                "-                throw new IllegalArgumentException(\"Can't add property of class: \"+nullableValue.getClass());",
                "-            }",
                "+        if (value instanceof String) {",
                "+            metadata.add(property, (String) value);",
                "+        } else {",
                "+            throw new IllegalArgumentException(\"Can't add property of class: \" + nullableValue.getClass());",
                "+        }",
                "     }",
                "-    private void setProperty(Metadata metadata, String name, Nullable<?> value) {",
                "-        if (value.getValue() != null) {",
                "-            setProperty(metadata, name, value.getValue().toString());",
                "+",
                "+    private void setProperty(Metadata metadata, String property, Optional<String> nullableValue) {",
                "+        if (!nullableValue.isPresent()) {",
                "+            return;",
                "         }",
                "+        String value = nullableValue.get();",
                "+        metadata.set(property, value);",
                "     }",
                "@@ -289,3 +318,3 @@ public class MetadataExtractor {",
                "     private void addMultiProperty(Metadata metadata, Property property, Optional<String> value) {",
                "-        if (! value.isPresent()) {",
                "+        if (!value.isPresent()) {",
                "             return;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2552": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2552",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dcfbe5a2d578696dfba309dec400e977f047cfb2",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526594824,
            "hunks": 10,
            "message": "TIKA-2479 Output missing left/mid cells in XLSX and XLSB, and optionally also missing rows",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "index 0a511c21d..0367afca8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "@@ -120,3 +120,3 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {",
                "-            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config.getIncludeHeadersAndFooters(), xhtml);",
                "+            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config, xhtml);",
                "             XSSFBCommentsTable comments = iter.getXSSFBSheetComments();",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "index bf6505b1e..314114802 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java",
                "@@ -27,3 +27,2 @@ import java.util.Map;",
                "-import org.apache.poi.POIXMLDocument;",
                " import org.apache.poi.POIXMLTextExtractor;",
                "@@ -41,2 +40,3 @@ import org.apache.poi.ss.usermodel.DataFormatter;",
                " import org.apache.poi.ss.usermodel.HeaderFooter;",
                "+import org.apache.poi.ss.util.CellReference;",
                " import org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;",
                "@@ -59,2 +59,3 @@ import org.apache.tika.metadata.TikaMetadataKeys;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.microsoft.OfficeParserConfig;",
                " import org.apache.tika.parser.microsoft.TikaExcelDataFormatter;",
                "@@ -148,4 +149,3 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         while (iter.hasNext()) {",
                "-",
                "-            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config.getIncludeHeadersAndFooters(), xhtml);",
                "+            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(config, xhtml);",
                "             PackagePart sheetPart = null;",
                "@@ -398,7 +398,11 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "         private final boolean includeHeadersFooters;",
                "+        private final boolean includeMissingRows;",
                "         protected List<String> headers;",
                "         protected List<String> footers;",
                "+        private int lastSeenRow = -1;",
                "+        private int lastSeenCol = -1;",
                "-        protected SheetTextAsHTML(boolean includeHeaderFooters, XHTMLContentHandler xhtml) {",
                "-            this.includeHeadersFooters = includeHeaderFooters;",
                "+        protected SheetTextAsHTML(OfficeParserConfig config, XHTMLContentHandler xhtml) {",
                "+            this.includeHeadersFooters = config.getIncludeHeadersAndFooters();",
                "+            this.includeMissingRows = config.getIncludeMissingRows();",
                "             this.xhtml = xhtml;",
                "@@ -410,3 +414,15 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             try {",
                "+                // Missing rows, if desired, with a single empty row",
                "+                if (includeMissingRows && rowNum > (lastSeenRow+1)) {",
                "+                    for (int rn=lastSeenRow+1; rn<rowNum; rn++) {",
                "+                        xhtml.startElement(\"tr\");",
                "+                        xhtml.startElement(\"td\");",
                "+                        xhtml.endElement(\"td\");",
                "+                        xhtml.endElement(\"tr\");",
                "+                    }",
                "+                }",
                "+",
                "+                // Start the new row",
                "                 xhtml.startElement(\"tr\");",
                "+                lastSeenCol = -1;",
                "             } catch (SAXException e) {",
                "@@ -424,2 +440,11 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {",
                "             try {",
                "+                // Handle any missing cells",
                "+                int colNum = (new CellReference(cellRef)).getCol();",
                "+                for (int cn=lastSeenCol+1; cn<colNum; cn++) {",
                "+                    xhtml.startElement(\"td\");",
                "+                    xhtml.endElement(\"td\");",
                "+                }",
                "+                lastSeenCol = colNum;",
                "+",
                "+                // Start this cell",
                "                 xhtml.startElement(\"td\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0e38f9419121f08117283e1876e8abd02b2ab52f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1506113289,
            "hunks": 5,
            "message": "TIKA-2470 -- modernize DocumentBuilderFactory security for Java 9",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index a326f14ca..98fceeb87 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -43,3 +43,4 @@ import java.io.IOException;",
                " import java.io.StringReader;",
                "-import java.lang.reflect.Method;",
                "+import java.util.logging.Level;",
                "+import java.util.logging.Logger;",
                "@@ -51,2 +52,3 @@ import java.lang.reflect.Method;",
                " public class XMLReaderUtils {",
                "+    private static final Logger LOG = Logger.getLogger(XMLReaderUtils.class.getName());",
                "@@ -159,9 +161,10 @@ public class XMLReaderUtils {",
                "         //borrowed from Apache POI",
                "-        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();",
                "-        documentBuilderFactory.setNamespaceAware(true);",
                "-        documentBuilderFactory.setValidating(false);",
                "-        tryToSetSAXFeatureOnDOMFactory(documentBuilderFactory,",
                "-                XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "-        tryToSetXercesManager(documentBuilderFactory);",
                "-        return documentBuilderFactory;",
                "+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
                "+        factory.setExpandEntityReferences(false);",
                "+        trySetSAXFeature(factory, XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "+        trySetSAXFeature(factory, \"http://xml.org/sax/features/external-general-entities\", false);",
                "+        trySetSAXFeature(factory, \"http://xml.org/sax/features/external-parameter-entities\", false);",
                "+        trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
                "+        trySetSAXFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-dtd-grammar\", false);",
                "+        return factory;",
                "     }",
                "@@ -210,24 +213,9 @@ public class XMLReaderUtils {",
                "-    private static void tryToSetSAXFeatureOnDOMFactory(DocumentBuilderFactory dbf, String feature, boolean value) {",
                "+    private static void trySetSAXFeature(DocumentBuilderFactory documentBuilderFactory, String feature, boolean enabled) {",
                "         try {",
                "-            dbf.setFeature(feature, value);",
                "-        } catch (Exception | AbstractMethodError e) {",
                "-        }",
                "-    }",
                "-",
                "-    private static void tryToSetXercesManager(DocumentBuilderFactory dbf) {",
                "-        // Try built-in JVM one first, standalone if not",
                "-        for (String securityManagerClassName : new String[]{",
                "-                \"com.sun.org.apache.xerces.internal.util.SecurityManager\",",
                "-                \"org.apache.xerces.util.SecurityManager\"",
                "-        }) {",
                "-            try {",
                "-                Object mgr = Class.forName(securityManagerClassName).newInstance();",
                "-                Method setLimit = mgr.getClass().getMethod(\"setEntityExpansionLimit\", Integer.TYPE);",
                "-                setLimit.invoke(mgr, 4096);",
                "-                dbf.setAttribute(\"http://apache.org/xml/properties/security-manager\", mgr);",
                "-                // Stop once one can be setup without error",
                "-                return;",
                "-            } catch (Throwable t) {",
                "-            }",
                "+            documentBuilderFactory.setFeature(feature, enabled);",
                "+        } catch (Exception e) {",
                "+            LOG.log(Level.WARNING, \"SAX Feature unsupported: \"+feature, e);",
                "+        } catch (AbstractMethodError ame) {",
                "+            LOG.log(Level.WARNING, \"Cannot set SAX feature because outdated XML parser in classpath: \"+ feature, ame);",
                "         }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2470": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: security",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2470",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ac259320057d8b7a8937dc5ee183b3a5c346a3bc",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1506027021,
            "hunks": 25,
            "message": "TIKA-2466 Remove JAXB for easier use with Java 9 via Robert Munteanu.",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/Param.java b/tika-core/src/main/java/org/apache/tika/config/Param.java",
                "index b54f6be47..112955b20 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/Param.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/Param.java",
                "@@ -18,11 +18,17 @@ package org.apache.tika.config;",
                "+import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.utils.XMLReaderUtils;",
                "+import org.w3c.dom.Document;",
                "+import org.w3c.dom.Element;",
                " import org.w3c.dom.Node;",
                "+import org.xml.sax.SAXException;",
                "+",
                "+import javax.xml.parsers.DocumentBuilder;",
                "+import javax.xml.transform.Transformer;",
                "+import javax.xml.transform.TransformerException;",
                "+import javax.xml.transform.dom.DOMSource;",
                "+import javax.xml.transform.stream.StreamResult;",
                "-import javax.xml.bind.JAXBContext;",
                "-import javax.xml.bind.JAXBException;",
                "-import javax.xml.bind.Marshaller;",
                "-import javax.xml.bind.Unmarshaller;",
                "-import javax.xml.bind.annotation.*;",
                "-import javax.xml.bind.helpers.DefaultValidationEventHandler;",
                " import java.io.File;",
                "+import java.io.IOException;",
                " import java.io.InputStream;",
                "@@ -40,3 +46,3 @@ import java.util.Map;",
                " /**",
                "- * This is a JAXB serializable model class for parameters from configuration file.",
                "+ * This is a serializable model class for parameters from configuration file.",
                "  *",
                "@@ -45,9 +51,4 @@ import java.util.Map;",
                "  */",
                "-@XmlRootElement()",
                "-@XmlAccessorType(XmlAccessType.NONE)",
                " public class Param<T> implements Serializable {",
                "-    private static final JAXBContext JAXB_CTX;",
                "-    private static final Marshaller MARSHALLER;",
                "-    private static final Unmarshaller UNMARSHALLER;",
                "     private static final Map<Class<?>, String> map = new HashMap<>();",
                "@@ -71,23 +72,10 @@ public class Param<T> implements Serializable {",
                "         }",
                "-        try {",
                "-            JAXB_CTX = JAXBContext.newInstance(Param.class);",
                "-            MARSHALLER = JAXB_CTX.createMarshaller();",
                "-            MARSHALLER.setEventHandler(new DefaultValidationEventHandler());",
                "-            UNMARSHALLER = JAXB_CTX.createUnmarshaller();",
                "-            UNMARSHALLER.setEventHandler(new DefaultValidationEventHandler());",
                "-        } catch (JAXBException e) {",
                "-            throw new RuntimeException(e);",
                "-        }",
                "     }",
                "-    @XmlTransient",
                "     private Class<T> type;",
                "-    @XmlAttribute(name = \"name\")",
                "     private String name;",
                "-    @XmlValue()",
                "     private String value;",
                "-    @XmlTransient",
                "     private T actualValue;",
                "@@ -115,3 +103,2 @@ public class Param<T> implements Serializable {",
                "-    @XmlTransient",
                "     public Class<T> getType() {",
                "@@ -124,3 +111,2 @@ public class Param<T> implements Serializable {",
                "-    @XmlAttribute(name = \"type\")",
                "     public String getTypeString(){",
                "@@ -139,9 +125,4 @@ public class Param<T> implements Serializable {",
                "         }",
                "-        if (reverseMap.containsKey(type)){",
                "-            this.type = (Class<T>) reverseMap.get(type);",
                "-        } else try {",
                "-            this.type = (Class<T>) Class.forName(type);",
                "-        } catch (ClassNotFoundException e) {",
                "-            throw new RuntimeException(e);",
                "-        }",
                "+        ",
                "+        this.type = classFromType(type);",
                "         this.actualValue = null;",
                "@@ -149,14 +130,5 @@ public class Param<T> implements Serializable {",
                "-    @XmlTransient",
                "     public T getValue(){",
                "         if (actualValue == null) {",
                "-            try {",
                "-                Constructor<T> constructor = type.getConstructor(String.class);",
                "-                constructor.setAccessible(true);",
                "-                this.actualValue = constructor.newInstance(value);",
                "-            } catch (NoSuchMethodException e) {",
                "-                throw new RuntimeException(type + \" doesnt have a constructor that takes String arg\", e);",
                "-            } catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {",
                "-                throw new RuntimeException(e);",
                "-            }",
                "+            actualValue = getTypedValue(type, value);",
                "         }",
                "@@ -174,16 +146,71 @@ public class Param<T> implements Serializable {",
                "-    public void save(OutputStream stream) throws JAXBException {",
                "-        MARSHALLER.marshal(this, stream);",
                "+    public void save(OutputStream stream) throws TransformerException, TikaException {",
                "+        ",
                "+        ",
                "+        DocumentBuilder builder = XMLReaderUtils.getDocumentBuilder();",
                "+        Document doc = builder.newDocument();",
                "+        Element paramEl = doc.createElement(\"param\");",
                "+        doc.appendChild(paramEl);",
                "+        ",
                "+        save(paramEl);",
                "+        ",
                "+        Transformer transformer = XMLReaderUtils.getTransformer();",
                "+        transformer.transform(new DOMSource(paramEl), new StreamResult(stream));",
                "     }",
                "-    public void save(Node node) throws JAXBException {",
                "-        MARSHALLER.marshal(this, node);",
                "-    }",
                "+    public void save(Node node) {",
                "-    public static <T> Param<T> load(InputStream stream) throws JAXBException {",
                "-        return (Param<T>) UNMARSHALLER.unmarshal(stream);",
                "+        if ( !(node instanceof Element) ) {",
                "+            throw new IllegalArgumentException(\"Not an Element : \" + node);",
                "+        }",
                "+        ",
                "+        Element el = (Element) node;",
                "+        ",
                "+        el.setAttribute(\"name\",  getName());",
                "+        el.setAttribute(\"type\", getTypeString());",
                "+        el.setTextContent(value);",
                "+    }",
                "+",
                "+    public static <T> Param<T> load(InputStream stream) throws SAXException, IOException, TikaException {",
                "+        ",
                "+        DocumentBuilder db = XMLReaderUtils.getDocumentBuilder();",
                "+        Document document = db.parse(stream);",
                "+        ",
                "+        return load(document.getFirstChild());",
                "+    }",
                "+",
                "+    public static <T> Param<T> load(Node node)  {",
                "+        ",
                "+        Node nameAttr = node.getAttributes().getNamedItem(\"name\");",
                "+        Node typeAttr = node.getAttributes().getNamedItem(\"type\");",
                "+        Node value = node.getFirstChild();",
                "+        ",
                "+        Param<T> ret = new Param<T>();",
                "+        ret.name  = nameAttr.getTextContent();",
                "+        ret.setTypeString(typeAttr.getTextContent());",
                "+        ret.value = value.getTextContent();",
                "+        ",
                "+        return ret;",
                "+    }",
                "+    ",
                "+    private static <T> Class<T> classFromType(String type) {",
                "+        if (reverseMap.containsKey(type)){",
                "+            return (Class<T>) reverseMap.get(type);",
                "+        } else try {",
                "+            return (Class<T>) Class.forName(type);",
                "+        } catch (ClassNotFoundException e) {",
                "+            throw new RuntimeException(e);",
                "+        }",
                "     }",
                "-",
                "-    public static <T> Param<T> load(Node node) throws JAXBException {",
                "-        return (Param<T>) UNMARSHALLER.unmarshal(node);",
                "+    ",
                "+    private static <T> T getTypedValue(Class<T> type, String value) {",
                "+        try {",
                "+            Constructor<T> constructor = type.getConstructor(String.class);",
                "+            constructor.setAccessible(true);",
                "+            return constructor.newInstance(value);",
                "+        } catch (NoSuchMethodException e) {",
                "+            throw new RuntimeException(type + \" doesnt have a constructor that takes String arg\", e);",
                "+        } catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {",
                "+            throw new RuntimeException(e);",
                "+        }        ",
                "     }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "index 28ac235d9..951804210 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "@@ -19,3 +19,2 @@ package org.apache.tika.config;",
                " import javax.imageio.spi.ServiceRegistry;",
                "-import javax.xml.bind.JAXBException;",
                " import javax.xml.parsers.DocumentBuilder;",
                "@@ -687,8 +686,4 @@ public class TikaConfig {",
                "                             if (item.getNodeType() == Node.ELEMENT_NODE){",
                "-                                try {",
                "-                                    Param<?> param = Param.load(item);",
                "-                                    params.put(param.getName(), param);",
                "-                                } catch (JAXBException e) {",
                "-                                    throw new RuntimeException(e);",
                "-                                }",
                "+                                Param<?> param = Param.load(item);",
                "+                                params.put(param.getName(), param);",
                "                             }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java b/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "index 332efcd16..68df47bd5 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "@@ -25,2 +25,10 @@ import javax.xml.parsers.SAXParserFactory;",
                " import javax.xml.stream.XMLInputFactory;",
                "+import javax.xml.stream.XMLResolver;",
                "+import javax.xml.stream.XMLStreamException;",
                "+import javax.xml.transform.Transformer;",
                "+import javax.xml.transform.TransformerConfigurationException;",
                "+import javax.xml.transform.TransformerFactory;",
                "+import javax.xml.transform.TransformerFactoryConfigurationError;",
                "+",
                "+import java.io.IOException;",
                " import java.io.Serializable;",
                "@@ -219,2 +227,25 @@ public class ParseContext implements Serializable {",
                "     }",
                "+  ",
                "+    ",
                "+    /**",
                "+     * Returns the transformer specified in this parsing context.",
                "+     * ",
                "+     * If a transformer is not explicitly specified, then a default transformer",
                "+     * instance is created and returned. The default transformer instance is",
                "+     * configured to to use",
                "+     * {@link XMLConstants#FEATURE_SECURE_PROCESSING secure XML processing}.",
                "+     *",
                "+     * @since Apache Tika 1.17",
                "+     * @return Transformer",
                "+     * @throws TikaException when the transformer can not be created",
                "+     */",
                "+    public Transformer getTransformer() throws TikaException {",
                "+        ",
                "+        Transformer transformer = get(Transformer.class);",
                "+        if ( transformer != null ) {",
                "+            return transformer;",
                "+        }",
                "+        ",
                "+        return XMLReaderUtils.getTransformer();",
                "+    }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 6f24708da..a326f14ca 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -36,2 +36,7 @@ import javax.xml.stream.XMLResolver;",
                " import javax.xml.stream.XMLStreamException;",
                "+import javax.xml.transform.Transformer;",
                "+import javax.xml.transform.TransformerConfigurationException;",
                "+import javax.xml.transform.TransformerFactory;",
                "+import javax.xml.transform.TransformerFactoryConfigurationError;",
                "+",
                " import java.io.IOException;",
                "@@ -238,2 +243,22 @@ public class XMLReaderUtils {",
                "+    /**",
                "+     * Returns a new transformer",
                "+     * ",
                "+     * The transformer instance is configured to to use",
                "+     * {@link XMLConstants#FEATURE_SECURE_PROCESSING secure XML processing}.",
                "+     *",
                "+     * @since Apache Tika 1.17",
                "+     * @return Transformer",
                "+     * @throws TikaException when the transformer can not be created",
                "+     */",
                "+    public static Transformer getTransformer() throws TikaException {",
                "+        try {",
                "+            TransformerFactory transformerFactory = TransformerFactory.newInstance();",
                "+            transformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
                "+            return transformerFactory.newTransformer();",
                "+        } catch (TransformerConfigurationException | TransformerFactoryConfigurationError e) {",
                "+            throw new TikaException(\"Transformer not available\", e);",
                "+        }        ",
                "+    }",
                "+",
                " }"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/config/Param.java",
                "tika-core/src/main/java/org/apache/tika/config/TikaConfig.java",
                "tika-core/src/main/java/org/apache/tika/parser/ParseContext.java",
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2466": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2466",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1438d8a22a634912d7a5ccbfd6f9c3d4543de583",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532632658,
            "hunks": 22,
            "message": "TIKA-2692 -- general upgrades in prep for 1.19 # Conflicts: #\ttika-dl/pom.xml #\ttika-parsers/pom.xml",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index b08cb9ebd..584d8e826 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -146,2 +146,3 @@",
                "             <_runsystempackages>com.sun.xml.bind.marshaller, com.sun.xml.internal.bind.marshaller</_runsystempackages>",
                "+            <_noee>true</_noee>",
                "             <Bundle-Activator>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index 9110f42b9..baa7ec1ef 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -310,6 +310,6 @@",
                "     <commons.io.version>2.6</commons.io.version>",
                "-    <gson.version>2.8.1</gson.version>",
                "+    <gson.version>2.8.5</gson.version>",
                "     <cxf.version>3.2.5</cxf.version>",
                "-    <slf4j.version>1.7.24</slf4j.version>",
                "-    <jackson.version>2.9.5</jackson.version>",
                "+    <slf4j.version>1.7.25</slf4j.version>",
                "+    <jackson.version>2.9.6</jackson.version>",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "@@ -357,3 +357,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.3.0</version>",
                "+        <version>3.5.1</version>",
                "       </plugin>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 38b15db50..6b51f30e5 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -39,3 +39,3 @@",
                "     <!-- NOTE: sync codec version with POI -->",
                "-    <codec.version>1.10</codec.version>",
                "+    <codec.version>1.11</codec.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parent-->",
                "@@ -44,3 +44,3 @@",
                "     <brotli.version>0.1.2</brotli.version>",
                "-    <mime4j.version>0.8.1</mime4j.version>",
                "+    <mime4j.version>0.8.2</mime4j.version>",
                "     <vorbis.version>0.8</vorbis.version>",
                "@@ -50,2 +50,3 @@",
                "     <sis.version>0.8</sis.version>",
                "+    <parso.version>2.0.9</parso.version>",
                "     <!-- used by POI, PDFBox and Jackcess ...try to sync -->",
                "@@ -117,3 +118,3 @@",
                "       <artifactId>jackcess</artifactId>",
                "-      <version>2.1.10</version>",
                "+      <version>2.1.12</version>",
                "       <exclusions>",
                "@@ -241,2 +242,8 @@",
                "       <version>${poi.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -270,3 +277,3 @@",
                "       <artifactId>asm</artifactId>",
                "-      <version>5.0.4</version>",
                "+      <version>6.2</version>",
                "     </dependency>",
                "@@ -275,3 +282,3 @@",
                "       <artifactId>isoparser</artifactId>",
                "-      <version>1.1.18</version>",
                "+      <version>1.1.22</version>",
                "     </dependency>",
                "@@ -280,3 +287,3 @@",
                "       <artifactId>metadata-extractor</artifactId>",
                "-      <version>2.10.1</version>",
                "+      <version>2.11.0</version>",
                "     </dependency>",
                "@@ -311,3 +318,9 @@",
                "       <artifactId>jhighlight</artifactId>",
                "-      <version>1.0.2</version>",
                "+      <version>1.0.3</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -323,3 +336,3 @@",
                "       <artifactId>junrar</artifactId>",
                "-      <version>1.0.1</version>",
                "+      <version>2.0.0</version>",
                "       <exclusions>",
                "@@ -365,3 +378,3 @@",
                "       <artifactId>opennlp-tools</artifactId>",
                "-      <version>1.8.4</version>",
                "+      <version>1.9.0</version>",
                "     </dependency>",
                "@@ -448,2 +461,8 @@",
                "         </exclusion>",
                "+        <!--TIKA 2672 exclude jna to resolve the dependency convergence with tika-dl's",
                "+        deeplearning4j-nn:1.0.0-SNAPSHOT-->",
                "+        <exclusion>",
                "+          <groupId>net.java.dev.jna</groupId>",
                "+          <artifactId>jna</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -469,2 +488,10 @@",
                "     </dependency>",
                "+    <!--TIKA 2672 include a later version of jna as a direct dependency to resolve dependency convergence with tika-dl's",
                "+    deeplearning4j-nn:1.0.0-SNAPSHOT -->",
                "+    <dependency>",
                "+      <groupId>net.java.dev.jna</groupId>",
                "+      <artifactId>jna</artifactId>",
                "+      <version>4.3.0</version>",
                "+    </dependency>",
                "+",
                "     <!-- grib's current jsoup is vulnerable to xss",
                "@@ -474,4 +501,5 @@",
                "       <artifactId>jsoup</artifactId>",
                "-      <version>1.11.2</version>",
                "-    </dependency>    <dependency>",
                "+      <version>1.11.3</version>",
                "+    </dependency>",
                "+    <dependency>",
                "       <groupId>edu.ucar</groupId>",
                "@@ -531,2 +559,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -543,3 +575,3 @@",
                "       <artifactId>commons-csv</artifactId>",
                "-      <version>1.0</version>",
                "+      <version>1.5</version>",
                "     </dependency>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "index cf80e4727..633b2ccdd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "@@ -25,2 +25,3 @@ import com.github.junrar.Archive;",
                " import com.github.junrar.exception.RarException;",
                "+import com.github.junrar.impl.FileVolumeManager;",
                " import com.github.junrar.rarfile.FileHeader;",
                "@@ -67,3 +68,3 @@ public class RarParser extends AbstractParser {",
                "             TikaInputStream tis = TikaInputStream.get(stream, tmp);",
                "-            rar = new Archive(tis.getFile());",
                "+            rar = new Archive(new FileVolumeManager(tis.getFile()));"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8f61126bebc4ac94f20b5a213b6208f3be4ca269"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "39e119413717cd618a203d4889214d044a5dd222",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525362747,
            "hunks": 7,
            "message": "More SAS7BDAT metadata",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/metadata/Database.java b/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "index 7f91a3730..190fe8995 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "@@ -22,4 +22,5 @@ public interface Database {",
                "     Property TABLE_NAME = Property.externalTextBag(PREFIX+\"table_name\");",
                "-    Property COLUMN_COUNT = Property.externalText(PREFIX+\"column_count\");",
                "+    Property ROW_COUNT = Property.externalInteger(PREFIX+\"row_count\");",
                "+    Property COLUMN_COUNT = Property.externalInteger(PREFIX+\"column_count\");",
                "     Property COLUMN_NAME = Property.externalTextBag(PREFIX+\"column_name\");",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 5992e15a4..56260cafa 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -24,3 +24,7 @@ import java.util.Set;",
                " import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.Database;",
                "+import org.apache.tika.metadata.HttpHeaders;",
                " import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.OfficeOpenXMLExtended;",
                "+import org.apache.tika.metadata.PagedText;",
                " import org.apache.tika.metadata.TikaCoreProperties;",
                "@@ -29,2 +33,3 @@ import org.apache.tika.parser.AbstractParser;",
                " import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.executable.MachineMetadata;",
                " import org.apache.tika.sax.XHTMLContentHandler;",
                "@@ -73,47 +78,36 @@ public class SAS7BDATParser extends AbstractParser {",
                "-        // TODO What about these?",
                "-/*",
                "-u64 - false",
                "-compressionMethod - null",
                "-endianness - 1",
                "-encoding - windows-1252",
                "-sessionEncoding - null",
                "-fileType - DATA",
                "-sasRelease - 9.0101M3",
                "-serverType - XP_PRO",
                "-osName - ",
                "-osType - ",
                "-headerLength - 1024",
                "-pageLength - 8192",
                "-pageCount - 1",
                "-rowLength - 96",
                "-rowCount - 31",
                "-mixPageRowCount - 69",
                "-columnsCount - 5",
                "-*/",
                "+        metadata.set(PagedText.N_PAGES,     (int)props.getPageCount());",
                "+        metadata.set(Database.COLUMN_COUNT, (int)props.getColumnsCount());",
                "+        metadata.set(Database.ROW_COUNT,    (int)props.getRowCount());",
                "+",
                "+        // TODO Can we find more general properties for these / move",
                "+        //  these to more general places?",
                "+        metadata.set(HttpHeaders.CONTENT_ENCODING, props.getEncoding());",
                "+        metadata.set(OfficeOpenXMLExtended.APPLICATION, props.getServerType());",
                "+        metadata.set(OfficeOpenXMLExtended.APP_VERSION, props.getSasRelease());",
                "+        metadata.set(MachineMetadata.ARCHITECTURE_BITS, ",
                "+                     props.isU64() ? \"64\" : \"32\");",
                "+        metadata.set(MachineMetadata.ENDIAN, props.getEndianness() == 1 ? ",
                "+                     MachineMetadata.Endian.LITTLE.getName() : ",
                "+                     MachineMetadata.Endian.BIG.getName());",
                "+",
                "+        // The following SAS Metadata fields are currently ignored:",
                "+        // compressionMethod",
                "+        // sessionEncoding",
                "+        // fileType",
                "+        // osName - ",
                "+        // osType - ",
                "+        // mixPageRowCount",
                "+        // headerLength",
                "+        // pageLength",
                "+        // rowLength",
                "+",
                "+        // Process the column metadata",
                "+        // TODO Find keys to record the format and the type",
                "+        for (Column c : sas.getColumns()) {",
                "+            String name = c.getLabel();",
                "+            if (name == null || name.isEmpty()) name = c.getName();",
                "+            metadata.add(Database.COLUMN_NAME, name);",
                "+        }",
                "-        // TODO Should we output more Column info as metadata?",
                "-/*",
                "-5 Columns defined:",
                "- 1 - A",
                "-  Label: A",
                "-  Format: $58.",
                "-  Size 58 of java.lang.String",
                "- 2 - B",
                "-  Label: B",
                "-  Format: ",
                "-  Size 8 of java.lang.Number",
                "- 3 - C",
                "-  Label: C",
                "-  Format: DATE8.",
                "-  Size 8 of java.lang.Number",
                "- 4 - D",
                "-  Label: D",
                "-  Format: DATETIME17.",
                "-  Size 8 of java.lang.Number",
                "- 5 - E",
                "-  Label: E",
                "-  Format: ",
                "-  Size 8 of java.lang.Number",
                "-*/"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/metadata/Database.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c54efd8b2f319c9c1547b293a5dd2fe80be564fa",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1506114278,
            "hunks": 1,
            "message": "TIKA-2470 -- fix...add back namespace aware",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "index 98fceeb87..eeedcc6f9 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java",
                "@@ -163,2 +163,5 @@ public class XMLReaderUtils {",
                "         factory.setExpandEntityReferences(false);",
                "+        factory.setNamespaceAware(true);",
                "+        factory.setValidating(false);",
                "+",
                "         trySetSAXFeature(factory, XMLConstants.FEATURE_SECURE_PROCESSING, true);"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2470": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2470",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "015c695c7d5a4549c26be247497559d03769f1e4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505743474,
            "hunks": 9,
            "message": "TIKA-2429 -- upgrade to POI 3.17, and get it right in tika-eval",
            "diff": [
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java b/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "index db2a17175..11764ddaf 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "@@ -41,3 +41,3 @@ import org.apache.commons.cli.Options;",
                " import org.apache.commons.cli.ParseException;",
                "-import org.apache.poi.common.usermodel.Hyperlink;",
                "+import org.apache.poi.common.usermodel.HyperlinkType;",
                " import org.apache.tika.eval.ExtractComparer;",
                "@@ -46,3 +46,2 @@ import org.apache.tika.eval.db.H2Util;",
                " import org.apache.tika.eval.db.JDBCUtil;",
                "-import org.apache.tika.parser.ParseContext;",
                " import org.apache.tika.utils.XMLReaderUtils;",
                "@@ -184,3 +183,3 @@ public class ResultsReporter {",
                "                 }",
                "-                XLSXHREFFormatter f = new XLSXHREFFormatter(base, Hyperlink.LINK_URL);",
                "+                XLSXHREFFormatter f = new XLSXHREFFormatter(base, HyperlinkType.URL);",
                "                 ret.put(columnName, f);",
                "@@ -192,3 +191,3 @@ public class ResultsReporter {",
                "                 }",
                "-                XLSXHREFFormatter f = new XLSXHREFFormatter(base, Hyperlink.LINK_FILE);",
                "+                XLSXHREFFormatter f = new XLSXHREFFormatter(base, HyperlinkType.FILE);",
                "                 ret.put(columnName, f);",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/reports/XLSXHREFFormatter.java b/tika-eval/src/main/java/org/apache/tika/eval/reports/XLSXHREFFormatter.java",
                "index f8b9ba2d3..11b72f481 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/reports/XLSXHREFFormatter.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/reports/XLSXHREFFormatter.java",
                "@@ -22,2 +22,3 @@ import java.sql.SQLException;",
                "+import org.apache.poi.common.usermodel.HyperlinkType;",
                " import org.apache.poi.ss.usermodel.Cell;",
                "@@ -29,2 +30,4 @@ import org.apache.poi.xssf.usermodel.XSSFWorkbook;",
                "+import javax.swing.event.HyperlinkListener;",
                "+",
                "@@ -37,3 +40,3 @@ public class XLSXHREFFormatter implements XSLXCellFormatter {",
                "     private final String urlBase;",
                "-    private final int linkType;",
                "+    private final HyperlinkType linkType;",
                "     private XSSFWorkbook workbook;",
                "@@ -43,5 +46,5 @@ public class XLSXHREFFormatter implements XSLXCellFormatter {",
                "     public XLSXHREFFormatter(String urlBase,",
                "-                             int linkType) {",
                "+                             HyperlinkType hyperlinkType) {",
                "         this.urlBase = urlBase;",
                "-        this.linkType = linkType;",
                "+        this.linkType = hyperlinkType;",
                "     }"
            ],
            "changed_files": [
                "tika-eval/src/main/java/org/apache/tika/eval/reports/ResultsReporter.java",
                "tika-eval/src/main/java/org/apache/tika/eval/reports/XLSXHREFFormatter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2429": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2429",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2d19fe0ad26f68c6cc2caeaed713cd28179dede7",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524782596,
            "hunks": 2,
            "message": "TIKA-2462 Initial parser for SAS7BDAT files powered by Parso (now ASLv2). Still to do: Metadata, Unit Tests, Consistency with similar format tests",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "new file mode 100644",
                "index 000000000..1cef3cd6d",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -0,0 +1,100 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.sas;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.util.Collections;",
                "+import java.util.Set;",
                "+",
                "+import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.TikaCoreProperties;",
                "+import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.parser.AbstractParser;",
                "+import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.sax.XHTMLContentHandler;",
                "+import org.xml.sax.ContentHandler;",
                "+import org.xml.sax.SAXException;",
                "+",
                "+import com.epam.parso.Column;",
                "+import com.epam.parso.DataWriterUtil;",
                "+import com.epam.parso.SasFileReader;",
                "+import com.epam.parso.impl.SasFileReaderImpl;",
                "+",
                "+/**",
                "+ * Processes the SAS7BDAT data columnar database file used by SAS and ",
                "+ *  other similar languages.",
                "+ */",
                "+public class SAS7BDATParser extends AbstractParser {",
                "+    private static final long serialVersionUID = -2775485539937983150L;",
                "+    ",
                "+    private static final MediaType TYPE_SAS7BDAT =",
                "+            MediaType.application(\"x-sas-data\");",
                "+    private static final Set<MediaType> SUPPORTED_TYPES =",
                "+            Collections.singleton(TYPE_SAS7BDAT);",
                "+",
                "+    @Override",
                "+    public Set<MediaType> getSupportedTypes(ParseContext context) {",
                "+        return SUPPORTED_TYPES;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void parse(InputStream stream, ContentHandler handler,",
                "+            Metadata metadata, ParseContext context)",
                "+            throws IOException, SAXException, TikaException {",
                "+        metadata.set(Metadata.CONTENT_TYPE, TYPE_SAS7BDAT.toString());",
                "+",
                "+        XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);",
                "+        xhtml.startDocument();",
                "+        ",
                "+        SasFileReader sas = new SasFileReaderImpl(stream);",
                "+        ",
                "+        // TODO Metadata",
                "+",
                "+        // Output as a table",
                "+        xhtml.startElement(\"table\");",
                "+        xhtml.newline();",
                "+        ",
                "+        // Do the column headings",
                "+        xhtml.startElement(\"tr\");",
                "+        for (Column c : sas.getColumns()) {",
                "+            xhtml.startElement(\"th\", \"title\", c.getName());",
                "+            xhtml.characters(c.getLabel());",
                "+            xhtml.endElement(\"th\");",
                "+        }",
                "+        xhtml.endElement(\"tr\");",
                "+        xhtml.newline();",
                "+        ",
                "+        // Process each row in turn",
                "+        Object[] row = null;",
                "+        while ((row = sas.readNext()) != null) {",
                "+            xhtml.startElement(\"tr\");",
                "+            for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "+                xhtml.startElement(\"td\");",
                "+                xhtml.characters(val);",
                "+                xhtml.endElement(\"td\");",
                "+            }",
                "+            xhtml.endElement(\"tr\");",
                "+            xhtml.newline();",
                "+        }",
                "+",
                "+        // Finish",
                "+        xhtml.endElement(\"table\");",
                "+        xhtml.newline();",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser b/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "index aa8725eab..a33a5780b 100644",
                "--- a/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "+++ b/tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser",
                "@@ -60,2 +60,3 @@ org.apache.tika.parser.pkg.RarParser",
                " org.apache.tika.parser.rtf.RTFParser",
                "+org.apache.tika.parser.sas.SAS7BDATParser",
                " org.apache.tika.parser.txt.TXTParser"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2462": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: service, parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2462",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b2973e3561638aa8b9f3d5da876f360227c9534c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543225,
            "hunks": 2,
            "message": "TIKA-2691 -- upgrade jai-imageio-core and pdfbox's jbig2-imageio while we're at it.",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 05a6f180a..08620d99e 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -733,3 +733,3 @@",
                "       <artifactId>jbig2-imageio</artifactId>",
                "-      <version>3.0.0</version>",
                "+      <version>3.0.1</version>",
                "     </dependency>",
                "@@ -740,3 +740,3 @@",
                "       <artifactId>jai-imageio-core</artifactId>",
                "-      <version>1.3.1</version>",
                "+      <version>1.4.0</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2691": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1551a796b00949da4f7e7a26c9a5342c08882b18"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2691",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "519decf461a3b7004fbd4fa2d447763659f9d297",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533664423,
            "hunks": 18,
            "message": "TIKA-2705 -- allow parameter configuration for tesseract via tika-config.xml",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "index c6ff21cc9..1c65ecedb 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "@@ -73,6 +73,6 @@ public class TesseractOCRConfig implements Serializable {",
                "     // Minimum file size to submit file to ocr.",
                "-    private int minFileSizeToOcr = 0;",
                "+    private long minFileSizeToOcr = 0;",
                "     // Maximum file size to submit file to ocr.",
                "-    private int maxFileSizeToOcr = Integer.MAX_VALUE;",
                "+    private long maxFileSizeToOcr = Integer.MAX_VALUE;",
                "@@ -324,5 +324,5 @@ public class TesseractOCRConfig implements Serializable {",
                "     /**",
                "-     * @see #setMinFileSizeToOcr(int minFileSizeToOcr)",
                "+     * @see #setMinFileSizeToOcr(long minFileSizeToOcr)",
                "      */",
                "-    public int getMinFileSizeToOcr() {",
                "+    public long getMinFileSizeToOcr() {",
                "         return minFileSizeToOcr;",
                "@@ -334,3 +334,3 @@ public class TesseractOCRConfig implements Serializable {",
                "      */",
                "-    public void setMinFileSizeToOcr(int minFileSizeToOcr) {",
                "+    public void setMinFileSizeToOcr(long minFileSizeToOcr) {",
                "         this.minFileSizeToOcr = minFileSizeToOcr;",
                "@@ -339,5 +339,5 @@ public class TesseractOCRConfig implements Serializable {",
                "     /**",
                "-     * @see #setMaxFileSizeToOcr(int maxFileSizeToOcr)",
                "+     * @see #setMaxFileSizeToOcr(long maxFileSizeToOcr)",
                "      */",
                "-    public int getMaxFileSizeToOcr() {",
                "+    public long getMaxFileSizeToOcr() {",
                "         return maxFileSizeToOcr;",
                "@@ -349,3 +349,3 @@ public class TesseractOCRConfig implements Serializable {",
                "      */",
                "-    public void setMaxFileSizeToOcr(int maxFileSizeToOcr) {",
                "+    public void setMaxFileSizeToOcr(long maxFileSizeToOcr) {",
                "         this.maxFileSizeToOcr = maxFileSizeToOcr;",
                "@@ -624,2 +624,24 @@ public class TesseractOCRConfig implements Serializable {",
                "+    /**",
                "+     * Get property from the properties file passed in.",
                "+     *",
                "+     * @param properties     properties file to read from.",
                "+     * @param property       the property to fetch.",
                "+     * @param defaultMissing default parameter to use.",
                "+     * @return the value.",
                "+     */",
                "+    private long getProp(Properties properties, String property, long defaultMissing) {",
                "+        String p = properties.getProperty(property);",
                "+        if (p == null || p.isEmpty()) {",
                "+            return defaultMissing;",
                "+        }",
                "+        try {",
                "+            return Integer.parseInt(p);",
                "+        } catch (Throwable ex) {",
                "+            throw new RuntimeException(String.format(Locale.ROOT, \"Cannot parse TesseractOCRConfig variable %s, invalid integer value\",",
                "+                    property), ex);",
                "+        }",
                "+    }",
                "+",
                "+",
                "     /**",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "index d3238c23a..df46f00c2 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java",
                "@@ -18,36 +18,2 @@ package org.apache.tika.parser.ocr;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "-",
                "-import javax.imageio.ImageIO;",
                "-import javax.xml.parsers.SAXParser;",
                "-import java.awt.Image;",
                "-import java.awt.image.BufferedImage;",
                "-import java.io.ByteArrayOutputStream;",
                "-import java.io.File;",
                "-import java.io.FileInputStream;",
                "-import java.io.FileOutputStream;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.io.InputStreamReader;",
                "-import java.io.OutputStreamWriter;",
                "-import java.io.Reader;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.file.Files;",
                "-import java.nio.file.Paths;",
                "-import java.nio.file.StandardCopyOption;",
                "-import java.util.ArrayList;",
                "-import java.util.Arrays;",
                "-import java.util.Collections;",
                "-import java.util.HashMap;",
                "-import java.util.HashSet;",
                "-import java.util.List;",
                "-import java.util.Locale;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-import java.util.concurrent.Callable;",
                "-import java.util.concurrent.ExecutionException;",
                "-import java.util.concurrent.FutureTask;",
                "-import java.util.concurrent.TimeUnit;",
                "-import java.util.concurrent.TimeoutException;",
                "-",
                " import org.apache.commons.exec.CommandLine;",
                "@@ -58,2 +24,3 @@ import org.apache.commons.io.IOUtils;",
                " import org.apache.commons.lang.SystemUtils;",
                "+import org.apache.tika.config.Field;",
                " import org.apache.tika.config.Initializable;",
                "@@ -86,2 +53,35 @@ import org.xml.sax.helpers.DefaultHandler;",
                "+import javax.imageio.ImageIO;",
                "+import java.awt.Image;",
                "+import java.awt.image.BufferedImage;",
                "+import java.io.ByteArrayOutputStream;",
                "+import java.io.File;",
                "+import java.io.FileInputStream;",
                "+import java.io.FileOutputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.InputStreamReader;",
                "+import java.io.OutputStreamWriter;",
                "+import java.io.Reader;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.file.Files;",
                "+import java.nio.file.Paths;",
                "+import java.nio.file.StandardCopyOption;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                "+import java.util.HashSet;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.ExecutionException;",
                "+import java.util.concurrent.FutureTask;",
                "+import java.util.concurrent.TimeUnit;",
                "+import java.util.concurrent.TimeoutException;",
                "+",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "+",
                " /**",
                "@@ -108,3 +108,2 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "     private static final long serialVersionUID = -8167538283213097265L;",
                "-    private static final TesseractOCRConfig DEFAULT_CONFIG = new TesseractOCRConfig();",
                "     private static final Set<MediaType> SUPPORTED_TYPES = Collections.unmodifiableSet(",
                "@@ -115,2 +114,4 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "             })));",
                "+    private final TesseractOCRConfig defaultConfig = new TesseractOCRConfig();",
                "+",
                "     private static Map<String,Boolean> TESSERACT_PRESENT = new HashMap<>();",
                "@@ -122,3 +123,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "         // If Tesseract is installed, offer our supported image types",
                "-        TesseractOCRConfig config = context.get(TesseractOCRConfig.class, DEFAULT_CONFIG);",
                "+        TesseractOCRConfig config = context.get(TesseractOCRConfig.class, defaultConfig);",
                "         if (hasTesseract(config)) {",
                "@@ -260,3 +261,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "             throws IOException, SAXException, TikaException {",
                "-        TesseractOCRConfig config = parseContext.get(TesseractOCRConfig.class, DEFAULT_CONFIG);",
                "+        TesseractOCRConfig config = parseContext.get(TesseractOCRConfig.class, defaultConfig);",
                "         // If Tesseract is not on the path with the current config, do not try to run OCR",
                "@@ -473,3 +474,3 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "         if (! hasWarned()) {",
                "-            if (hasTesseract(DEFAULT_CONFIG)) {",
                "+            if (hasTesseract(defaultConfig)) {",
                "                 problemHandler.handleInitializableProblem(this.getClass().getName(),",
                "@@ -698,2 +699,86 @@ public class TesseractOCRParser extends AbstractParser implements Initializable",
                "     }",
                "+",
                "+    @Field",
                "+    public void setTesseractPath(String tesseractPath) {",
                "+        defaultConfig.setTesseractPath(tesseractPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setTessdataPath(String tessdataPath) {",
                "+        defaultConfig.setTessdataPath(tessdataPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setLanguage(String language) {",
                "+        defaultConfig.setLanguage(language);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setPageSegMode(String pageSegMode) {",
                "+        defaultConfig.setPageSegMode(pageSegMode);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setMinFileSizeToOcr(long minFileSizeToOcr) {",
                "+        defaultConfig.setMinFileSizeToOcr(minFileSizeToOcr);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setTimeout(int timeout) {",
                "+        defaultConfig.setTimeout(timeout);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setOutputType(String outputType) {",
                "+        defaultConfig.setOutputType(outputType);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setPreserveInterwordSpacing(boolean preserveInterwordSpacing) {",
                "+        defaultConfig.setPreserveInterwordSpacing(preserveInterwordSpacing);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setEnableImageProcessing(int enableImageProcessing) {",
                "+        defaultConfig.setEnableImageProcessing(enableImageProcessing);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setImageMagickPath(String imageMagickPath) {",
                "+        defaultConfig.setImageMagickPath(imageMagickPath);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setDensity(int density) {",
                "+        defaultConfig.setDensity(density);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setDepth(int depth) {",
                "+        defaultConfig.setDepth(depth);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setColorspace(String colorspace) {",
                "+        defaultConfig.setColorspace(colorspace);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setFilter(String filter) {",
                "+        defaultConfig.setFilter(filter);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setResize(int resize) {",
                "+        defaultConfig.setResize(resize);",
                "+    }",
                "+",
                "+    @Field",
                "+    public void setApplyRotation(boolean applyRotation) {",
                "+        defaultConfig.setApplyRotation(applyRotation);",
                "+    }",
                "+",
                "+    public TesseractOCRConfig getDefaultConfig() {",
                "+        return defaultConfig;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2705": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "375e3d76d896656cbb5dd8c6eff6176f729336fb"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2705",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5346cbb96ed39caadc7e554515aef73929d66aed",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533748888,
            "hunks": 2,
            "message": "TIKA-2706 -- store exceptions from macroreader in child metadata",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "index 03751562a..133d5e45f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java",
                "@@ -315,4 +315,4 @@ public class OfficeParser extends AbstractOfficeParser {",
                "      */",
                "-    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml, EmbeddedDocumentExtractor",
                "-            embeddedDocumentExtractor)  throws IOException, SAXException {",
                "+    public static void extractMacros(NPOIFSFileSystem fs, ContentHandler xhtml,",
                "+                                     EmbeddedDocumentExtractor embeddedDocumentExtractor)  throws IOException, SAXException {",
                "@@ -324,3 +324,14 @@ public class OfficeParser extends AbstractOfficeParser {",
                "         } catch (Exception e) {",
                "-            //swallow",
                "+            if (e instanceof SecurityException) {",
                "+                throw e;",
                "+            }",
                "+            Metadata m = new Metadata();",
                "+            m.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE, TikaCoreProperties.EmbeddedResourceType.MACRO.toString());",
                "+            m.set(Metadata.CONTENT_TYPE, \"text/x-vbasic\");",
                "+            EmbeddedDocumentUtil.recordException(e, m);",
                "+            if (embeddedDocumentExtractor.shouldParseEmbedded(m)) {",
                "+                embeddedDocumentExtractor.parseEmbedded(",
                "+                        //pass in space character so that we don't trigger a zero-byte exception",
                "+                        new ByteArrayInputStream(new byte[]{'\\u0020'}), xhtml, m, true);",
                "+            }",
                "             return;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2706": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "da26f02bf60ea3ef59bfa5b67930925d8dcd2e77"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2706",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6b377548bd75cff248bffce95177b53cf414a881",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532623149,
            "hunks": 4,
            "message": "TIKA-2692 -- minimal upgrades to allow building w Java 11-ea",
            "diff": [
                "diff --git a/tika-nlp/pom.xml b/tika-nlp/pom.xml",
                "index 492de17a5..c2798755c 100644",
                "--- a/tika-nlp/pom.xml",
                "+++ b/tika-nlp/pom.xml",
                "@@ -139,2 +139,10 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>javax.ws.rs</groupId>",
                "+          <artifactId>javax.ws.rs-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>javax.annotation</groupId>",
                "+          <artifactId>javax.annotation-api</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -210,3 +218,3 @@",
                "       <artifactId>mockito-core</artifactId>",
                "-      <version>2.15.0</version>",
                "+      <version>${mockito.version}</version>",
                "       <scope>test</scope>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index bd335e0ca..9110f42b9 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -315,2 +315,3 @@",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "+    <mockito.version>2.20.0</mockito.version>",
                "   </properties>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 58a5dfe94..38b15db50 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -424,3 +424,3 @@",
                "       <artifactId>mockito-core</artifactId>",
                "-      <version>2.15.0</version>",
                "+      <version>${mockito.version}</version>",
                "       <scope>test</scope>"
            ],
            "changed_files": [
                "tika-nlp/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "180aaa213d2dc697f8bad0eafdb9d316ad307218"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "de2057b2326aaa68c913e2a4a929538d6cc507f8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532616000,
            "hunks": 24,
            "message": "TIKA-2692 -- minimal upgrades to pass ossindex-maven module -- except for tika-nlp module, which requires significant work.",
            "diff": [
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 35cd34659..e4ce64f82 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -91,3 +91,3 @@",
                "       <artifactId>jackrabbit-jcr-server</artifactId>",
                "-      <version>2.3.6</version>",
                "+      <version>2.17.4</version>",
                "       <exclusions>",
                "@@ -110,3 +110,3 @@",
                "       <artifactId>jackrabbit-core</artifactId>",
                "-      <version>2.3.6</version>",
                "+      <version>2.17.4</version>",
                "       <exclusions>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index d5cd4ede9..c908517e7 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -311,3 +311,3 @@",
                "     <gson.version>2.8.1</gson.version>",
                "-    <cxf.version>3.0.16</cxf.version>",
                "+    <cxf.version>3.2.5</cxf.version>",
                "     <slf4j.version>1.7.24</slf4j.version>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index cc6c1bd1c..c4923cfb3 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -52,5 +52,5 @@",
                "     <!-- used by POI, PDFBox and Jackcess ...try to sync -->",
                "-    <bouncycastle.version>1.54</bouncycastle.version>",
                "+    <bouncycastle.version>1.60</bouncycastle.version>",
                "     <commonsexec.version>1.3</commonsexec.version>",
                "-    <httpcomponents.version>4.5.4</httpcomponents.version>",
                "+    <httpcomponents.version>4.5.6</httpcomponents.version>",
                "   </properties>",
                "diff --git a/tika-server/pom.xml b/tika-server/pom.xml",
                "index 9c336c00a..ad72bea8b 100644",
                "--- a/tika-server/pom.xml",
                "+++ b/tika-server/pom.xml",
                "@@ -99,13 +99,3 @@",
                "     </dependency>",
                "-    <dependency>",
                "-      <groupId>javax.mail</groupId>",
                "-      <artifactId>mail</artifactId>",
                "-      <version>1.4.4</version>",
                "-      <exclusions>",
                "-        <exclusion>",
                "-          <groupId>javax.activation</groupId>",
                "-          <artifactId>activation</artifactId>",
                "-        </exclusion>",
                "-      </exclusions>",
                "-    </dependency>",
                "+",
                "     <dependency>",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "index e9c4348f8..e0cd6ba05 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "@@ -26,2 +26,4 @@ import java.util.Map;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.detect.CompositeDetector;",
                "@@ -29,3 +31,2 @@ import org.apache.tika.detect.Detector;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -37,2 +38,5 @@ import org.eclipse.jetty.util.ajax.JSON;",
                " public class TikaDetectors {",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "+",
                "+",
                "     private HTMLHelper html;",
                "@@ -78,3 +82,3 @@ public class TikaDetectors {",
                "         detectorAsMap(TikaResource.getConfig().getDetector(), details);",
                "-        return JSON.toString(details);",
                "+        return GSON.toJson(details);",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "index 0dacdf6bd..bc8c8ca26 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "@@ -28,2 +28,4 @@ import java.util.TreeMap;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.mime.MediaType;",
                "@@ -33,3 +35,2 @@ import org.apache.tika.parser.Parser;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -41,2 +42,5 @@ import org.eclipse.jetty.util.ajax.JSON;",
                " public class TikaMimeTypes {",
                "+",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "+",
                "     private HTMLHelper html;",
                "@@ -98,5 +102,5 @@ public class TikaMimeTypes {",
                "-            typeDets.put(\"alias\", type.aliases);",
                "+            typeDets.put(\"alias\", copyToStringArray(type.aliases));",
                "             if (type.supertype != null) {",
                "-                typeDets.put(\"supertype\", type.supertype);",
                "+                typeDets.put(\"supertype\", type.supertype.toString());",
                "             }",
                "@@ -109,3 +113,11 @@ public class TikaMimeTypes {",
                "-        return JSON.toString(details);",
                "+        return GSON.toJson(details);",
                "+    }",
                "+",
                "+    private static String[] copyToStringArray(MediaType[] aliases) {",
                "+        String[] strings = new String[aliases.length];",
                "+        for (int i = 0; i < aliases.length; i++) {",
                "+            strings[i] = aliases[i].toString();",
                "+        }",
                "+        return strings;",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "index f77de4da7..6461cab8b 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "@@ -30,2 +30,4 @@ import java.util.Set;",
                "+import com.google.gson.Gson;",
                "+import com.google.gson.GsonBuilder;",
                " import org.apache.tika.mime.MediaType;",
                "@@ -36,3 +38,2 @@ import org.apache.tika.parser.ParserDecorator;",
                " import org.apache.tika.server.HTMLHelper;",
                "-import org.eclipse.jetty.util.ajax.JSON;",
                "@@ -46,2 +47,3 @@ public class TikaParsers {",
                "     private static final ParseContext EMPTY_PC = new ParseContext();",
                "+    private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();",
                "     private HTMLHelper html;",
                "@@ -129,3 +131,4 @@ public class TikaParsers {",
                "         parserAsMap(new ParserDetails(TikaResource.getConfig().getParser()), withMimeTypes, details);",
                "-        return JSON.toString(details);",
                "+",
                "+        return GSON.toJson(details);",
                "     }",
                "diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "index 1b125907c..39260834f 100644",
                "--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java",
                "@@ -19,6 +19,32 @@ package org.apache.tika.server.resource;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "+import org.apache.commons.lang.StringUtils;",
                "+import org.apache.cxf.attachment.ContentDisposition;",
                "+import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "+import org.apache.poi.extractor.ExtractorFactory;",
                "+import org.apache.tika.Tika;",
                "+import org.apache.tika.config.TikaConfig;",
                "+import org.apache.tika.detect.Detector;",
                "+import org.apache.tika.exception.EncryptedDocumentException;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.metadata.TikaCoreProperties;",
                "+import org.apache.tika.mime.MediaType;",
                "+import org.apache.tika.parser.AutoDetectParser;",
                "+import org.apache.tika.parser.DigestingParser;",
                "+import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.Parser;",
                "+import org.apache.tika.parser.ParserDecorator;",
                "+import org.apache.tika.parser.PasswordProvider;",
                "+import org.apache.tika.parser.html.BoilerpipeContentHandler;",
                "+import org.apache.tika.parser.ocr.TesseractOCRConfig;",
                "+import org.apache.tika.parser.pdf.PDFParserConfig;",
                "+import org.apache.tika.sax.BodyContentHandler;",
                "+import org.apache.tika.sax.ExpandedTitleContentHandler;",
                "+import org.apache.tika.sax.RichTextContentHandler;",
                "+import org.apache.tika.server.InputStreamFactory;",
                "+import org.apache.tika.server.TikaServerParseException;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+import org.xml.sax.ContentHandler;",
                "+import org.xml.sax.SAXException;",
                "-import javax.mail.internet.ContentDisposition;",
                "-import javax.mail.internet.ParseException;",
                " import javax.ws.rs.Consumes;",
                "@@ -53,30 +79,3 @@ import java.util.regex.Pattern;",
                "-import org.apache.commons.lang.StringUtils;",
                "-import org.apache.cxf.jaxrs.ext.multipart.Attachment;",
                "-import org.apache.poi.extractor.ExtractorFactory;",
                "-import org.apache.tika.Tika;",
                "-import org.apache.tika.config.TikaConfig;",
                "-import org.apache.tika.detect.Detector;",
                "-import org.apache.tika.exception.EncryptedDocumentException;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.metadata.TikaCoreProperties;",
                "-import org.apache.tika.mime.MediaType;",
                "-import org.apache.tika.parser.AutoDetectParser;",
                "-import org.apache.tika.parser.DigestingParser;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.apache.tika.parser.ParserDecorator;",
                "-import org.apache.tika.parser.PasswordProvider;",
                "-import org.apache.tika.parser.html.BoilerpipeContentHandler;",
                "-import org.apache.tika.parser.ocr.TesseractOCRConfig;",
                "-import org.apache.tika.parser.pdf.PDFParserConfig;",
                "-import org.apache.tika.sax.BodyContentHandler;",
                "-import org.apache.tika.sax.ExpandedTitleContentHandler;",
                "-import org.apache.tika.sax.RichTextContentHandler;",
                "-import org.apache.tika.server.InputStreamFactory;",
                "-import org.apache.tika.server.TikaServerParseException;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "@@ -135,15 +134,10 @@ public class TikaResource {",
                "         if (disposition != null) {",
                "-            try {",
                "-                ContentDisposition c = new ContentDisposition(disposition);",
                "+            ContentDisposition c = new ContentDisposition(disposition);",
                "-                // only support \"attachment\" dispositions",
                "-                if (\"attachment\".equals(c.getDisposition())) {",
                "-                    String fn = c.getParameter(\"filename\");",
                "-                    if (fn != null) {",
                "-                        return fn;",
                "-                    }",
                "+            // only support \"attachment\" dispositions",
                "+            if (\"attachment\".equals(c.getType())) {",
                "+                String fn = c.getParameter(\"filename\");",
                "+                if (fn != null) {",
                "+                    return fn;",
                "                 }",
                "-            } catch (ParseException e) {",
                "-                // not a valid content-disposition field",
                "-                LOG.warn(\"Parse exception {} determining content disposition\", e.getMessage(), e);",
                "             }"
            ],
            "changed_files": [
                "tika-example/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-server/pom.xml",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaDetectors.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaMimeTypes.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaParsers.java",
                "tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fe2b3ae2d9e8d6ca9fe493fa39c4483b3e6b8f70"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c892461520200143a09330473727da6c6e0a8c60",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533318594,
            "hunks": 4,
            "message": "TIKA-2704",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "index 83a9c877f..1814c1204 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java",
                "@@ -18,2 +18,5 @@ package org.apache.tika.parser.mp3;",
                "+import org.apache.poi.util.IOUtils;",
                "+",
                "+import java.io.EOFException;",
                " import java.io.IOException;",
                "@@ -159,3 +162,8 @@ class MpegStream extends PushbackInputStream",
                "         {",
                "-            skipStream(in, currentHeader.getLength() - HEADER_SIZE);",
                "+            long toSkip = currentHeader.getLength() - HEADER_SIZE;",
                "+            long skipped = IOUtils.skipFully(in, toSkip);",
                "+            if (skipped < toSkip) {",
                "+                throw new EOFException(\"EOF: tried to skip \"+toSkip +",
                "+                        \" but could only skip \"+skipped);",
                "+            }",
                "             currentHeader = null;",
                "@@ -268,24 +276,2 @@ class MpegStream extends PushbackInputStream",
                "-    /**",
                "-     * Skips the given number of bytes from the specified input stream.",
                "-     * ",
                "-     * @param in the input stream",
                "-     * @param count the number of bytes to skip",
                "-     * @throws IOException if an IO error occurs",
                "-     */",
                "-    private static void skipStream(InputStream in, long count)",
                "-            throws IOException",
                "-    {",
                "-        long size = count;",
                "-        long skipped = 0;",
                "-        while (size > 0 && skipped >= 0)",
                "-        {",
                "-            skipped = in.skip(size);",
                "-            if (skipped != -1)",
                "-            {",
                "-                size -= skipped;",
                "-            }",
                "-        }",
                "-    }",
                "-    ",
                "     /**",
                "@@ -430,3 +416,3 @@ class MpegStream extends PushbackInputStream",
                "          * ",
                "-         * @param the from index",
                "+         * @param from index",
                "          * @param to the to index"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2704": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "36fa58f4c298248398749be927e6fdb9868e5676"
                ]
            ],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2704",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "19364b832e222056cd84d820daab7336663f8fee",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543751,
            "hunks": 1,
            "message": "TIKA-2690 via Hans Brende",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 08620d99e..f278302bf 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -688,2 +688,10 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-logging</groupId>",
                "+          <artifactId>commons-logging-api</artifactId>",
                "+        </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-logging</groupId>",
                "+          <artifactId>commons-logging</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2690": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2690",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1a8bff9faacb828a1039f7cc2c7f9e1f1d5e3fd",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504889260,
            "hunks": 1,
            "message": "TIKA-2459 -- fix special character handling",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "index ff07fef27..569c88172 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "@@ -491,2 +491,4 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "                 break;",
                "+            } else if (cr.text().equals(\"\\u0014\\u0015\")) {",
                "+                has14 = true;",
                "             } else {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2459": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2459",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ba436227b987199717b5b94689d10c7b0d1deb14",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533187246,
            "hunks": 2,
            "message": "fix for TIKA-2701 contributed by grigoriy",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "index e0a2507da..806c7d9ba 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "@@ -64,2 +64,3 @@ public class WMFParser extends AbstractParser {",
                "             HwmfPicture picture = new HwmfPicture(stream);",
                "+            Charset charset = LocaleUtil.CHARSET_1252;",
                "             //TODO: make x/y info public in POI so that we can use it here",
                "@@ -67,3 +68,2 @@ public class WMFParser extends AbstractParser {",
                "             for (HwmfRecord record : picture.getRecords()) {",
                "-                Charset charset = LocaleUtil.CHARSET_1252;",
                "                 //this is pure hackery for specifying the font"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f8f5e23841d23cfcaa13bfba6dccf7f44f33fdd5",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533309908,
            "hunks": 5,
            "message": "TIKA-2673 -- small modifications",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "deleted file mode 100644",
                "index ab1edad7a..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,20 +0,0 @@",
                "-package org.apache.tika.parser.html.charsetdetector;",
                "-",
                "-import org.apache.tika.detect.CompositeEncodingDetector;",
                "-",
                "-import static java.util.Arrays.asList;",
                "-",
                "-/**",
                "- * A composite encoding detector chaining a {@link StandardHtmlEncodingDetector}",
                "- * (that may return null) and a {@link StandardIcu4JEncodingDetector} (that always returns a value)",
                "- * This full detector thus always returns an encoding, and still works very well with data coming",
                "- * from the web.",
                "- */",
                "-public class FullStandardEncodingDetector extends CompositeEncodingDetector {",
                "-    public FullStandardEncodingDetector() {",
                "-        super(asList(",
                "-                new StandardHtmlEncodingDetector(),",
                "-                StandardIcu4JEncodingDetector.STANDARD_ICU4J_ENCODING_DETECTOR",
                "-        ));",
                "-    }",
                "-}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "index 85b35a0e0..a00aeb1a1 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "@@ -87,5 +87,7 @@ class PreScanner {",
                "     Charset scan() {",
                "-        while (processAtLeastOneByte())",
                "-            if (detectedCharset.isFound())",
                "+        while (processAtLeastOneByte()) {",
                "+            if (detectedCharset.isFound()) {",
                "                 return detectedCharset.getCharset();",
                "+            }",
                "+        }",
                "         return null;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "index 041827066..f9d1a1bbf 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "@@ -38,3 +38,3 @@ import static org.apache.tika.parser.html.charsetdetector.CharsetAliases.getChar",
                "  * If a resource was fetched over HTTP, then HTTP headers should be added to tika metadata",
                "- * when using {@link #detect}, especially {@link Metadata.CONTENT_TYPE}, as it may contain charset information.",
                "+ * when using {@link #detect}, especially {@link Metadata#CONTENT_TYPE}, as it may contain charset information.",
                "  * <p>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java",
                "deleted file mode 100644",
                "index f7ed53f46..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,51 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.tika.parser.html.charsetdetector;",
                "-",
                "-import org.apache.tika.detect.EncodingDetector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.txt.CharsetDetector;",
                "-import org.apache.tika.parser.txt.CharsetMatch;",
                "-",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.charset.StandardCharsets;",
                "-",
                "-/**",
                "- * Last resort detector, that never returns null.",
                "- * Uses ICU4J for sniffing the charset, and uses standard charset aliases in {@link CharsetAliases}",
                "- * to convert the charset name detected by ICU to a java charset.",
                "- * This detector is stateless and a single instance can be used several times for different streams.",
                "- */",
                "-public class StandardIcu4JEncodingDetector implements EncodingDetector {",
                "-    public static EncodingDetector STANDARD_ICU4J_ENCODING_DETECTOR = new StandardIcu4JEncodingDetector();",
                "-",
                "-    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "-        CharsetDetector detector = new CharsetDetector();",
                "-        detector.enableInputFilter(true); // enabling input filtering (stripping of HTML tags)",
                "-        detector.setText(input);",
                "-        for (CharsetMatch match : detector.detectAll()) {",
                "-            Charset detected = CharsetAliases.getCharsetByLabel(match.getName());",
                "-            if (detected != null) return detected;",
                "-        }",
                "-        // This detector is meant to be used in last resort. It should never return null",
                "-        // So if no charset was found, decode the input as simple ASCII.",
                "-        // The ASCII charset is guaranteed to be present in all JVMs.",
                "-        return StandardCharsets.US_ASCII;",
                "-    }",
                "-}"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6badaead79e3350414536a5e4972871f66e97e90",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533310369,
            "hunks": 8,
            "message": "TIKA-2673 -- add StandardHtmlEncodingDetector via Gerard Bouchar",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "deleted file mode 100644",
                "index 487f747c4..000000000",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "+++ /dev/null",
                "@@ -1,491 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.tika.parser.html;",
                "-",
                "-import org.apache.tika.detect.EncodingDetector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-",
                "-import java.io.*;",
                "-import java.nio.charset.Charset;",
                "-import java.nio.charset.IllegalCharsetNameException;",
                "-import java.nio.charset.StandardCharsets;",
                "-import java.nio.charset.UnsupportedCharsetException;",
                "-import java.util.*;",
                "-import java.util.regex.Matcher;",
                "-import java.util.regex.Pattern;",
                "-import java.util.stream.Collectors;",
                "-import java.util.stream.IntStream;",
                "-",
                "-import static java.nio.charset.StandardCharsets.*;",
                "-import static org.apache.tika.parser.html.StrictHtmlEncodingDetector.SequenceMatcher.caseInsensitive;",
                "-import static org.apache.tika.parser.html.StrictHtmlEncodingDetector.SingleByteMatcher.matchers;",
                "-",
                "-/**",
                "- * This is a strict html encoding detector that enforces the standard",
                "- * far more strictly than the HtmlEncodingDetector.",
                "- */",
                "-public class StrictHtmlEncodingDetector implements EncodingDetector {",
                "-    private static final String CHARSET_LABEL_FILE = \"whatwg-encoding-labels.tsv\";",
                "-    private static Map<String, Charset> CHARSET_LABELS = getCharsetLabels();",
                "-",
                "-    private static Map<String, Charset> getCharsetLabels() {",
                "-        String path = StrictHtmlEncodingDetector.class.getPackage().getName().replace('.', '/');",
                "-        String filename = '/' + path + '/' + CHARSET_LABEL_FILE;",
                "-        InputStream inputStream = StrictHtmlEncodingDetector.class.getResourceAsStream(filename);",
                "-        Objects.requireNonNull(inputStream, \"Missing charset label mapping file : \" + filename);",
                "-        try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.US_ASCII))) {",
                "-            return buffer.lines()",
                "-                    .filter(s -> !s.startsWith(\"#\"))",
                "-                    .map(s -> s.split(\"\\t\"))",
                "-                    .filter(parts -> parts.length >= 2)",
                "-                    .collect(Collectors.toMap(",
                "-                            parts -> parts[0],",
                "-                            StrictHtmlEncodingDetector::charsetFromStandard",
                "-                    ));",
                "-        } catch (IOException e) {",
                "-            throw new UncheckedIOException(\"Unable to read the charset label mapping\", e);",
                "-        }",
                "-    }",
                "-",
                "-    private static Charset charsetFromStandard(String[] names) {",
                "-        for (int i = 1; i < names.length; i++) {",
                "-            try {",
                "-                return Charset.forName(names[1]);",
                "-            } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {/* pass */}",
                "-        }",
                "-        // The only single-byte charset extended charset that must be present on every Java platform",
                "-        return StandardCharsets.ISO_8859_1;",
                "-    }",
                "-",
                "-    private static Charset getCharsetByLabel(String label) {",
                "-        if (label == null) return null;",
                "-        label = label.trim().toLowerCase(Locale.US);",
                "-        return CHARSET_LABELS.get(label);",
                "-    }",
                "-",
                "-    @Override",
                "-    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "-        PreScanner preScanner = new PreScanner(input);",
                "-",
                "-        // If there is a BOM at the beginning, the detection does not go further",
                "-        Charset bomCharset = preScanner.detectBOM();",
                "-        if (bomCharset != null) return bomCharset;",
                "-",
                "-        // Assume that if there was a charset specified either by the end user or the transport level,",
                "-        // it was stored in the metadata",
                "-        String incomingCharsetName = metadata.get(Metadata.CONTENT_ENCODING);",
                "-        if (incomingCharsetName != null) {",
                "-            Charset incomingCharset = getCharsetByLabel(incomingCharsetName);",
                "-            if (incomingCharset != null) return incomingCharset;",
                "-        }",
                "-",
                "-        return preScanner.scan();",
                "-    }",
                "-",
                "-    static class PreScanner {",
                "-",
                "-        private static final Pattern META_CHARSET_PATTERN = Pattern.compile(\"charset\\\\s*=\\\\s*([\\\"']?)([^\\\"'\\\\s;]+)\\\\1\");",
                "-        private static ByteMatcher COMMENT_START = new SequenceMatcher(\"<!--\");",
                "-        private static ByteMatcher COMMENT_END = new SequenceMatcher(\"-->\");",
                "-        private static ByteMatcher LETTER = new OrMatcher(",
                "-                new RangeMatcher((byte) 'a', (byte) 'z'),",
                "-                new RangeMatcher((byte) 'A', (byte) 'Z')",
                "-        );",
                "-        private static ByteMatcher SPACE = new OrMatcher(matchers(0x09, 0x0A, 0x0C, 0x0D, 0x20));",
                "-        private static ByteMatcher SLASH = new SingleByteMatcher((byte) '/');",
                "-        private static ByteMatcher EQUAL = new SingleByteMatcher((byte) '=');",
                "-        private static ByteMatcher TAG_END = new SingleByteMatcher((byte) '>');",
                "-        private static ByteMatcher SINGLE_QUOTE = new SingleByteMatcher((byte) '\\'');",
                "-        private static ByteMatcher DOUBLE_QUOTE = new SingleByteMatcher((byte) '\"');",
                "-        private static ByteMatcher QUOTE = new OrMatcher(SINGLE_QUOTE, DOUBLE_QUOTE);",
                "-        private static ByteMatcher TAG_END_OR_SLASH = new OrMatcher(SLASH, TAG_END);",
                "-        private static ByteMatcher SPACE_OR_SLASH = new OrMatcher(SPACE, SLASH);",
                "-        private static ByteMatcher SPACE_OR_TAG_END = new OrMatcher(SPACE, TAG_END);",
                "-        private static ByteMatcher META_START = new SequenceMatcher(caseInsensitive(\"<meta\"), SPACE_OR_SLASH);",
                "-        private static ByteMatcher TAG_START = new SequenceMatcher(",
                "-                new SingleByteMatcher((byte) '<'),",
                "-                new OrMatcher(SLASH, LETTER)",
                "-        );",
                "-        private static ByteMatcher TAG_BODY = new NegativeMatcher(new OrMatcher(SPACE, TAG_END));",
                "-        private static ByteMatcher SPECIAL_TAG_START = new SequenceMatcher(",
                "-                new SingleByteMatcher((byte) '<'),",
                "-                new OrMatcher(matchers(\"!/?\"))",
                "-        );",
                "-        private static ByteMatcher UTF8_BOM = new SequenceMatcher(matchers(0xEF, 0xBB, 0xBF));",
                "-        private static ByteMatcher UTF16_BE_BOM = new SequenceMatcher(matchers(0xFE, 0xFF));",
                "-        private static ByteMatcher UTF16_LE_BOM = new SequenceMatcher(matchers(0xFF, 0xFE));",
                "-",
                "-",
                "-        PushbackInputStream stream;",
                "-        private CharsetDetectionResult detectedCharset = new CharsetDetectionResult();",
                "-",
                "-        public PreScanner(InputStream inputStream) {",
                "-            this.stream = new PushbackInputStream(inputStream, 32);",
                "-        }",
                "-",
                "-        public Charset scan() {",
                "-            while (processAtLeastOneByte()) {",
                "-                if (detectedCharset.isFound()) {",
                "-                    return detectedCharset.getCharset();",
                "-                }",
                "-            }",
                "-            return null;",
                "-        }",
                "-",
                "-        private Charset detectBOM() {",
                "-            try {",
                "-                if (UTF8_BOM.matches(stream)) return StandardCharsets.UTF_8;",
                "-                else if (UTF16_BE_BOM.matches(stream)) return StandardCharsets.UTF_16BE;",
                "-                else if (UTF16_LE_BOM.matches(stream)) return StandardCharsets.UTF_16LE;",
                "-            } catch (IOException e) { /* stream could not be read, also return null */ }",
                "-            return null;",
                "-        }",
                "-",
                "-        private boolean processAtLeastOneByte() {",
                "-            try {",
                "-                return processComment() ||",
                "-                        processMeta() ||",
                "-                        processTag() ||",
                "-                        processSpecialTag() ||",
                "-                        processAny();",
                "-            } catch (IOException e) {",
                "-                return false;",
                "-            }",
                "-        }",
                "-",
                "-        private boolean processAny() throws IOException {",
                "-            int read = stream.read();",
                "-            return read != -1;",
                "-        }",
                "-",
                "-        private boolean hasBytes() throws IOException {",
                "-            int read = stream.read();",
                "-            if (read != -1) stream.unread(read);",
                "-            return read != -1;",
                "-        }",
                "-",
                "-        private boolean processComment() throws IOException {",
                "-            if (COMMENT_START.matches(stream)) {",
                "-                // The two '-' in the '-->' sequence can be the same as those in the '<!--' sequence.",
                "-                stream.unread(\"--\".getBytes(StandardCharsets.US_ASCII));",
                "-                return COMMENT_END.advanceUntilMatches(stream);",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processTag() throws IOException {",
                "-            if (TAG_START.matches(stream)) {",
                "-                TAG_BODY.skipAll(stream);",
                "-                while (getAttribute() != null) {/*ignore the attribute*/}",
                "-                return true;",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processSpecialTag() throws IOException {",
                "-            if (SPECIAL_TAG_START.matches(stream)) {",
                "-                TAG_BODY.skipAll(stream);",
                "-                return TAG_END.advanceUntilMatches(stream);",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private boolean processMeta() throws IOException {",
                "-            if (META_START.matches(stream)) {",
                "-                Set<String> attributeNames = new HashSet<>();",
                "-                boolean gotPragma = false;",
                "-                Boolean needPragma = null;",
                "-                CharsetDetectionResult charset = new CharsetDetectionResult();",
                "-                while (hasBytes()) {",
                "-                    Attribute attribute = getAttribute();",
                "-                    if (attribute == null) break;",
                "-                    if (attributeNames.contains(attribute.getName())) continue;",
                "-                    attributeNames.add(attribute.getName());",
                "-                    switch (attribute.getName()) {",
                "-                        case \"http-equiv\":",
                "-                            if (attribute.getValue().equals(\"content-type\"))",
                "-                                gotPragma = true;",
                "-                            break;",
                "-                        case \"content\":",
                "-                            String charsetName = getEncodingFromMeta(attribute.getValue());",
                "-                            if (!charset.isFound() && charsetName != null) {",
                "-                                charset.find(charsetName);",
                "-                                needPragma = true;",
                "-                            }",
                "-                            break;",
                "-                        case \"charset\":",
                "-                            charset.find(attribute.getValue());",
                "-                            needPragma = false;",
                "-                            break;",
                "-                        default: // Ignore non-charset related attributes",
                "-                    }",
                "-                }",
                "-                if (needPragma != null && !(needPragma && !gotPragma)) {",
                "-                    detectedCharset = charset;",
                "-                    return true;",
                "-                }",
                "-            }",
                "-            return false;",
                "-        }",
                "-",
                "-        private String getEncodingFromMeta(String attributeValue) {",
                "-            Matcher matcher = META_CHARSET_PATTERN.matcher(attributeValue);",
                "-            if (!matcher.find()) return null;",
                "-            return matcher.group(2);",
                "-        }",
                "-",
                "-        private Attribute getAttribute() throws IOException {",
                "-            SPACE_OR_SLASH.skipAll(stream);",
                "-            if (TAG_END.peekMatches(stream)) return null;",
                "-            StringBuilder name = new StringBuilder();",
                "-            while (!EQUAL.peekMatches(stream) || name.length() == 0) {",
                "-                if (TAG_END_OR_SLASH.peekMatches(stream)) {",
                "-                    break;",
                "-                } else if (SPACE.peekMatches(stream)) {",
                "-                    SPACE.skipAll(stream);",
                "-                    break;",
                "-                } else {",
                "-                    name.append(getLowerCaseChar());",
                "-                }",
                "-            }",
                "-",
                "-            if (!EQUAL.matches(stream)) return new Attribute(name.toString(), \"\");",
                "-            SPACE.skipAll(stream);",
                "-",
                "-            StringBuilder value = new StringBuilder();",
                "-            byte[] quoteMatched = QUOTE.match(stream);",
                "-            if (quoteMatched != null) {",
                "-                char quote = (char) quoteMatched[0];",
                "-                int nextChar = -1;",
                "-                while (nextChar != quote) {",
                "-                    if (nextChar != -1) value.append((char) nextChar);",
                "-                    nextChar = getLowerCaseChar();",
                "-                }",
                "-            } else {",
                "-                while (!SPACE_OR_TAG_END.peekMatches(stream)) {",
                "-                    value.append(getLowerCaseChar());",
                "-                }",
                "-            }",
                "-            return new Attribute(name.toString(), value.toString());",
                "-        }",
                "-",
                "-        private char getLowerCaseChar() throws IOException {",
                "-            int nextPoint = stream.read();",
                "-            if (nextPoint == -1) throw new IOException();",
                "-            if (nextPoint >= 'A' && nextPoint <= 'Z') nextPoint += 0x20; // lowercase",
                "-            return (char) nextPoint;",
                "-        }",
                "-    }",
                "-",
                "-    static class Attribute {",
                "-        String name;",
                "-        String value;",
                "-",
                "-        public Attribute(String name, String value) {",
                "-            this.name = name;",
                "-            this.value = value;",
                "-        }",
                "-",
                "-        public String getName() {",
                "-            return name;",
                "-        }",
                "-",
                "-        public String getValue() {",
                "-            return value;",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * A detection may either not find a charset, find an invalid charset, or find a valid charset",
                "-     */",
                "-    static class CharsetDetectionResult {",
                "-        private boolean found = false;",
                "-        private Charset charset = null;",
                "-",
                "-        public CharsetDetectionResult() { /* default result: not found */}",
                "-",
                "-        public boolean isFound() {",
                "-            return found;",
                "-        }",
                "-",
                "-        public void find(String charsetName) {",
                "-            this.found = true;",
                "-            charsetName = charsetName.trim();",
                "-            if (\"x-user-defined\".equals(charsetName)) charsetName = \"windows-1252\";",
                "-            this.charset = getCharsetByLabel(charsetName);",
                "-            // The specification states: If charset is a UTF-16 encoding, then set charset to UTF-8.",
                "-            if (UTF_16LE.equals(charset) || UTF_16BE.equals(charset)) charset = UTF_8;",
                "-        }",
                "-",
                "-        public Charset getCharset() {",
                "-            // the result may be null even if found is true, in the case there is a charset specified,",
                "-            // but it is invalid",
                "-            return charset;",
                "-        }",
                "-    }",
                "-",
                "-    static abstract class ByteMatcher {",
                "-",
                "-        abstract byte[] match(PushbackInputStream pushbackInputStream) throws IOException;",
                "-",
                "-        boolean matches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            return this.match(pushbackInputStream) != null;",
                "-        }",
                "-",
                "-        boolean advanceUntilMatches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            while (!this.matches(pushbackInputStream)) {",
                "-                int nextByte = pushbackInputStream.read();",
                "-                if (nextByte == -1) return false;",
                "-            }",
                "-            return true;",
                "-        }",
                "-",
                "-        void skipAll(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            while (matches(pushbackInputStream)) {/* just skip the byte */}",
                "-        }",
                "-",
                "-        public boolean peekMatches(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            byte[] matched = this.match(pushbackInputStream);",
                "-            if (matched != null) pushbackInputStream.unread(matched);",
                "-            return matched != null;",
                "-        }",
                "-    }",
                "-",
                "-    static class SingleByteMatcher extends ByteMatcher {",
                "-        private byte b;",
                "-",
                "-        public SingleByteMatcher(byte b) {",
                "-            this.b = b;",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(String s) {",
                "-            return matchers(s.chars());",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(int... bytes) {",
                "-            return matchers(IntStream.of(bytes));",
                "-        }",
                "-",
                "-        public static ByteMatcher[] matchers(IntStream byteStream) {",
                "-            return byteStream",
                "-                    .mapToObj(i -> new SingleByteMatcher((byte) i))",
                "-                    .toArray(ByteMatcher[]::new);",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            int read = pushbackInputStream.read();",
                "-            if ((byte) read == b) return new byte[]{b};",
                "-            if (read != -1) pushbackInputStream.unread(read);",
                "-            return null;",
                "-        }",
                "-    }",
                "-",
                "-    static class SequenceMatcher extends ByteMatcher {",
                "-        private ByteMatcher[] matchers;",
                "-",
                "-        public SequenceMatcher(ByteMatcher... matchers) {",
                "-            this.matchers = matchers;",
                "-        }",
                "-",
                "-        public SequenceMatcher(String s) {",
                "-            this(matchers(s));",
                "-        }",
                "-",
                "-        public static SequenceMatcher caseInsensitive(String s) {",
                "-            ByteMatcher[] lowerMatchers = matchers(s.toLowerCase(Locale.US));",
                "-            ByteMatcher[] upperMatchers = matchers(s.toUpperCase(Locale.US));",
                "-            OrMatcher[] matchers = IntStream",
                "-                    .range(0, Math.min(lowerMatchers.length, upperMatchers.length))",
                "-                    .mapToObj(i -> new OrMatcher(lowerMatchers[i], upperMatchers[i]))",
                "-                    .toArray(OrMatcher[]::new);",
                "-            return new SequenceMatcher(matchers);",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            ByteArrayOutputStream allMatched = new ByteArrayOutputStream();",
                "-            for (ByteMatcher m : matchers) {",
                "-                byte[] matched = m.match(pushbackInputStream);",
                "-                if (matched == null) {",
                "-                    pushbackInputStream.unread(allMatched.toByteArray());",
                "-                    return null;",
                "-                } else {",
                "-                    allMatched.write(matched);",
                "-                }",
                "-            }",
                "-            return allMatched.toByteArray();",
                "-        }",
                "-    }",
                "-",
                "-    static class OrMatcher extends ByteMatcher {",
                "-        private ByteMatcher[] matchers;",
                "-",
                "-        public OrMatcher(ByteMatcher... matchers) {",
                "-            this.matchers = matchers;",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            for (ByteMatcher m : matchers) {",
                "-                byte[] matched = m.match(pushbackInputStream);",
                "-                if (matched != null) return matched;",
                "-            }",
                "-            return null;",
                "-        }",
                "-    }",
                "-",
                "-    static class NegativeMatcher extends ByteMatcher {",
                "-        private ByteMatcher matcher;",
                "-",
                "-        public NegativeMatcher(ByteMatcher matcher) {",
                "-            this.matcher = matcher;",
                "-        }",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            byte[] matched = matcher.match(pushbackInputStream);",
                "-            if (matched == null) {",
                "-                int read = pushbackInputStream.read();",
                "-                if (read == -1) return null;",
                "-                return new byte[]{(byte) read};",
                "-            } else {",
                "-                pushbackInputStream.unread(matched);",
                "-                return null;",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    static class RangeMatcher extends ByteMatcher {",
                "-        private byte low;",
                "-        private byte high;",
                "-",
                "-        public RangeMatcher(byte low, byte high) {",
                "-            this.low = low;",
                "-            this.high = high;",
                "-        }",
                "-",
                "-",
                "-        @Override",
                "-        byte[] match(PushbackInputStream pushbackInputStream) throws IOException {",
                "-            int read = pushbackInputStream.read();",
                "-            if (read >= low && read <= high) return new byte[]{(byte) read};",
                "-            if (read != -1) pushbackInputStream.unread(read);",
                "-            return null;",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "new file mode 100644",
                "index 000000000..4d4c7c2b4",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "@@ -0,0 +1,145 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+",
                "+import org.apache.tika.parser.html.charsetdetector.charsets.ReplacementCharset;",
                "+import org.apache.tika.parser.html.charsetdetector.charsets.XUserDefinedCharset;",
                "+",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.IllegalCharsetNameException;",
                "+import java.nio.charset.StandardCharsets;",
                "+import java.nio.charset.UnsupportedCharsetException;",
                "+import java.util.HashMap;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+",
                "+/**",
                "+ * Singleton class that associates standard charset names to java charset implementations",
                "+ * https://encoding.spec.whatwg.org/#ref-for-iso-8859-8-i",
                "+ */",
                "+final class CharsetAliases {",
                "+",
                "+    private static final Map<String, Charset> charsetsByLabel = new HashMap<>();",
                "+",
                "+    private CharsetAliases() {",
                "+    }",
                "+",
                "+    /**",
                "+     * @param label a charset name",
                "+     * @return the corresponding java charset, if there is one. Otherwise, null",
                "+     */",
                "+    static Charset getCharsetByLabel(String label) {",
                "+        if (label == null) return null;",
                "+        synchronized (charsetsByLabel) {",
                "+            // Lazy initialization",
                "+            if (charsetsByLabel.isEmpty()) addAll();",
                "+        }",
                "+        label = label.trim().toLowerCase(Locale.US);",
                "+        return charsetsByLabel.get(label);",
                "+    }",
                "+",
                "+    private static void addAll() {",
                "+        addCharset(charset(\"Big5\"), \"big5\", \"big5-hkscs\", \"cn-big5\", \"csbig5\", \"x-x-big5\");",
                "+        addCharset(charset(\"EUC-JP\"), \"cseucpkdfmtjapanese\", \"euc-jp\", \"x-euc-jp\");",
                "+        addCharset(charset(\"EUC-KR\"), \"cseuckr\", \"csksc56011987\", \"euc-kr\", \"iso-ir-149\", \"korean\",",
                "+                \"ks_c_5601-1987\", \"ks_c_5601-1989\", \"ksc5601\", \"ksc_5601\", \"windows-949\");",
                "+        addCharset(charset(\"GBK\"), \"chinese\", \"csgb2312\", \"csiso58gb231280\", \"gb2312\", \"gb_2312\",",
                "+                \"gb_2312-80\", \"gbk\", \"iso-ir-58\", \"x-gbk\");",
                "+        addCharset(charset(\"IBM866\"), \"866\", \"cp866\", \"csibm866\", \"ibm866\");",
                "+        addCharset(charset(\"ISO-2022-JP\"), \"csiso2022jp\", \"iso-2022-jp\");",
                "+        addCharset(charset(\"ISO-8859-10\", \"ISO-8859-4\"), \"csisolatin6\", \"iso-8859-10\", \"iso-ir-157\",",
                "+                \"iso8859-10\", \"iso885910\", \"l6\", \"latin6\");",
                "+        addCharset(charset(\"ISO-8859-13\"), \"iso-8859-13\", \"iso8859-13\", \"iso885913\");",
                "+        addCharset(charset(\"ISO-8859-14\", \"ISO-8859-1\"), \"iso-8859-14\", \"iso8859-14\", \"iso885914\");",
                "+        addCharset(charset(\"ISO-8859-15\"), \"csisolatin9\", \"iso-8859-15\", \"iso8859-15\", \"iso885915\",",
                "+                \"iso_8859-15\", \"l9\");",
                "+        addCharset(charset(\"ISO-8859-16\", \"ISO-8859-1\"), \"iso-8859-16\");",
                "+        addCharset(charset(\"ISO-8859-2\"), \"csisolatin2\", \"iso-8859-2\", \"iso-ir-101\", \"iso8859-2\",",
                "+                \"iso88592\", \"iso_8859-2\", \"iso_8859-2:1987\", \"l2\", \"latin2\");",
                "+        addCharset(charset(\"ISO-8859-3\"), \"csisolatin3\", \"iso-8859-3\", \"iso-ir-109\", \"iso8859-3\",",
                "+                \"iso88593\", \"iso_8859-3\", \"iso_8859-3:1988\", \"l3\", \"latin3\");",
                "+        addCharset(charset(\"ISO-8859-4\"), \"csisolatin4\", \"iso-8859-4\", \"iso-ir-110\", \"iso8859-4\",",
                "+                \"iso88594\", \"iso_8859-4\", \"iso_8859-4:1988\", \"l4\", \"latin4\");",
                "+        addCharset(charset(\"ISO-8859-5\"), \"csisolatincyrillic\", \"cyrillic\", \"iso-8859-5\", \"iso-ir-144\",",
                "+                \"iso8859-5\", \"iso88595\", \"iso_8859-5\", \"iso_8859-5:1988\");",
                "+        addCharset(charset(\"ISO-8859-6\"), \"arabic\", \"asmo-708\", \"csiso88596e\", \"csiso88596i\",",
                "+                \"csisolatinarabic\", \"ecma-114\", \"iso-8859-6\", \"iso-8859-6-e\", \"iso-8859-6-i\", \"iso-ir-127\",",
                "+                \"iso8859-6\", \"iso88596\", \"iso_8859-6\", \"iso_8859-6:1987\");",
                "+        addCharset(charset(\"ISO-8859-7\"), \"csisolatingreek\", \"ecma-118\", \"elot_928\", \"greek\", \"greek8\",",
                "+                \"iso-8859-7\", \"iso-ir-126\", \"iso8859-7\", \"iso88597\", \"iso_8859-7\", \"iso_8859-7:1987\", \"sun_eu_greek\");",
                "+        // ISO-8859-8 actually should have an influence on the layout direction",
                "+        // (text should be decoded in the visual order). However, this is not implemented in tika.",
                "+        addCharset(charset(\"ISO-8859-8\"), \"csiso88598e\", \"csisolatinhebrew\", \"hebrew\", \"iso-8859-8\",",
                "+                \"iso-8859-8-e\", \"iso-ir-138\", \"iso8859-8\", \"iso88598\", \"iso_8859-8\", \"iso_8859-8:1988\", \"visual\");",
                "+        addCharset(charset(\"ISO-8859-8-I\", \"ISO-8859-8\"), \"csiso88598i\", \"iso-8859-8-i\", \"logical\");",
                "+        addCharset(charset(\"KOI8-R\"), \"cskoi8r\", \"koi\", \"koi8\", \"koi8-r\", \"koi8_r\");",
                "+        addCharset(charset(\"KOI8-U\"), \"koi8-ru\", \"koi8-u\");",
                "+        addCharset(charset(\"Shift_JIS\"), \"csshiftjis\", \"ms932\", \"ms_kanji\", \"shift-jis\", \"shift_jis\",",
                "+                \"sjis\", \"windows-31j\", \"x-sjis\");",
                "+        addCharset(charset(\"UTF-16BE\"), \"utf-16be\");",
                "+        addCharset(charset(\"UTF-16LE\"), \"utf-16\", \"utf-16le\");",
                "+        addCharset(charset(\"UTF-8\"), \"unicode-1-1-utf-8\", \"utf-8\", \"utf8\");",
                "+        addCharset(charset(\"gb18030\"), \"gb18030\");",
                "+        addCharset(charset(\"windows-1250\"), \"cp1250\", \"windows-1250\", \"x-cp1250\");",
                "+        addCharset(charset(\"windows-1251\"), \"cp1251\", \"windows-1251\", \"x-cp1251\");",
                "+        addCharset(charset(\"windows-1252\"), \"ansi_x3.4-1968\", \"ascii\", \"cp1252\", \"cp819\", \"csisolatin1\",",
                "+                \"ibm819\", \"iso-8859-1\", \"iso-ir-100\", \"iso8859-1\", \"iso88591\", \"iso_8859-1\", \"iso_8859-1:1987\",",
                "+                \"l1\", \"latin1\", \"us-ascii\", \"windows-1252\", \"x-cp1252\");",
                "+        addCharset(charset(\"windows-1253\"), \"cp1253\", \"windows-1253\", \"x-cp1253\");",
                "+        addCharset(charset(\"windows-1254\"), \"cp1254\", \"csisolatin5\", \"iso-8859-9\", \"iso-ir-148\",",
                "+                \"iso8859-9\", \"iso88599\", \"iso_8859-9\", \"iso_8859-9:1989\", \"l5\", \"latin5\", \"windows-1254\", \"x-cp1254\");",
                "+        addCharset(charset(\"windows-1255\"), \"cp1255\", \"windows-1255\", \"x-cp1255\");",
                "+        addCharset(charset(\"windows-1256\"), \"cp1256\", \"windows-1256\", \"x-cp1256\");",
                "+        addCharset(charset(\"windows-1257\"), \"cp1257\", \"windows-1257\", \"x-cp1257\");",
                "+        addCharset(charset(\"windows-1258\"), \"cp1258\", \"windows-1258\", \"x-cp1258\");",
                "+        addCharset(charset(\"windows-874\"), \"dos-874\", \"iso-8859-11\", \"iso8859-11\", \"iso885911\",",
                "+                \"tis-620\", \"windows-874\");",
                "+        addCharset(charset(\"x-MacCyrillic\"), \"x-mac-cyrillic\", \"x-mac-ukrainian\");",
                "+        addCharset(charset(\"x-MacRoman\"), \"csmacintosh\", \"mac\", \"macintosh\", \"x-mac-roman\");",
                "+        // The \"replacement\" charset is a dummy charset. It is present to mitigate wrong-charset attacks",
                "+        addCharset(new ReplacementCharset(), \"csiso2022kr\", \"hz-gb-2312\", \"iso-2022-cn\", \"iso-2022-cn-ext\",",
                "+                \"iso-2022-kr\", \"replacement\");",
                "+        // The x-user-defined charset is not present in java",
                "+        addCharset(new XUserDefinedCharset(), \"x-user-defined\");",
                "+    }",
                "+",
                "+    /**",
                "+     * @param names jvm charset names",
                "+     * @return the first of the given charsets that exists in the current JVM,",
                "+     * or ISO_8859_1 if none exists",
                "+     */",
                "+    private static Charset charset(String... names) {",
                "+        for (String name : names) {",
                "+            try {",
                "+                return Charset.forName(name);",
                "+            } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {/* pass */}",
                "+        }",
                "+        // The only single-byte charset extended charset that must be present on every Java platform",
                "+        return StandardCharsets.ISO_8859_1;",
                "+    }",
                "+",
                "+    /**",
                "+     * @param charset name of the charset in the JVM",
                "+     * @param names   standard W3C charset names",
                "+     */",
                "+    private static void addCharset(Charset charset, String... names) {",
                "+        for (String name : names) {",
                "+            charsetsByLabel.put(name, charset);",
                "+        }",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "new file mode 100644",
                "index 000000000..0ba363743",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "@@ -0,0 +1,62 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.nio.charset.Charset;",
                "+",
                "+import static java.nio.charset.StandardCharsets.UTF_16BE;",
                "+import static java.nio.charset.StandardCharsets.UTF_16LE;",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "+",
                "+",
                "+/**",
                "+ * A detection may either not find a charset, find an invalid charset, or find a valid charset",
                "+ */",
                "+class CharsetDetectionResult {",
                "+    private boolean found = false;",
                "+    private Charset charset = null;",
                "+",
                "+    private CharsetDetectionResult() { /* default result: not found */}",
                "+",
                "+    static CharsetDetectionResult notFound() {",
                "+        return new CharsetDetectionResult();",
                "+    }",
                "+",
                "+    public boolean isFound() {",
                "+        return found;",
                "+    }",
                "+",
                "+    public void find(String charsetName) {",
                "+        this.found = true;",
                "+        charsetName = charsetName.trim();",
                "+        if (\"x-user-defined\".equals(charsetName)) charsetName = \"windows-1252\";",
                "+        this.charset = CharsetAliases.getCharsetByLabel(charsetName);",
                "+        // The specification states: If charset is a UTF-16 encoding, then set charset to UTF-8.",
                "+        if (UTF_16LE.equals(charset) || UTF_16BE.equals(charset)) charset = UTF_8;",
                "+    }",
                "+",
                "+    public Charset getCharset() {",
                "+        // the result may be null even if found is true, in the case there is a charset specified,",
                "+        // but it is invalid",
                "+        return charset;",
                "+    }",
                "+",
                "+    public void setCharset(Charset charset) {",
                "+        this.found = true;",
                "+        this.charset = charset;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "new file mode 100644",
                "index 000000000..8ce250c43",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "@@ -0,0 +1,74 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.util.HashSet;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+",
                "+import static org.apache.tika.parser.html.charsetdetector.PreScanner.getEncodingFromMeta;",
                "+",
                "+",
                "+/**",
                "+ * A class to process the attributes of an HTML meta tag in order to extract a character set.",
                "+ * The user should repeatedly call {@link #processAttribute} on each attributes of the tag,",
                "+ * then update its current detection result with {@link #updateDetectedCharset(CharsetDetectionResult)}",
                "+ * <p>",
                "+ * The algorithm implemented is meant to match the one described by the W3C here:",
                "+ * https://html.spec.whatwg.org/multipage/parsing.html#prescan-a-byte-stream-to-determine-its-encoding",
                "+ */",
                "+class MetaProcessor {",
                "+    private Set<String> attributeNames = new HashSet<>();",
                "+    private boolean gotPragma = false;",
                "+    private Boolean needPragma = null; // needPragma can be null, true, or false",
                "+    private CharsetDetectionResult detectionResult = CharsetDetectionResult.notFound();",
                "+",
                "+    void updateDetectedCharset(CharsetDetectionResult currentDetectionResult) {",
                "+        if (detectionResult.isFound() &&",
                "+                needPragma != null &&",
                "+                !(needPragma && !gotPragma)) {",
                "+            currentDetectionResult.setCharset(detectionResult.getCharset());",
                "+        }",
                "+    }",
                "+",
                "+    void processAttribute(Map.Entry<String, String> attribute) {",
                "+        // Ignore duplicate attributes",
                "+        if (attributeNames.contains(attribute.getKey())) return;",
                "+",
                "+        attributeNames.add(attribute.getKey());",
                "+",
                "+        // Handle charset-related attributes",
                "+        switch (attribute.getKey()) {",
                "+            case \"http-equiv\":",
                "+                if (attribute.getValue().equals(\"content-type\"))",
                "+                    gotPragma = true;",
                "+                break;",
                "+            case \"content\":",
                "+                String charsetName = getEncodingFromMeta(attribute.getValue());",
                "+                if (!detectionResult.isFound() && charsetName != null) {",
                "+                    detectionResult.find(charsetName);",
                "+                    needPragma = true;",
                "+                }",
                "+                break;",
                "+            case \"charset\":",
                "+                detectionResult.find(attribute.getValue());",
                "+                needPragma = false;",
                "+                break;",
                "+            default: // Ignore non-charset related attributes",
                "+        }",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "new file mode 100644",
                "index 000000000..a00aeb1a1",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "@@ -0,0 +1,270 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import java.io.BufferedInputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.StandardCharsets;",
                "+import java.util.AbstractMap;",
                "+import java.util.BitSet;",
                "+import java.util.Map;",
                "+import java.util.regex.Matcher;",
                "+import java.util.regex.Pattern;",
                "+",
                "+/**",
                "+ * A scanner meant to detect charset meta tags in a byte stream",
                "+ * See: https://html.spec.whatwg.org/multipage/parsing.html#prescan-a-byte-stream-to-determine-its-encoding",
                "+ */",
                "+class PreScanner {",
                "+",
                "+    private static final Pattern CHARSET_PATTERN = Pattern.compile(\"charset\\\\s*=\\\\s*([\\\"']?)([^\\\"'\\\\s;]+)\\\\1\");",
                "+    private static final byte[] COMMENT_START = {(byte) '<', (byte) '!', (byte) '-', (byte) '-'};",
                "+    private static final byte[] COMMENT_END = {(byte) '-', (byte) '-', (byte) '>'};",
                "+    private static final byte[] META_TAG_START = {(byte) '<', (byte) 'm', (byte) 'e', (byte) 't', (byte) 'a'};",
                "+    private static final byte SLASH = (byte) '/';",
                "+    private static final byte EQUAL = (byte) '=';",
                "+    private static final byte TAG_START = (byte) '<';",
                "+    private static final byte TAG_END = (byte) '>';",
                "+    private static final BitSet QUOTE = bitSet('\"', '\\'');",
                "+",
                "+    private static final BitSet WHITESPACE = bitSet(0x09, 0x0A, 0x0C, 0x0D, 0x0D, 0x20);",
                "+    private static final BitSet SPACE_OR_TAG_END = bitSet(WHITESPACE, TAG_END);",
                "+    private static final BitSet SPACE_OR_SLASH = bitSet(WHITESPACE, SLASH);",
                "+    private static final BitSet SPECIAL_TAGS = bitSet('!', '/', '?');",
                "+",
                "+    private static final byte[] UTF8_BOM = {(byte) 0xEF, (byte) 0xBB, (byte) 0xBF};",
                "+    private static final byte[] UTF16_BE_BOM = {(byte) 0xFE, (byte) 0xFF};",
                "+    private static final byte[] UTF16_LE_BOM = {(byte) 0xFF, (byte) 0xFE};",
                "+    private static final byte LOWER_A = (byte) 'a';",
                "+    private static final byte LOWER_Z = (byte) 'z';",
                "+    private static final byte UPPER_A = (byte) 'A';",
                "+    private static final byte UPPER_Z = (byte) 'Z';",
                "+    private BufferedInputStream stream;",
                "+    private CharsetDetectionResult detectedCharset = CharsetDetectionResult.notFound();",
                "+",
                "+    PreScanner(InputStream inputStream) {",
                "+        this.stream = new BufferedInputStream(inputStream);",
                "+    }",
                "+",
                "+    private static BitSet bitSet(int... bs) {",
                "+        BitSet bitSet = new BitSet(0xFF);",
                "+        for (int b : bs) bitSet.set(b);",
                "+        return bitSet;",
                "+    }",
                "+",
                "+    private static BitSet bitSet(BitSet base, int... bs) {",
                "+        BitSet bitSet = (BitSet) base.clone();",
                "+        for (int b : bs) bitSet.set(b);",
                "+        return bitSet;",
                "+    }",
                "+",
                "+    static String getEncodingFromMeta(String attributeValue) {",
                "+        Matcher matcher = CHARSET_PATTERN.matcher(attributeValue);",
                "+        if (!matcher.find()) return null;",
                "+        return matcher.group(2);",
                "+    }",
                "+",
                "+    private static boolean contains(BitSet bitSet, byte b) {",
                "+        return bitSet.get(b & 0xFF);",
                "+    }",
                "+",
                "+    Charset scan() {",
                "+        while (processAtLeastOneByte()) {",
                "+            if (detectedCharset.isFound()) {",
                "+                return detectedCharset.getCharset();",
                "+            }",
                "+        }",
                "+        return null;",
                "+    }",
                "+",
                "+    Charset detectBOM() {",
                "+        try {",
                "+            if (expect(UTF8_BOM)) return StandardCharsets.UTF_8;",
                "+            else if (expect(UTF16_BE_BOM)) return StandardCharsets.UTF_16BE;",
                "+            else if (expect(UTF16_LE_BOM)) return StandardCharsets.UTF_16LE;",
                "+        } catch (IOException e) { /* stream could not be read, also return null */ }",
                "+        return null;",
                "+    }",
                "+",
                "+    private boolean processAtLeastOneByte() {",
                "+        try {",
                "+            return processComment() ||",
                "+                    processMeta() ||",
                "+                    processTag() ||",
                "+                    processSpecialTag() ||",
                "+                    processAny();",
                "+        } catch (IOException e) {",
                "+            return false;",
                "+        }",
                "+    }",
                "+",
                "+    private boolean processAny() throws IOException {",
                "+        int read = stream.read();",
                "+        return read != -1;",
                "+    }",
                "+",
                "+    private boolean processTag() throws IOException {",
                "+        stream.mark(3);",
                "+        if (read() == TAG_START) {",
                "+            int read = stream.read();",
                "+            if (read == SLASH) read = stream.read();",
                "+            if ((LOWER_A <= read && read <= LOWER_Z) ||",
                "+                    (UPPER_A <= read && read <= UPPER_Z)) {",
                "+                do stream.mark(1);",
                "+                while (!contains(SPACE_OR_TAG_END, read()));",
                "+                stream.reset();",
                "+                while (getAttribute() != null) {/* ignore the attribute*/}",
                "+                return true;",
                "+            }",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    private boolean processSpecialTag() throws IOException {",
                "+        stream.mark(2);",
                "+        if (read() == TAG_START && contains(SPECIAL_TAGS, read())) {",
                "+            skipUntil(TAG_END);",
                "+            return true;",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    private boolean processMeta() throws IOException {",
                "+        stream.mark(6); // len(\"<meta \") == 6",
                "+        if (readCaseInsensitive(META_TAG_START) && contains(SPACE_OR_SLASH, read())) {",
                "+            MetaProcessor metaProcessor = new MetaProcessor();",
                "+            for (Map.Entry<String, String> attribute = getAttribute(); attribute != null; attribute = getAttribute()) {",
                "+                metaProcessor.processAttribute(attribute);",
                "+            }",
                "+            metaProcessor.updateDetectedCharset(detectedCharset);",
                "+            return true;",
                "+        }",
                "+        stream.reset();",
                "+        return false;",
                "+    }",
                "+",
                "+    /**",
                "+     * Read an attribute from the stream",
                "+     *",
                "+     * @return the attribute as a Map.Entry, where the key is the attribute's name and",
                "+     * the value is the attribute's value. If there is no attribute, return null",
                "+     */",
                "+    private Map.Entry<String, String> getAttribute() throws IOException {",
                "+        String name = getAttributeName();",
                "+        if (name == null) return null;",
                "+",
                "+        if (!expect(EQUAL)) return new AbstractMap.SimpleEntry<>(name, \"\");",
                "+        skipAll(WHITESPACE);",
                "+",
                "+        String value = getAttributeValue();",
                "+        return new AbstractMap.SimpleEntry<>(name, value);",
                "+    }",
                "+",
                "+    private String getAttributeName() throws IOException {",
                "+        skipAll(SPACE_OR_SLASH);",
                "+        if (expect(TAG_END)) return null;",
                "+        StringBuilder name = new StringBuilder();",
                "+        while (!(peek() == EQUAL && name.length() > 0) &&",
                "+                !(peek() == TAG_END || peek() == SLASH) &&",
                "+                !skipAll(WHITESPACE)) {",
                "+            name.append((char) getLowerCaseChar());",
                "+        }",
                "+        return name.toString();",
                "+    }",
                "+",
                "+    private String getAttributeValue() throws IOException {",
                "+        StringBuilder value = new StringBuilder();",
                "+        stream.mark(1);",
                "+        byte quote = read();",
                "+        if (contains(QUOTE, quote)) {",
                "+            for (byte b = getLowerCaseChar(); b != quote; b = getLowerCaseChar()) {",
                "+                value.append((char) b);",
                "+            }",
                "+        } else {",
                "+            stream.reset();",
                "+            for (byte b = getLowerCaseChar(); !contains(SPACE_OR_TAG_END, b); b = getLowerCaseChar()) {",
                "+                value.append((char) b);",
                "+                stream.mark(1);",
                "+            }",
                "+            stream.reset(); // unread the space or tag end",
                "+        }",
                "+        return value.toString();",
                "+    }",
                "+",
                "+    private boolean skipAll(BitSet bitSet) throws IOException {",
                "+        boolean skipped = false;",
                "+        stream.mark(1);",
                "+        for (byte read = read(); contains(bitSet, read); read = read()) {",
                "+            skipped = true;",
                "+            stream.mark(1);",
                "+        }",
                "+        stream.reset();",
                "+        return skipped;",
                "+    }",
                "+",
                "+    private byte getLowerCaseChar() throws IOException {",
                "+        byte nextPoint = read();",
                "+        if (nextPoint >= 'A' && nextPoint <= 'Z') nextPoint += 0x20; // lowercase",
                "+        return nextPoint;",
                "+    }",
                "+",
                "+    private boolean processComment() throws IOException {",
                "+        if (!expect(COMMENT_START)) return false;",
                "+        if (!expect(TAG_END)) skipUntil(COMMENT_END);",
                "+        return true;",
                "+    }",
                "+",
                "+    private boolean expect(byte... expected) throws IOException {",
                "+        stream.mark(expected.length);",
                "+        for (byte b : expected) {",
                "+            byte read = read();",
                "+            if (read != b) {",
                "+                stream.reset();",
                "+                return false;",
                "+            }",
                "+        }",
                "+        return true;",
                "+    }",
                "+",
                "+    private void skipUntil(byte... expected) throws IOException {",
                "+        while (!expect(expected)) {",
                "+            if (stream.read() == -1) return;",
                "+        }",
                "+    }",
                "+",
                "+    private boolean readCaseInsensitive(byte... bs) throws IOException {",
                "+        for (byte b : bs) if (getLowerCaseChar() != b) return false;",
                "+        return true;",
                "+    }",
                "+",
                "+    private byte read() throws IOException {",
                "+        int r = stream.read();",
                "+        if (r == -1) throw new IOException();",
                "+        return (byte) r;",
                "+    }",
                "+",
                "+    private byte peek() throws IOException {",
                "+        stream.mark(1);",
                "+        byte b = read();",
                "+        stream.reset();",
                "+        return b;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "new file mode 100644",
                "index 000000000..f9d1a1bbf",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "@@ -0,0 +1,104 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector;",
                "+",
                "+import org.apache.commons.io.input.BoundedInputStream;",
                "+import org.apache.tika.config.Field;",
                "+import org.apache.tika.detect.EncodingDetector;",
                "+import org.apache.tika.metadata.Metadata;",
                "+import org.apache.tika.mime.MediaType;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.nio.charset.Charset;",
                "+",
                "+import static org.apache.tika.parser.html.charsetdetector.CharsetAliases.getCharsetByLabel;",
                "+",
                "+/**",
                "+ * An encoding detector that tries to respect the spirit of the HTML spec",
                "+ * part 12.2.3 \"The input byte stream\", or at least the part that is compatible with",
                "+ * the implementation of tika.",
                "+ * <p>",
                "+ * https://html.spec.whatwg.org/multipage/parsing.html#the-input-byte-stream",
                "+ * <p>",
                "+ * If a resource was fetched over HTTP, then HTTP headers should be added to tika metadata",
                "+ * when using {@link #detect}, especially {@link Metadata#CONTENT_TYPE}, as it may contain charset information.",
                "+ * <p>",
                "+ * This encoding detector may return null if no encoding is detected.",
                "+ * It is meant to be used inside a {@link org.apache.tika.detect.CompositeDetector}.",
                "+ * For instance:",
                "+ * <pre> {@code",
                "+ *     EncodingDetector detector = new CompositeDetector(",
                "+ *         new StandardHtmlEncodingDetector(),",
                "+ *         new Icu4jEncodingDetector()",
                "+ *     );",
                "+ * }</pre>",
                "+ * <p>",
                "+ */",
                "+public final class StandardHtmlEncodingDetector implements EncodingDetector {",
                "+    private static final int META_TAG_BUFFER_SIZE = 8192;",
                "+",
                "+    @Field",
                "+    private int markLimit = META_TAG_BUFFER_SIZE;",
                "+",
                "+    /**",
                "+     * Extracts a charset from a Content-Type HTTP header.",
                "+     *",
                "+     * @param metadata parser metadata",
                "+     * @return a charset if there is one specified, or null",
                "+     */",
                "+    private static Charset charsetFromContentType(Metadata metadata) {",
                "+        String contentType = metadata.get(Metadata.CONTENT_TYPE);",
                "+        MediaType mediatype = MediaType.parse(contentType);",
                "+        if (mediatype == null) return null;",
                "+        String charsetLabel = mediatype.getParameters().get(\"charset\");",
                "+        return getCharsetByLabel(charsetLabel);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Charset detect(InputStream input, Metadata metadata) throws IOException {",
                "+        int limit = getMarkLimit();",
                "+        input.mark(limit);",
                "+        // Never read more than the first META_TAG_BUFFER_SIZE bytes",
                "+        InputStream limitedStream = new BoundedInputStream(input, limit);",
                "+        PreScanner preScanner = new PreScanner(limitedStream);",
                "+",
                "+        // The order of priority for detection is:",
                "+        // 1. Byte Order Mark",
                "+        Charset detectedCharset = preScanner.detectBOM();",
                "+        // 2. Transport-level information (Content-Type HTTP header)",
                "+        if (detectedCharset == null) detectedCharset = charsetFromContentType(metadata);",
                "+        // 3. HTML <meta> tag",
                "+        if (detectedCharset == null) detectedCharset = preScanner.scan();",
                "+",
                "+        input.reset();",
                "+        return detectedCharset;",
                "+    }",
                "+",
                "+    public int getMarkLimit() {",
                "+        return markLimit;",
                "+    }",
                "+",
                "+    /**",
                "+     * How far into the stream to read for charset detection.",
                "+     * Default is 8192.",
                "+     */",
                "+    @Field",
                "+    public void setMarkLimit(int markLimit) {",
                "+        this.markLimit = markLimit;",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "new file mode 100644",
                "index 000000000..32b96cf4c",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "@@ -0,0 +1,65 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector.charsets;",
                "+",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.CharBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.CharsetDecoder;",
                "+import java.nio.charset.CharsetEncoder;",
                "+import java.nio.charset.CoderResult;",
                "+",
                "+/**",
                "+ * An implementation of the standard \"replacement\" charset defined by the W3C.",
                "+ * See: https://encoding.spec.whatwg.org/#replacement",
                "+ */",
                "+public class ReplacementCharset extends Charset {",
                "+",
                "+    public ReplacementCharset() {",
                "+        super(\"replacement\", null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean contains(Charset cs) {",
                "+        return cs.equals(this);",
                "+    }",
                "+",
                "+    public CharsetDecoder newDecoder() {",
                "+        return new CharsetDecoder(this, Float.MIN_VALUE, 1) {",
                "+            private boolean replacementErrorReturned = false;",
                "+",
                "+            @Override",
                "+            protected CoderResult decodeLoop(ByteBuffer in, CharBuffer out) {",
                "+                if (in.hasRemaining() && !replacementErrorReturned) {",
                "+                    replacementErrorReturned = true;",
                "+                    return CoderResult.malformedForLength(in.remaining());",
                "+                }",
                "+                in.position(in.limit());",
                "+                return CoderResult.UNDERFLOW;",
                "+            }",
                "+",
                "+            @Override",
                "+            protected void implReset() {",
                "+                replacementErrorReturned = false;",
                "+            }",
                "+        };",
                "+    }",
                "+",
                "+    public CharsetEncoder newEncoder() {",
                "+        throw new UnsupportedOperationException(\"This charset does not support encoding\");",
                "+    }",
                "+}",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "new file mode 100644",
                "index 000000000..650694a6e",
                "--- /dev/null",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java",
                "@@ -0,0 +1,57 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.tika.parser.html.charsetdetector.charsets;",
                "+",
                "+import org.apache.commons.lang.NotImplementedException;",
                "+",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.CharBuffer;",
                "+import java.nio.charset.Charset;",
                "+import java.nio.charset.CharsetDecoder;",
                "+import java.nio.charset.CharsetEncoder;",
                "+import java.nio.charset.CoderResult;",
                "+import java.nio.charset.StandardCharsets;",
                "+",
                "+public class XUserDefinedCharset extends Charset {",
                "+",
                "+    public XUserDefinedCharset() {",
                "+        super(\"x-user-defined\", null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean contains(Charset cs) {",
                "+        return cs.equals(StandardCharsets.US_ASCII);",
                "+    }",
                "+",
                "+    public CharsetDecoder newDecoder() {",
                "+        return new CharsetDecoder(this, 1, 1) {",
                "+            @Override",
                "+            protected CoderResult decodeLoop(ByteBuffer in, CharBuffer out) {",
                "+                while (true) {",
                "+                    if (!in.hasRemaining()) return CoderResult.UNDERFLOW;",
                "+                    if (!out.hasRemaining()) return CoderResult.OVERFLOW;",
                "+                    byte b = in.get();",
                "+                    out.append((char) ((b >= 0) ? b : 0xF700 + (b & 0xFF)));",
                "+                }",
                "+            }",
                "+        };",
                "+    }",
                "+",
                "+    public CharsetEncoder newEncoder() {",
                "+        throw new NotImplementedException(\"Encoding to x-user-defined is not implemented\");",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/html/StrictHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetAliases.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/CharsetDetectionResult.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/MetaProcessor.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/ReplacementCharset.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/charsets/XUserDefinedCharset.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8ea6b22f58feb73e3399fc82811cbd738a6f3cd1",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526652932,
            "hunks": 6,
            "message": "TIKA-2479 Update XLS missing cell/row handling to match XLSX and XLSB, add unit test for missing rows, and enable the Columnar tests for the Excel formats",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "index 0dc33ee06..ff5971aab 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java",
                "@@ -18,3 +18,3 @@ package org.apache.tika.parser.microsoft;",
                "-import java.awt.*;",
                "+import java.awt.Point;",
                " import java.io.IOException;",
                "@@ -44,3 +44,2 @@ import org.apache.poi.hssf.record.DrawingGroupRecord;",
                " import org.apache.poi.hssf.record.EOFRecord;",
                "-import org.apache.poi.hssf.record.ExtSSTRecord;",
                " import org.apache.poi.hssf.record.ExtendedFormatRecord;",
                "@@ -283,3 +282,2 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                 throws IOException, SAXException, TikaException {",
                "-",
                "             // Set up listener and register the records we want to process",
                "@@ -496,3 +494,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                     }",
                "-                \tbreak;",
                "+                    break;",
                "@@ -503,4 +501,3 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "                     }",
                "-                \tbreak;",
                "-",
                "+                    break;",
                "             }",
                "@@ -601,8 +598,13 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {",
                "             for (Map.Entry<Point, Cell> entry : currentSheet.entrySet()) {",
                "-                while (currentRow < entry.getKey().y) {",
                "-                    handler.endElement(\"td\");",
                "-                    handler.endElement(\"tr\");",
                "-                    handler.startElement(\"tr\");",
                "-                    handler.startElement(\"td\");",
                "-                    currentRow++;",
                "+                if (currentRow != entry.getKey().y) {",
                "+                    // We've moved onto a new row, possibly skipping some",
                "+                    do {",
                "+                        handler.endElement(\"td\");",
                "+                        handler.endElement(\"tr\");",
                "+                        handler.startElement(\"tr\");",
                "+                        handler.startElement(\"td\");",
                "+                        currentRow++;",
                "+                    } while (officeParserConfig.getIncludeMissingRows() &&",
                "+                             currentRow < entry.getKey().y);",
                "+                    currentRow = entry.getKey().y;",
                "                     currentColumn = 0;"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "68801273967bba2ed5fee90adbd06c9c19f27abc",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526591734,
            "hunks": 3,
            "message": "TIKA-2479 Option to request missing rows where possible in Excel-like formats",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "index 34b865e67..5d34b2e0c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java",
                "@@ -31,2 +31,3 @@ public class OfficeParserConfig implements Serializable {",
                "     private boolean includeHeadersAndFooters = true;",
                "+    private boolean includeMissingRows = false;",
                "     private boolean concatenatePhoneticRuns = true;",
                "@@ -190,3 +191,2 @@ public class OfficeParserConfig implements Serializable {",
                "-",
                "     public boolean getExtractAllAlternativesFromMSG() {",
                "@@ -194,2 +194,16 @@ public class OfficeParserConfig implements Serializable {",
                "     }",
                "+",
                "+    /**",
                "+     * For table-like formats, and tables within other formats, should",
                "+     *  missing rows in sparse tables be output where detected?",
                "+     * The default is to only output rows defined within the file, which",
                "+     *  avoid lots of blank lines, but means layout isn't preserved.",
                "+     */",
                "+    public void setIncludeMissingRows(boolean includeMissingRows) {",
                "+        this.includeMissingRows = includeMissingRows;",
                "+    }",
                "+",
                "+    public boolean getIncludeMissingRows() {",
                "+        return includeMissingRows;",
                "+    }",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2479": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4b5b780623ba874c399098a1ed7720a12ee1d207",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532632658,
            "hunks": 21,
            "message": "TIKA-2692 -- general upgrades in prep for 1.19",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 4be5c2c73..dc0aa52c3 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -146,2 +146,3 @@",
                "             <_runsystempackages>com.sun.xml.bind.marshaller, com.sun.xml.internal.bind.marshaller</_runsystempackages>",
                "+            <_noee>true</_noee>",
                "             <Bundle-Activator>",
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index d566ae8d2..ee27bd5ee 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -143,2 +143,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -197,2 +201,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "diff --git a/tika-parent/pom.xml b/tika-parent/pom.xml",
                "index bb9348a3a..a7e413e0b 100644",
                "--- a/tika-parent/pom.xml",
                "+++ b/tika-parent/pom.xml",
                "@@ -310,6 +310,6 @@",
                "     <commons.io.version>2.6</commons.io.version>",
                "-    <gson.version>2.8.1</gson.version>",
                "+    <gson.version>2.8.5</gson.version>",
                "     <cxf.version>3.2.5</cxf.version>",
                "-    <slf4j.version>1.7.24</slf4j.version>",
                "-    <jackson.version>2.9.5</jackson.version>",
                "+    <slf4j.version>1.7.25</slf4j.version>",
                "+    <jackson.version>2.9.6</jackson.version>",
                "     <jaxb.version>2.3.0</jaxb.version>",
                "@@ -357,3 +357,3 @@",
                "         <artifactId>maven-bundle-plugin</artifactId>",
                "-        <version>3.3.0</version>",
                "+        <version>3.5.1</version>",
                "       </plugin>",
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 655322b81..12e48d98e 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -39,3 +39,3 @@",
                "     <!-- NOTE: sync codec version with POI -->",
                "-    <codec.version>1.10</codec.version>",
                "+    <codec.version>1.11</codec.version>",
                "     <!-- NOTE: sync tukaani version with commons-compress in tika-parent-->",
                "@@ -44,3 +44,3 @@",
                "     <brotli.version>0.1.2</brotli.version>",
                "-    <mime4j.version>0.8.1</mime4j.version>",
                "+    <mime4j.version>0.8.2</mime4j.version>",
                "     <vorbis.version>0.8</vorbis.version>",
                "@@ -118,3 +118,3 @@",
                "       <artifactId>jackcess</artifactId>",
                "-      <version>2.1.10</version>",
                "+      <version>2.1.12</version>",
                "       <exclusions>",
                "@@ -247,2 +247,8 @@",
                "       <version>${poi.version}</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-codec</groupId>",
                "+          <artifactId>commons-codec</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -276,3 +282,3 @@",
                "       <artifactId>asm</artifactId>",
                "-      <version>5.0.4</version>",
                "+      <version>6.2</version>",
                "     </dependency>",
                "@@ -281,3 +287,3 @@",
                "       <artifactId>isoparser</artifactId>",
                "-      <version>1.1.18</version>",
                "+      <version>1.1.22</version>",
                "     </dependency>",
                "@@ -286,3 +292,3 @@",
                "       <artifactId>metadata-extractor</artifactId>",
                "-      <version>2.10.1</version>",
                "+      <version>2.11.0</version>",
                "     </dependency>",
                "@@ -317,3 +323,9 @@",
                "       <artifactId>jhighlight</artifactId>",
                "-      <version>1.0.2</version>",
                "+      <version>1.0.3</version>",
                "+      <exclusions>",
                "+        <exclusion>",
                "+          <groupId>commons-io</groupId>",
                "+          <artifactId>commons-io</artifactId>",
                "+        </exclusion>",
                "+      </exclusions>",
                "     </dependency>",
                "@@ -329,3 +341,3 @@",
                "       <artifactId>junrar</artifactId>",
                "-      <version>1.0.1</version>",
                "+      <version>2.0.0</version>",
                "       <exclusions>",
                "@@ -371,3 +383,3 @@",
                "       <artifactId>opennlp-tools</artifactId>",
                "-      <version>1.8.4</version>",
                "+      <version>1.9.0</version>",
                "     </dependency>",
                "@@ -494,3 +506,3 @@",
                "       <artifactId>jsoup</artifactId>",
                "-      <version>1.11.2</version>",
                "+      <version>1.11.3</version>",
                "     </dependency>",
                "@@ -552,2 +564,6 @@",
                "         </exclusion>",
                "+          <exclusion>",
                "+            <groupId>commons-codec</groupId>",
                "+            <artifactId>commons-codec</artifactId>",
                "+          </exclusion>",
                "       </exclusions>",
                "@@ -564,3 +580,3 @@",
                "       <artifactId>commons-csv</artifactId>",
                "-      <version>1.0</version>",
                "+      <version>1.5</version>",
                "     </dependency>",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "index cf80e4727..633b2ccdd 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java",
                "@@ -25,2 +25,3 @@ import com.github.junrar.Archive;",
                " import com.github.junrar.exception.RarException;",
                "+import com.github.junrar.impl.FileVolumeManager;",
                " import com.github.junrar.rarfile.FileHeader;",
                "@@ -67,3 +68,3 @@ public class RarParser extends AbstractParser {",
                "             TikaInputStream tis = TikaInputStream.get(stream, tmp);",
                "-            rar = new Archive(tis.getFile());",
                "+            rar = new Archive(new FileVolumeManager(tis.getFile()));"
            ],
            "changed_files": [
                "tika-bundle/pom.xml",
                "tika-dl/pom.xml",
                "tika-parent/pom.xml",
                "tika-parsers/pom.xml",
                "tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2692": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2692",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b6399c65a70b768c41febbc228c1cdcdd8ed04b4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525857789,
            "hunks": 1,
            "message": "Handle .epub files using .htm rather than .html extensions for the embedded contents (TIKA-1288) # Conflicts: #\tCHANGES.txt",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "index c4f72debe..775b3195c 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java",
                "@@ -107,3 +107,4 @@ public class EpubParser extends AbstractParser {",
                "                 meta.parse(zip, new DefaultHandler(), metadata, context);",
                "-            } else if (entry.getName().endsWith(\".html\") || ",
                "+            } else if (entry.getName().endsWith(\".htm\") || ",
                "+                           entry.getName().endsWith(\".html\") || ",
                "             \t\t   entry.getName().endsWith(\".xhtml\")) {"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-1288": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-1288",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d66dcbbbcf59f5b4034a47fed3346ad513b1fcc9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533308275,
            "hunks": 2,
            "message": "TIKA-2701 -- via Grigoriy Alekseev",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "index e0a2507da..534375142 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java",
                "@@ -66,4 +66,4 @@ public class WMFParser extends AbstractParser {",
                "             //to determine when to keep two text parts on the same line",
                "+            Charset charset = LocaleUtil.CHARSET_1252;",
                "             for (HwmfRecord record : picture.getRecords()) {",
                "-                Charset charset = LocaleUtil.CHARSET_1252;",
                "                 //this is pure hackery for specifying the font"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WMFParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b702934ef5fb5b8735bed995616a6a277a6cbbfb",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532543470,
            "hunks": 0,
            "message": "Merge pull request #244 from HansBrende/TIKA-2690 fix for TIKA-2690 contributed by HansBrende",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2690": ""
            },
            "ghissue_refs": {
                "244": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2690",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 244",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5d3dd69442605d4cec45a60cf46545f0baf8186a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525965982,
            "hunks": 1,
            "message": "Ensure that empty cells are still output",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 121d95820..8b28644a9 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -136,3 +136,7 @@ public class SAS7BDATParser extends AbstractParser {",
                "             for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "-                xhtml.element(\"td\", val);",
                "+                // Use explicit start/end, rather than element, to ",
                "+                //  ensure that empty cells still get output",
                "+                xhtml.startElement(\"td\");",
                "+                xhtml.characters(val);",
                "+                xhtml.endElement(\"td\");",
                "             }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "fc23648d8f6b92c44a98d0e04b1cf75a652b9e4f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532545809,
            "hunks": 2,
            "message": "TIKA-2688 via Yury Kats",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 634d9d1dc..77db75216 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -406,12 +406,24 @@",
                "     <!-- To avoid false matches, check for other headers after that -->",
                "+",
                "     <magic priority=\"70\">",
                "       <match value=\"From \" type=\"string\" offset=\"0\">",
                "-         <match value=\"\\nFrom: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nDate: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nSubject: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:256\"/>",
                "-         <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nFrom: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nDate: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nSubject: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:256\"/>",
                "+        <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:256\"/>",
                "+",
                "+        <match value=\"\\nX-\" type=\"stringignorecase\" offset=\"32:256\">",
                "+          <match value=\"\\nFrom: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nDate: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nSubject: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nDelivered-To: \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: by \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: via \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nReceived: from \" type=\"string\" offset=\"32:8192\"/>",
                "+          <match value=\"\\nMime-Version: \" type=\"string\" offset=\"32:8192\"/>",
                "+        </match>",
                "       </match>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2688": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "aac3af4ccb9da07b1ade1a57ed5e015dbedb17c4"
                ]
            ],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2688",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9b94e17f2bceb0b79454689698bbb11c38a9ddd0",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505561410,
            "hunks": 14,
            "message": "TIKA 2400 : # Adjust the Object Recognition REST clients to work with changed servers",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java b/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "index d49ef0fed..82a00ad4f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "@@ -109,3 +109,3 @@ public class TensorflowRESTCaptioner implements ObjectRecogniser {",
                "             healthUri = URI.create(apiBaseUri + \"/ping\");",
                "-            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/captions?beam_size=%1$d&max_caption_length=%2$d\",",
                "+            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/caption/image?beam_size=%1$d&max_caption_length=%2$d\",",
                "                     captions, maxCaptionLength));",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java",
                "index 37caf4538..fc18405e8 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java",
                "@@ -85,8 +85,2 @@ public class ObjectRecognitionParser extends AbstractParser implements Initializ",
                "-    @Field",
                "-    private double minConfidence = 0.05;",
                "-",
                "-    @Field",
                "-    private int topN = 2;",
                "-",
                "     private ObjectRecogniser recogniser;",
                "@@ -104,3 +98,2 @@ public class ObjectRecognitionParser extends AbstractParser implements Initializ",
                "         LOG.info(\"Recogniser Available = {}\", recogniser.isAvailable());",
                "-        LOG.info(\"minConfidence = {}, topN={}\", minConfidence, topN);",
                "     }",
                "@@ -142,7 +135,4 @@ public class ObjectRecognitionParser extends AbstractParser implements Initializ",
                "                     if (xhtmlStartVal == null) xhtmlStartVal = \"captions\";",
                "-                    LOG.debug(\"Add {}\", object);",
                "-                    String mdValue = String.format(Locale.ENGLISH, \"%s (%.5f)\",",
                "-                            object.getLabel(), object.getConfidence());",
                "-                    metadata.add(MD_KEY_IMG_CAP, mdValue);",
                "-                    acceptedObjects.add(object);",
                "+                    String mdVal = String.format(Locale.ENGLISH, \"%s (%.5f)\", object.getLabel(), object.getConfidence());",
                "+                    metadata.add(MD_KEY_IMG_CAP, mdVal);",
                "                     xhtmlIds.add(String.valueOf(count++));",
                "@@ -150,17 +140,8 @@ public class ObjectRecognitionParser extends AbstractParser implements Initializ",
                "                     if (xhtmlStartVal == null) xhtmlStartVal = \"objects\";",
                "-                    if (object.getConfidence() >= minConfidence) {",
                "-                        count++;",
                "-                        LOG.info(\"Add {}\", object);",
                "-                        String mdValue = String.format(Locale.ENGLISH, \"%s (%.5f)\",",
                "-                                object.getLabel(), object.getConfidence());",
                "-                        metadata.add(MD_KEY_OBJ_REC, mdValue);",
                "-                        acceptedObjects.add(object);",
                "-                        xhtmlIds.add(object.getId());",
                "-                        if (count >= topN) {",
                "-                            break;",
                "-                        }",
                "-                    } else {",
                "-                        LOG.warn(\"Object {} confidence {} less than min {}\", object, object.getConfidence(), minConfidence);",
                "-                    }",
                "+                    String mdVal = String.format(Locale.ENGLISH, \"%s (%.5f)\", object.getLabel(), object.getConfidence());",
                "+                    metadata.add(MD_KEY_OBJ_REC, mdVal);",
                "+                    xhtmlIds.add(object.getId());",
                "                 }",
                "+                LOG.info(\"Add {}\", object);",
                "+                acceptedObjects.add(object);",
                "             }",
                "@@ -185,2 +166,2 @@ public class ObjectRecognitionParser extends AbstractParser implements Initializ",
                "     }",
                "-}",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "index 009bcbe2e..60d4f3239 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "@@ -81,2 +81,8 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "+    @Field",
                "+    private int topN;",
                "+",
                "+    @Field",
                "+    private double minConfidence;",
                "+",
                "     private URI apiUri;",
                "@@ -86,7 +92,7 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "     private boolean available;",
                "-    ",
                "-    protected URI getApiUri(Metadata metadata){",
                "-    \treturn apiUri;",
                "+",
                "+    protected URI getApiUri(Metadata metadata) {",
                "+        return apiUri;",
                "     }",
                "-    ",
                "+",
                "     @Override",
                "@@ -105,3 +111,4 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "             healthUri = URI.create(apiBaseUri + \"/ping\");",
                "-            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/classify?topk=%1$d\", 10));",
                "+            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/classify/image?topn=%1$d&min_confidence=%2$f\",",
                "+                    topN, minConfidence));",
                "@@ -112,2 +119,3 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "             LOG.info(\"Available = {}, API Status = {}\", available, response.getStatusLine());",
                "+            LOG.info(\"topN = {}, minConfidence = {}\", topN, minConfidence);",
                "         } catch (Exception e) {",
                "@@ -149,5 +157,5 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "                     JSONArray jConfidence = jReply.getJSONArray(\"confidence\");",
                "-            if (jClasses.length() != jConfidence.length()) {",
                "-                LOG.warn(\"Classes of size {} is not equal to confidence of size {}\", jClasses.length(), jConfidence.length());",
                "-            }",
                "+                    if (jClasses.length() != jConfidence.length()) {",
                "+                        LOG.warn(\"Classes of size {} is not equal to confidence of size {}\", jClasses.length(), jConfidence.length());",
                "+                    }",
                "                     assert jClasses.length() == jConfidence.length();",
                "@@ -169,2 +177,2 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "     }",
                "-}",
                "+}",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/ObjectRecognitionParser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a78717c37fe50de4d82e5bbf7bc9d52af1c13bb6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505555343,
            "hunks": 6,
            "message": "TIKA 2400 : # Define apiBaseUri for inceptionREST # Link wiki pages",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "index f45c2a95c..009bcbe2e 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "@@ -25,2 +25,3 @@ import java.util.ArrayList;",
                " import java.util.List;",
                "+import java.util.Locale;",
                " import java.util.Map;",
                "@@ -58,3 +59,3 @@ import org.xml.sax.SAXException;",
                "  * <p>",
                "- * NOTE : //TODO: link to wiki page here",
                "+ * NOTE : https://wiki.apache.org/tika/TikaAndVision",
                "  *",
                "@@ -78,5 +79,7 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "     @Field",
                "-    private URI apiUri = URI.create(\"http://localhost:8764/inception/v4/classify?topk=10\");",
                "-    @Field",
                "-    private URI healthUri = URI.create(\"http://localhost:8764/inception/v4/ping\");",
                "+    private URI apiBaseUri;",
                "+",
                "+    private URI apiUri;",
                "+",
                "+    private URI healthUri;",
                "@@ -101,2 +104,5 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "         try {",
                "+            healthUri = URI.create(apiBaseUri + \"/ping\");",
                "+            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/classify?topk=%1$d\", 10));",
                "+",
                "             DefaultHttpClient client = new DefaultHttpClient();",
                "@@ -104,2 +110,3 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "             available = response.getStatusLine().getStatusCode() == 200;",
                "+",
                "             LOG.info(\"Available = {}, API Status = {}\", available, response.getStatusLine());",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "index ec16c7895..6a18c0e09 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "@@ -41,3 +41,3 @@ import org.slf4j.LoggerFactory;",
                "  * <p>",
                "- * NOTE : //TODO: link to wiki page here",
                "+ * NOTE : https://wiki.apache.org/tika/TikaAndVisionVideo",
                "  *"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b98712576088010198c3aa4cb07ceb55a753c7c4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505282426,
            "hunks": 3,
            "message": "Update InceptionVideoRestDockerfile",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "index c95a1fcf5..2d1cac2be 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "@@ -67,3 +67,3 @@ RUN \\",
                "   pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.1-cp27-none-linux_x86_64.whl --ignore-installed  && \\",
                "-  pip install flask requests",
                "+  pip install flask requests pillow",
                "@@ -93,2 +93,2 @@ EXPOSE 8764",
                "-CMD inceptionapi.py",
                "\\ No newline at end of file",
                "+CMD inceptionapi.py"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4f784fc09c159849804b58f726ebba9b7f6ed28c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505555561,
            "hunks": 75,
            "message": "TIKA 2400 : # Fix formatting issues of inceptionapi.py # include logic for checking minimum confidence",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                "index a72900b49..710475bad 100755",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                "@@ -17,14 +17,15 @@",
                " \"\"\"",
                "-Image classification with Inception.",
                "+    Image classification with Inception.",
                "-This script exposes the tensorflow's inception classification service over REST API.",
                "+    This script exposes the tensorflow's inception classification service over REST API.",
                "-For more details, visit:",
                "-    https://tensorflow.org/tutorials/image_recognition/",
                "+    For more details, visit:",
                "+        https://tensorflow.org/tutorials/image_recognition/",
                "-Requirements :",
                "-  Flask",
                "-  tensorflow",
                "-  numpy",
                "-  requests",
                "+    Requirements :",
                "+      Flask",
                "+      tensorflow",
                "+      numpy",
                "+      requests",
                "+      pillow",
                " \"\"\"",
                "@@ -35,16 +36,13 @@ from __future__ import print_function",
                "-import os.path",
                "-import re",
                "+import os",
                " import sys",
                " import tarfile",
                "+import tempfile",
                "+",
                "+from io import BytesIO",
                "+from PIL import Image",
                "+from time import time",
                "-try:",
                "-    #This import is placed inside here to ensure that video_util and OpenCV is not required for image recognition APIs",
                "-    from video_util import get_center_frame, get_frames_interval, get_n_frames",
                "-except:",
                "-    print(\"Can't import video libraries, No video functionality is available\")",
                "-    ",
                "-import numpy as np",
                "-from six.moves import urllib",
                " import tensorflow as tf",
                "+",
                " from datasets import imagenet, dataset_utils",
                "@@ -53,23 +51,22 @@ from preprocessing import inception_preprocessing",
                "-slim = tf.contrib.slim",
                "-",
                "-import requests",
                " import json",
                "-json.encoder.FLOAT_REPR = lambda o: format(",
                "-    o, '.2f')  # JSON serialization of floats",
                "-from time import time",
                "-from PIL import Image",
                "-from io import BytesIO",
                "-import tempfile",
                "-import flask",
                "+import requests",
                "+from flask import Flask, request, Response, jsonify",
                "+from six.moves import urllib",
                "+try:",
                "+    # This import is placed inside here to ensure that video_util and OpenCV is not required for image recognition APIs",
                "+    from video_util import get_center_frame, get_frames_interval, get_n_frames",
                "+except:",
                "+    print(\"Can't import video libraries, No video functionality is available\")",
                "+",
                "+json.encoder.FLOAT_REPR = lambda o: format(o, '.2f')  # JSON serialization of floats",
                "+slim = tf.contrib.slim",
                " FLAGS = tf.app.flags.FLAGS",
                "-# inception_v4.ckpt",
                "-#   Inception V4 checkpoint file.",
                "-# imagenet_metadata.txt",
                "-#   Map from synset ID to a human readable string.",
                "-# imagenet_lsvrc_2015_synsets.txt",
                "-#   Text representation of a protocol buffer mapping a label to synset ID.",
                "+# inception_v4.ckpt - Inception V4 checkpoint file.",
                "+# imagenet_metadata.txt - Map from synset ID to a human readable string.",
                "+# imagenet_lsvrc_2015_synsets.txt - Text representation of a protocol buffer mapping a label to synset ID.",
                "+",
                " tf.app.flags.DEFINE_string(",
                "@@ -80,8 +77,5 @@ tf.app.flags.DEFINE_string(",
                " tf.app.flags.DEFINE_integer('port', '8764', \"\"\"Server PORT, default:8764\"\"\")",
                "-tf.app.flags.DEFINE_string('log', 'inception.log',",
                "-                           \"\"\"Log file name, default: inception.log\"\"\")",
                "+tf.app.flags.DEFINE_string('log', 'inception.log', \"\"\"Log file name, default: inception.log\"\"\")",
                "-# pylint: disable=line-too-long",
                " DATA_URL = 'http://download.tensorflow.org/models/inception_v4_2016_09_09.tar.gz'",
                "-# pylint: enable=line-too-long",
                "@@ -89,25 +83,23 @@ DATA_URL = 'http://download.tensorflow.org/models/inception_v4_2016_09_09.tar.gz",
                " def create_readable_names_for_imagenet_labels():",
                "-    \"\"\"Create a dict mapping label id to human readable string.",
                "-",
                "-    Returns:",
                "-        labels_to_names: dictionary where keys are integers from to 1000",
                "-        and values are human-readable names.",
                "-",
                "-    We retrieve a synset file, which contains a list of valid synset labels used",
                "-    by ILSVRC competition. There is one synset one per line, eg.",
                "-            #   n01440764",
                "-            #   n01443537",
                "-    We also retrieve a synset_to_human_file, which contains a mapping from synsets",
                "-    to human-readable names for every synset in Imagenet. These are stored in a",
                "-    tsv format, as follows:",
                "-            #   n02119247    black fox",
                "-            #   n02119359    silver fox",
                "-    We assign each synset (in alphabetical order) an integer, starting from 1",
                "-    (since 0 is reserved for the background class).",
                "-",
                "-    Code is based on",
                "-    https://github.com/tensorflow/models/blob/master/inception/inception/data/build_imagenet_data.py#L463",
                "     \"\"\"",
                "-",
                "-    # pylint: disable=line-too-long",
                "+        Create a dict mapping label id to human readable string.",
                "+        Returns:",
                "+            labels_to_names: dictionary where keys are integers from to 1000",
                "+            and values are human-readable names.",
                "+",
                "+        We retrieve a synset file, which contains a list of valid synset labels used",
                "+        by ILSVRC competition. There is one synset one per line, eg.",
                "+                #   n01440764",
                "+                #   n01443537",
                "+        We also retrieve a synset_to_human_file, which contains a mapping from synsets",
                "+        to human-readable names for every synset in Imagenet. These are stored in a",
                "+        tsv format, as follows:",
                "+                #   n02119247    black fox",
                "+                #   n02119359    silver fox",
                "+        We assign each synset (in alphabetical order) an integer, starting from 1",
                "+        (since 0 is reserved for the background class).",
                "+",
                "+        Code is based on",
                "+        https://github.com/tensorflow/models/blob/master/inception/inception/data/build_imagenet_data.py",
                "+    \"\"\"",
                "@@ -115,4 +107,3 @@ def create_readable_names_for_imagenet_labels():",
                "-    synset_list = [s.strip() for s in open(os.path.join(",
                "-        dest_directory, 'imagenet_lsvrc_2015_synsets.txt')).readlines()]",
                "+    synset_list = [s.strip() for s in open(os.path.join(dest_directory, 'imagenet_lsvrc_2015_synsets.txt')).readlines()]",
                "     num_synsets_in_ilsvrc = len(synset_list)",
                "@@ -120,4 +111,3 @@ def create_readable_names_for_imagenet_labels():",
                "-    synset_to_human_list = open(os.path.join(",
                "-        dest_directory, 'imagenet_metadata.txt')).readlines()",
                "+    synset_to_human_list = open(os.path.join(dest_directory, 'imagenet_metadata.txt')).readlines()",
                "     num_synsets_in_all_imagenet = len(synset_to_human_list)",
                "@@ -144,9 +134,9 @@ def create_readable_names_for_imagenet_labels():",
                " def util_download(url, dest_directory):",
                "-    \"\"\"Downloads the file.",
                "-",
                "-    Args:",
                "-      url: URL to download the file from.",
                "-      dest_directory: Destination directory",
                "-    Returns:",
                "-      Nothing",
                "+    \"\"\"",
                "+        Downloads the file.",
                "+        Args:",
                "+          url: URL to download the file from.",
                "+          dest_directory: Destination directory",
                "+        Returns:",
                "+          Nothing",
                "     \"\"\"",
                "@@ -156,5 +146,6 @@ def util_download(url, dest_directory):",
                "     def _progress(count, block_size, total_size):",
                "-        sys.stdout.write('\\r>> Downloading %s %.1f%%' % (",
                "-            filename, float(count * block_size) / float(total_size) * 100.0))",
                "+        sys.stdout.write(",
                "+            '\\r>> Downloading %s %.1f%%' % (filename, float(count * block_size) / float(total_size) * 100.0))",
                "         sys.stdout.flush()",
                "+",
                "     filepath, _ = urllib.request.urlretrieve(url, filepath, _progress)",
                "@@ -166,9 +157,9 @@ def util_download(url, dest_directory):",
                " def util_download_tar(url, dest_directory):",
                "-    \"\"\"Downloads a file and extracts it.",
                "-",
                "-    Args:",
                "-      url: URL to download the file from.",
                "-      dest_directory: Destination directory",
                "-    Returns:",
                "-      Nothing",
                "+    \"\"\"",
                "+        Downloads a file and extracts it.",
                "+        Args:",
                "+          url: URL to download the file from.",
                "+          dest_directory: Destination directory",
                "+        Returns:",
                "+          Nothing",
                "     \"\"\"",
                "@@ -178,5 +169,6 @@ def util_download_tar(url, dest_directory):",
                "     def _progress(count, block_size, total_size):",
                "-        sys.stdout.write('\\r>> Downloading %s %.1f%%' % (",
                "-            filename, float(count * block_size) / float(total_size) * 100.0))",
                "+        sys.stdout.write(",
                "+            '\\r>> Downloading %s %.1f%%' % (filename, float(count * block_size) / float(total_size) * 100.0))",
                "         sys.stdout.flush()",
                "+",
                "     filepath, _ = urllib.request.urlretrieve(url, filepath, _progress)",
                "@@ -190,2 +182,3 @@ def maybe_download_and_extract():",
                "     \"\"\"Download and extract model tar file.\"\"\"",
                "+",
                "     dest_directory = FLAGS.model_dir",
                "@@ -193,12 +186,15 @@ def maybe_download_and_extract():",
                "         tf.gfile.MakeDirs(dest_directory)",
                "+",
                "     if not tf.gfile.Exists(os.path.join(dest_directory, 'inception_v4.ckpt')):",
                "         util_download_tar(DATA_URL, dest_directory)",
                "-    # pylint: disable=line-too-long",
                "+",
                "     if not tf.gfile.Exists(os.path.join(dest_directory, 'imagenet_lsvrc_2015_synsets.txt')):",
                "         util_download(",
                "-            'https://raw.githubusercontent.com/tensorflow/models/master/inception/inception/data/imagenet_lsvrc_2015_synsets.txt', dest_directory)",
                "+            'https://raw.githubusercontent.com/tensorflow/models/master/inception/inception/data/imagenet_lsvrc_2015_synsets.txt',",
                "+            dest_directory)",
                "+",
                "     if not tf.gfile.Exists(os.path.join(dest_directory, 'imagenet_metadata.txt')):",
                "         util_download(",
                "-            'https://raw.githubusercontent.com/tensorflow/models/master/inception/inception/data/imagenet_metadata.txt', dest_directory)",
                "-    # pylint: enable=line-too-long",
                "+            'https://raw.githubusercontent.com/tensorflow/models/master/inception/inception/data/imagenet_metadata.txt',",
                "+            dest_directory)",
                "@@ -206,5 +202,4 @@ def maybe_download_and_extract():",
                " def current_time():",
                "-    \"\"\"",
                "-        Returns current time in milli seconds",
                "-    \"\"\"",
                "+    \"\"\"Returns current time in milli seconds\"\"\"",
                "+",
                "     return int(1000 * time())",
                "@@ -212,6 +207,4 @@ def current_time():",
                "-class Classifier(flask.Flask):",
                "-    '''",
                "-    Classifier Service class",
                "-    '''",
                "+class Classifier(Flask):",
                "+    \"\"\"Classifier Service class\"\"\"",
                "@@ -222,7 +215,5 @@ class Classifier(flask.Flask):",
                "         from logging.handlers import RotatingFileHandler",
                "-        file_handler = RotatingFileHandler(",
                "-            FLAGS.log, maxBytes=1024 * 1024 * 100, backupCount=20)",
                "+        file_handler = RotatingFileHandler(FLAGS.log, maxBytes=1024 * 1024 * 100, backupCount=20)",
                "         file_handler.setLevel(logging.INFO)",
                "-        formatter = logging.Formatter(",
                "-            \"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
                "+        formatter = logging.Formatter(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
                "         file_handler.setFormatter(formatter)",
                "@@ -234,10 +225,8 @@ class Classifier(flask.Flask):",
                "         image = tf.image.decode_jpeg(self.image_str_placeholder, channels=3)",
                "-        processed_image = inception_preprocessing.preprocess_image(",
                "-            image, self.image_size, self.image_size, is_training=False)",
                "+        processed_image = inception_preprocessing.preprocess_image(image, self.image_size,",
                "+                                                                   self.image_size, is_training=False)",
                "         processed_images = tf.expand_dims(processed_image, 0)",
                "-        # Create the model, use the default arg scope to configure the",
                "-        # batch norm parameters.",
                "+        # create the model, use the default arg scope to configure the batch norm parameters.",
                "         with slim.arg_scope(inception.inception_v4_arg_scope()):",
                "-            logits, _ = inception.inception_v4(",
                "-                processed_images, num_classes=1001, is_training=False)",
                "+            logits, _ = inception.inception_v4(processed_images, num_classes=1001, is_training=False)",
                "         self.probabilities = tf.nn.softmax(logits)",
                "@@ -252,17 +241,22 @@ class Classifier(flask.Flask):",
                "-    def classify(self, image_string, topk):",
                "-        eval_probabilities = self.sess.run(self.probabilities, feed_dict={",
                "-                                           self.image_str_placeholder: image_string})",
                "+    def classify(self, image_string, topn, min_confidence):",
                "+        eval_probabilities = self.sess.run(self.probabilities, feed_dict={self.image_str_placeholder: image_string})",
                "         eval_probabilities = eval_probabilities[0, 0:]",
                "-        sorted_inds = [i[0] for i in sorted(",
                "-            enumerate(-eval_probabilities), key=lambda x:x[1])]",
                "+        sorted_inds = [i[0] for i in sorted(enumerate(-eval_probabilities), key=lambda x: x[1])]",
                "+",
                "+        if topn is None:",
                "+            topn = len(sorted_inds)",
                "-        if topk == None:",
                "-            topk = len(sorted_inds)",
                "-        ",
                "         res = []",
                "-        for i in range(topk):",
                "+        for i in range(topn):",
                "             index = sorted_inds[i]",
                "             score = float(eval_probabilities[index])",
                "-            res.append((index, self.names[index], score))",
                "+            if min_confidence is None:",
                "+                res.append((index, self.names[index], score))",
                "+            else:",
                "+                if score >= min_confidence:",
                "+                    res.append((index, self.names[index], score))",
                "+                else:",
                "+                    # the scores are in sorted order, so we can break the loop whenever we get a low score object",
                "+                    break",
                "         return res",
                "@@ -270,3 +264,2 @@ class Classifier(flask.Flask):",
                "-from flask import Flask, request, abort, g, Response, jsonify",
                " app = Classifier(__name__)",
                "@@ -274,3 +267,3 @@ app = Classifier(__name__)",
                "-def get_remotefile(url, success=200, timeout=10):",
                "+def get_remote_file(url, success=200, timeout=10):",
                "     \"\"\"",
                "@@ -292,5 +285,4 @@ def get_remotefile(url, success=200, timeout=10):",
                " def index():",
                "-    \"\"\"",
                "-        The index page which provide information about other API end points",
                "-    \"\"\"",
                "+    \"\"\"The index page which provide information about other API end points\"\"\"",
                "+",
                "     return \"\"\"",
                "@@ -304,3 +296,3 @@ def index():",
                "             </li>",
                "-            <li> <code>/inception/v4/classify</code> - <br/>",
                "+            <li> <code>/inception/v4/classify/image</code> - <br/>",
                "                 <table>",
                "@@ -308,3 +300,4 @@ def index():",
                "                 <tr><td></td> <td>Query Params : <br/>",
                "-                   <code>topk </code>: type = int : top classes to get; default : 10 <br/>",
                "+                   <code>topn </code>: type = int : top classes to get; default : 5 <br/>",
                "+                   <code>min_confidence </code>: type = float : minimum confidence that a label should have to exist in topn; default : 0.015 <br/>",
                "                    <code>human </code>: type = boolean : human readable class names; default : true <br/>",
                "@@ -314,3 +307,3 @@ def index():",
                "                     Include a query parameter <code>url </code> which is an http url of JPEG image <br/>",
                "-                    Example: <code> curl \"localhost:8764/inception/v4/classify?url=http://xyz.com/example.jpg\"</code>",
                "+                    Example: <code> curl \"localhost:8764/inception/v4/classify/image?url=http://xyz.com/example.jpg\"</code>",
                "                 </td></tr>",
                "@@ -318,3 +311,3 @@ def index():",
                "                     POST JPEG image content as binary data in request body. <br/>",
                "-                    Example: <code> curl -X POST \"localhost:8764/inception/v4/classify?topk=10&human=false\" --data-binary @example.jpg </code>",
                "+                    Example: <code> curl -X POST \"localhost:8764/inception/v4/classify/image?topn=5&min_confidence=0.015&human=false\" --data-binary @example.jpg </code>",
                "                 </td></tr>",
                "@@ -326,3 +319,4 @@ def index():",
                "                 <tr><td></td> <td>Query Params : <br/>",
                "-                   <code>topk </code>: type = int : top classes to get; default : 10 <br/>",
                "+                   <code>topn </code>: type = int : top classes to get; default : 5 <br/>",
                "+                   <code>min_confidence </code>: type = float : minimum confidence that a label should have to exist in topn; default : 0.015 <br/>",
                "                    <code>human </code>: type = boolean : human readable class names; default : true <br/>",
                "@@ -334,3 +328,3 @@ def index():",
                "                    <code>num-frame </code>: type = int : Number of frames to be extracted from video while using FIXED model. If num_frame=10 then 10 frames equally distant from each other will be extracted; default : 10 <br/>",
                "-      ",
                "+",
                "                  </td></tr>",
                "@@ -344,3 +338,3 @@ def index():",
                "                     Include a query parameter <code>ext </code>this extension is needed to tell OpenCV which decoder to use, default is \".mp4\" </br>",
                "-                    Example: <code> curl -X POST \"localhost:8764/inception/v4/classify/video?topk=10&human=false\" --data-binary @example.mp4 </code>",
                "+                    Example: <code> curl -X POST \"localhost:8764/inception/v4/classify/video?topn=5&min_confidence=0.015&human=false\" --data-binary @example.mp4 </code>",
                "                 </td></tr>",
                "@@ -355,4 +349,4 @@ def index():",
                " def ping_pong():",
                "-    \"\"\"API to do health check. If this says status code 200, then healthy",
                "-    \"\"\"",
                "+    \"\"\"API to do health check. If this says status code 200, then healthy\"\"\"",
                "+",
                "     return \"pong\"",
                "@@ -360,7 +354,6 @@ def ping_pong():",
                "-@app.route(\"/inception/v4/classify\", methods=[\"GET\", \"POST\"])",
                "+@app.route(\"/inception/v4/classify/image\", methods=[\"GET\", \"POST\"])",
                " def classify_image():",
                "-    \"\"\"",
                "-    API to classify images",
                "-    \"\"\"",
                "+    \"\"\"API to classify images\"\"\"",
                "+",
                "     image_format = \"not jpeg\"",
                "@@ -368,3 +361,4 @@ def classify_image():",
                "     st = current_time()",
                "-    topk = int(request.args.get(\"topk\", \"10\"))",
                "+    topn = int(request.args.get(\"topn\", \"5\"))",
                "+    min_confidence = float(request.args.get(\"min_confidence\", \"0.015\"))",
                "     human = request.args.get(\"human\", \"true\").lower() in (\"true\", \"1\", \"yes\")",
                "@@ -374,5 +368,5 @@ def classify_image():",
                "         url = request.args.get(\"url\")",
                "-        c_type, image_data = get_remotefile(url)",
                "+        c_type, image_data = get_remote_file(url)",
                "         if not image_data:",
                "-            return flask.Response(status=400, response=jsonify(error=\"Couldnot HTTP GET %s\" % url))",
                "+            return Response(status=400, response=jsonify(error=\"Could not HTTP GET %s\" % url))",
                "         if 'image/jpeg' in c_type:",
                "@@ -399,3 +393,3 @@ def classify_image():",
                "     try:",
                "-        classes = app.classify(image_string=jpg_image, topk=topk)",
                "+        classes = app.classify(image_string=jpg_image, topn=topn, min_confidence=min_confidence)",
                "     except Exception as e:",
                "@@ -404,2 +398,5 @@ def classify_image():",
                "     classids, classnames, confidence = zip(*classes)",
                "+",
                "+    print(classnames, confidence)",
                "+",
                "     classifier_time = current_time() - st",
                "@@ -419,2 +416,3 @@ def classify_image():",
                "+",
                " CENTER = \"center\"",
                "@@ -423,3 +421,4 @@ FIXED = \"fixed\"",
                "-ALLOWED_MODE = set([CENTER ,INTERVAL , FIXED])",
                "+ALLOWED_MODE = {CENTER, INTERVAL, FIXED}",
                "+",
                "@@ -428,15 +427,16 @@ def classify_video():",
                "     \"\"\"",
                "-    API to classify videos",
                "-    Request args -",
                "-     url - PATH of file",
                "-     topk - number of labels",
                "-     human - human readable or not",
                "-     mode - Modes of frame extraction {\"center\", \"interval\", \"fixed\"}",
                "-        \"center\" - Just one frame in center. <Default option>",
                "-        \"interval\" - Extracts frames after fixed interval. ",
                "-        \"fixed\" - Extract fixed number of frames.",
                "-     frame-interval - Interval for frame extraction to be used with INTERVAL mode. If frame_interval=10 then every 10th frame will be extracted.",
                "-     num-frame - Number of frames to be extracted from video while using FIXED model. If num_frame=10 then 10 frames equally distant from each other will be extracted",
                "-     ",
                "-     ext - If video is sent in binary format, then ext is needed to tell OpenCV which decoder to use. eg \".mp4\"",
                "+        API to classify videos",
                "+        Request args -",
                "+         url - PATH of file",
                "+         topn - number of top scoring labels",
                "+         min_confidence - minimum confidence that a label should have to exist in topn",
                "+         human - human readable or not",
                "+         mode - Modes of frame extraction {\"center\", \"interval\", \"fixed\"}",
                "+            \"center\" - Just one frame in center. <Default option>",
                "+            \"interval\" - Extracts frames after fixed interval.",
                "+            \"fixed\" - Extract fixed number of frames.",
                "+         frame-interval - Interval for frame extraction to be used with INTERVAL mode. If frame_interval=10 then every 10th frame will be extracted.",
                "+         num-frame - Number of frames to be extracted from video while using FIXED model. If num_frame=10 then 10 frames equally distant from each other will be extracted",
                "+",
                "+         ext - If video is sent in binary format, then ext is needed to tell OpenCV which decoder to use. eg \".mp4\"",
                "     \"\"\"",
                "@@ -444,5 +444,6 @@ def classify_video():",
                "     st = current_time()",
                "-    topk = int(request.args.get(\"topk\", \"10\"))",
                "+    topn = int(request.args.get(\"topn\", \"5\"))",
                "+    min_confidence = float(request.args.get(\"min_confidence\", \"0.015\"))",
                "     human = request.args.get(\"human\", \"true\").lower() in (\"true\", \"1\", \"yes\")",
                "-    ",
                "+",
                "     mode = request.args.get(\"mode\", CENTER).lower()",
                "@@ -452,7 +453,7 @@ def classify_video():",
                "         '''",
                "-        return flask.Response(status=400, response=jsonify(error=\"not a valid mode. Available mode %s\" % str(ALLOWED_MODE)))",
                "-    ",
                "+        return Response(status=400, response=jsonify(error=\"not a valid mode. Available mode %s\" % str(ALLOWED_MODE)))",
                "+",
                "     frame_interval = int(request.args.get(\"frame-interval\", \"10\"))",
                "     num_frame = int(request.args.get(\"num-frame\", \"10\"))",
                "-    ",
                "+",
                "     if request.method == 'POST':",
                "@@ -460,3 +461,3 @@ def classify_video():",
                "         ext = request.args.get(\"ext\", \".mp4\").lower()",
                "-        ",
                "+",
                "         temp_file = tempfile.NamedTemporaryFile(suffix=ext)",
                "@@ -464,11 +465,10 @@ def classify_video():",
                "         temp_file.file.close()",
                "-        ",
                "+",
                "         url = temp_file.name",
                "-        ",
                "     else:",
                "         url = request.args.get(\"url\")",
                "-    ",
                "+",
                "     read_time = current_time() - st",
                "-    st = current_time() # reset start time",
                "-    ",
                "+    st = current_time()  # reset start time",
                "+",
                "     if mode == CENTER:",
                "@@ -479,3 +479,3 @@ def classify_video():",
                "         image_data_arr = get_n_frames(url, num_frame)",
                "-    ",
                "+",
                "     classes = []",
                "@@ -483,3 +483,3 @@ def classify_video():",
                "         try:",
                "-            _classes = app.classify(image_data , topk=None)",
                "+            _classes = app.classify(image_data, topn=None, min_confidence=None)",
                "         except Exception as e:",
                "@@ -487,3 +487,3 @@ def classify_video():",
                "             return Response(status=400, response=str(e))",
                "-        ",
                "+",
                "         _classes.sort()",
                "@@ -492,3 +492,3 @@ def classify_video():",
                "         else:",
                "-            for idx,_c in enumerate(_classes):",
                "+            for idx, _c in enumerate(_classes):",
                "                 c = list(classes[idx])",
                "@@ -496,16 +496,16 @@ def classify_video():",
                "                 classes[idx] = tuple(c)",
                "-                ",
                "-    ",
                "-    # avg out confidence score",
                "-    for idx,c in enumerate(classes):",
                "+",
                "+    top_classes = []",
                "+    for c in classes:",
                "         c = list(c)",
                "-        c[2] = c[2]/len(image_data_arr)",
                "-        ",
                "-        classes[idx] = tuple(c)",
                "-    ",
                "-    classes = sorted(classes, key=lambda tup: tup[2])[-topk:][::-1]",
                "+        # avg out confidence score",
                "+        avg_score = c[2] / len(image_data_arr)",
                "+        c[2] = avg_score",
                "+        if avg_score >= min_confidence:",
                "+            top_classes.append(tuple(c))",
                "+",
                "+    top_classes = sorted(top_classes, key=lambda tup: tup[2])[-topn:][::-1]",
                "+",
                "+    classids, classnames, confidence = zip(*top_classes)",
                "-    classids, classnames, confidence = zip(*classes)",
                "-    ",
                "-    ",
                "     classifier_time = current_time() - st",
                "@@ -513,6 +513,6 @@ def classify_video():",
                "     res = {",
                "-        'classids' : classids,",
                "+        'classids': classids,",
                "         'confidence': confidence,",
                "         'time': {",
                "-            'read' : read_time,",
                "+            'read': read_time,",
                "             'classification': classifier_time,",
                "@@ -525,2 +525,3 @@ def classify_video():",
                "+",
                " def main(_):",
                "@@ -530,2 +531,3 @@ def main(_):",
                "+",
                " if __name__ == '__main__':"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "21c0f373e0a9bcf82e3e53c886c45f448b50df76",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504820214,
            "hunks": 1,
            "message": "PicturesSource has been copied to Apache POI, mark the class to remove once we have upgraded to a version with it in",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "index 0622ddcbd..ff07fef27 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java",
                "@@ -700,2 +700,5 @@ public class WordExtractor extends AbstractPOIFSExtractor {",
                "      * over the un-claimed, and peeking forward",
                "+     * ",
                "+     * TODO When POI 3.18 is out, replace this with PictureRunMapper,",
                "+     *  which is this class ported over into POI core",
                "      */"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "94560199e88d3a490740ba93dbbd4c2a0adccae6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533307627,
            "hunks": 0,
            "message": "Merge pull request #245 from grigoriy/TIKA-2701 fix for TIKA-2701 contributed by grigoriy",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2701": ""
            },
            "ghissue_refs": {
                "245": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2701",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 245",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7914318c5eab2b5a03adf419d0e330c1a978227a",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505569819,
            "hunks": 1,
            "message": "added version-specific mime-type definitions for Quattro for DOS and Windows",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index da67270b9..c0ce39daa 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -3837,2 +3837,50 @@",
                "+  <mime-type type=\"application/x-quattro-pro;version=1-dos\">",
                "+  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <_comment>Quattro Pro for DOS, version 1-4</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x000002002051\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wq1\"/>",
                "+    <glob pattern=\"*.wkq\"/>",
                "+  </mime-type>",
                "+",
                "+  <mime-type type=\"application/x-quattro-pro;version=5-dos\">",
                "+  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <_comment>Quattro Pro for DOS, version 5</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x000002002151\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wq2\"/>",
                "+    <glob pattern=\"*.wkq\"/>",
                "+  </mime-type>",
                "+",
                "+  <mime-type type=\"application/x-quattro-pro;version=1-win\">",
                "+  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <_comment>Quattro Pro for Windows, version 1-5</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x000002000110\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wb1\"/>",
                "+  </mime-type>",
                "+",
                "+  <mime-type type=\"application/x-quattro-pro;version=6-win\">",
                "+  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <_comment>Quattro Pro for Windows, version 6</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x000002000210\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wb2\"/>",
                "+  </mime-type>",
                "+  ",
                "+  <!-- Quattro Pro for Windows 7-8 (qp2) and and 9 (wb3) files are",
                "+       currently detected by POIFSContainerDetector",
                "+       TODO: add version strings (version=7-win / version=9-win)",
                "+        to make reporting consistent across all versions",
                "+  -->",
                "+",
                "   <mime-type type=\"application/xquery\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: dos",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6afdf198d33beb12553957fcbc3f47830a45a942",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524777850,
            "hunks": 1,
            "message": "Depend on Parso for SAS7BDAT support",
            "diff": [
                "diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml",
                "index 6b51f30e5..e9e5b83c6 100644",
                "--- a/tika-parsers/pom.xml",
                "+++ b/tika-parsers/pom.xml",
                "@@ -177,2 +177,7 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>com.epam</groupId>",
                "+      <artifactId>parso</artifactId>",
                "+      <version>${parso.version}</version>",
                "+    </dependency>",
                "     <dependency>"
            ],
            "changed_files": [
                "tika-parsers/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f3508f2ff4cb827be315de95dacf3e59ab23c7c8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524783981,
            "hunks": 3,
            "message": "XHTML improvements",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 1cef3cd6d..4944c1293 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -65,3 +65,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "         SasFileReader sas = new SasFileReaderImpl(stream);",
                "-        ",
                "+",
                "         // TODO Metadata",
                "@@ -87,5 +87,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "             for (String val : DataWriterUtil.getRowValues(sas.getColumns(), row)) {",
                "-                xhtml.startElement(\"td\");",
                "-                xhtml.characters(val);",
                "-                xhtml.endElement(\"td\");",
                "+                xhtml.element(\"td\", val);",
                "             }",
                "@@ -97,3 +95,3 @@ public class SAS7BDATParser extends AbstractParser {",
                "         xhtml.endElement(\"table\");",
                "-        xhtml.newline();",
                "+        xhtml.endDocument();",
                "     }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "284965e789ec86364c31d471f16d6732c5e4e41d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524846892,
            "hunks": 2,
            "message": "Some SAS7BDAT metadata and unit testing",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 4944c1293..5992e15a4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -35,2 +35,3 @@ import com.epam.parso.Column;",
                " import com.epam.parso.DataWriterUtil;",
                "+import com.epam.parso.SasFileProperties;",
                " import com.epam.parso.SasFileReader;",
                "@@ -65,6 +66,57 @@ public class SAS7BDATParser extends AbstractParser {",
                "         SasFileReader sas = new SasFileReaderImpl(stream);",
                "+        SasFileProperties props = sas.getSasFileProperties();",
                "-        // TODO Metadata",
                "+        // Record the interesting parts of the file's metadata",
                "+        metadata.set(TikaCoreProperties.TITLE, props.getName());",
                "+        metadata.set(TikaCoreProperties.CREATED, props.getDateCreated());",
                "+        metadata.set(TikaCoreProperties.MODIFIED, props.getDateModified());",
                "-        // Output as a table",
                "+        // TODO What about these?",
                "+/*",
                "+u64 - false",
                "+compressionMethod - null",
                "+endianness - 1",
                "+encoding - windows-1252",
                "+sessionEncoding - null",
                "+fileType - DATA",
                "+sasRelease - 9.0101M3",
                "+serverType - XP_PRO",
                "+osName - ",
                "+osType - ",
                "+headerLength - 1024",
                "+pageLength - 8192",
                "+pageCount - 1",
                "+rowLength - 96",
                "+rowCount - 31",
                "+mixPageRowCount - 69",
                "+columnsCount - 5",
                "+*/",
                "+",
                "+        // TODO Should we output more Column info as metadata?",
                "+/*",
                "+5 Columns defined:",
                "+ 1 - A",
                "+  Label: A",
                "+  Format: $58.",
                "+  Size 58 of java.lang.String",
                "+ 2 - B",
                "+  Label: B",
                "+  Format: ",
                "+  Size 8 of java.lang.Number",
                "+ 3 - C",
                "+  Label: C",
                "+  Format: DATE8.",
                "+  Size 8 of java.lang.Number",
                "+ 4 - D",
                "+  Label: D",
                "+  Format: DATETIME17.",
                "+  Size 8 of java.lang.Number",
                "+ 5 - E",
                "+  Label: E",
                "+  Format: ",
                "+  Size 8 of java.lang.Number",
                "+*/",
                "+",
                "+        // Output file contents as a table",
                "+        xhtml.element(\"h1\", props.getName());",
                "         xhtml.startElement(\"table\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0e39bceef4456eb391ace48fece2ebce52e0824d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533310801,
            "hunks": 0,
            "message": "Merge pull request #236 from GerardBouchar/master TIKA-2648 : detect interpreted server-side scripting languages",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2648": ""
            },
            "ghissue_refs": {
                "236": "Improve MimeType detection for interpreted server-side languages apache/incubator-stormcrawler#630"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2648",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 236",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2a81e975e48f2d1e051920725221fc5341e6db5f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505801284,
            "hunks": 2,
            "message": "TIKA 2400 : Update dockerfiles with namespace 'uscdatascience'",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "index 7b95d0640..49af80fcf 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "@@ -17,3 +17,3 @@",
                "-FROM thejanw/inception-rest-tika",
                "+FROM uscdatascience/inception-rest-tika",
                " MAINTAINER Apache Tika Team",
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "index 7149eebe1..b24143923 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "@@ -17,3 +17,3 @@",
                "-FROM thejanw/inception-rest-tika",
                "+FROM uscdatascience/inception-rest-tika",
                " MAINTAINER Apache Tika Team"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "dead95609936fbe7fa8b382121b7efaf0adfa995",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505636207,
            "hunks": 17,
            "message": "TIKA 2400 : Update dockerfiles",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "index 93354c46b..1dabfbe6e 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "@@ -20,5 +20,2 @@ MAINTAINER Apache Tika Team",
                "-# Install python pillow. TODO: Remove this with the fix for TIKA 2398",
                "-RUN pip install pillow",
                "-",
                " # Download the pretrained im2txt checkpoint",
                "@@ -48,3 +45,3 @@ RUN \\",
                "-    wget https://raw.githubusercontent.com/apache/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py \\",
                "+    wget https://raw.githubusercontent.com/ThejanW/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py \\",
                "         -O im2txtapi.py && \\",
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile",
                "index 1c5ad4d7f..61a9f9917 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile",
                "@@ -16,5 +16,5 @@",
                " #",
                "-FROM ubuntu",
                "-MAINTAINER Thamme Gowda <thammegowda@apache.org> and Kranthi Kiran GV <kkranthi@student.nitw.ac.in>",
                "+FROM ubuntu:16.04",
                "+MAINTAINER Apache Tika Team",
                "@@ -27,3 +27,3 @@ RUN \\",
                "   pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.1-cp27-none-linux_x86_64.whl && \\",
                "-  pip install flask requests pillow",
                "+  pip install flask requests pillow numpy",
                "@@ -40,6 +40,9 @@ RUN \\",
                " RUN apt-get clean",
                "+",
                "+# Set environment variables",
                " ENV PYTHONPATH=\"$PYTHONPATH:/models-c15fada28113eca32dc98d6e3bec4755d0d5b4c2/slim\"",
                " ENV LD_PRELOAD=\"/usr/lib/libtcmalloc_minimal.so.4\"",
                "-",
                " ENV PYTHONPATH=\"$PYTHONPATH:$PATH\"",
                "+",
                "+# To cache the trained model",
                " RUN python -c \"import inceptionapi\"",
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "index 2d1cac2be..3da5cb1be 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "@@ -17,5 +17,4 @@",
                "-FROM ubuntu:16.04",
                "-MAINTAINER Thamme Gowda <thammegowda@apache.org> and Kranthi Kiran GV <kkranthi@student.nitw.ac.in> and \\",
                "-           Madhav Sharan <msharan@usc.edu> and Chris Mattmann <mattmann@apache.org>",
                "+FROM inception-rest-tika",
                "+MAINTAINER Apache Tika Team",
                "@@ -23,4 +22,3 @@ MAINTAINER Thamme Gowda <thammegowda@apache.org> and Kranthi Kiran GV <kkranthi@",
                " RUN apt-get update && \\",
                "-      apt-get install -y wget git unzip curl \\",
                "-      libtcmalloc-minimal4 software-properties-common apt-utils \\",
                "+      apt-get install -y software-properties-common apt-utils \\",
                "       build-essential cmake pkg-config \\",
                "@@ -28,14 +26,4 @@ RUN apt-get update && \\",
                "       libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \\",
                "-      libxvidcore-dev libx264-dev \\",
                "-      libgtk2.0-dev \\",
                "-      libatlas-base-dev gfortran \\",
                "-      python2.7-dev \\",
                "-      python-pip",
                "-",
                "-# Install ffmpeg",
                "-RUN apt-get install -y ffmpeg",
                "-",
                "-RUN \\",
                "-      pip install --upgrade pip && \\",
                "-      pip install numpy",
                "+      libxvidcore-dev libx264-dev libgtk2.0-dev libatlas-base-dev gfortran \\",
                "+      ffmpeg",
                "@@ -43,3 +31,2 @@ RUN \\",
                " WORKDIR /usr/local/src",
                "-",
                " RUN \\",
                "@@ -63,17 +50,5 @@ RUN make install",
                " WORKDIR /",
                "-",
                "-# Install tensorflow and other dependencies",
                "-RUN \\",
                "-  pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.1-cp27-none-linux_x86_64.whl --ignore-installed  && \\",
                "-  pip install flask requests pillow",
                "-",
                "-# Get the TF-slim dependencies",
                "-# Downloading from a specific commit for future compatibility",
                "-RUN wget https://github.com/tensorflow/models/archive/c15fada28113eca32dc98d6e3bec4755d0d5b4c2.zip",
                "-",
                "-RUN unzip c15fada28113eca32dc98d6e3bec4755d0d5b4c2.zip",
                "-",
                " RUN \\",
                "-  wget https://raw.githubusercontent.com/apache/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py -O /usr/bin/inceptionapi.py && \\",
                "-  wget https://raw.githubusercontent.com/apache/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py -O /usr/bin/video_util.py && \\",
                "+  wget https://raw.githubusercontent.com/ThejanW/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py -O /usr/bin/inceptionapi.py && \\",
                "+  wget https://raw.githubusercontent.com/ThejanW/tika/master/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py -O /usr/bin/video_util.py && \\",
                "   chmod +x /usr/bin/inceptionapi.py && \\",
                "@@ -81,9 +56,12 @@ RUN \\",
                "-# clean up cache + delete OpenCV source files, so we can publish smaller image to hub",
                "+# Clean up cache + delete OpenCV source files, so we can publish smaller image to hub",
                " RUN apt-get clean",
                " RUN rm -rf /usr/local/src",
                "+",
                "+# Set environment variables",
                " ENV PYTHONPATH=\"$PYTHONPATH:/models-c15fada28113eca32dc98d6e3bec4755d0d5b4c2/slim\"",
                " ENV LD_PRELOAD=\"/usr/lib/libtcmalloc_minimal.so.4\"",
                "-",
                " ENV PYTHONPATH=\"$PYTHONPATH:$PATH\"",
                "+",
                "+# To cache the trained model",
                " RUN python -c \"import inceptionapi\""
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionRestDockerfile",
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c31d40f4478c6a7a83d535c3bb3cc2fe4678b3d6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525370294,
            "hunks": 2,
            "message": "SAS7BDAT html tests",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "index 56260cafa..121d95820 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java",
                "@@ -121,4 +121,7 @@ public class SAS7BDATParser extends AbstractParser {",
                "         for (Column c : sas.getColumns()) {",
                "+            String label = c.getLabel();",
                "+            if (label == null || label.isEmpty()) label = c.getName();",
                "+",
                "             xhtml.startElement(\"th\", \"title\", c.getName());",
                "-            xhtml.characters(c.getLabel());",
                "+            xhtml.characters(label);",
                "             xhtml.endElement(\"th\");"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/sas/SAS7BDATParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "712b69773863865f7aa207eecc291a9a010e76fe",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505556667,
            "hunks": 1,
            "message": "TIKA 2400 : Minor change to im2txtapi.py",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "index 54b78a3eb..fff2d22db 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "@@ -219,3 +219,3 @@ def caption_image():",
                "         image_bytes = BytesIO()",
                "-        rgb_image.save(image_bytes, format=\"jpeg\")",
                "+        rgb_image.save(image_bytes, format=\"jpeg\", quality=95)",
                "         jpg_image = image_bytes.getvalue()"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6b310534f736d275e7ff582f083ae289589fe99b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505555713,
            "hunks": 4,
            "message": "TIKA 2400 : Minor changes to im2txtapi.py",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "index 75f5e8775..54b78a3eb 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                "@@ -160,3 +160,3 @@ def index():",
                "             </li>",
                "-            <li> <code>/inception/v3/captions</code> - <br/>",
                "+            <li> <code>/inception/v3/caption/image</code> - <br/>",
                "                 <table>",
                "@@ -166,3 +166,3 @@ def index():",
                "                     Include a query parameter <code>url </code> which is an http url of JPEG image <br/>",
                "-                    Example: <code> curl \"localhost:8764/inception/v3/captions?url=http://xyz.com/example.jpg\"</code>",
                "+                    Example: <code> curl \"localhost:8764/inception/v3/caption/image?url=http://xyz.com/example.jpg\"</code>",
                "                 </td></tr>",
                "@@ -170,3 +170,3 @@ def index():",
                "                     POST JPEG image content as binary data in request body. <br/>",
                "-                    Example: <code> curl -X POST \"localhost:8764/inception/v3/captions\" --data-binary @example.jpg </code>",
                "+                    Example: <code> curl -X POST \"localhost:8764/inception/v3/caption/image\" --data-binary @example.jpg </code>",
                "                 </td></tr>",
                "@@ -186,4 +186,4 @@ def ping_pong():",
                "-@app.route(\"/inception/v3/captions\", methods=[\"GET\", \"POST\"])",
                "-def gen_captions():",
                "+@app.route(\"/inception/v3/caption/image\", methods=[\"GET\", \"POST\"])",
                "+def caption_image():",
                "     \"\"\"API to caption images\"\"\""
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "92c65e0a43e7f09a0566bec34f352314dffe5def",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505644520,
            "hunks": 2,
            "message": "TIKA 2400 : Update dockerfiles with namespace 'thejanw'",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "index 1dabfbe6e..7b95d0640 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "@@ -17,3 +17,3 @@",
                "-FROM inception-rest-tika",
                "+FROM thejanw/inception-rest-tika",
                " MAINTAINER Apache Tika Team",
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "index 3da5cb1be..7149eebe1 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile",
                "@@ -17,3 +17,3 @@",
                "-FROM inception-rest-tika",
                "+FROM thejanw/inception-rest-tika",
                " MAINTAINER Apache Tika Team"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/Im2txtRestDockerfile",
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/InceptionVideoRestDockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8a875cdbc9cb405a239f3c89192591c46fb078f0",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505556477,
            "hunks": 27,
            "message": "TIKA 2400 : Changes to video_util.py # Fix formatting issues # Remove unused imports",
            "diff": [
                "diff --git a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py",
                "index 453f61f0f..ea5d5aa1a 100644",
                "--- a/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py",
                "+++ b/tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py",
                "@@ -1,3 +1,3 @@",
                " #!/usr/bin/env python",
                "-# ",
                "+#",
                " # Licensed to the Apache Software Foundation (ASF) under one or more",
                "@@ -18,4 +18,2 @@",
                " import cv2",
                "-import os",
                "-import sys",
                " import ntpath",
                "@@ -27,3 +25,3 @@ CV_FRAME_COUNT = None",
                "-if hasattr(cv2,\"cv\"):",
                "+if hasattr(cv2, \"cv\"):",
                "     CV_FRAME_COUNT = cv2.cv.CV_CAP_PROP_FRAME_COUNT",
                "@@ -32,7 +30,9 @@ else:",
                "+",
                " def _get_image_from_array(image_array):",
                "-    #JPG to support tensorflow",
                "-    byte_arr = cv2.imencode(\".jpg\", image_array )[1]",
                "+    # JPG to support tensorflow",
                "+    byte_arr = cv2.imencode(\".jpg\", image_array)[1]",
                "     return \"\".join(map(chr, byte_arr))",
                "-    ",
                "+",
                "+",
                " def _path_leaf(path):",
                "@@ -44,2 +44,3 @@ def _path_leaf(path):",
                "+",
                " def get_center_frame(video_path):",
                "@@ -50,17 +51,18 @@ def get_center_frame(video_path):",
                "     cap = cv2.VideoCapture(video_path)",
                "-    ",
                "+",
                "     length = int(cap.get(CV_FRAME_COUNT))",
                "-    ",
                "-    success,image = cap.read()",
                "+",
                "+    success, image = cap.read()",
                "     count = 0",
                "-    ",
                "-    while(success and count < length/2):",
                "-        success,image = cap.read()",
                "-        count += 1 ",
                "-    ",
                "+",
                "+    while success and count < length / 2:",
                "+        success, image = cap.read()",
                "+        count += 1",
                "+",
                "     return _get_image_from_array(image)",
                "-    ",
                "+",
                "+",
                " def get_frames_interval(video_path, frame_interval):",
                "     \"\"\"",
                "-    Selects one frames after every frame_interval ",
                "+    Selects one frames after every frame_interval",
                "     @param video_path: Path to video file on system",
                "@@ -69,22 +71,23 @@ def get_frames_interval(video_path, frame_interval):",
                "     cap = cv2.VideoCapture(video_path)",
                "-    ",
                "+",
                "     length = int(cap.get(CV_FRAME_COUNT))",
                "-    ",
                "-    success,image = cap.read()",
                "+",
                "+    success, image = cap.read()",
                "     count = 0",
                "-    ",
                "+",
                "     image_arr = []",
                "-    while(success and count < length):",
                "-        success,image = cap.read()",
                "+    while success and count < length:",
                "+        success, image = cap.read()",
                "         if count % frame_interval == 0:",
                "-            image = _get_image_from_array(image )",
                "+            image = _get_image_from_array(image)",
                "             image_arr.append(image)",
                "-    ",
                "+",
                "         count += 1",
                "-         ",
                "+",
                "     return image_arr",
                "-    ",
                "+",
                "+",
                " def get_n_frames(video_path, num_frame):",
                "     \"\"\"",
                "-    Get N frames equidistant to each other in a video   ",
                "+    Get N frames equidistant to each other in a video",
                "     @param video_path: Path to video file on system",
                "@@ -93,21 +96,19 @@ def get_n_frames(video_path, num_frame):",
                "     cap = cv2.VideoCapture(video_path)",
                "-    ",
                "+",
                "     length = int(cap.get(CV_FRAME_COUNT))",
                "-    ",
                "-    op_frame_idx = set(np.linspace(0, length - 2, num_frame, dtype=int)) ",
                "-    ",
                "+",
                "+    op_frame_idx = set(np.linspace(0, length - 2, num_frame, dtype=int))",
                "+",
                "     success, image = cap.read()",
                "     count = 0",
                "-    ",
                "+",
                "     image_arr = []",
                "-    while(success and count < length):",
                "+    while success and count < length:",
                "         success, image = cap.read()",
                "         if success and count in op_frame_idx:",
                "-            ",
                "-            image = _get_image_from_array(image )",
                "+            image = _get_image_from_array(image)",
                "             image_arr.append(image)",
                "-        count += 1 ",
                "-            ",
                "-    return image_arr",
                "+        count += 1",
                "+    return image_arr"
            ],
            "changed_files": [
                "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/video_util.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "07abb318a1d9fd1af1d2856627759337a95d3142",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505627257,
            "hunks": 21,
            "message": "TIKA 2400 : # Few refactoring to Object Recognition REST clients",
            "diff": [
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java b/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "index 82a00ad4f..6e8bed70f 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "@@ -77,9 +77,9 @@ public class TensorflowRESTCaptioner implements ObjectRecogniser {",
                "     @Field",
                "-    private URI apiBaseUri;",
                "+    private URI apiBaseUri = URI.create(\"http://localhost:8764/inception/v3\");",
                "     @Field",
                "-    private int captions;",
                "+    private int captions = 5;",
                "     @Field",
                "-    private int maxCaptionLength;",
                "+    private int maxCaptionLength = 15;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "index 60d4f3239..415625aa4 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "@@ -76,18 +76,18 @@ public class TensorflowRESTRecogniser implements ObjectRecogniser {",
                "      */",
                "-    private static final String LABEL_LANG = \"en\";",
                "+    protected static final String LABEL_LANG = \"en\";",
                "     @Field",
                "-    private URI apiBaseUri;",
                "+    protected URI apiBaseUri = URI.create(\"http://localhost:8764/inception/v4\");",
                "     @Field",
                "-    private int topN;",
                "+    protected int topN = 2;",
                "     @Field",
                "-    private double minConfidence;",
                "+    protected double minConfidence = 0.015;",
                "-    private URI apiUri;",
                "+    protected URI apiUri;",
                "-    private URI healthUri;",
                "+    protected URI healthUri;",
                "-    private boolean available;",
                "+    protected boolean available;",
                "diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "index 6a18c0e09..2e7b1f156 100644",
                "--- a/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "+++ b/tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java",
                "@@ -19,2 +19,3 @@ package org.apache.tika.parser.recognition.tf;",
                "+import java.io.ByteArrayOutputStream;",
                " import java.io.IOException;",
                "@@ -22,4 +23,7 @@ import java.io.InputStream;",
                " import java.net.URI;",
                "-import java.util.Collections;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                " import java.util.Set;",
                "+import java.util.Collections;",
                "+import java.util.HashSet;",
                "@@ -27,5 +31,14 @@ import javax.ws.rs.core.UriBuilder;",
                "+import org.apache.http.HttpResponse;",
                "+import org.apache.http.client.methods.HttpGet;",
                "+import org.apache.http.client.methods.HttpPost;",
                "+import org.apache.http.entity.ByteArrayEntity;",
                "+import org.apache.http.impl.client.DefaultHttpClient;",
                " import org.apache.tika.Tika;",
                " import org.apache.tika.config.Field;",
                "+import org.apache.tika.config.Param;",
                " import org.apache.tika.config.TikaConfig;",
                "+import org.apache.tika.exception.TikaConfigException;",
                "+import org.apache.tika.exception.TikaException;",
                "+import org.apache.tika.io.IOUtils;",
                " import org.apache.tika.metadata.Metadata;",
                "@@ -34,4 +47,10 @@ import org.apache.tika.mime.MimeType;",
                " import org.apache.tika.mime.MimeTypeException;",
                "+import org.apache.tika.parser.ParseContext;",
                "+import org.apache.tika.parser.recognition.RecognisedObject;",
                "+import org.json.JSONArray;",
                "+import org.json.JSONObject;",
                " import org.slf4j.Logger;",
                " import org.slf4j.LoggerFactory;",
                "+import org.xml.sax.ContentHandler;",
                "+import org.xml.sax.SAXException;",
                "@@ -45,35 +64,44 @@ import org.slf4j.LoggerFactory;",
                "  */",
                "-public class TensorflowRESTVideoRecogniser extends TensorflowRESTRecogniser{",
                "+public class TensorflowRESTVideoRecogniser extends TensorflowRESTRecogniser {",
                "-    private static final Logger LOG = LoggerFactory.getLogger(TensorflowRESTRecogniser.class);",
                "+    private static final Logger LOG = LoggerFactory.getLogger(TensorflowRESTVideoRecogniser.class);",
                "-\tprivate static final Set<MediaType> SUPPORTED_MIMES = Collections.singleton(MediaType.video(\"mp4\"));;",
                "+    private static final Set<MediaType> SUPPORTED_MIMES = Collections.singleton(MediaType.video(\"mp4\"));",
                "     @Field",
                "-    private URI apiUri = URI.create(\"http://localhost:8764/inception/v4/classify/video?topk=10\");",
                "+    private String mode = \"fixed\";",
                "     @Override",
                "-    public Set<MediaType> getSupportedMimes() {",
                "-        return SUPPORTED_MIMES;",
                "+    protected URI getApiUri(Metadata metadata) {",
                "+        TikaConfig config = TikaConfig.getDefaultConfig();",
                "+        String ext = null;",
                "+        //Find extension for video. It's required for OpenCV in InceptionAPI to decode video",
                "+        try {",
                "+            MimeType mimeType = config.getMimeRepository().forName(metadata.get(\"Content-Type\"));",
                "+            ext = mimeType.getExtension();",
                "+            return UriBuilder.fromUri(apiUri).queryParam(\"ext\", ext).build();",
                "+        } catch (MimeTypeException e) {",
                "+            LOG.error(\"Can't find extension from metadata\");",
                "+            return apiUri;",
                "+        }",
                "     }",
                "-    ",
                "+",
                "     @Override",
                "-    protected URI getApiUri(Metadata metadata){",
                "-    \t",
                "-    \tTikaConfig config = TikaConfig.getDefaultConfig();",
                "-    \tString ext = null;",
                "-    \t//Find extension for video. It's required for OpenCv in InceptionAPI to decode video ",
                "-\t\ttry {",
                "-\t\t\tMimeType mimeType = config.getMimeRepository().forName(metadata.get(\"Content-Type\"));",
                "-\t\t\text = mimeType.getExtension();",
                "-\t\t\t",
                "-\t\t\treturn UriBuilder.fromUri(apiUri).queryParam(\"ext\", ext).build();",
                "-\t\t\t",
                "-\t\t} catch (MimeTypeException e) {",
                "-\t\t\tLOG.error(\"Can't find extension from metadata\");",
                "-\t\t\treturn apiUri;",
                "-\t\t}",
                "+    public void initialize(Map<String, Param> params) throws TikaConfigException {",
                "+        try {",
                "+            healthUri = URI.create(apiBaseUri + \"/ping\");",
                "+            apiUri = URI.create(apiBaseUri + String.format(Locale.getDefault(), \"/classify/video?topn=%1$d&min_confidence=%2$f&mode=%3$s\",",
                "+                    topN, minConfidence, mode));",
                "+",
                "+            DefaultHttpClient client = new DefaultHttpClient();",
                "+            HttpResponse response = client.execute(new HttpGet(healthUri));",
                "+            available = response.getStatusLine().getStatusCode() == 200;",
                "+",
                "+            LOG.info(\"Available = {}, API Status = {}\", available, response.getStatusLine());",
                "+            LOG.info(\"topN = {}, minConfidence = {}\", topN, minConfidence);",
                "+        } catch (Exception e) {",
                "+            available = false;",
                "+            throw new TikaConfigException(e.getMessage(), e);",
                "+        }",
                "     }",
                "-    ",
                "-    ",
                " }"
            ],
            "changed_files": [
                "tika-parsers/src/main/java/org/apache/tika/parser/captioning/tf/TensorflowRESTCaptioner.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTRecogniser.java",
                "tika-parsers/src/main/java/org/apache/tika/parser/recognition/tf/TensorflowRESTVideoRecogniser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parser",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "62d56653e676127bb4d8de39f383feadd513bddf",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505403524,
            "hunks": 0,
            "message": "Merge pull request #207 from armathur/patch-1 TIKA-2464: No PIL found when building docker file 'InceptionVideoRestDockerfile'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2464": ""
            },
            "ghissue_refs": {
                "207": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2464",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 207",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "31625a2ad6b9a4de73aa322845fb1e38ba96177d",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504823468,
            "hunks": 3,
            "message": "Used the alphabetical order for the list of the standard organizations by relying on TreeMap. Thanks to Lewis McGibbney for this insightful suggestion (TIKA-2449 contributed by Giuseppe Totaro).",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/sax/StandardOrganizations.java b/tika-core/src/main/java/org/apache/tika/sax/StandardOrganizations.java",
                "index a0d02a905..39ace2de5 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/sax/StandardOrganizations.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/sax/StandardOrganizations.java",
                "@@ -19,4 +19,4 @@ package org.apache.tika.sax;",
                "-import java.util.HashMap;",
                " import java.util.Map;",
                "+import java.util.TreeMap;",
                "@@ -32,3 +32,3 @@ public class StandardOrganizations {",
                " \tstatic {",
                "-\t\torganizations = new HashMap<String, String>();",
                "+\t\torganizations = new TreeMap<String, String>();",
                " \t\t//International standard organizations"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/sax/StandardOrganizations.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2449": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2449",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f5a2faefd17936e1ad2c9b6b8c9b0ea3d3c30d99",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533316253,
            "hunks": 14,
            "message": "TIKA-2648 detect interpreted server-side script languages mime detection based on resource name used to detect the mime-type of \"http://example.com/test.php\" as being \"text/x-php\" whereas given such an URL, the file extension doesn't give us any information about the mime type that will be returned by the server",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeType.java b/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "index b4d651e42..d52c20b3d 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "@@ -112,2 +112,8 @@ public final class MimeType implements Comparable<MimeType>, Serializable {",
                "+    /**",
                "+     * Whether this mime-type is used for server-side scripts,",
                "+     * and thus cannot reliably be used for filename-based type detection",
                "+     */",
                "+    private boolean isInterpreted = false;",
                "+",
                "     /**",
                "@@ -304,2 +310,13 @@ public final class MimeType implements Comparable<MimeType>, Serializable {",
                "+    /**",
                "+     * whether the type is used as a server-side scripting technology",
                "+     */",
                "+    boolean isInterpreted() {",
                "+        return isInterpreted;",
                "+    }",
                "+",
                "+    void setInterpreted(boolean interpreted) {",
                "+        isInterpreted = interpreted;",
                "+    }",
                "+",
                "     /**",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "index 705ad3d1a..38c2eccf6 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "@@ -502,2 +502,3 @@ public final class MimeTypes implements Detector, Serializable {",
                "             String name = null;",
                "+            boolean isHttp = false;",
                "@@ -506,2 +507,4 @@ public final class MimeTypes implements Detector, Serializable {",
                "                 URI uri = new URI(resourceName);",
                "+                String scheme = uri.getScheme();",
                "+                isHttp = scheme != null && scheme.startsWith(\"http\"); // http or https",
                "                 String path = uri.getPath();",
                "@@ -519,7 +522,10 @@ public final class MimeTypes implements Detector, Serializable {",
                "                 MimeType hint = getMimeType(name);",
                "-                ",
                "-                // If we have some types based on mime magic, try to specialise",
                "-                //  and/or select the type based on that",
                "-                // Otherwise, use the type identified from the name",
                "-                possibleTypes = applyHint(possibleTypes, hint);",
                "+",
                "+                // For server-side scripting languages, we cannot rely on the filename to detect the mime type",
                "+                if (!(isHttp && hint.isInterpreted())) {",
                "+                    // If we have some types based on mime magic, try to specialise",
                "+                    //  and/or select the type based on that",
                "+                    // Otherwise, use the type identified from the name",
                "+                    possibleTypes = applyHint(possibleTypes, hint);",
                "+                }",
                "             }",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "index ad7bd8078..cfc030fb6 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "@@ -171,4 +171,7 @@ public class MimeTypesReader extends DefaultHandler implements MimeTypesReaderMe",
                "                 String name = attributes.getValue(MIME_TYPE_TYPE_ATTR);",
                "+                String interpretedAttr = attributes.getValue(INTERPRETED_ATTR);",
                "+                boolean interpreted = \"true\".equals(interpretedAttr);",
                "                 try {",
                "                     type = types.forName(name);",
                "+                    type.setInterpreted(interpreted);",
                "                 } catch (MimeTypeException e) {",
                "diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "index 98bfee5cc..c77cc5c43 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "@@ -29,2 +29,4 @@ public interface MimeTypesReaderMetKeys {",
                "+    String INTERPRETED_ATTR = \"interpreted\";",
                "+",
                "     String ACRONYM_TAG = \"acronym\";",
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 3c4b4ca78..61a1634e3 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -5934,3 +5934,3 @@",
                "-  <mime-type type=\"text/asp\">",
                "+  <mime-type type=\"text/asp\" interpreted=\"true\">",
                "     <_comment>Active Server Page</_comment>",
                "@@ -5940,3 +5940,3 @@",
                "-  <mime-type type=\"text/aspdotnet\">",
                "+  <mime-type type=\"text/aspdotnet\" interpreted=\"true\">",
                "     <_comment>ASP .NET</_comment>",
                "@@ -6329,3 +6329,3 @@",
                "-  <mime-type type=\"text/x-cgi\">",
                "+  <mime-type type=\"text/x-cgi\" interpreted=\"true\">",
                "     <_comment>CGI script</_comment>",
                "@@ -6383,3 +6383,3 @@",
                "-  <mime-type type=\"text/x-coldfusion\">",
                "+  <mime-type type=\"text/x-coldfusion\" interpreted=\"true\">",
                "     <_comment>ColdFusion source code</_comment>",
                "@@ -6499,3 +6499,3 @@",
                "-  <mime-type type=\"text/x-jsp\">",
                "+  <mime-type type=\"text/x-jsp\" interpreted=\"true\">",
                "     <_comment>Java Server Page</_comment>",
                "@@ -6622,3 +6622,3 @@",
                "-  <mime-type type=\"text/x-php\">",
                "+  <mime-type type=\"text/x-php\" interpreted=\"true\">",
                "     <_comment>PHP script</_comment>"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/mime/MimeType.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypesReader.java",
                "tika-core/src/main/java/org/apache/tika/mime/MimeTypesReaderMetKeys.java",
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2648": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2648",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "40028f3c4934b86ddf48a536da2e8191d20a4695",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533840057,
            "hunks": 61,
            "message": "TIKA-2695 -- upgrade Lucene to something more modern",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 39377dbf4..c1e71f3fa 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -37,4 +37,3 @@",
                "         <cli.version>1.4</cli.version> <!--sync version with tika-server or move to parent? -->",
                "-        <!-- upgrade to 6.x or something more modern once Tika requires Java 1.8 -->",
                "-        <lucene.version>5.5.4</lucene.version>",
                "+        <lucene.version>7.4.0</lucene.version>",
                "         <poi.version>3.17</poi.version>",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "index 771322b7d..6991b03e3 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "@@ -21,5 +21,5 @@ import java.util.Map;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.TokenStream;",
                " import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "index 238930909..b9a37b3d6 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "@@ -20,3 +20,2 @@ package org.apache.tika.eval.tokens;",
                " import java.io.IOException;",
                "-import java.io.Reader;",
                " import java.lang.reflect.Type;",
                "@@ -35,10 +34,6 @@ import com.google.gson.JsonParseException;",
                " import org.apache.lucene.analysis.Analyzer;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.analysis.Tokenizer;",
                "-import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilterFactory;",
                "+import org.apache.lucene.analysis.custom.CustomAnalyzer;",
                " import org.apache.lucene.analysis.util.CharFilterFactory;",
                " import org.apache.lucene.analysis.util.ClasspathResourceLoader;",
                "-import org.apache.lucene.analysis.util.ResourceLoaderAware;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "-import org.apache.lucene.analysis.util.TokenizerFactory;",
                "@@ -99,5 +94,3 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         JsonObject aRoot = (JsonObject)value;",
                "-        CharFilterFactory[] charFilters = new CharFilterFactory[0];",
                "-        TokenizerFactory tokenizerFactory = null;",
                "-        TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];",
                "+        CustomAnalyzer.Builder builder = CustomAnalyzer.builder(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "         for ( Map.Entry<String, JsonElement> e : aRoot.entrySet()) {",
                "@@ -105,7 +98,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             if (k.equals(CHAR_FILTERS)) {",
                "-                charFilters = buildCharFilters(e.getValue(), analyzerName);",
                "+                buildCharFilters(e.getValue(), analyzerName, builder);",
                "             } else if (k.equals(TOKEN_FILTERS)) {",
                "-                tokenFilterFactories = buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens);",
                "+                buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens, builder);",
                "             } else if (k.equals(TOKENIZER)) {",
                "-                tokenizerFactory = buildTokenizerFactory(e.getValue(), analyzerName);",
                "+                buildTokenizerFactory(e.getValue(), analyzerName, builder);",
                "             } else if (! k.equals(COMMENT)) {",
                "@@ -118,9 +111,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         }",
                "-        if (tokenizerFactory == null) {",
                "-            throw new IllegalArgumentException(\"Must specify at least a tokenizer factory for an analyzer!\");",
                "-        }",
                "-        return new MyTokenizerChain(charFilters, tokenizerFactory, tokenFilterFactories);",
                "+        return builder.build();",
                "     }",
                "-    private static TokenizerFactory buildTokenizerFactory(JsonElement map, String analyzerName) throws IOException {",
                "+    private static void buildTokenizerFactory(JsonElement map, String analyzerName,",
                "+                                                          CustomAnalyzer.Builder builder) throws IOException {",
                "         if (!(map instanceof JsonObject)) {",
                "@@ -141,29 +132,9 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         Map<String, String> params = mapify(paramsEl);",
                "-        String spiName = \"\";",
                "-        for (String s : TokenizerFactory.availableTokenizers()) {",
                "-            Class clazz = TokenizerFactory.lookupClass(s);",
                "-            if (clazz.getName().equals(factoryName)) {",
                "-                spiName = s;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spiName.equals(\"\")) {",
                "-            throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name\"+",
                "-            \"'\"+factoryName+\"' does not exist.\");",
                "-        }",
                "-        try {",
                "-            TokenizerFactory tokenizerFactory = TokenizerFactory.forName(spiName, params);",
                "-            if (tokenizerFactory instanceof ResourceLoaderAware) {",
                "-                ((ResourceLoaderAware) tokenizerFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-            }",
                "-",
                "-            return tokenizerFactory;",
                "-        } catch (IllegalArgumentException e) {",
                "-            throw new IllegalArgumentException(\"While working on \"+analyzerName, e);",
                "-        }",
                "+        builder.withTokenizer(factoryName, params);",
                "     }",
                "-    private static CharFilterFactory[] buildCharFilters(JsonElement el, String analyzerName) throws IOException {",
                "+    private static void buildCharFilters(JsonElement el,",
                "+                                                        String analyzerName, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -190,36 +161,11 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : CharFilterFactory.availableCharFilters()) {",
                "-                Class clazz = CharFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.CharFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                CharFilterFactory charFilterFactory = CharFilterFactory.forName(spiName, params);",
                "-                if (charFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) charFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(charFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While trying to load \"+",
                "-                        analyzerName + \": \"+ e.getMessage(), e);",
                "-            }",
                "-        }",
                "-        if (ret.size() == 0) {",
                "-            return new CharFilterFactory[0];",
                "+            builder.addCharFilter(factoryName, params);",
                "         }",
                "-        return ret.toArray(new CharFilterFactory[ret.size()]);",
                "     }",
                "-    private static TokenFilterFactory[] buildTokenFilterFactories(JsonElement el,",
                "-                                                                  String analyzerName, int maxTokens) throws IOException {",
                "+    private static void buildTokenFilterFactories(JsonElement el,",
                "+                                                  String analyzerName,",
                "+                                                  int maxTokens, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -244,27 +190,5 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "                     factoryName;",
                "-",
                "             JsonElement paramsEl = ((JsonObject)filterMap).get(PARAMS);",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : TokenFilterFactory.availableTokenFilters()) {",
                "-                Class clazz = TokenFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                TokenFilterFactory tokenFilterFactory = TokenFilterFactory.forName(spiName, params);",
                "-                if (tokenFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) tokenFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(tokenFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While loading \"+analyzerName, e);",
                "-            }",
                "+            builder.addTokenFilter(factoryName, params);",
                "         }",
                "@@ -274,9 +198,6 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             m.put(\"maxTokenCount\", Integer.toString(maxTokens));",
                "-            ret.add(new LimitTokenCountFilterFactory(m));",
                "-        }",
                "-",
                "-        if (ret.size() == 0) {",
                "-            return new TokenFilterFactory[0];",
                "+            builder.addTokenFilter(",
                "+                    \"limittokencount\",",
                "+                    m);",
                "         }",
                "-        return ret.toArray(new TokenFilterFactory[ret.size()]);",
                "     }",
                "@@ -301,60 +222,2 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "     }",
                "-",
                "-    /**",
                "-     * Plagiarized verbatim from Solr!",
                "-     */",
                "-    private static class MyTokenizerChain extends Analyzer {",
                "-",
                "-        final private CharFilterFactory[] charFilters;",
                "-        final private TokenizerFactory tokenizer;",
                "-        final private TokenFilterFactory[] filters;",
                "-",
                "-        public MyTokenizerChain(TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this(null, tokenizer, filters);",
                "-        }",
                "-",
                "-        public MyTokenizerChain(CharFilterFactory[] charFilters, TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this.charFilters = charFilters;",
                "-            this.tokenizer = tokenizer;",
                "-            this.filters = filters;",
                "-        }",
                "-",
                "-        public CharFilterFactory[] getCharFilterFactories() {",
                "-            return charFilters;",
                "-        }",
                "-",
                "-        public TokenizerFactory getTokenizerFactory() {",
                "-            return tokenizer;",
                "-        }",
                "-",
                "-        public TokenFilterFactory[] getTokenFilterFactories() {",
                "-            return filters;",
                "-        }",
                "-",
                "-        @Override",
                "-        public Reader initReader(String fieldName, Reader reader) {",
                "-",
                "-            if (charFilters != null && charFilters.length > 0) {",
                "-                Reader cs = reader;",
                "-                for (CharFilterFactory charFilter : charFilters) {",
                "-                    cs = charFilter.create(cs);",
                "-                }",
                "-                reader = cs;",
                "-            }",
                "-",
                "-            return reader;",
                "-        }",
                "-",
                "-        @Override",
                "-        protected TokenStreamComponents createComponents(String fieldName) {",
                "-            Tokenizer tk = tokenizer.create();",
                "-            TokenStream ts = tk;",
                "-            for (TokenFilterFactory filter : filters) {",
                "-                ts = filter.create(ts);",
                "-            }",
                "-",
                "-            return new TokenStreamComponents(tk, ts);",
                "-        }",
                "-    }",
                "-",
                " }",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "index 215ef9c6e..73c8571cb 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "@@ -25,3 +25,3 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                " import org.apache.lucene.analysis.tokenattributes.TypeAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/resources/lucene-analyzers.json b/tika-eval/src/main/resources/lucene-analyzers.json",
                "index aa24b792c..379bf8425 100644",
                "--- a/tika-eval/src/main/resources/lucene-analyzers.json",
                "+++ b/tika-eval/src/main/resources/lucene-analyzers.json",
                "@@ -5,3 +5,3 @@",
                "         {",
                "-          \"factory\": \"oala.charfilter.MappingCharFilterFactory\",",
                "+          \"factory\": \"mapping\",",
                "           \"params\": {",
                "@@ -12,3 +12,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -17,3 +17,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -21,3 +21,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -32,3 +32,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -37,3 +37,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -41,3 +41,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.AlphaIdeographFilterFactory\",",
                "+          \"factory\": \"alphaideograph\",",
                "           \"params\": {}",
                "@@ -45,3 +45,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -53,3 +53,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -61,3 +61,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -67,3 +67,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.CJKBigramAwareLengthFilterFactory\",",
                "+          \"factory\": \"cjkbigramawarelength\",",
                "           \"params\": {",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index e4ce64f82..4a1ebc525 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -129,3 +129,3 @@",
                "       <artifactId>lucene-core</artifactId>",
                "-      <version>3.5.0</version>",
                "+      <version>7.4.0</version>",
                "     </dependency>",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java b/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "deleted file mode 100755",
                "index 7567bc434..000000000",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "+++ /dev/null",
                "@@ -1,210 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.tika.example;",
                "-",
                "-import java.io.InputStream;",
                "-import java.io.Reader;",
                "-import java.util.concurrent.Executor;",
                "-",
                "-import org.apache.jackrabbit.core.query.lucene.FieldNames;",
                "-import org.apache.jackrabbit.core.value.InternalValue;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.document.AbstractField;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Store;",
                "-import org.apache.lucene.document.Field.TermVector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "-import org.xml.sax.helpers.DefaultHandler;",
                "-",
                "-/**",
                "- * <code>LazyTextExtractorField</code> implements a Lucene field with a String",
                "- * value that is lazily initialized from a given {@link Reader}. In addition",
                "- * this class provides a method to find out whether the purpose of the reader is",
                "- * to extract text and whether the extraction process is already finished.",
                "- *",
                "- * @see #isExtractorFinished()",
                "- */",
                "-@SuppressWarnings(\"serial\")",
                "-public class LazyTextExtractorField extends AbstractField {",
                "-    /**",
                "-     * The logger instance for this class.",
                "-     */",
                "-    private static final Logger LOG = LoggerFactory.getLogger(LazyTextExtractorField.class);",
                "-",
                "-    /**",
                "-     * The exception used to forcibly terminate the extraction process when the",
                "-     * maximum field length is reached.",
                "-     * <p>",
                "-     * Such exceptions shouldn't be used in logging since its stack trace is meaningless.",
                "-     */",
                "-    private static final SAXException STOP = new SAXException(\"max field length reached\");",
                "-",
                "-    /**",
                "-     * The extracted text content of the given binary value. Set to non-null",
                "-     * when the text extraction task finishes.",
                "-     */",
                "-    private volatile String extract = null;",
                "-",
                "-    /**",
                "-     * Creates a new <code>LazyTextExtractorField</code> with the given",
                "-     * <code>name</code>.",
                "-     *",
                "-     * @param name         the name of the field.",
                "-     * @param reader       the reader where to obtain the string from.",
                "-     * @param highlighting set to <code>true</code> to enable result highlighting support",
                "-     */",
                "-    public LazyTextExtractorField(Parser parser, InternalValue value,",
                "-                                  Metadata metadata, Executor executor, boolean highlighting,",
                "-                                  int maxFieldLength) {",
                "-        super(FieldNames.FULLTEXT, highlighting ? Store.YES : Store.NO,",
                "-                Field.Index.ANALYZED, highlighting ? TermVector.WITH_OFFSETS",
                "-                        : TermVector.NO);",
                "-        executor.execute(new ParsingTask(parser, value, metadata,",
                "-                maxFieldLength));",
                "-    }",
                "-",
                "-    /**",
                "-     * Returns the extracted text. This method blocks until the text extraction",
                "-     * task has been completed.",
                "-     *",
                "-     * @return the string value of this field",
                "-     */",
                "-    public synchronized String stringValue() {",
                "-        try {",
                "-            while (!isExtractorFinished()) {",
                "-                wait();",
                "-            }",
                "-            return extract;",
                "-        } catch (InterruptedException e) {",
                "-            LOG.error(\"Text extraction thread was interrupted\", e);",
                "-            return \"\";",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public Reader readerValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public byte[] binaryValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public TokenStream tokenStreamValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * Checks whether the text extraction task has finished.",
                "-     *",
                "-     * @return <code>true</code> if the extracted text is available",
                "-     */",
                "-    public boolean isExtractorFinished() {",
                "-        return extract != null;",
                "-    }",
                "-",
                "-    private synchronized void setExtractedText(String value) {",
                "-        extract = value;",
                "-        notify();",
                "-    }",
                "-",
                "-    /**",
                "-     * Releases all resources associated with this field.",
                "-     */",
                "-    public void dispose() {",
                "-        // TODO: Cause the ContentHandler below to throw an exception",
                "-    }",
                "-",
                "-    /**",
                "-     * The background task for extracting text from a binary value.",
                "-     */",
                "-    private class ParsingTask extends DefaultHandler implements Runnable {",
                "-        private final Parser parser;",
                "-",
                "-        private final InternalValue value;",
                "-",
                "-        private final Metadata metadata;",
                "-",
                "-        private final int maxFieldLength;",
                "-",
                "-        private final StringBuilder builder = new StringBuilder();",
                "-",
                "-        private final ParseContext context = new ParseContext();",
                "-",
                "-        // NOTE: not a part of Jackrabbit code, made",
                "-        private final ContentHandler handler = new DefaultHandler();",
                "-",
                "-        public ParsingTask(Parser parser, InternalValue value,",
                "-                           Metadata metadata, int maxFieldLength) {",
                "-            this.parser = parser;",
                "-            this.value = value;",
                "-            this.metadata = metadata;",
                "-            this.maxFieldLength = maxFieldLength;",
                "-        }",
                "-",
                "-        public void run() {",
                "-            try {",
                "-                try (InputStream stream = value.getStream()) {",
                "-                    parser.parse(stream, handler, metadata, context);",
                "-                }",
                "-            } catch (LinkageError e) {",
                "-                // Capture and ignore",
                "-            } catch (Throwable t) {",
                "-                if (t != STOP) {",
                "-                    LOG.debug(\"Failed to extract text.\", t);",
                "-                    setExtractedText(\"TextExtractionError\");",
                "-                    return;",
                "-                }",
                "-            } finally {",
                "-                value.discard();",
                "-            }",
                "-            setExtractedText(handler.toString());",
                "-",
                "-        }",
                "-",
                "-        @Override",
                "-        public void characters(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            builder.append(ch, start,",
                "-                    Math.min(length, maxFieldLength - builder.length()));",
                "-            if (builder.length() >= maxFieldLength) {",
                "-                throw STOP;",
                "-            }",
                "-        }",
                "-",
                "-        @Override",
                "-        public void ignorableWhitespace(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            characters(ch, start, length);",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "index 2f7cd31f0..1885877ac 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "@@ -22,5 +22,4 @@ import java.io.File;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -40,4 +39,4 @@ public class LuceneIndexer {",
                "         Document document = new Document();",
                "-        document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-        document.add(new Field(\"fulltext\", tika.parseToString(file), Store.NO, Index.ANALYZED));",
                "+        document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+        document.add(new TextField(\"fulltext\", tika.parseToString(file), Store.NO));",
                "         writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "index 2a7fd13a8..06923398f 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "@@ -21,2 +21,3 @@ import java.io.File;",
                " import java.io.Reader;",
                "+import java.nio.file.Paths;",
                "@@ -24,9 +25,7 @@ import org.apache.lucene.analysis.standard.StandardAnalyzer;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "-import org.apache.lucene.index.IndexWriter.MaxFieldLength;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "-import org.apache.lucene.util.Version;",
                "+import org.apache.lucene.index.IndexWriterConfig;",
                "+import org.apache.lucene.store.FSDirectory;",
                " import org.apache.tika.Tika;",
                "@@ -45,6 +44,6 @@ public class LuceneIndexerExtended {",
                "     public static void main(String[] args) throws Exception {",
                "-        try (IndexWriter writer = new IndexWriter(",
                "-                new SimpleFSDirectory(new File(args[0])),",
                "-                new StandardAnalyzer(Version.LUCENE_30),",
                "-                MaxFieldLength.UNLIMITED)) {",
                "+        IndexWriterConfig indexWriterConfig = new IndexWriterConfig(new StandardAnalyzer());",
                "+        try (IndexWriter writer =",
                "+                     new IndexWriter(FSDirectory.open(Paths.get(args[0])),",
                "+                indexWriterConfig)) {",
                "             LuceneIndexer indexer = new LuceneIndexer(new Tika(), writer);",
                "@@ -59,4 +58,4 @@ public class LuceneIndexerExtended {",
                "             Document document = new Document();",
                "-            document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-            document.add(new Field(\"fulltext\", fulltext));",
                "+            document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+            document.add(new TextField(\"fulltext\", fulltext));",
                "             writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "index 23a4d8c91..a353101bb 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "@@ -25,5 +25,4 @@ import java.util.Date;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -57,3 +56,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "@@ -82,3 +81,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "index 88e8a4c6b..f3a10f90d 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "@@ -19,4 +19,4 @@ package org.apache.tika.example;",
                "-import java.io.File;",
                " import java.io.IOException;",
                "+import java.nio.file.Path;",
                " import java.text.SimpleDateFormat;",
                "@@ -30,2 +30,3 @@ import org.apache.lucene.document.Document;",
                " import org.apache.lucene.index.CorruptIndexException;",
                "+import org.apache.lucene.index.DirectoryReader;",
                " import org.apache.lucene.index.IndexReader;",
                "@@ -35,5 +36,5 @@ import org.apache.lucene.search.TermRangeQuery;",
                " import org.apache.lucene.search.TopScoreDocCollector;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "+import org.apache.lucene.store.FSDirectory;",
                "+import org.apache.lucene.util.BytesRef;",
                " import org.apache.tika.metadata.DublinCore;",
                "-import org.apache.tika.metadata.Metadata;",
                " import org.apache.tika.metadata.TikaCoreProperties;",
                "@@ -52,3 +53,3 @@ public class RecentFiles {",
                "-    public String generateRSS(File indexFile) throws CorruptIndexException,",
                "+    public String generateRSS(Path indexFile) throws CorruptIndexException,",
                "             IOException {",
                "@@ -58,3 +59,3 @@ public class RecentFiles {",
                "         try {",
                "-            reader = IndexReader.open(new SimpleFSDirectory(indexFile));",
                "+            reader = DirectoryReader.open(FSDirectory.open(indexFile));",
                "             searcher = new IndexSearcher(reader);",
                "@@ -65,6 +66,7 @@ public class RecentFiles {",
                "             String fiveMinsAgo = ISO8601.format(gc);",
                "-            TermRangeQuery query = new TermRangeQuery(TikaCoreProperties.CREATED.getName(),",
                "-                    fiveMinsAgo, nowDateTime, true, true);",
                "-            TopScoreDocCollector collector = TopScoreDocCollector.create(20,",
                "-                    true);",
                "+            TermRangeQuery query = new TermRangeQuery(",
                "+                    TikaCoreProperties.CREATED.getName(),",
                "+                    new BytesRef(fiveMinsAgo), new BytesRef(nowDateTime),",
                "+                    true, true);",
                "+            TopScoreDocCollector collector = TopScoreDocCollector.create(20);",
                "             searcher.search(query, collector);",
                "@@ -78,3 +80,2 @@ public class RecentFiles {",
                "             if (reader != null) reader.close();",
                "-            if (searcher != null) searcher.close();",
                "         }"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "tika-eval/src/main/resources/lucene-analyzers.json",
                "tika-example/pom.xml",
                "tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/RecentFiles.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2695": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2695",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2cdf627eb854dee878a81fec2c6ededa36132470",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533840057,
            "hunks": 60,
            "message": "TIKA-2695 -- upgrade Lucene to 7.4.0",
            "diff": [
                "diff --git a/tika-eval/pom.xml b/tika-eval/pom.xml",
                "index 8d21a492a..c7d28fdbe 100644",
                "--- a/tika-eval/pom.xml",
                "+++ b/tika-eval/pom.xml",
                "@@ -37,4 +37,3 @@",
                "         <cli.version>1.4</cli.version> <!--sync version with tika-server or move to parent? -->",
                "-        <!-- upgrade to 6.x or something more modern once Tika requires Java 1.8 -->",
                "-        <lucene.version>5.5.4</lucene.version>",
                "+        <lucene.version>7.4.0</lucene.version>",
                "         <poi.version>3.17</poi.version>",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "index 771322b7d..6991b03e3 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "@@ -21,5 +21,5 @@ import java.util.Map;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.TokenStream;",
                " import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "index 238930909..b9a37b3d6 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "@@ -20,3 +20,2 @@ package org.apache.tika.eval.tokens;",
                " import java.io.IOException;",
                "-import java.io.Reader;",
                " import java.lang.reflect.Type;",
                "@@ -35,10 +34,6 @@ import com.google.gson.JsonParseException;",
                " import org.apache.lucene.analysis.Analyzer;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.analysis.Tokenizer;",
                "-import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilterFactory;",
                "+import org.apache.lucene.analysis.custom.CustomAnalyzer;",
                " import org.apache.lucene.analysis.util.CharFilterFactory;",
                " import org.apache.lucene.analysis.util.ClasspathResourceLoader;",
                "-import org.apache.lucene.analysis.util.ResourceLoaderAware;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "-import org.apache.lucene.analysis.util.TokenizerFactory;",
                "@@ -99,5 +94,3 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         JsonObject aRoot = (JsonObject)value;",
                "-        CharFilterFactory[] charFilters = new CharFilterFactory[0];",
                "-        TokenizerFactory tokenizerFactory = null;",
                "-        TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];",
                "+        CustomAnalyzer.Builder builder = CustomAnalyzer.builder(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "         for ( Map.Entry<String, JsonElement> e : aRoot.entrySet()) {",
                "@@ -105,7 +98,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             if (k.equals(CHAR_FILTERS)) {",
                "-                charFilters = buildCharFilters(e.getValue(), analyzerName);",
                "+                buildCharFilters(e.getValue(), analyzerName, builder);",
                "             } else if (k.equals(TOKEN_FILTERS)) {",
                "-                tokenFilterFactories = buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens);",
                "+                buildTokenFilterFactories(e.getValue(), analyzerName, maxTokens, builder);",
                "             } else if (k.equals(TOKENIZER)) {",
                "-                tokenizerFactory = buildTokenizerFactory(e.getValue(), analyzerName);",
                "+                buildTokenizerFactory(e.getValue(), analyzerName, builder);",
                "             } else if (! k.equals(COMMENT)) {",
                "@@ -118,9 +111,7 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         }",
                "-        if (tokenizerFactory == null) {",
                "-            throw new IllegalArgumentException(\"Must specify at least a tokenizer factory for an analyzer!\");",
                "-        }",
                "-        return new MyTokenizerChain(charFilters, tokenizerFactory, tokenFilterFactories);",
                "+        return builder.build();",
                "     }",
                "-    private static TokenizerFactory buildTokenizerFactory(JsonElement map, String analyzerName) throws IOException {",
                "+    private static void buildTokenizerFactory(JsonElement map, String analyzerName,",
                "+                                                          CustomAnalyzer.Builder builder) throws IOException {",
                "         if (!(map instanceof JsonObject)) {",
                "@@ -141,29 +132,9 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "         Map<String, String> params = mapify(paramsEl);",
                "-        String spiName = \"\";",
                "-        for (String s : TokenizerFactory.availableTokenizers()) {",
                "-            Class clazz = TokenizerFactory.lookupClass(s);",
                "-            if (clazz.getName().equals(factoryName)) {",
                "-                spiName = s;",
                "-                break;",
                "-            }",
                "-        }",
                "-        if (spiName.equals(\"\")) {",
                "-            throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name\"+",
                "-            \"'\"+factoryName+\"' does not exist.\");",
                "-        }",
                "-        try {",
                "-            TokenizerFactory tokenizerFactory = TokenizerFactory.forName(spiName, params);",
                "-            if (tokenizerFactory instanceof ResourceLoaderAware) {",
                "-                ((ResourceLoaderAware) tokenizerFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-            }",
                "-",
                "-            return tokenizerFactory;",
                "-        } catch (IllegalArgumentException e) {",
                "-            throw new IllegalArgumentException(\"While working on \"+analyzerName, e);",
                "-        }",
                "+        builder.withTokenizer(factoryName, params);",
                "     }",
                "-    private static CharFilterFactory[] buildCharFilters(JsonElement el, String analyzerName) throws IOException {",
                "+    private static void buildCharFilters(JsonElement el,",
                "+                                                        String analyzerName, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -190,36 +161,11 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : CharFilterFactory.availableCharFilters()) {",
                "-                Class clazz = CharFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.CharFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                CharFilterFactory charFilterFactory = CharFilterFactory.forName(spiName, params);",
                "-                if (charFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) charFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(charFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While trying to load \"+",
                "-                        analyzerName + \": \"+ e.getMessage(), e);",
                "-            }",
                "-        }",
                "-        if (ret.size() == 0) {",
                "-            return new CharFilterFactory[0];",
                "+            builder.addCharFilter(factoryName, params);",
                "         }",
                "-        return ret.toArray(new CharFilterFactory[ret.size()]);",
                "     }",
                "-    private static TokenFilterFactory[] buildTokenFilterFactories(JsonElement el,",
                "-                                                                  String analyzerName, int maxTokens) throws IOException {",
                "+    private static void buildTokenFilterFactories(JsonElement el,",
                "+                                                  String analyzerName,",
                "+                                                  int maxTokens, CustomAnalyzer.Builder builder) throws IOException {",
                "         if (el == null || el.isJsonNull()) {",
                "-            return null;",
                "+            return;",
                "         }",
                "@@ -244,27 +190,5 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "                     factoryName;",
                "-",
                "             JsonElement paramsEl = ((JsonObject)filterMap).get(PARAMS);",
                "             Map<String, String> params = mapify(paramsEl);",
                "-            String spiName = \"\";",
                "-            for (String s : TokenFilterFactory.availableTokenFilters()) {",
                "-                Class clazz = TokenFilterFactory.lookupClass(s);",
                "-                if (clazz.getName().equals(factoryName)) {",
                "-                    spiName = s;",
                "-                    break;",
                "-                }",
                "-            }",
                "-            if (spiName.equals(\"\")) {",
                "-                throw new IllegalArgumentException(\"A SPI class of type org.apache.lucene.analysis.util.TokenFilterFactory with name\"+",
                "-                        \"'\"+factoryName+\"' does not exist.\");",
                "-            }",
                "-",
                "-            try {",
                "-                TokenFilterFactory tokenFilterFactory = TokenFilterFactory.forName(spiName, params);",
                "-                if (tokenFilterFactory instanceof ResourceLoaderAware) {",
                "-                    ((ResourceLoaderAware) tokenFilterFactory).inform(new ClasspathResourceLoader(AnalyzerDeserializer.class));",
                "-                }",
                "-                ret.add(tokenFilterFactory);",
                "-            } catch (IllegalArgumentException e) {",
                "-                throw new IllegalArgumentException(\"While loading \"+analyzerName, e);",
                "-            }",
                "+            builder.addTokenFilter(factoryName, params);",
                "         }",
                "@@ -274,9 +198,6 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "             m.put(\"maxTokenCount\", Integer.toString(maxTokens));",
                "-            ret.add(new LimitTokenCountFilterFactory(m));",
                "-        }",
                "-",
                "-        if (ret.size() == 0) {",
                "-            return new TokenFilterFactory[0];",
                "+            builder.addTokenFilter(",
                "+                    \"limittokencount\",",
                "+                    m);",
                "         }",
                "-        return ret.toArray(new TokenFilterFactory[ret.size()]);",
                "     }",
                "@@ -301,60 +222,2 @@ class AnalyzerDeserializer implements JsonDeserializer<Map<String, Analyzer>> {",
                "     }",
                "-",
                "-    /**",
                "-     * Plagiarized verbatim from Solr!",
                "-     */",
                "-    private static class MyTokenizerChain extends Analyzer {",
                "-",
                "-        final private CharFilterFactory[] charFilters;",
                "-        final private TokenizerFactory tokenizer;",
                "-        final private TokenFilterFactory[] filters;",
                "-",
                "-        public MyTokenizerChain(TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this(null, tokenizer, filters);",
                "-        }",
                "-",
                "-        public MyTokenizerChain(CharFilterFactory[] charFilters, TokenizerFactory tokenizer, TokenFilterFactory[] filters) {",
                "-            this.charFilters = charFilters;",
                "-            this.tokenizer = tokenizer;",
                "-            this.filters = filters;",
                "-        }",
                "-",
                "-        public CharFilterFactory[] getCharFilterFactories() {",
                "-            return charFilters;",
                "-        }",
                "-",
                "-        public TokenizerFactory getTokenizerFactory() {",
                "-            return tokenizer;",
                "-        }",
                "-",
                "-        public TokenFilterFactory[] getTokenFilterFactories() {",
                "-            return filters;",
                "-        }",
                "-",
                "-        @Override",
                "-        public Reader initReader(String fieldName, Reader reader) {",
                "-",
                "-            if (charFilters != null && charFilters.length > 0) {",
                "-                Reader cs = reader;",
                "-                for (CharFilterFactory charFilter : charFilters) {",
                "-                    cs = charFilter.create(cs);",
                "-                }",
                "-                reader = cs;",
                "-            }",
                "-",
                "-            return reader;",
                "-        }",
                "-",
                "-        @Override",
                "-        protected TokenStreamComponents createComponents(String fieldName) {",
                "-            Tokenizer tk = tokenizer.create();",
                "-            TokenStream ts = tk;",
                "-            for (TokenFilterFactory filter : filters) {",
                "-                ts = filter.create(ts);",
                "-            }",
                "-",
                "-            return new TokenStreamComponents(tk, ts);",
                "-        }",
                "-    }",
                "-",
                " }",
                "diff --git a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "index 215ef9c6e..73c8571cb 100644",
                "--- a/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "+++ b/tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "@@ -25,3 +25,3 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;",
                " import org.apache.lucene.analysis.tokenattributes.TypeAttribute;",
                "-import org.apache.lucene.analysis.util.FilteringTokenFilter;",
                "+import org.apache.lucene.analysis.FilteringTokenFilter;",
                " import org.apache.lucene.analysis.util.TokenFilterFactory;",
                "diff --git a/tika-eval/src/main/resources/lucene-analyzers.json b/tika-eval/src/main/resources/lucene-analyzers.json",
                "index aa24b792c..379bf8425 100644",
                "--- a/tika-eval/src/main/resources/lucene-analyzers.json",
                "+++ b/tika-eval/src/main/resources/lucene-analyzers.json",
                "@@ -5,3 +5,3 @@",
                "         {",
                "-          \"factory\": \"oala.charfilter.MappingCharFilterFactory\",",
                "+          \"factory\": \"mapping\",",
                "           \"params\": {",
                "@@ -12,3 +12,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -17,3 +17,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -21,3 +21,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -32,3 +32,3 @@",
                "       \"tokenizer\": {",
                "-        \"factory\": \"oala.standard.UAX29URLEmailTokenizerFactory\",",
                "+        \"factory\": \"uax29urlemail\",",
                "         \"params\": {}",
                "@@ -37,3 +37,3 @@",
                "         {",
                "-          \"factory\": \"oala.icu.ICUFoldingFilterFactory\",",
                "+          \"factory\": \"icufolding\",",
                "           \"params\": {}",
                "@@ -41,3 +41,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.AlphaIdeographFilterFactory\",",
                "+          \"factory\": \"alphaideograph\",",
                "           \"params\": {}",
                "@@ -45,3 +45,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -53,3 +53,3 @@",
                "         {",
                "-          \"factory\": \"oala.pattern.PatternReplaceFilterFactory\",",
                "+          \"factory\": \"patternreplace\",",
                "           \"params\": {",
                "@@ -61,3 +61,3 @@",
                "         {",
                "-          \"factory\": \"oala.cjk.CJKBigramFilterFactory\",",
                "+          \"factory\": \"cjkbigram\",",
                "           \"params\": {",
                "@@ -67,3 +67,3 @@",
                "         {",
                "-          \"factory\": \"org.apache.tika.eval.tokens.CJKBigramAwareLengthFilterFactory\",",
                "+          \"factory\": \"cjkbigramawarelength\",",
                "           \"params\": {",
                "diff --git a/tika-example/pom.xml b/tika-example/pom.xml",
                "index 86f5ceeab..26ec9ec42 100644",
                "--- a/tika-example/pom.xml",
                "+++ b/tika-example/pom.xml",
                "@@ -129,3 +129,3 @@",
                "       <artifactId>lucene-core</artifactId>",
                "-      <version>3.5.0</version>",
                "+      <version>7.4.0</version>",
                "     </dependency>",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java b/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "deleted file mode 100755",
                "index 7567bc434..000000000",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "+++ /dev/null",
                "@@ -1,210 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.tika.example;",
                "-",
                "-import java.io.InputStream;",
                "-import java.io.Reader;",
                "-import java.util.concurrent.Executor;",
                "-",
                "-import org.apache.jackrabbit.core.query.lucene.FieldNames;",
                "-import org.apache.jackrabbit.core.value.InternalValue;",
                "-import org.apache.lucene.analysis.TokenStream;",
                "-import org.apache.lucene.document.AbstractField;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Store;",
                "-import org.apache.lucene.document.Field.TermVector;",
                "-import org.apache.tika.metadata.Metadata;",
                "-import org.apache.tika.parser.ParseContext;",
                "-import org.apache.tika.parser.Parser;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.xml.sax.ContentHandler;",
                "-import org.xml.sax.SAXException;",
                "-import org.xml.sax.helpers.DefaultHandler;",
                "-",
                "-/**",
                "- * <code>LazyTextExtractorField</code> implements a Lucene field with a String",
                "- * value that is lazily initialized from a given {@link Reader}. In addition",
                "- * this class provides a method to find out whether the purpose of the reader is",
                "- * to extract text and whether the extraction process is already finished.",
                "- *",
                "- * @see #isExtractorFinished()",
                "- */",
                "-@SuppressWarnings(\"serial\")",
                "-public class LazyTextExtractorField extends AbstractField {",
                "-    /**",
                "-     * The logger instance for this class.",
                "-     */",
                "-    private static final Logger LOG = LoggerFactory.getLogger(LazyTextExtractorField.class);",
                "-",
                "-    /**",
                "-     * The exception used to forcibly terminate the extraction process when the",
                "-     * maximum field length is reached.",
                "-     * <p>",
                "-     * Such exceptions shouldn't be used in logging since its stack trace is meaningless.",
                "-     */",
                "-    private static final SAXException STOP = new SAXException(\"max field length reached\");",
                "-",
                "-    /**",
                "-     * The extracted text content of the given binary value. Set to non-null",
                "-     * when the text extraction task finishes.",
                "-     */",
                "-    private volatile String extract = null;",
                "-",
                "-    /**",
                "-     * Creates a new <code>LazyTextExtractorField</code> with the given",
                "-     * <code>name</code>.",
                "-     *",
                "-     * @param name         the name of the field.",
                "-     * @param reader       the reader where to obtain the string from.",
                "-     * @param highlighting set to <code>true</code> to enable result highlighting support",
                "-     */",
                "-    public LazyTextExtractorField(Parser parser, InternalValue value,",
                "-                                  Metadata metadata, Executor executor, boolean highlighting,",
                "-                                  int maxFieldLength) {",
                "-        super(FieldNames.FULLTEXT, highlighting ? Store.YES : Store.NO,",
                "-                Field.Index.ANALYZED, highlighting ? TermVector.WITH_OFFSETS",
                "-                        : TermVector.NO);",
                "-        executor.execute(new ParsingTask(parser, value, metadata,",
                "-                maxFieldLength));",
                "-    }",
                "-",
                "-    /**",
                "-     * Returns the extracted text. This method blocks until the text extraction",
                "-     * task has been completed.",
                "-     *",
                "-     * @return the string value of this field",
                "-     */",
                "-    public synchronized String stringValue() {",
                "-        try {",
                "-            while (!isExtractorFinished()) {",
                "-                wait();",
                "-            }",
                "-            return extract;",
                "-        } catch (InterruptedException e) {",
                "-            LOG.error(\"Text extraction thread was interrupted\", e);",
                "-            return \"\";",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public Reader readerValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public byte[] binaryValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * @return always <code>null</code>",
                "-     */",
                "-    public TokenStream tokenStreamValue() {",
                "-        return null;",
                "-    }",
                "-",
                "-    /**",
                "-     * Checks whether the text extraction task has finished.",
                "-     *",
                "-     * @return <code>true</code> if the extracted text is available",
                "-     */",
                "-    public boolean isExtractorFinished() {",
                "-        return extract != null;",
                "-    }",
                "-",
                "-    private synchronized void setExtractedText(String value) {",
                "-        extract = value;",
                "-        notify();",
                "-    }",
                "-",
                "-    /**",
                "-     * Releases all resources associated with this field.",
                "-     */",
                "-    public void dispose() {",
                "-        // TODO: Cause the ContentHandler below to throw an exception",
                "-    }",
                "-",
                "-    /**",
                "-     * The background task for extracting text from a binary value.",
                "-     */",
                "-    private class ParsingTask extends DefaultHandler implements Runnable {",
                "-        private final Parser parser;",
                "-",
                "-        private final InternalValue value;",
                "-",
                "-        private final Metadata metadata;",
                "-",
                "-        private final int maxFieldLength;",
                "-",
                "-        private final StringBuilder builder = new StringBuilder();",
                "-",
                "-        private final ParseContext context = new ParseContext();",
                "-",
                "-        // NOTE: not a part of Jackrabbit code, made",
                "-        private final ContentHandler handler = new DefaultHandler();",
                "-",
                "-        public ParsingTask(Parser parser, InternalValue value,",
                "-                           Metadata metadata, int maxFieldLength) {",
                "-            this.parser = parser;",
                "-            this.value = value;",
                "-            this.metadata = metadata;",
                "-            this.maxFieldLength = maxFieldLength;",
                "-        }",
                "-",
                "-        public void run() {",
                "-            try {",
                "-                try (InputStream stream = value.getStream()) {",
                "-                    parser.parse(stream, handler, metadata, context);",
                "-                }",
                "-            } catch (LinkageError e) {",
                "-                // Capture and ignore",
                "-            } catch (Throwable t) {",
                "-                if (t != STOP) {",
                "-                    LOG.debug(\"Failed to extract text.\", t);",
                "-                    setExtractedText(\"TextExtractionError\");",
                "-                    return;",
                "-                }",
                "-            } finally {",
                "-                value.discard();",
                "-            }",
                "-            setExtractedText(handler.toString());",
                "-",
                "-        }",
                "-",
                "-        @Override",
                "-        public void characters(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            builder.append(ch, start,",
                "-                    Math.min(length, maxFieldLength - builder.length()));",
                "-            if (builder.length() >= maxFieldLength) {",
                "-                throw STOP;",
                "-            }",
                "-        }",
                "-",
                "-        @Override",
                "-        public void ignorableWhitespace(char[] ch, int start, int length)",
                "-                throws SAXException {",
                "-            characters(ch, start, length);",
                "-        }",
                "-    }",
                "-}",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "index 2f7cd31f0..1885877ac 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "@@ -22,5 +22,4 @@ import java.io.File;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -40,4 +39,4 @@ public class LuceneIndexer {",
                "         Document document = new Document();",
                "-        document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-        document.add(new Field(\"fulltext\", tika.parseToString(file), Store.NO, Index.ANALYZED));",
                "+        document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+        document.add(new TextField(\"fulltext\", tika.parseToString(file), Store.NO));",
                "         writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "index 2a7fd13a8..06923398f 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "@@ -21,2 +21,3 @@ import java.io.File;",
                " import java.io.Reader;",
                "+import java.nio.file.Paths;",
                "@@ -24,9 +25,7 @@ import org.apache.lucene.analysis.standard.StandardAnalyzer;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "-import org.apache.lucene.index.IndexWriter.MaxFieldLength;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "-import org.apache.lucene.util.Version;",
                "+import org.apache.lucene.index.IndexWriterConfig;",
                "+import org.apache.lucene.store.FSDirectory;",
                " import org.apache.tika.Tika;",
                "@@ -45,6 +44,6 @@ public class LuceneIndexerExtended {",
                "     public static void main(String[] args) throws Exception {",
                "-        try (IndexWriter writer = new IndexWriter(",
                "-                new SimpleFSDirectory(new File(args[0])),",
                "-                new StandardAnalyzer(Version.LUCENE_30),",
                "-                MaxFieldLength.UNLIMITED)) {",
                "+        IndexWriterConfig indexWriterConfig = new IndexWriterConfig(new StandardAnalyzer());",
                "+        try (IndexWriter writer =",
                "+                     new IndexWriter(FSDirectory.open(Paths.get(args[0])),",
                "+                indexWriterConfig)) {",
                "             LuceneIndexer indexer = new LuceneIndexer(new Tika(), writer);",
                "@@ -59,4 +58,4 @@ public class LuceneIndexerExtended {",
                "             Document document = new Document();",
                "-            document.add(new Field(\"filename\", file.getName(), Store.YES, Index.ANALYZED));",
                "-            document.add(new Field(\"fulltext\", fulltext));",
                "+            document.add(new TextField(\"filename\", file.getName(), Store.YES));",
                "+            document.add(new TextField(\"fulltext\", fulltext));",
                "             writer.addDocument(document);",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "index 5c6a9d482..dee4d1389 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "@@ -25,5 +25,4 @@ import java.util.Date;",
                " import org.apache.lucene.document.Document;",
                "-import org.apache.lucene.document.Field;",
                "-import org.apache.lucene.document.Field.Index;",
                " import org.apache.lucene.document.Field.Store;",
                "+import org.apache.lucene.document.TextField;",
                " import org.apache.lucene.index.IndexWriter;",
                "@@ -56,3 +55,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "@@ -81,3 +80,3 @@ public class MetadataAwareLuceneIndexer {",
                "                 for (String val : values) {",
                "-                    document.add(new Field(key, val, Store.YES, Index.ANALYZED));",
                "+                    document.add(new TextField(key, val, Store.YES));",
                "                 }",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "index d6a259b8c..8fabd3a34 100755",
                "--- a/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/RecentFiles.java",
                "@@ -19,4 +19,4 @@ package org.apache.tika.example;",
                "-import java.io.File;",
                " import java.io.IOException;",
                "+import java.nio.file.Path;",
                " import java.text.SimpleDateFormat;",
                "@@ -30,2 +30,3 @@ import org.apache.lucene.document.Document;",
                " import org.apache.lucene.index.CorruptIndexException;",
                "+import org.apache.lucene.index.DirectoryReader;",
                " import org.apache.lucene.index.IndexReader;",
                "@@ -35,3 +36,4 @@ import org.apache.lucene.search.TermRangeQuery;",
                " import org.apache.lucene.search.TopScoreDocCollector;",
                "-import org.apache.lucene.store.SimpleFSDirectory;",
                "+import org.apache.lucene.store.FSDirectory;",
                "+import org.apache.lucene.util.BytesRef;",
                " import org.apache.tika.metadata.DublinCore;",
                "@@ -51,3 +53,3 @@ public class RecentFiles {",
                "-    public String generateRSS(File indexFile) throws CorruptIndexException,",
                "+    public String generateRSS(Path indexFile) throws CorruptIndexException,",
                "             IOException {",
                "@@ -57,3 +59,3 @@ public class RecentFiles {",
                "         try {",
                "-            reader = IndexReader.open(new SimpleFSDirectory(indexFile));",
                "+            reader = DirectoryReader.open(FSDirectory.open(indexFile));",
                "             searcher = new IndexSearcher(reader);",
                "@@ -64,6 +66,7 @@ public class RecentFiles {",
                "             String fiveMinsAgo = ISO8601.format(gc);",
                "-            TermRangeQuery query = new TermRangeQuery(Metadata.DATE.toString(),",
                "-                    fiveMinsAgo, nowDateTime, true, true);",
                "-            TopScoreDocCollector collector = TopScoreDocCollector.create(20,",
                "-                    true);",
                "+            TermRangeQuery query = new TermRangeQuery(",
                "+                    Metadata.DATE.toString(),",
                "+                    new BytesRef(fiveMinsAgo), new BytesRef(nowDateTime),",
                "+                    true, true);",
                "+            TopScoreDocCollector collector = TopScoreDocCollector.create(20);",
                "             searcher.search(query, collector);",
                "@@ -77,3 +80,2 @@ public class RecentFiles {",
                "             if (reader != null) reader.close();",
                "-            if (searcher != null) searcher.close();",
                "         }"
            ],
            "changed_files": [
                "tika-eval/pom.xml",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AlphaIdeographFilterFactory.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/AnalyzerDeserializer.java",
                "tika-eval/src/main/java/org/apache/tika/eval/tokens/CJKBigramAwareLengthFilterFactory.java",
                "tika-eval/src/main/resources/lucene-analyzers.json",
                "tika-example/pom.xml",
                "tika-example/src/main/java/org/apache/tika/example/LazyTextExtractorField.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                "tika-example/src/main/java/org/apache/tika/example/MetadataAwareLuceneIndexer.java",
                "tika-example/src/main/java/org/apache/tika/example/RecentFiles.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2695": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2695",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7b869c0c1b132feb691dca645fe9bc689bf320e2",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504743216,
            "hunks": 10,
            "message": "Added a regular expression to match standard word within a pattern for TIKA-2449 contributed by Giuseppe Totaro",
            "diff": [
                "diff --git a/tika-core/src/main/java/org/apache/tika/sax/StandardsText.java b/tika-core/src/main/java/org/apache/tika/sax/StandardsText.java",
                "index 8293fa6eb..3921e064e 100644",
                "--- a/tika-core/src/main/java/org/apache/tika/sax/StandardsText.java",
                "+++ b/tika-core/src/main/java/org/apache/tika/sax/StandardsText.java",
                "@@ -42,4 +42,6 @@ import org.apache.tika.sax.StandardReference.StandardReferenceBuilder;",
                "  * <li>each potential standard reference starts with score equal to 0.25;</li>",
                "- * <li>increases by 0.50 the score of references which include the name of a",
                "+ * <li>increases by 0.25 the score of references which include the name of a",
                "  * known standard organization ({@link StandardOrganizations});</li>",
                "+ * <li>increases by 0.25 the score of references which include the word ",
                "+ * Publication or Standard;</li>",
                "  * <li>increases by 0.25 the score of references which have been found within",
                "@@ -67,3 +69,3 @@ public class StandardsText {",
                " \t// between the name of the standard organization and the standard identifier",
                "-\tprivate static final String REGEX_STANDARD_TYPE = \"(\\\\s(Publication|Standard))?\";",
                "+\tprivate static final String REGEX_STANDARD_TYPE = \"(\\\\s(?i:Publication|Standard))\";",
                "@@ -73,3 +75,3 @@ public class StandardsText {",
                " \t\t\t+ \"\\\\)?((\\\\s?(?<separator>\\\\/)\\\\s?)(\\\\w+\\\\s)*\\\\(?\" + \"(?<secondOrganization>[A-Z]\\\\w+)\" + \"\\\\)?)?\"",
                "-\t\t\t+ REGEX_STANDARD_TYPE + \"(-|\\\\s)?\" + REGEX_IDENTIFIER;",
                "+\t\t\t+ REGEX_STANDARD_TYPE + \"?\" + \"(-|\\\\s)?\" + REGEX_IDENTIFIER;",
                "@@ -147,4 +149,10 @@ public class StandardsText {",
                "+\t\t\t// increases by 0.25 the score of references which include the name of a known standard organization",
                " \t\t\tif (matcher.group().matches(REGEX_STANDARD)) {",
                "-\t\t\t\tscore += 0.50;",
                "+\t\t\t\tscore += 0.25;",
                "+\t\t\t}",
                "+\t\t\t",
                "+\t\t\t// increases by 0.25 the score of references which include the word \"Publication\" or \"Standard\"",
                "+\t\t\tif (matcher.group().matches(\".*\" + REGEX_STANDARD_TYPE + \".*\")) {",
                "+\t\t\t\tscore += 0.25;",
                " \t\t\t}",
                "@@ -164,2 +172,4 @@ public class StandardsText {",
                " \t\t\tString header = headers.get(startHeader);",
                "+\t\t\t",
                "+\t\t\t// increases by 0.25 the score of references which have been found within \"Applicable Documents\" and equivalent sections",
                " \t\t\tif (header != null && headers.get(startHeader).matches(REGEX_APPLICABLE_DOCUMENTS)) {",
                "@@ -169,3 +179,3 @@ public class StandardsText {",
                " \t\t\tbuilder.setScore(score);",
                "-",
                "+\t\t\t",
                " \t\t\tif (score >= threshold) {",
                "@@ -177,2 +187,2 @@ public class StandardsText {",
                " \t}",
                "-}",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java b/tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                "index aad5fd7bb..63e5b7668 100644",
                "--- a/tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                "+++ b/tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                "@@ -101,3 +101,3 @@ public class StandardsExtractionExample {",
                " \t\t\t\tmetadata);",
                "-\t\thandler.setThreshold(1.0);",
                "+\t\thandler.setThreshold(0.75);",
                " \t\ttry (InputStream stream = new BufferedInputStream(Files.newInputStream(path))) {"
            ],
            "changed_files": [
                "tika-core/src/main/java/org/apache/tika/sax/StandardsText.java",
                "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2449": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2449",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "73232252c84a74c598014a7ba9d6ef63732a75d4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533308818,
            "hunks": 0,
            "message": "Merge branch 'TIKA-2673' of https://github.com/GerardBouchar/tika into GerardBouchar-TIKA-2673",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6cc53734e73b5d1b0af790d220e0227aba69eaf6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533733834,
            "hunks": 3,
            "message": "TIKA-2672 -- more exclusions needed because of version conflicts",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index fba81106e..d7d599212 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -213,2 +213,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>joda-time</groupId>",
                "+          <artifactId>joda-time</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -231,2 +235,7 @@",
                "     </dependency>",
                "+    <dependency>",
                "+      <groupId>org.objenesis</groupId>",
                "+      <artifactId>objenesis</artifactId>",
                "+      <version>2.6</version>",
                "+    </dependency>",
                "     <dependency>",
                "@@ -236,2 +245,6 @@",
                "       <exclusions>",
                "+        <exclusion>",
                "+          <groupId>org.objenesis</groupId>",
                "+          <artifactId>objenesis</artifactId>",
                "+        </exclusion>",
                "         <exclusion>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "de53df98a9523955fbdbaeefce00c13eb1b719b3",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1525987116,
            "hunks": 2,
            "message": "Mime magic for DPX and ACES, thanks to Andreas Meier (TIKA-2628 and TIKA-2629) # Conflicts: #\tCHANGES.txt",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 77db75216..3c4b4ca78 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -5021,2 +5021,11 @@",
                "+  <mime-type type=\"image/aces\">",
                "+    <_comment>ACES Image Container File</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x762F310102000000\" type=\"string\" offset=\"0\"/>",
                "+      <match value=\"0x762F310102040000\" type=\"string\" offset=\"0\"/>",
                "+    </magic>",
                "+    <glob pattern=\"*.exr\"/>",
                "+  </mime-type> ",
                "+",
                "   <mime-type type=\"image/bmp\">",
                "@@ -5070,2 +5079,12 @@",
                "+  <mime-type type=\"image/x-dpx\">",
                "+    <acronym>DPX</acronym>",
                "+    <_comment>Digital Picture Exchange from SMPTE</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"SDPX\" type=\"string\" offset=\"0\" />",
                "+      <match value=\"XPDS\" type=\"string\" offset=\"0\" />",
                "+    </magic>",
                "+    <glob pattern=\"*.dpx\"/>",
                "+  </mime-type>",
                "+",
                "   <mime-type type=\"image/emf\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2628": "",
                "TIKA-2629": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2628, TIKA-2629",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "98d7ca08bebe4f62cf44896883aaf36d52088158",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533830625,
            "hunks": 2,
            "message": "TIKA-2672 -- upgrade to dl4j 1.0.0-beta2",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index d7d599212..fb9225096 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -38,3 +38,3 @@",
                "     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    <dl4j.version>1.0.0-SNAPSHOT</dl4j.version>",
                "+    <dl4j.version>1.0.0-beta2</dl4j.version>",
                "   </properties>",
                "@@ -348,12 +348,2 @@",
                "   </build>",
                "-  <repositories>",
                "-    <repository>",
                "-      <id>oss-sonatype</id>",
                "-      <name>oss-sonatype</name>",
                "-      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>",
                "-      <snapshots>",
                "-        <enabled>true</enabled>",
                "-      </snapshots>",
                "-    </repository>",
                "-  </repositories>",
                " </project>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5482dd4595ea663c9d32a74d2f1a71885938adf9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533661156,
            "hunks": 4,
            "message": "TIKA-2672 -- need more exclusions to avoid conflicts",
            "diff": [
                "diff --git a/tika-dl/pom.xml b/tika-dl/pom.xml",
                "index ee27bd5ee..fba81106e 100644",
                "--- a/tika-dl/pom.xml",
                "+++ b/tika-dl/pom.xml",
                "@@ -147,2 +147,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -201,2 +205,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-lang3</artifactId>",
                "+        </exclusion>",
                "         <exclusion>",
                "@@ -217,2 +225,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>commons-lang</groupId>",
                "+          <artifactId>commons-lang</artifactId>",
                "+        </exclusion>",
                "       </exclusions>",
                "@@ -228,2 +240,6 @@",
                "         </exclusion>",
                "+        <exclusion>",
                "+          <groupId>org.apache.commons</groupId>",
                "+          <artifactId>commons-math3</artifactId>",
                "+        </exclusion>",
                "       </exclusions>"
            ],
            "changed_files": [
                "tika-dl/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2672": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2672",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ef66723174ea15d4e168769dea6f76f0ad7bd91",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1533309950,
            "hunks": 0,
            "message": "Merge branch 'GerardBouchar-TIKA-2673'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "TIKA-2673": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: TIKA-2673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e6d332d1335ce33395ca403648ad955f4c97e622",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505570231,
            "hunks": 1,
            "message": "added version-specific mime-type definitions for Lotus 1-2-3",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 587a5c5b1..69a688347 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1503,2 +1503,48 @@",
                "   </mime-type>",
                "+  ",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3;version=1\">",
                "+  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3, version 1</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x000002000404\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wks\"/>",
                "+  </mime-type>",
                "+",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3;version=2\">",
                "+  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3, version 2</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x00000200060406000800\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wk1\"/>",
                "+    <glob pattern=\"*.wk2\"/>",
                "+  </mime-type>",
                "+   ",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3;version=3\">",
                "+  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3, version 3</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x00001A0000100400\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wk3\"/>",
                "+  </mime-type>",
                "+",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3;version=4\">",
                "+  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3, version 4-5</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x00001A0002100400\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.wk4\"/>",
                "+  </mime-type>",
                "+",
                "   <mime-type type=\"application/vnd.lotus-approach\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "582083e003efe45bd9e2e7a624a4177c9f1ddc50",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1504887991,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3da39b8b5e03fb834894349275ed35db8af41bd9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1526654106,
            "hunks": 1,
            "message": "Add the other jackcess jar to the bundle",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 691d436c5..57d2ba467 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -173,2 +173,3 @@",
                "               jackcess|",
                "+              jackcess-encrypt|",
                "               commons-lang|"
            ],
            "changed_files": [
                "tika-bundle/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "920f68266d67ea35f7084ebbd21a36fb0ddaeb23",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505737438,
            "hunks": 9,
            "message": "fixed indentation",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 6d520fbe4..cb2c84625 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1502,3 +1502,3 @@",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=1\">",
                "-  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "     <alias type=\"application/x-123\"/>",
                "@@ -1513,3 +1513,3 @@",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=2\">",
                "-  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "     <alias type=\"application/x-123\"/>",
                "@@ -1525,3 +1525,3 @@",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=3\">",
                "-  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "     <alias type=\"application/x-123\"/>",
                "@@ -1536,3 +1536,3 @@",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=4\">",
                "-  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "     <alias type=\"application/x-123\"/>",
                "@@ -1547,3 +1547,3 @@",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=97+9.x\">",
                "-  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "     <alias type=\"application/x-123\"/>",
                "@@ -3888,3 +3888,3 @@",
                "   <mime-type type=\"application/x-quattro-pro;version=1-4\">",
                "-  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <sub-class-of type=\"application/x-quattro-pro\"/>",
                "     <_comment>Quattro Pro for DOS, version 1-4</_comment>",
                "@@ -3899,3 +3899,3 @@",
                "   <mime-type type=\"application/x-quattro-pro;version=5\">",
                "-  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <sub-class-of type=\"application/x-quattro-pro\"/>",
                "     <_comment>Quattro Pro for DOS, version 5</_comment>",
                "@@ -3914,3 +3914,3 @@",
                "   <mime-type type=\"application/x-quattro-pro;version=1+5\">",
                "-  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <sub-class-of type=\"application/x-quattro-pro\"/>",
                "     <_comment>Quattro Pro for Windows, version 1, 5</_comment>",
                "@@ -3924,3 +3924,3 @@",
                "   <mime-type type=\"application/x-quattro-pro;version=6\">",
                "-  <sub-class-of type=\"application/x-quattro-pro\"/>",
                "+    <sub-class-of type=\"application/x-quattro-pro\"/>",
                "     <_comment>Quattro Pro for Windows, version 6</_comment>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "384e97156c5c5bf54d54b452c1783b7c4e5df068",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1506025258,
            "hunks": 22,
            "message": "make strawman app driver actually work.  Add ability to specify a list of files.",
            "diff": [
                "diff --git a/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java b/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "index 8523d5ce8..4fef6c88a 100644",
                "--- a/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "+++ b/tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java",
                "@@ -19,5 +19,5 @@ package org.apache.tika.batch.fs.strawman;",
                "+import java.io.BufferedReader;",
                " import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.io.OutputStream;",
                "+import java.nio.charset.StandardCharsets;",
                " import java.nio.file.FileVisitResult;",
                "@@ -40,3 +40,2 @@ import java.util.concurrent.atomic.AtomicInteger;",
                "-import org.apache.commons.io.IOUtils;",
                " import org.slf4j.Logger;",
                "@@ -62,2 +61,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "     private Path outputRoot = null;",
                "+    private Path fileList = null;",
                "     private String[] args = null;",
                "@@ -65,5 +65,6 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "     public StrawManTikaAppDriver(Path inputRoot, Path outputRoot,",
                "-                                 int totalThreads, String[] args) {",
                "+                                 int totalThreads, Path fileList, String[] args) {",
                "         this.inputRoot = inputRoot;",
                "         this.outputRoot = outputRoot;",
                "+        this.fileList = fileList;",
                "         this.args = args;",
                "@@ -75,3 +76,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "     private class TikaVisitor extends SimpleFileVisitor<Path> {",
                "-        private int processed = 0;",
                "+        private volatile int processed = 0;",
                "@@ -89,6 +90,27 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "             }",
                "-            assert(file.startsWith(inputRoot));",
                "+            if (! file.startsWith(inputRoot)) {",
                "+                LOG.warn(\"File (\"+file.toAbsolutePath()+",
                "+                        \") doesn't start with input root (\"+inputRoot.toAbsolutePath()+\")\");",
                "+                return FileVisitResult.CONTINUE;",
                "+            }",
                "             Path relPath = inputRoot.relativize(file);",
                "+            String suffix = \".txt\";",
                "+            List<String> commandLine = new ArrayList<>();",
                "+            for (String arg : args) {",
                "+                commandLine.add(arg);",
                "+                if (arg.equals(\"-J\")) {",
                "+                    suffix = \".json\";",
                "+                } else if (arg.contains(\"-x\")) {",
                "+                    suffix = \".html\";",
                "+                }",
                "+            }",
                "+            String fullPath = file.toAbsolutePath().toString();",
                "+            if (fullPath.contains(\" \")) {",
                "+                fullPath = \"\\\"\"+fullPath+\"\\\"\";",
                "+            }",
                "+            commandLine.add(fullPath);",
                "+",
                "+",
                "             Path outputFile = Paths.get(outputRoot.toAbsolutePath().toString(),",
                "-                    relPath.toString() + \".txt\");",
                "+                    relPath.toString() + suffix);",
                "             try {",
                "@@ -100,19 +122,11 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "             }",
                "-            List<String> commandLine = new ArrayList<>();",
                "-            for (String arg : args) {",
                "-                commandLine.add(arg);",
                "-            }",
                "-            commandLine.add(\"-t\");",
                "-            commandLine.add(\"\\\"\"+outputFile.toAbsolutePath()+\"\\\"\");",
                "-            ProcessBuilder builder = new ProcessBuilder(commandLine.toArray(new String[commandLine.size()]));",
                "+            ProcessBuilder builder = new ProcessBuilder();",
                "+            builder.command(commandLine);",
                "             LOG.info(\"about to process: {}\", file.toAbsolutePath());",
                "+            builder.redirectOutput(outputFile.toFile());",
                "+            builder.redirectError(ProcessBuilder.Redirect.INHERIT);",
                "+",
                "             Process proc = null;",
                "-            RedirectGobbler gobbler = null;",
                "-            Thread gobblerThread = null;",
                "             try {",
                "-                OutputStream os = Files.newOutputStream(outputFile);",
                "                 proc = builder.start();",
                "-                gobbler = new RedirectGobbler(proc.getInputStream(), os);",
                "-                gobblerThread = new Thread(gobbler);",
                "-                gobblerThread.start();",
                "             } catch (IOException e) {",
                "@@ -143,4 +157,8 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "             }",
                "-            gobbler.close();",
                "-            gobblerThread.interrupt();",
                "+            try {",
                "+                proc.getOutputStream().flush();",
                "+                proc.getOutputStream().close();",
                "+            } catch (IOException e) {",
                "+                LOG.warn(\"couldn't close process outputstream\", e);",
                "+            }",
                "             processed++;",
                "@@ -157,3 +175,23 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "         TikaVisitor v = new TikaVisitor();",
                "-        Files.walkFileTree(inputRoot, v);",
                "+        if (fileList != null) {",
                "+            TikaVisitor tikaVisitor = new TikaVisitor();",
                "+            try (BufferedReader reader = Files.newBufferedReader(fileList, StandardCharsets.UTF_8)) {",
                "+                String line = reader.readLine();",
                "+                while (line != null) {",
                "+                    Path inputFile = inputRoot.resolve(line.trim());",
                "+                    if (Files.isReadable(inputFile)) {",
                "+                        try {",
                "+                            tikaVisitor.visitFile(inputFile, Files.readAttributes(inputFile, BasicFileAttributes.class));",
                "+                        } catch (IOException e) {",
                "+                            LOG.warn(\"Problem with: \"+inputFile, e);",
                "+                        }",
                "+                    } else {",
                "+                        LOG.warn(\"Not readable: \"+inputFile);",
                "+                    }",
                "+                    line = reader.readLine();",
                "+                }",
                "+            }",
                "+        } else {",
                "+            Files.walkFileTree(inputRoot, v);",
                "+        }",
                "         int processed = v.getProcessed();",
                "@@ -164,42 +202,2 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "-    private class RedirectGobbler implements Runnable {",
                "-        private OutputStream redirectOs = null;",
                "-        private InputStream redirectIs = null;",
                "-",
                "-        private RedirectGobbler(InputStream is, OutputStream os) {",
                "-            this.redirectIs = is;",
                "-            this.redirectOs = os;",
                "-        }",
                "-",
                "-        private void close() {",
                "-            if (redirectOs != null) {",
                "-                try {",
                "-                    redirectOs.flush();",
                "-                } catch (IOException e) {",
                "-                    LOG.error(\"can't flush\");",
                "-                }",
                "-                try {",
                "-                    redirectIs.close();",
                "-                } catch (IOException e) {",
                "-                    LOG.error(\"can't close input in redirect gobbler\");",
                "-                }",
                "-                try {",
                "-                    redirectOs.close();",
                "-                } catch (IOException e) {",
                "-                    LOG.error(\"can't close output in redirect gobbler\");",
                "-                }",
                "-            }",
                "-        }",
                "-",
                "-        @Override",
                "-        public void run() {",
                "-            try {",
                "-                IOUtils.copy(redirectIs, redirectOs);",
                "-            } catch (IOException e) {",
                "-                LOG.error(\"IOException while gobbling\");",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-",
                "@@ -222,5 +220,14 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "         int totalThreads = Integer.parseInt(args[2]);",
                "+        Path fileList = null;",
                "+        if (args.length > 3) {",
                "+            fileList = Paths.get(args[3]);",
                "+            if (! Files.isReadable(fileList)) {",
                "+                fileList = null;",
                "+            }",
                "+        }",
                "         List<String> commandLine = new ArrayList<>();",
                "-        commandLine.addAll(Arrays.asList(args).subList(3, args.length));",
                "+",
                "+        int initialParams = (fileList == null) ? 3 : 4;",
                "+        commandLine.addAll(Arrays.asList(args).subList(initialParams, args.length));",
                "         totalThreads = (totalThreads < 1) ? 1 : totalThreads;",
                "@@ -232,3 +239,4 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "             StrawManTikaAppDriver driver =",
                "-                    new StrawManTikaAppDriver(inputDir, outputDir, totalThreads, commandLine.toArray(new String[commandLine.size()]));",
                "+                    new StrawManTikaAppDriver(inputDir, outputDir, totalThreads, fileList,",
                "+                            commandLine.toArray(new String[commandLine.size()]));",
                "             completionService.submit(driver);",
                "@@ -249,2 +257,3 @@ public class StrawManTikaAppDriver implements Callable<Integer> {",
                "         LOG.info(\"Processed {} in {} seconds\", totalFilesProcessed, elapsedSeconds);",
                "+        ex.shutdownNow();",
                "     }"
            ],
            "changed_files": [
                "tika-batch/src/main/java/org/apache/tika/batch/fs/strawman/StrawManTikaAppDriver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c8deb97fabe579f05acc12a02adf30cf92c7c4df",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505578523,
            "hunks": 7,
            "message": "modified quattro pro version fields so they are consistent with wb3 and qpw output",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 85a6f4cb3..0b9968f3d 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -3879,3 +3879,3 @@",
                "-  <mime-type type=\"application/x-quattro-pro;version=1-dos\">",
                "+  <mime-type type=\"application/x-quattro-pro;version=1-4\">",
                "   <sub-class-of type=\"application/x-quattro-pro\"/>",
                "@@ -3890,3 +3890,3 @@",
                "-  <mime-type type=\"application/x-quattro-pro;version=5-dos\">",
                "+  <mime-type type=\"application/x-quattro-pro;version=5\">",
                "   <sub-class-of type=\"application/x-quattro-pro\"/>",
                "@@ -3900,6 +3900,10 @@",
                "   </mime-type>",
                "-",
                "-  <mime-type type=\"application/x-quattro-pro;version=1-win\">",
                "+  ",
                "+  <!-- First Quattro Pro for Windows had major version number 1, which",
                "+  was followed by 5. This is confusing, perhaps adding \"win\" qualifier to version",
                "+  field could clear this up (but it's quite ugly as well)   -->",
                "+  ",
                "+  <mime-type type=\"application/x-quattro-pro;version=1/5\">",
                "   <sub-class-of type=\"application/x-quattro-pro\"/>",
                "-    <_comment>Quattro Pro for Windows, version 1-5</_comment>",
                "+    <_comment>Quattro Pro for Windows, version 1/5</_comment>",
                "     <magic priority=\"50\">",
                "@@ -3911,3 +3915,3 @@",
                "-  <mime-type type=\"application/x-quattro-pro;version=6-win\">",
                "+  <mime-type type=\"application/x-quattro-pro;version=6\">",
                "   <sub-class-of type=\"application/x-quattro-pro\"/>",
                "@@ -3921,6 +3925,4 @@",
                "-  <!-- Quattro Pro for Windows 7-8 (qp2) and and 9 (wb3) files are",
                "+  <!-- Quattro Pro for Windows 7-8 (wb3) and and 9 (qpw) files are",
                "        currently detected by POIFSContainerDetector",
                "-       TODO: add version strings (version=7-win / version=9-win)",
                "-        to make reporting consistent across all versions",
                "   -->"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b5c07d523292338a7f01d07ffd4ff63fd2e8ec9c",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505569930,
            "hunks": 1,
            "message": "added missing glob patterns to old Quattro Pro definition",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index c0ce39daa..8f179a226 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -3831,2 +3831,5 @@",
                "         TODO: add detection for wb2 and wb1 -->",
                "+    <glob pattern=\"*.wq1\"/>",
                "+    <glob pattern=\"*.wq2\"/>",
                "+    <glob pattern=\"*.wkq\"/>",
                "     <glob pattern=\"*.qpw\"/>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1fd441e8d71169b8d6eb8cd8d1c42b59a5a119b8",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505570084,
            "hunks": 1,
            "message": "deleted existing entry for application/x-123 b/c of collisions with Quattro Pro magic",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 8f179a226..587a5c5b1 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -2778,9 +2778,2 @@",
                "-  <mime-type type=\"application/x-123\">",
                "-    <magic priority=\"50\">",
                "-      <match value=\"0x00001a00\" type=\"big32\" offset=\"0\" />",
                "-      <match value=\"0x00000200\" type=\"big32\" offset=\"0\" />",
                "-    </magic>",
                "-  </mime-type>",
                "-",
                "   <mime-type type=\"application/x-abiword\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "be9d440e05e609f85efa151b8f5fc78cd0d30fb9",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505737947,
            "hunks": 1,
            "message": "commented out glob pattern for wks because it creates a conflict",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 97de79f58..7078d7b92 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1504,3 +1504,3 @@",
                "     <_comment>Lotus 1-2-3</_comment>",
                "-    <glob pattern=\"*.wks\"/>",
                "+    <!-- <glob pattern=\"*.wks\"/> - conflicts with application/vnd.ms-works -->",
                "     <glob pattern=\"*.wk1\"/>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "57ff8797806d3ee6c9a792983a95f45f02372a37",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1532545827,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c5f0de1a83471ac2a15c46b1c39b33904dd69c9f",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505737189,
            "hunks": 1,
            "message": "removed old entry for .123 extension",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 449b7683e..6d520fbe4 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1500,5 +1500,2 @@",
                "   </mime-type>",
                "-  <mime-type type=\"application/vnd.lotus-1-2-3\">",
                "-    <glob pattern=\"*.123\"/>",
                "-  </mime-type>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "85d25ccdabc01eb0cd69c7e764df98e92688e51b",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505575877,
            "hunks": 2,
            "message": "removed glob pattern for .wks to avoid conflic with vnd.ms-works",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 69a688347..85a6f4cb3 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1510,5 +1510,5 @@",
                "       <match value=\"0x000002000404\" type=\"string\" offset=\"0\">",
                "+      <!-- <glob pattern=\"*.wks\"/> - conflicts with application/vnd.ms-works -->",
                "       </match>",
                "     </magic>",
                "-    <glob pattern=\"*.wks\"/>",
                "   </mime-type>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7dd38d5500c539328e2b0a083e1998a28e680539",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505349202,
            "hunks": 0,
            "message": "Merge branch 'master' of https://github.com/apache/tika",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "817f84843ffbae84def86c044a9f4f453f74a5b4",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505608023,
            "hunks": 3,
            "message": "added mimetype definition for Lotus 1-2-3 97/9.x",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 0b9968f3d..449b7683e 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1549,2 +1549,13 @@",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3;version=97+9.x\">",
                "+  <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3, version 97/9.x</_comment>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0x00001A0003100400\" type=\"string\" offset=\"0\">",
                "+      </match>",
                "+    </magic>",
                "+    <glob pattern=\"*.123\"/>",
                "+  </mime-type>",
                "+",
                "   <mime-type type=\"application/vnd.lotus-approach\">",
                "@@ -3905,5 +3916,5 @@",
                "-  <mime-type type=\"application/x-quattro-pro;version=1/5\">",
                "+  <mime-type type=\"application/x-quattro-pro;version=1+5\">",
                "   <sub-class-of type=\"application/x-quattro-pro\"/>",
                "-    <_comment>Quattro Pro for Windows, version 1/5</_comment>",
                "+    <_comment>Quattro Pro for Windows, version 1, 5</_comment>",
                "     <magic priority=\"50\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5d410966d3de971adfc7f702e5878d7960433a75",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1506344621,
            "hunks": 1,
            "message": "prevent div by 0 exception in profile-reports.xml",
            "diff": [
                "diff --git a/tika-eval/src/main/resources/profile-reports.xml b/tika-eval/src/main/resources/profile-reports.xml",
                "index 0a7bb4de9..75cdaf807 100644",
                "--- a/tika-eval/src/main/resources/profile-reports.xml",
                "+++ b/tika-eval/src/main/resources/profile-reports.xml",
                "@@ -125,3 +125,4 @@",
                "             join containers ct on ct.container_id=p.container_id",
                "-            where cast(num_common_tokens as decimal)/cast(num_alphabetic_tokens as decimal) &lt; 0.50",
                "+            where cast(num_alphabetic_tokens as decimal) > 0.0",
                "+                and cast(num_common_tokens as decimal)/cast(num_alphabetic_tokens as decimal) &lt; 0.50",
                "             order by common_div_alphabetic asc"
            ],
            "changed_files": [
                "tika-eval/src/main/resources/profile-reports.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "92fe9b88ffe16efea47ebbbf88dbf504d7cd7bb6",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505429069,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.17",
                "1.18",
                "1.18-rc1",
                "1.18-rc2",
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-1.28.2-rc1",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5e6b2c60c62a4a5f3219d06618cc26dd4b791f56",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505737660,
            "hunks": 6,
            "message": "created entry for application/vnd.lotus-1-2-3",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index cb2c84625..97de79f58 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -1501,5 +1501,15 @@",
                "+  <mime-type type=\"application/vnd.lotus-1-2-3\">",
                "+    <alias type=\"application/x-123\"/>",
                "+    <_comment>Lotus 1-2-3</_comment>",
                "+    <glob pattern=\"*.wks\"/>",
                "+    <glob pattern=\"*.wk1\"/>",
                "+    <glob pattern=\"*.wk2\"/>",
                "+    <glob pattern=\"*.wk3\"/>",
                "+    <glob pattern=\"*.wk4\"/>",
                "+    <glob pattern=\"*.123\"/>",
                "+  </mime-type>",
                "+  ",
                "   <mime-type type=\"application/vnd.lotus-1-2-3;version=1\">",
                "     <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "-    <alias type=\"application/x-123\"/>",
                "     <_comment>Lotus 1-2-3, version 1</_comment>",
                "@@ -1514,3 +1524,2 @@",
                "     <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "-    <alias type=\"application/x-123\"/>",
                "     <_comment>Lotus 1-2-3, version 2</_comment>",
                "@@ -1526,3 +1535,2 @@",
                "     <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "-    <alias type=\"application/x-123\"/>",
                "     <_comment>Lotus 1-2-3, version 3</_comment>",
                "@@ -1537,3 +1545,2 @@",
                "     <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "-    <alias type=\"application/x-123\"/>",
                "     <_comment>Lotus 1-2-3, version 4-5</_comment>",
                "@@ -1548,3 +1555,2 @@",
                "     <sub-class-of type=\"application/vnd.lotus-1-2-3\"/>",
                "-    <alias type=\"application/x-123\"/>",
                "     <_comment>Lotus 1-2-3, version 97/9.x</_comment>"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4c5bbaece63d4f60b4c4920a105f5cca3de6be58",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1524779237,
            "hunks": 2,
            "message": "Add parso to the OSGi bundle",
            "diff": [
                "diff --git a/tika-bundle/pom.xml b/tika-bundle/pom.xml",
                "index 584d8e826..691d436c5 100644",
                "--- a/tika-bundle/pom.xml",
                "+++ b/tika-bundle/pom.xml",
                "@@ -201,2 +201,3 @@",
                "               cdm|",
                "+              parso|",
                "               httpservices|",
                "@@ -235,2 +236,3 @@",
                "               com.ibm.icu.text;resolution:=optional,",
                "+              com.parso;resolution:=optional,",
                "               com.sleepycat.je;resolution:=optional,"
            ],
            "changed_files": [
                "tika-bundle/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.19",
                "1.19.1",
                "1.19.1-rc1",
                "1.20",
                "1.21",
                "1.22",
                "1.23",
                "1.23-rc1",
                "1.24",
                "1.24.1",
                "1.25",
                "1.26",
                "1.27",
                "1.28",
                "1.28-rc2",
                "1.28-rc3",
                "1.28.1",
                "1.28.1-rc1",
                "1.28.2",
                "1.28.3",
                "1.28.3-rc1",
                "1.28.4",
                "1.28.5",
                "tika-1.28.2-rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6744383d71eaa99aff8b590110aac51967806d13",
            "repository": "https://github.com/apache/tika",
            "timestamp": 1505837943,
            "hunks": 1,
            "message": "added mimetype definition for WordPerfect 4.2,based on Philip Storry's trID magic pattern",
            "diff": [
                "diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "index 7078d7b92..ef54e9905 100644",
                "--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml",
                "@@ -2727,2 +2727,10 @@",
                "   <!-- TODO: figure out how to identify earlier versions -->",
                "+  <mime-type type=\"application/vnd.wordperfect;version=4.2\">",
                "+    <sub-class-of type=\"application/vnd.wordperfect\"/>",
                "+    <magic priority=\"50\">",
                "+      <match value=\"0xCB0A01\" type=\"string\" offset=\"0\">",
                "+        <match value=\"0xCB\" type=\"string\" offset=\"5\"/>",
                "+      </match>",
                "+    </magic>",
                "+  </mime-type>",
                "   <mime-type type=\"application/vnd.wordperfect;version=5.0\">"
            ],
            "changed_files": [
                "tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.0",
                "2.0.0-ALPHA",
                "2.0.0-ALPHA-rc1",
                "2.0.0-BETA",
                "2.1.0",
                "2.1.0-rc2",
                "2.2.0",
                "2.2.1",
                "2.2.1-rc1",
                "2.2.1-rc2",
                "2.2.1-rc3",
                "2.3.0",
                "2.3.0-rc1",
                "2.4.0",
                "2.4.0-rc1",
                "2.4.1",
                "2.5.0",
                "2.6.0",
                "2.7.0",
                "2.8.0",
                "2.9.0",
                "2.9.1",
                "2.9.2",
                "3.0.0-BETA",
                "tika-2.1.0-rc1"
            ],
            "matched_rules": []
        }
    ]
}
