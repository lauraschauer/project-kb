{
    "advisory_record": {
        "cve_id": "CVE-2018-17175",
        "description": "In the marshmallow library before 2.15.1 and 3.x before 3.0.0b9 for Python, the schema \"only\" option treats an empty list as implying no \"only\" option, which allows a request that was intended to expose no fields to instead expose all fields (if the schema is being filtered dynamically using the \"only\" option, and there is a user role that produces an empty value for \"only\").",
        "reserved_timestamp": 1664755200,
        "published_timestamp": 1664814131,
        "updated_timestamp": 1664814131,
        "repository_url": null,
        "references": {
            "": 254,
            "https://github.com/marshmallow-code/marshmallow/issues/772": 9,
            "https://github.com/marshmallow-code/marshmallow/pull/782": 7,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 6,
            "https://github.com/marshmallow-code/marshmallow/pull/777": 5,
            "commit::d5d9cb22dda6f39117f6f9497a6a66813cb8c64f": 4,
            "https://github.com/features/actions": 3,
            "https://github.com/features/packages": 3,
            "https://github.com/features/security": 3,
            "https://github.com/features/codespaces": 3,
            "https://github.com/features/copilot": 3,
            "https://github.com/features/code-review": 3,
            "https://github.com/features/issues": 3,
            "https://github.com/features/discussions": 3,
            "https://github.com/features": 3,
            "https://docs.github.com": 3,
            "https://skills.github.com": 3,
            "https://github.blog": 3,
            "https://github.com/enterprise": 3,
            "https://github.com/team": 3,
            "https://github.com/enterprise/startups": 3,
            "https://github.com/solutions/industries/healthcare": 3,
            "https://github.com/solutions/industries/financial-services": 3,
            "https://github.com/solutions/industries/manufacturing": 3,
            "https://github.com/solutions/ci-cd": 3,
            "https://github.com/solutions/devops": 3,
            "https://github.com/solutions/devsecops": 3,
            "https://resources.github.com/learn/pathways": 3,
            "https://resources.github.com": 3,
            "https://github.com/customer-stories": 3,
            "https://partner.github.com": 3,
            "https://github.com/readme": 3,
            "https://github.com/topics": 3,
            "https://github.com/trending": 3,
            "https://github.com/collections": 3,
            "https://github.com/enterprise/advanced-security": 3,
            "https://github.com/pricing": 3,
            "https://docs.github.com/terms": 3,
            "https://docs.github.com/privacy": 3,
            "https://github.com/lafrech": 3,
            "https://github.com": 3,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 3,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 3,
            "https://github.com/security": 3,
            "https://www.githubstatus.com/": 3,
            "https://docs.github.com/": 3,
            "https://support.github.com?tags=dotcom-footer": 3,
            "commit::98f2b4759c9a7c7ac5e790727d47f2b328520713": 3,
            "commit::d85f7de72a5da66ab5515686acb9c1074996e640": 3,
            "https://github.co/hiddenchars": 2,
            "https://github.com/marshmallow-code/marshmallow/pull/771": 2,
            "https://github.com/marshmallow-code/marshmallow/issues/535": 2,
            "https://github.com/marshmallow-code/marshmallow/issues/772#issuecomment-380975300": 1,
            "https://github.com/sloria": 1,
            "https://github.com/marshmallow-code/marshmallow/pull/782#event-1595453203": 1,
            "https://github.com/advisories/GHSA-9q2p-fj49-vpxj": 1,
            "http://cve.circl.lu/cve/CVE-2018-17175": 1
        },
        "affected_products": [
            "n/a",
            "Python",
            "schema"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [],
        "keywords": [
            "python",
            "imply",
            "filter",
            "produce",
            "treat",
            "library",
            "intend",
            "request",
            "expose",
            "field",
            "value",
            "list",
            "marshmallow",
            "schema",
            "role",
            "option",
            "allow",
            "user"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "98f2b4759c9a7c7ac5e790727d47f2b328520713",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524150040,
            "hunks": 4,
            "message": "Don't serialize any field if only is empty. Fixes #772",
            "diff": [
                "diff --git a/marshmallow/schema.py b/marshmallow/schema.py",
                "index 5c059cc..3abff1f 100644",
                "--- a/marshmallow/schema.py",
                "+++ b/marshmallow/schema.py",
                "@@ -330,3 +330,3 @@ class BaseSchema(base.SchemaABC):",
                "-    def __init__(self, extra=None, only=(), exclude=(), prefix='', strict=None,",
                "+    def __init__(self, extra=None, only=None, exclude=(), prefix='', strict=None,",
                "                  many=False, context=None, load_only=(), dump_only=(),",
                "@@ -706,3 +706,3 @@ class BaseSchema(base.SchemaABC):",
                "         \"\"\"Apply then flatten nested schema options\"\"\"",
                "-        if self.only:",
                "+        if self.only is not None:",
                "             # Apply the only option to nested fields.",
                "@@ -739,3 +739,3 @@ class BaseSchema(base.SchemaABC):",
                "         \"\"\"Update fields based on the passed in object.\"\"\"",
                "-        if self.only:",
                "+        if self.only is not None:",
                "             # Return only fields specified in only option",
                "diff --git a/tests/test_schema.py b/tests/test_schema.py",
                "index 73be706..5530b40 100755",
                "--- a/tests/test_schema.py",
                "+++ b/tests/test_schema.py",
                "@@ -1068,2 +1068,8 @@ def test_only_bounded_by_fields():",
                "+def test_only_empty():",
                "+    class MySchema(Schema):",
                "+        foo = fields.Field()",
                "+",
                "+    sch = MySchema(only=())",
                "+    assert 'foo' not in sch.dump({'foo': 'bar'})"
            ],
            "changed_files": [
                "marshmallow/schema.py",
                "tests/test_schema.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "772": "Nested excludes get overwritten #728 Docs: BaseSchema docstring improvements #771 Fix #772 Empty Only Treated as None #777 fix \"only\" with Relationship fields using marshmallow 2.15.1 marshmallow-code/marshmallow-jsonapi#101 Bump marshmallow requirement version to >=2.15.2 marshmallow-code/webargs#299"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.1",
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 772",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 3 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: field",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: schema",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 772",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d5d9cb22dda6f39117f6f9497a6a66813cb8c64f",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524707924,
            "hunks": 0,
            "message": "Merge pull request #782 from Nobatek/dev_2x_772_only_empty Fix #772 Empty Only Treated as None / 2.x-line",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "782": "Fix #772 Empty Only Treated as None #777",
                "772": "Nested excludes get overwritten #728 Docs: BaseSchema docstring improvements #771 Fix #772 Empty Only Treated as None #777 fix \"only\" with Relationship fields using marshmallow 2.15.1 marshmallow-code/marshmallow-jsonapi#101 Bump marshmallow requirement version to >=2.15.2 marshmallow-code/webargs#299"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.1",
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 782, 772",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 4 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, treat",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 782, 772",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "09df7fac47dd5745c2df68e40979dad7cd5e4def",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1523475897,
            "hunks": 2,
            "message": "Remove unused **kwargs argument from BaseSchema.dump() Closes #729",
            "diff": [
                "diff --git a/marshmallow/schema.py b/marshmallow/schema.py",
                "index 1bb7ec4..2ba554a 100644",
                "--- a/marshmallow/schema.py",
                "+++ b/marshmallow/schema.py",
                "@@ -374,3 +374,3 @@ class BaseSchema(base.SchemaABC):",
                "-    def dump(self, obj, many=None, update_fields=True, **kwargs):",
                "+    def dump(self, obj, many=None, update_fields=True):",
                "         \"\"\"Serialize an object to native Python data types according to this",
                "@@ -426,4 +426,3 @@ class BaseSchema(base.SchemaABC):",
                "                     dict_class=self.dict_class,",
                "-                    index_errors=self.opts.index_errors,",
                "-                    **kwargs",
                "+                    index_errors=self.opts.index_errors",
                "                 )"
            ],
            "changed_files": [
                "marshmallow/schema.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "729": "Remove unused **kwargs argument from BaseSchema.dump() #769"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: schema",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: schema",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 729",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e849fd83d7e9820f493fb263b62e7abe3e228973",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524150615,
            "hunks": 4,
            "message": "Docs: BaseSchema docstring reword",
            "diff": [
                "diff --git a/marshmallow/schema.py b/marshmallow/schema.py",
                "index 3abff1f..a6110c3 100644",
                "--- a/marshmallow/schema.py",
                "+++ b/marshmallow/schema.py",
                "@@ -4,3 +4,3 @@ from __future__ import absolute_import, unicode_literals",
                "-from collections import defaultdict, Mapping",
                "+from collections import defaultdict, Mapping, namedtuple",
                " import copy",
                "@@ -12,3 +12,2 @@ import uuid",
                " import warnings",
                "-from collections import namedtuple",
                " import functools",
                "@@ -243,6 +242,8 @@ class BaseSchema(base.SchemaABC):",
                "     :param dict extra: A dict of extra attributes to bind to the serialized result.",
                "-    :param tuple only: A list or tuple of fields to serialize. If `None`, all",
                "-        fields will be serialized. Nested fields can be represented with dot delimiters.",
                "-    :param tuple exclude: A list or tuple of fields to exclude from the",
                "-        serialized result. Nested fields can be represented with dot delimiters.",
                "+    :param tuple|list only: Whitelist of fields to select when instantiating the Schema.",
                "+        If None, all fields are used.",
                "+        Nested fields can be represented with dot delimiters.",
                "+    :param tuple|list exclude: Blacklist of fields to exclude when instantiating the Schema.",
                "+        If a field appears in both `only` and `exclude`, it is not used.",
                "+        Nested fields can be represented with dot delimiters.",
                "     :param str prefix: Optional prefix that will be prepended to all the",
                "@@ -255,5 +256,4 @@ class BaseSchema(base.SchemaABC):",
                "         :class:`fields.Function` fields.",
                "-    :param tuple load_only: A list or tuple of fields to skip during serialization",
                "-    :param tuple dump_only: A list or tuple of fields to skip during",
                "-        deserialization, read-only fields",
                "+    :param tuple|list load_only: Fields to skip during serialization (write-only fields)",
                "+    :param tuple|list dump_only: Fields to skip during deserialization (read-only fields)",
                "     :param bool|tuple partial: Whether to ignore missing fields. If its value"
            ],
            "changed_files": [
                "marshmallow/schema.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.1",
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: schema",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: schema",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "343c9e36042f0d1349a0ea656e3c439d43b10268",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524733672,
            "hunks": 19,
            "message": "Don't instantiate Marshaller and Unmarshaller in Schema.__init__() Sharing those structures between concurrent dump/load raises concurrency issues.",
            "diff": [
                "diff --git a/marshmallow/schema.py b/marshmallow/schema.py",
                "index a6110c3..e279e98 100644",
                "--- a/marshmallow/schema.py",
                "+++ b/marshmallow/schema.py",
                "@@ -346,8 +346,2 @@ class BaseSchema(base.SchemaABC):",
                "         self.fields = self.dict_class()",
                "-        #: Callable marshalling object",
                "-        self._marshal = marshalling.Marshaller(",
                "-            prefix=self.prefix",
                "-        )",
                "-        #: Callable unmarshalling object",
                "-        self._unmarshal = marshalling.Unmarshaller()",
                "         if extra:",
                "@@ -472,2 +466,4 @@ class BaseSchema(base.SchemaABC):",
                "         \"\"\"",
                "+        # Callable marshalling object",
                "+        marshal = marshalling.Marshaller(prefix=self.prefix)",
                "         errors = {}",
                "@@ -504,3 +500,3 @@ class BaseSchema(base.SchemaABC):",
                "             try:",
                "-                preresult = self._marshal(",
                "+                preresult = marshal(",
                "                     processed_obj,",
                "@@ -515,3 +511,3 @@ class BaseSchema(base.SchemaABC):",
                "             except ValidationError as error:",
                "-                errors = self._marshal.errors",
                "+                errors = marshal.errors",
                "                 preresult = error.data",
                "@@ -535,6 +531,6 @@ class BaseSchema(base.SchemaABC):",
                "                 errors,",
                "-                field_names=self._marshal.error_field_names,",
                "-                fields=self._marshal.error_fields,",
                "+                field_names=marshal.error_field_names,",
                "+                fields=marshal.error_fields,",
                "                 data=obj,",
                "-                **self._marshal.error_kwargs",
                "+                **marshal.error_kwargs",
                "             )",
                "@@ -638,2 +634,4 @@ class BaseSchema(base.SchemaABC):",
                "         \"\"\"",
                "+        # Callable unmarshalling object",
                "+        unmarshal = marshalling.Unmarshaller()",
                "         errors = {}",
                "@@ -653,3 +651,3 @@ class BaseSchema(base.SchemaABC):",
                "             try:",
                "-                result = self._unmarshal(",
                "+                result = unmarshal(",
                "                     processed_data,",
                "@@ -663,4 +661,4 @@ class BaseSchema(base.SchemaABC):",
                "                 result = error.data",
                "-            self._invoke_field_validators(data=result, many=many)",
                "-            errors = self._unmarshal.errors",
                "+            self._invoke_field_validators(unmarshal, data=result, many=many)",
                "+            errors = unmarshal.errors",
                "             field_errors = bool(errors)",
                "@@ -668,4 +666,4 @@ class BaseSchema(base.SchemaABC):",
                "             try:",
                "-                self._invoke_validators(pass_many=True, data=result, original_data=data, many=many,",
                "-                                        field_errors=field_errors)",
                "+                self._invoke_validators(unmarshal, pass_many=True, data=result, original_data=data,",
                "+                                        many=many, field_errors=field_errors)",
                "             except ValidationError as err:",
                "@@ -673,4 +671,4 @@ class BaseSchema(base.SchemaABC):",
                "             try:",
                "-                self._invoke_validators(pass_many=False, data=result, original_data=data, many=many,",
                "-                                        field_errors=field_errors)",
                "+                self._invoke_validators(unmarshal, pass_many=False, data=result, original_data=data,",
                "+                                        many=many, field_errors=field_errors)",
                "             except ValidationError as err:",
                "@@ -693,6 +691,6 @@ class BaseSchema(base.SchemaABC):",
                "                 errors,",
                "-                field_names=self._unmarshal.error_field_names,",
                "-                fields=self._unmarshal.error_fields,",
                "+                field_names=unmarshal.error_field_names,",
                "+                fields=unmarshal.error_fields,",
                "                 data=data,",
                "-                **self._unmarshal.error_kwargs",
                "+                **unmarshal.error_kwargs",
                "             )",
                "@@ -860,3 +858,3 @@ class BaseSchema(base.SchemaABC):",
                "-    def _invoke_field_validators(self, data, many):",
                "+    def _invoke_field_validators(self, unmarshal, data, many):",
                "         for attr_name in self.__processors__[(VALIDATES, False)]:",
                "@@ -880,3 +878,3 @@ class BaseSchema(base.SchemaABC):",
                "                     else:",
                "-                        validated_value = self._unmarshal.call_and_store(",
                "+                        validated_value = unmarshal.call_and_store(",
                "                             getter_func=validator,",
                "@@ -895,3 +893,3 @@ class BaseSchema(base.SchemaABC):",
                "                 else:",
                "-                    validated_value = self._unmarshal.call_and_store(",
                "+                    validated_value = unmarshal.call_and_store(",
                "                         getter_func=validator,",
                "@@ -904,3 +902,4 @@ class BaseSchema(base.SchemaABC):",
                "-    def _invoke_validators(self, pass_many, data, original_data, many, field_errors=False):",
                "+    def _invoke_validators(",
                "+            self, unmarshal, pass_many, data, original_data, many, field_errors=False):",
                "         errors = {}",
                "@@ -920,5 +919,5 @@ class BaseSchema(base.SchemaABC):",
                "                     try:",
                "-                        self._unmarshal.run_validator(validator,",
                "-                                                  item, original_data, self.fields, many=many,",
                "-                                                  index=idx, pass_original=pass_original)",
                "+                        unmarshal.run_validator(validator,",
                "+                                                item, original_data, self.fields, many=many,",
                "+                                                index=idx, pass_original=pass_original)",
                "                     except ValidationError as err:",
                "@@ -927,5 +926,5 @@ class BaseSchema(base.SchemaABC):",
                "                 try:",
                "-                    self._unmarshal.run_validator(validator,",
                "-                                              data, original_data, self.fields, many=many,",
                "-                                              pass_original=pass_original)",
                "+                    unmarshal.run_validator(validator,",
                "+                                            data, original_data, self.fields, many=many,",
                "+                                            pass_original=pass_original)",
                "                 except ValidationError as err:"
            ],
            "changed_files": [
                "marshmallow/schema.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: schema",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: schema",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "feede12e256724b835b590ca6926e9b3c2a5a478",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1523498745,
            "hunks": 0,
            "message": "Merge pull request #768 from nicktimko/dev Fix localhost link to upgrade guide",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "768": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 768",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0e6162399a5c2d57d9bc13979b82064527ab45d2",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1523498859,
            "hunks": 0,
            "message": "Merge pull request #769 from Nobatek/dev_729_remove_dump_kwargs Remove unused **kwargs argument from BaseSchema.dump()",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "769": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, schema",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 769",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3b41221d88a0b461e6369bbdcf7673dcc1f1ae70",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1525247886,
            "hunks": 2,
            "message": "Remove Number.serialize and check as_string in Number._serialize Fixes #788.",
            "diff": [
                "diff --git a/marshmallow/fields.py b/marshmallow/fields.py",
                "index 0a2fef6..1d26c8f 100755",
                "--- a/marshmallow/fields.py",
                "+++ b/marshmallow/fields.py",
                "@@ -664,11 +664,2 @@ class Number(Field):",
                "-    def serialize(self, attr, obj, accessor=None):",
                "-        \"\"\"Pulls the value for the given key from the object and returns the",
                "-        serialized number representation. Return a string if `self.as_string=True`,",
                "-        othewise return this field's `num_type`. Receives the same `args` and `kwargs`",
                "-        as `Field`.",
                "-        \"\"\"",
                "-        ret = Field.serialize(self, attr, obj, accessor=accessor)",
                "-        return self._to_string(ret) if (self.as_string and ret not in (None, missing_)) else ret",
                "-",
                "     def _to_string(self, value):",
                "@@ -677,3 +668,5 @@ class Number(Field):",
                "     def _serialize(self, value, attr, obj):",
                "-        return self._validated(value)",
                "+        \"\"\"Return a string if `self.as_string=True`, otherwise return this field's `num_type`.\"\"\"",
                "+        ret = self._validated(value)",
                "+        return self._to_string(ret) if (self.as_string and ret not in (None, missing_)) else ret"
            ],
            "changed_files": [
                "marshmallow/fields.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "788": "Remove Number.serialize and check as_string in Number._serialize #789 Remove Number.serialize and check as_string in Number._serialize #790 Refactor Field.serialize() #799"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: field",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 788",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1781e9a18895aa9b473fb5587de3cf922416733e",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524709675,
            "hunks": 1,
            "message": "Bump version and update changelog",
            "diff": [
                "diff --git a/marshmallow/__init__.py b/marshmallow/__init__.py",
                "index 0628c44..0819a04 100644",
                "--- a/marshmallow/__init__.py",
                "+++ b/marshmallow/__init__.py",
                "@@ -12,3 +12,3 @@ from marshmallow.exceptions import ValidationError",
                "-__version__ = '3.0.0b8'",
                "+__version__ = '3.0.0b9'",
                " __author__ = 'Steven Loria'"
            ],
            "changed_files": [
                "marshmallow/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "251bff399786ad827d22c59f1cf4a49cc9aa9afe"
                ]
            ],
            "tags": [
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "90ff67a4a09650e597518fcd95bb9be5cc6ed718",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524736841,
            "hunks": 3,
            "message": "Remove ErrorStore.reset_errors This is not needed anymore since Marshaller/Unmarshaller are instantiated for each dump/load.",
            "diff": [
                "diff --git a/marshmallow/marshalling.py b/marshmallow/marshalling.py",
                "index f59dfce..9fcae40 100644",
                "--- a/marshmallow/marshalling.py",
                "+++ b/marshmallow/marshalling.py",
                "@@ -40,8 +40,2 @@ class ErrorStore(object):",
                "-    def reset_errors(self):",
                "-        self.errors = {}",
                "-        self.error_field_names = []",
                "-        self.error_fields = []",
                "-        self.error_kwargs = {}",
                "-",
                "     def get_errors(self, index=None):",
                "@@ -115,5 +109,2 @@ class Marshaller(ErrorStore):",
                "         \"\"\"",
                "-        # Reset errors dict if not serializing a collection",
                "-        if not self._pending:",
                "-            self.reset_errors()",
                "         if many and obj is not None:",
                "@@ -230,5 +221,2 @@ class Unmarshaller(ErrorStore):",
                "         \"\"\"",
                "-        # Reset errors if not deserializing a collection",
                "-        if not self._pending:",
                "-            self.reset_errors()",
                "         if many and data is not None:"
            ],
            "changed_files": [
                "marshmallow/marshalling.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.15.2",
                "2.15.3",
                "2.15.4",
                "2.15.5",
                "2.15.6",
                "2.16.0",
                "2.16.1",
                "2.16.2",
                "2.16.3",
                "2.17.0",
                "2.18.0",
                "2.18.1",
                "2.19.0",
                "2.19.1",
                "2.19.2",
                "2.19.3",
                "2.19.4",
                "2.19.5",
                "2.20.0",
                "2.20.1",
                "2.20.2",
                "2.20.3",
                "2.20.4",
                "2.20.5",
                "2.21.0",
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "888c8dc91aea7b36afe66fb76ee84090904caea0",
            "repository": "https://github.com/marshmallow-code/marshmallow",
            "timestamp": 1524709452,
            "hunks": 9,
            "message": "Merge branch '2.x-line' into dev",
            "diff": [
                "diff --cc CHANGELOG.rst",
                "index 65879f8,a537239..1c9314f",
                "--- a/CHANGELOG.rst",
                "+++ b/CHANGELOG.rst",
                "@@@ -3,185 -3,11 +3,198 @@@ Changelo",
                " +3.0.0b9 (unreleased)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- *Backwards-incompatible*: ``missing`` and ``default`` values are",
                " +  passed in deserialized form (:issue:`378`). Thanks :user:`chadrik` for",
                " +  the suggestion and thanks :user:`lafrech` for the PR.",
                " +",
                "++Bug fixes:",
                "++",
                "++- Includes the bugfix from 2.15.1.",
                "++",
                " +3.0.0b8 (2018-03-24)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- *Backwards-incompatible*: Add ``data_key`` parameter to fields for",
                " +  specifying the key in the input and output data dict. This",
                " +  parameter replaces both ``load_from`` and ``dump_to`` (:issue:`717`).",
                " +  Thanks :user:`lafrech`.",
                " +- *Backwards-incompatible*: When `pass_original=True` is passed to one",
                " +  of the decorators and a collection is being (de)serialized, the",
                " +  `original_data` argument will be a single object unless",
                " +  `pass_many=True` is also passed to the decorator (:issue:`315`,",
                " +  :issue:`743`). Thanks :user:`stj` for the PR.",
                " +- *Backwards-incompatible*: Don't recursively check nested required",
                " +  fields when the Nested field's key is missing (:issue:`319`). This",
                " +  reverts :issue:`235`. Thanks :user:`chekunkov` reporting and thanks",
                " +  :user:`lafrech` for the PR.",
                " +- *Backwards-incompatible*: Change error message collection for `Dict` field (:issue:`730`). Note:",
                " +  this is backwards-incompatible with previous 3.0.0bX versions.",
                " +  Thanks :user:`shabble` for the report and thanks :user:`lafrech` for the PR.",
                " +",
                " +3.0.0b7 (2018-02-03)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- *Backwards-incompatible*: Schemas are always strict (:issue:`377`).",
                " +  The ``strict`` parameter is removed.",
                " +- *Backwards-incompatible*: `Schema().load` and `Schema().dump` return ``data`` instead of a",
                " +  ``(data, errors)`` duple (:issue:`598`).",
                " +- *Backwards-incomaptible*: `Schema().load(None)` raises a",
                " +  `ValidationError` (:issue:`511`).",
                " +",
                " +See :ref:`upgrading_3_0` for a guide on updating your code.",
                " +",
                " +Thanks :user:`lafrech` for implementing these changes.",
                " +Special thanks to :user:`MichalKononenko`, :user:`douglas-treadwell`, and",
                " +:user:`maximkulkin` for the discussions on these changes.",
                " +",
                " +",
                " +Other changes:",
                " +",
                " +- *Backwards-incompatible*: Field name is not checked when ``load_from``",
                " +  is specified (:issue:`714`). Thanks :user:`lafrech`.",
                " +",
                " +Support:",
                " +",
                " +- Add `Code of Conduct <http://marshmallow.readthedocs.io/en/dev/code_of_conduct.html>`_.",
                " +",
                " +",
                " +3.0.0b6 (2018-01-02)",
                " +++++++++++++++++++++",
                " +",
                " +Bug fixes:",
                " +",
                " +- Fixes `ValidationError.valid_data` when a nested field contains errors",
                " +  (:issue:`710`). This bug was introduced in 3.0.0b3. Thanks",
                " +  :user:`lafrech`.",
                " +",
                " +Other changes:",
                " +",
                " +- *Backwards-incompatible*: ``Email`` and ``URL`` fields don't validate",
                " +  on serialization (:issue:`608`). This makes them more consistent with the other",
                " +  fields and improves serialization performance. Thanks again :user:`lafrech`.",
                " +- ``validate.URL`` requires square brackets around IPv6 URLs (:issue:`707`). Thanks :user:`harlov`.",
                " +",
                " +3.0.0b5 (2017-12-30)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- Add support for structured dictionaries by providing values and keys arguments to the",
                " +  ``Dict`` field's constructor. This mirrors the ``List``",
                " +  field's ability to validate its items (:issue:`483`). Thanks :user:`deckar01`.",
                " +",
                " +Other changes:",
                " +",
                " +- *Backwards-incompatible*: ``utils.from_iso`` is deprecated in favor of",
                " +  ``utils.from_iso_datetime`` (:issue:`694`). Thanks :user:`sklarsa`.",
                " +",
                " +3.0.0b4 (2017-10-23)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- Add support for millisecond, minute, hour, and week precisions to",
                " +  ``fields.TimeDelta`` (:issue:`537`). Thanks :user:`Fedalto` for the",
                " +  suggestion and the PR.",
                " +- Includes features from release 2.14.0.",
                " +",
                " +",
                " +Support:",
                " +",
                " +- Copyright year in docs uses CHANGELOG.rst's modified date for",
                " +  reproducible builds (:issue:`679`). Thanks :user:`bmwiedemann`.",
                " +- Test against Python 3.6 in tox. Thanks :user:`Fedalto`.",
                " +- Fix typo in exception message (:issue:`659`). Thanks :user:`wonderbeyond`",
                " +  for reporting and thanks :user:`yoichi` for the PR.",
                " +",
                " +3.0.0b3 (2017-08-20)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- Add ``valid_data`` attribute to ``ValidationError``.",
                " +- Add ``strict`` parameter to ``Integer`` (:issue:`667`). Thanks",
                " +  :user:`yoichi`.",
                " +",
                " +Deprecations/Removals:",
                " +",
                " +- Deprecate ``json_module`` option in favor of ``render_module`` (:issue:`364`, :issue:`130`). Thanks :user:`justanr` for the suggestion.",
                " +",
                " +Bug fixes:",
                " +",
                " +- Includes bug fixes from releases 2.13.5 and 2.13.6.",
                " +- *Backwards-incompatible* : ``Number`` fields don't accept booleans as valid input (:issue:`623`). Thanks :user:`tuukkamustonen` for the suggestion and thanks :user:`rowillia` for the PR.",
                " +",
                " +Support:",
                " +",
                " +- Add benchmark script. Thanks :user:`rowillia`.",
                " +",
                " +3.0.0b2 (2017-03-19)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- Add ``truthy`` and ``falsy`` params to ``fields.Boolean`` (:issue:`580`). Thanks :user:`zwack` for the PR. Note: This is potentially a breaking change if your code passes the `default` parameter positionally. Pass `default` as a keyword argument instead, e.g. ``fields.Boolean(default=True)``.",
                " +",
                " +Other changes:",
                " +",
                " +- *Backwards-incompatible*: ``validate.ContainsOnly`` allows empty and duplicate values (:issue:`516`, :issue:`603`). Thanks :user:`maximkulkin` for the suggestion and thanks :user:`lafrech` for the PR.",
                " +",
                " +Bug fixes:",
                " +",
                " +- Includes bug fixes from release 2.13.4.",
                " +",
                " +3.0.0b1 (2017-03-10)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- ``fields.Nested`` respects ``only='field'`` when deserializing (:issue:`307`). Thanks :user:`erlingbo` for the suggestion and the PR.",
                " +- ``fields.Boolean`` parses ``\"on\"``/``\"off\"`` (:issue:`580`). Thanks :user:`marcellarius` for the suggestion.",
                " +",
                " +",
                " +Other changes:",
                " +",
                " +- Includes changes from release 2.13.2.",
                " +- *Backwards-incompatible*: ``skip_on_field_errors`` defaults to ``True`` for ``validates_schema`` (:issue:`352`).",
                " +",
                " +",
                " +3.0.0a1 (2017-02-26)",
                " +++++++++++++++++++++",
                " +",
                " +Features:",
                " +",
                " +- ``dump_only`` and ``load_only`` for ``Function`` and ``Method`` are set based on ``serialize`` and ``deserialize`` arguments (:issue:`328`).",
                " +",
                " +Other changes:",
                " +",
                " +- *Backwards-incompatible*: ``fields.Method`` and ``fields.Function`` no longer swallow ``AttributeErrors`` (:issue:`395`). Thanks :user:`bereal` for the suggestion.",
                " +- *Backwards-incompatible*: ``validators.Length`` is no longer a subclass of ``validators.Range`` (:issue:`458`). Thanks :user:`deckar01` for the catch and patch.",
                " +- *Backwards-incompatible*: ``utils.get_func_args`` no longer returns bound arguments. This is consistent with the behavior of ``inspect.signature``. This change prevents a DeprecationWarning on Python 3.5 (:issue:`415`, :issue:`479`). Thanks :user:`deckar01` for the PR.",
                " +- *Backwards-incompatible*: Change the signature of ``utils.get_value`` and ``Schema.get_attribute`` for consistency with Python builtins (e.g. ``getattr``) (:issue:`341`). Thanks :user:`stas` for reporting and thanks :user:`deckar01` for the PR.",
                " +- *Backwards-incompatible*: Don't unconditionally call callable attributes (:issue:`430`, reverts :issue:`242`). Thanks :user:`mirko` for the suggestion.",
                " +- Drop support for Python 2.6 and 3.3.",
                " +",
                " +Deprecation/Removals:",
                " +",
                " +- Remove ``__error_handler__``, ``__accessor__``, ``@Schema.error_handler``, and ``@Schema.accessor``. Override ``Schema.handle_error`` and ``Schema.get_attribute`` instead.",
                " +- Remove ``func`` parameter of ``fields.Function``. Remove ``method_name`` parameter of ``fields.Method`` (issue:`325`). Use the ``serialize`` parameter instead.",
                " +- Remove ``extra`` parameter from ``Schema``. Use a ``@post_dump`` method to add additional data.",
                " +",
                "+ 2.15.1 (2018-04-25)",
                "+ +++++++++++++++++++",
                "+ ",
                "+ Bug fixes:",
                "+ ",
                "+ - Fix behavior when an empty list is passed as the ``only`` argument",
                "+   (:issue:`772`). Thanks :user:`deckar01` for reporting and thanks",
                "+   :user:`lafrech` for the fix.",
                "+ ",
                "  2.15.0 (2017-12-02)",
                "diff --cc marshmallow/schema.py",
                "index 2ba554a,a6110c3..a094d1b",
                "--- a/marshmallow/schema.py",
                "+++ b/marshmallow/schema.py",
                "@@@ -4,3 -4,3 +4,4 @@@ from __future__ import absolute_import",
                "- from collections import defaultdict, Mapping",
                " -from collections import defaultdict, Mapping, namedtuple",
                "++from collections import defaultdict, Mapping, OrderedDict",
                "++import functools",
                "  import copy",
                "@@@ -12,4 -12,3 +13,2 @@@ import uui",
                "  import warnings",
                "- from collections import OrderedDict",
                "--import functools",
                "@@@ -233,6 -241,9 +232,8 @@@ class BaseSchema(base.SchemaABC)",
                "-     :param tuple only: A list or tuple of fields to serialize. If `None`, all",
                "-         fields will be serialized. Nested fields can be represented with dot delimiters.",
                "-     :param tuple exclude: A list or tuple of fields to exclude from the",
                "-         serialized result. Nested fields can be represented with dot delimiters.",
                " -    :param dict extra: A dict of extra attributes to bind to the serialized result.",
                "+     :param tuple|list only: Whitelist of fields to select when instantiating the Schema.",
                "+         If None, all fields are used.",
                "+         Nested fields can be represented with dot delimiters.",
                "+     :param tuple|list exclude: Blacklist of fields to exclude when instantiating the Schema.",
                "+         If a field appears in both `only` and `exclude`, it is not used.",
                "+         Nested fields can be represented with dot delimiters.",
                "      :param str prefix: Optional prefix that will be prepended to all the",
                "@@@ -312,4 -330,5 +312,4 @@@",
                "-     def __init__(self, only=(), exclude=(), prefix='', many=False,",
                " -    def __init__(self, extra=None, only=None, exclude=(), prefix='', strict=None,",
                " -                 many=False, context=None, load_only=(), dump_only=(),",
                " -                 partial=False):",
                "++    def __init__(self, only=None, exclude=(), prefix='', many=False,",
                " +                 context=None, load_only=(), dump_only=(), partial=False):",
                "          # copy declared fields from metaclass"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.0.0",
                "3.0.0b10",
                "3.0.0b11",
                "3.0.0b12",
                "3.0.0b13",
                "3.0.0b14",
                "3.0.0b15",
                "3.0.0b16",
                "3.0.0b17",
                "3.0.0b18",
                "3.0.0b19",
                "3.0.0b20",
                "3.0.0b9",
                "3.0.0rc1",
                "3.0.0rc2",
                "3.0.0rc3",
                "3.0.0rc4",
                "3.0.0rc5",
                "3.0.0rc6",
                "3.0.0rc7",
                "3.0.0rc8",
                "3.0.0rc9",
                "3.0.1",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.1.0",
                "3.1.1",
                "3.10.0",
                "3.11.0",
                "3.11.1",
                "3.12.0",
                "3.12.1",
                "3.12.2",
                "3.13.0",
                "3.14.0",
                "3.14.1",
                "3.15.0",
                "3.16.0",
                "3.17.0",
                "3.17.1",
                "3.18.0",
                "3.19.0",
                "3.2.0",
                "3.2.1",
                "3.2.2",
                "3.20.0",
                "3.20.1",
                "3.20.2",
                "3.21.0",
                "3.21.1",
                "3.21.2",
                "3.21.3",
                "3.3.0",
                "3.4.0",
                "3.5.0",
                "3.5.1",
                "3.5.2",
                "3.6.0",
                "3.6.1",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.9.0",
                "3.9.1"
            ],
            "matched_rules": []
        }
    ]
}
