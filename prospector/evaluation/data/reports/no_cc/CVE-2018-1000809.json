{
    "advisory_record": {
        "cve_id": "CVE-2018-1000809",
        "description": "privacyIDEA version 2.23.1 and earlier contains a Improper Input Validation vulnerability in token validation api that can result in Denial-of-Service. This attack appear to be exploitable via http request with user=<space>&pass= to /validate/check url. This vulnerability appears to have been fixed in 2.23.2.",
        "reserved_timestamp": 1536278400,
        "published_timestamp": 1664814119,
        "updated_timestamp": 1664814119,
        "repository_url": null,
        "references": {
            "": 64,
            "https://github.com/privacyidea/privacyidea/issues/1227": 4,
            "commit::a3edc09beffa2104f357fe24971ea3211ce40751": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "commit::189312a99b499fe405fd3df5dd03a6b19ba66d46": 2,
            "commit::d1dbc8529e6ea32fb5fea9a666a71627698bdf9d": 2,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://github.com/privacyidea/privacyidea/blob/aded3ad61a281412f761023430219f59debb4c96/privacyidea/lib/token.py#L2205": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1
        },
        "affected_products": [
            "Input",
            "Validation",
            "n/a",
            "Service",
            "Denial"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "privacyIDEA",
            "Denial-of-Service"
        ],
        "keywords": [
            "attack",
            "request",
            "contain",
            "input",
            "privacyidea",
            "appear",
            "http",
            "check",
            "denial",
            "vulnerability",
            "result",
            "version",
            "service",
            "validation"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "189312a99b499fe405fd3df5dd03a6b19ba66d46",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536314035,
            "hunks": 3,
            "message": "Add tests for user and serial input Fixes #1227",
            "diff": [
                "diff --git a/privacyidea/api/validate.py b/privacyidea/api/validate.py",
                "index 368ada606..7b29230dd 100644",
                "--- a/privacyidea/api/validate.py",
                "+++ b/privacyidea/api/validate.py",
                "@@ -166,2 +166,3 @@ def after_request(response):",
                " @validate_blueprint.route('/offlinerefill', methods=['POST'])",
                "+@check_user_or_serial_in_request(request)",
                " @event(\"validate_offlinerefill\", request, g)",
                "diff --git a/privacyidea/lib/decorators.py b/privacyidea/lib/decorators.py",
                "index d01c7479b..5bb7433eb 100644",
                "--- a/privacyidea/lib/decorators.py",
                "+++ b/privacyidea/lib/decorators.py",
                "@@ -86,6 +86,11 @@ class check_user_or_serial_in_request(object):",
                "         def check_user_or_serial_in_request_wrapper(*args, **kwds):",
                "-            user = self.request.all_data.get(\"user\")",
                "-            serial = self.request.all_data.get(\"serial\")",
                "+            user = self.request.all_data.get(\"user\", \"\").strip()",
                "+            serial = self.request.all_data.get(\"serial\", \"\").strip()",
                "             if not serial and not user:",
                "                 raise ParameterError(_(\"You need to specify a serial or a user.\"))",
                "+            if \"*\" in serial:",
                "+                raise ParameterError(_(\"Invalid serial number.\"))",
                "+            if \"%\" in user:",
                "+                raise ParameterError(_(\"Invalid user.\"))",
                "+",
                "             f_result = func(*args, **kwds)"
            ],
            "changed_files": [
                "privacyidea/api/validate.py",
                "privacyidea/lib/decorators.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1227": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 1227",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: input",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1227",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1dbc8529e6ea32fb5fea9a666a71627698bdf9d",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536315451,
            "hunks": 1,
            "message": "Add tests for invalid usernames and serial Closes #1227",
            "diff": [
                "diff --git a/tests/test_api_validate.py b/tests/test_api_validate.py",
                "index dbf015c4b..835722568 100644",
                "--- a/tests/test_api_validate.py",
                "+++ b/tests/test_api_validate.py",
                "@@ -2195,2 +2195,36 @@ class ValidateAPITestCase(MyTestCase):",
                "+    def test_01_check_invalid_input(self):",
                "+        # Empty username",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \" \",",
                "+                                                 \"pass\": \"\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            error_msg = result.get(\"error\").get(\"message\")",
                "+            self.assertEqual(\"ERR905: You need to specify a serial or a user.\", error_msg)",
                "+",
                "+        # wrong username",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"h%h\",",
                "+                                                 \"pass\": \"\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            error_msg = result.get(\"error\").get(\"message\")",
                "+            self.assertEqual(\"ERR905: Invalid user.\", error_msg)",
                "+",
                "+        # wrong serial",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"*\",",
                "+                                                 \"pass\": \"\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            error_msg = result.get(\"error\").get(\"message\")",
                "+            self.assertEqual(\"ERR905: Invalid serial number.\", error_msg)",
                "+"
            ],
            "changed_files": [
                "tests/test_api_validate.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1227": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 1227",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1227",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "aded3ad61a281412f761023430219f59debb4c96",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536223386,
            "hunks": 0,
            "message": "Merge pull request #1221 from privacyidea/branch-2.23 Branch 2.23",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1221": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 1 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1221",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a3edc09beffa2104f357fe24971ea3211ce40751",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536323636,
            "hunks": 0,
            "message": "Merge branch 'branch-2.23'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                }
            ]
        },
        {
            "commit_id": "f87a744e6a2026980aa8827682871490f162ff3e",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535726249,
            "hunks": 2,
            "message": "Update to CircleCI 2.0 from 1.0 Created a new configuration for CircleCI 2.0 since 1.0 will be disabled soon. Tried to mimic the original behaviour as close as possible using the new configuration. Currently we only build privacyIDEA using `setup.py` and `make builddeb-nosign` in order to catch failures in these steps. There is (currently) no test for functionality! Also the unit tests won't be run.",
            "diff": [
                "diff --git a/.circleci/config.yml b/.circleci/config.yml",
                "new file mode 100644",
                "index 000000000..cee6f5b35",
                "--- /dev/null",
                "+++ b/.circleci/config.yml",
                "@@ -0,0 +1,50 @@",
                "+version: 2",
                "+jobs:",
                "+  build:",
                "+    docker:",
                "+      # this is a debian based image but this shouldn't be a problem.",
                "+      - image: circleci/python:2.7-stretch",
                "+",
                "+    working_directory: ~/repo",
                "+",
                "+    steps:",
                "+      - checkout",
                "+      - run: git submodule sync",
                "+      - run: git submodule update --init",
                "+        # install some required packages for building ubuntu packages",
                "+      - run: sudo -u root apt-get install build-essential python-setuptools python-all devscripts lsb-release",
                "+",
                "+      # Download and cache dependencies",
                "+      - restore_cache:",
                "+          keys:",
                "+          - v1-dependencies-{{ checksum \"requirements.txt\" }}",
                "+          # fallback to using the latest cache if no exact match is found",
                "+          - v1-dependencies-",
                "+",
                "+      # Setup the Virtualenv for building/installing privacyidea",
                "+      # We won't use requirements.txt here since we build using setup.py",
                "+      - run:",
                "+          name: install dependencies",
                "+          command: |",
                "+            virtualenv venv",
                "+            . venv/bin/activate",
                "+            pip install sphinx mock sphinxcontrib-httpdomain",
                "+",
                "+      - save_cache:",
                "+          paths:",
                "+            - ./venv",
                "+          key: v1-dependencies-{{ checksum \"requirements.txt\" }}",
                "+",
                "+      # run builds (currently no tests in CircleCI)",
                "+      - run:",
                "+          name: run setup.py build",
                "+          command: |",
                "+            . venv/bin/activate",
                "+            python setup.py install",
                "+            make builddeb-nosign",
                "+",
                "+      - run:",
                "+          name: run ubuntu package build",
                "+          command: |",
                "+            . venv/bin/activate",
                "+            make builddeb-nosign",
                "diff --git a/circle.yml b/circle.yml",
                "deleted file mode 100644",
                "index 7dd826e8f..000000000",
                "--- a/circle.yml",
                "+++ /dev/null",
                "@@ -1,38 +0,0 @@",
                "-machine:",
                "-  environment:",
                "-    USE_SYSTEM_NUNIT_CONSOLE: 1",
                "-",
                "-dependencies:",
                "-  pre:",
                "-    - sudo apt-get update; sudo apt-get install python-sphinx python-all",
                "-    - git submodule init",
                "-    - git submodule update",
                "-#    - sudo add-apt-repository -y ppa:privacyidea/privacyidea",
                "-#    - sudo apt-get update",
                "-",
                "-test:",
                "-  override:",
                "-    - make builddeb-nosign",
                "-#    - sudo dpkg -i DEBUILD/privacyidea-apache*.deb",
                "-#    - sudo apt-get -f install",
                "-",
                "-#deployment:",
                "-#  staging:",
                "-#    branch: master",
                "-#    commands:",
                "-#      - \"[[ ! -s \\\"$(git rev-parse --git-dir)/shallow\\\" ]] || git fetch --unshallow\"",
                "-#      - git push git@heroku.com:privacyidea-test.git $CIRCLE_SHA1:refs/heads/master",
                "-#      - heroku pg:reset DATABASE_URL --confirm privacyidea-test",
                "-#      - heroku run python ./pi-manage createdb --app privacyidea-test",
                "-#      - heroku run --app privacyidea-test -- python ./pi-manage admin add -p 'Test1234!' admin",
                "-#      # Create default resolver",
                "-#      - heroku run --app privacyidea-test -- python ./pi-manage resolver create resolver1 passwdresolver /app/deploy/heroku/default-resolver",
                "-#      # Create default realm",
                "-#      - heroku run --app privacyidea-test -- python ./pi-manage realm create default resolver1",
                "-#      # Create local realm",
                "-#      - curl https://api.ghostinspector.com/v1/tests/556aadbe8607b44136a074eb/execute/?apiKey=7e4c446eb2fb14cb8db9d96bb9a3ad09245994c0",
                "-#      # User Token enroll",
                "-#      - curl https://api.ghostinspector.com/v1/tests/556abe5c02ab10dc4b06882f/execute/?apiKey=7e4c446eb2fb14cb8db9d96bb9a3ad09245994c0",
                "-#      # login with OTP at Web UI",
                "-#      - curl https://api.ghostinspector.com/v1/tests/5610681c7d9e5b2c0df9eda6/execute/?apiKey=7e4c446eb2fb14cb8db9d96bb9a3ad09245994c0",
                "-"
            ],
            "changed_files": [
                ".circleci/config.yml",
                "circle.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: privacyIDEA",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "1b8aafe3adf3877fd3e35dbcfd60d1b6362122ba",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536317752,
            "hunks": 0,
            "message": "Merge pull request #1223 from privacyidea/fix_build_for_ucs The debian base package for UCS must not strip some libs",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1223": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1223",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d26e5465b941b34f824ac6ed647b4cf7d6ae4488",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536317464,
            "hunks": 0,
            "message": "Merge pull request #1229 from privacyidea/1227/fix_empty_user 1227/fix empty user",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1229": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1229",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a645822a0a20b9b6d1b05b1e618cd52536644a31",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536675918,
            "hunks": 0,
            "message": "Merge pull request #1234 from privacyidea/1232/assign-token Only show limited assign-err message for user",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1234": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1234",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0b1fbd949398e7bc58e64460439c74224f6014f9",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535709554,
            "hunks": 0,
            "message": "Merge pull request #1207 from privacyidea/1206/pass_on_no_user Fix passOnNoUser with event handler",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1207": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1207",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "54107d574569a1d46546303eb73b23ac24928a5c",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536677736,
            "hunks": 0,
            "message": "Merge pull request #1236 from privacyidea/1144/otppin_in_wizard Add OTP PIN to Token wizard",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1236": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1236",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "521a4429313d810a3232342d527b22c0df2b8a52",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536184218,
            "hunks": 7,
            "message": "triggerchallenge only returns active tokens (#1219) * triggerchallenge only returns active tokens * Added review comments   removing unnecessary lines. If a response to a challenge is sent, we also check if the token, that sends the response is still active. Fixes #1217",
            "diff": [
                "diff --git a/privacyidea/api/validate.py b/privacyidea/api/validate.py",
                "index e7c5d1db8..368ada606 100644",
                "--- a/privacyidea/api/validate.py",
                "+++ b/privacyidea/api/validate.py",
                "@@ -542,3 +542,3 @@ def trigger_challenge():",
                "-    token_objs = get_tokens(serial=serial, user=user)",
                "+    token_objs = get_tokens(serial=serial, user=user, active=True, revoked=False, locked=False)",
                "     for token_obj in token_objs:",
                "diff --git a/privacyidea/lib/token.py b/privacyidea/lib/token.py",
                "index f64034470..25d24dafe 100644",
                "--- a/privacyidea/lib/token.py",
                "+++ b/privacyidea/lib/token.py",
                "@@ -2139,19 +2139,24 @@ def check_token_list(tokenobject_list, passw, user=None, options=None):",
                "                                                     options=options) >= 0:",
                "-                # OTP matches",
                "-                res = True",
                "-                tokenobject.inc_count_auth_success()",
                "-                reply_dict[\"message\"] = \"Found matching challenge\"",
                "                 reply_dict[\"serial\"] = tokenobject.token.serial",
                "-                tokenobject.challenge_janitor()",
                "-                # clean up all other challenges from other tokens. I.e.",
                "-                # all challenges with this very transaction_id!",
                "-                transaction_id = options.get(\"transaction_id\") or \\",
                "-                                 options.get(\"state\")",
                "-                Challenge.query.filter(Challenge.transaction_id == u'' +",
                "-                                       transaction_id).delete()",
                "-",
                "-                # Reset the fail counter of the challenge response token",
                "-                tokenobject.reset()",
                "-                # We have one successful authentication, so we bail out",
                "-                break",
                "+                if tokenobject.is_active():",
                "+                    # OTP matches",
                "+                    res = True",
                "+                    tokenobject.inc_count_auth_success()",
                "+                    reply_dict[\"message\"] = \"Found matching challenge\"",
                "+                    tokenobject.challenge_janitor()",
                "+                    # clean up all other challenges from other tokens. I.e.",
                "+                    # all challenges with this very transaction_id!",
                "+                    transaction_id = options.get(\"transaction_id\") or \\",
                "+                                     options.get(\"state\")",
                "+                    Challenge.query.filter(Challenge.transaction_id == u'' +",
                "+                                           transaction_id).delete()",
                "+",
                "+                    # Reset the fail counter of the challenge response token",
                "+                    tokenobject.reset()",
                "+                    # We have one successful authentication, so we bail out",
                "+                    break",
                "+                else:",
                "+                    reply_dict[\"message\"] = \"Challenge matches, but token is inactive.\"",
                "+                    log.info(\"Received a valid response to a \"",
                "+                             \"challenge for inactive token {0!s}\".format(tokenobject.token.serial))",
                "diff --git a/tests/base.py b/tests/base.py",
                "index f13d83f2e..fcae6cac4 100644",
                "--- a/tests/base.py",
                "+++ b/tests/base.py",
                "@@ -44,3 +44,3 @@ class MyTestCase(unittest.TestCase):",
                "-",
                "+    ",
                "     @classmethod",
                "diff --git a/tests/test_api_validate.py b/tests/test_api_validate.py",
                "index 8fafe5a4e..dbf015c4b 100644",
                "--- a/tests/test_api_validate.py",
                "+++ b/tests/test_api_validate.py",
                "@@ -12,3 +12,4 @@ from privacyidea.lib.config import (set_privacyidea_config, get_token_types,",
                " from privacyidea.lib.token import (get_tokens, init_token, remove_token,",
                "-                                   reset_token, enable_token, revoke_token)",
                "+                                   reset_token, enable_token, revoke_token,",
                "+                                   set_pin)",
                " from privacyidea.lib.policy import SCOPE, ACTION, set_policy, delete_policy",
                "@@ -319,3 +320,3 @@ class DisplayTANTestCase(MyTestCase):",
                "-class AAValidateOfflineTestCase(MyTestCase):",
                "+class AValidateOfflineTestCase(MyTestCase):",
                "     \"\"\"",
                "@@ -2193 +2194,133 @@ class ValidateAPITestCase(MyTestCase):",
                "         remove_token(\"CHAL4\")",
                "+",
                "+",
                "+class AChallengeResponse(MyTestCase):",
                "+",
                "+    serial = \"hotp1\"",
                "+    serial_email = \"email1\"",
                "+",
                "+    def setUp(self):",
                "+        MyTestCase.setUp(self)",
                "+        self.setUp_user_realms()",
                "+",
                "+    def test_01_challenge_response_token_deactivate(self):",
                "+        # New token for the user \"selfservice\"",
                "+        Token(\"hotp1\", \"hotp\", otpkey=self.otpkey, userid=1004, resolver=self.resolvername1,",
                "+              realm=self.realm1).save()",
                "+        # Define HOTP token to be challenge response",
                "+        set_policy(name=\"pol_cr\", scope=SCOPE.AUTH, action=\"{0!s}=hotp\".format(ACTION.CHALLENGERESPONSE))",
                "+        set_pin(self.serial, \"pin\")",
                "+",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": \"pin\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"status\"))",
                "+            self.assertFalse(data.get(\"result\").get(\"value\"))",
                "+            detail = data.get(\"detail\")",
                "+            self.assertTrue(\"enter otp\" in detail.get(\"message\"), detail.get(\"message\"))",
                "+            transaction_id = detail.get(\"transaction_id\")",
                "+",
                "+        # Now we try to provide the OTP value",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": self.valid_otp_values[0],",
                "+                                                 \"transaction_id\": transaction_id}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"value\"))",
                "+",
                "+        # Now we send the challenge and then we disable the token",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": \"pin\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"status\"))",
                "+            self.assertFalse(data.get(\"result\").get(\"value\"))",
                "+            detail = data.get(\"detail\")",
                "+            self.assertTrue(\"enter otp\" in detail.get(\"message\"), detail.get(\"message\"))",
                "+            transaction_id = detail.get(\"transaction_id\")",
                "+",
                "+        # disable the token",
                "+        enable_token(self.serial, False)",
                "+",
                "+        # Now we try to provide the OTP value, but authentication must fail, since the token is disabled",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": self.valid_otp_values[1],",
                "+                                                 \"transaction_id\": transaction_id}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertFalse(data.get(\"result\").get(\"value\"))",
                "+            detail = data.get(\"detail\")",
                "+            self.assertEqual(detail.get(\"message\"), \"Challenge matches, but token is inactive.\")",
                "+",
                "+        # The token is still disabled. We are checking, if we can do a challenge response",
                "+        # for a disabled token",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": \"pin\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"status\"))",
                "+            self.assertFalse(data.get(\"result\").get(\"value\"))",
                "+            detail = data.get(\"detail\")",
                "+            self.assertTrue(\"No active challenge response\" in detail.get(\"message\"), detail.get(\"message\"))",
                "+",
                "+    @smtpmock.activate",
                "+    def test_02_two_challenge_response_tokens(self):",
                "+        smtpmock.setdata(response={\"bla@example.com\": (200, 'OK')})",
                "+        # We test two challenge response tokens. One is active, one is disabled.",
                "+        # Enroll an Email-Token to the user",
                "+        init_token(user=User(\"selfservice\", self.realm1),",
                "+                   param={\"serial\": self.serial_email,",
                "+                          \"type\": \"email\",",
                "+                          \"email\": \"bla@example.com\",",
                "+                          \"otpkey\": self.otpkey})",
                "+        set_pin(self.serial_email, \"pin\")",
                "+",
                "+        toks = get_tokens(user=User(\"selfservice\", self.realm1))",
                "+        self.assertEqual(len(toks), 2)",
                "+        self.assertFalse(toks[0].token.active)",
                "+        self.assertTrue(toks[1].token.active)",
                "+",
                "+        # Now we create a challenge with two tokens",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\",",
                "+                                                 \"pass\": \"pin\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"status\"))",
                "+            self.assertFalse(data.get(\"result\").get(\"value\"))",
                "+            detail = data.get(\"detail\")",
                "+            # Only the email token is active and creates a challenge!",
                "+            self.assertEqual(u\"Enter the OTP from the Email:\", detail.get(\"message\"))",
                "+",
                "+        # Now test with triggerchallenge",
                "+        with self.app.test_request_context('/validate/triggerchallenge',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"selfservice\"},",
                "+                                           headers={\"Authorization\": self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertTrue(data.get(\"result\").get(\"status\"))",
                "+            # Triggerchallenge returns the numbers of tokens in the \"value",
                "+            self.assertEqual(data.get(\"result\").get(\"value\"), 1)",
                "+            detail = data.get(\"detail\")",
                "+            # Only the email token is active and creates a challenge!",
                "+            self.assertEqual(u\"Enter the OTP from the Email:\", detail.get(\"messages\")[0])",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "privacyidea/api/validate.py",
                "privacyidea/lib/token.py",
                "tests/base.py",
                "tests/test_api_validate.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1219": "",
                "1217": "triggerchallenge only returns active tokens #1219"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: check",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1219, 1217",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a5a78ba72d328ccd57b34ff7b4ba41d477e1fce3",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536661641,
            "hunks": 2,
            "message": "Add API tests to check that wildcards do not raise problems. Working on #1225",
            "diff": [
                "diff --git a/tests/test_api_token.py b/tests/test_api_token.py",
                "index e91056b24..14364c3ff 100644",
                "--- a/tests/test_api_token.py",
                "+++ b/tests/test_api_token.py",
                "@@ -1454,2 +1454,266 @@ class APITokenTestCase(MyTestCase):",
                "             self.assertEqual(result.get(\"status\"), False)",
                "-            self.assertEqual(result.get(\"error\").get(\"code\"), 905)",
                "\\ No newline at end of file",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 905)",
                "+",
                "+",
                "+class API00TokenPerformance(MyTestCase):",
                "+",
                "+    token_count = 21",
                "+",
                "+    def test_00_create_some_tokens(self):",
                "+        for i in range(0,self.token_count):",
                "+            init_token({\"genkey\": 1, \"serial\": \"perf{0!s:0>3}\".format(i)})",
                "+        toks = get_tokens(serial_wildcard=\"perf*\")",
                "+        self.assertEqual(len(toks), self.token_count)",
                "+",
                "+        for i in range(0,10):",
                "+            init_token({\"genkey\": 1, \"serial\": \"TOK{0!s:0>3}\".format(i)})",
                "+        toks = get_tokens(serial_wildcard=\"TOK*\")",
                "+        self.assertEqual(len(toks), 10)",
                "+",
                "+        self.setUp_user_realms()",
                "+",
                "+    def test_01_number_of_tokens(self):",
                "+        # The GET /token returns a wildcard 100 tokens",
                "+        with self.app.test_request_context('/token/',",
                "+                                           method='GET',",
                "+                                           data={\"serial\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            self.assertEqual(result.get(\"value\").get(\"count\"), self.token_count)",
                "+",
                "+    def test_02_several_requests(self):",
                "+        # Run GET challenges",
                "+        with self.app.test_request_context('/token/challenges/*',",
                "+                                           method='GET',",
                "+                                           data={\"serial\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            self.assertEqual(result.get(\"value\").get(\"count\"), 0)",
                "+",
                "+        # Run POST assign with a wildcard. This shall not assign.",
                "+        with self.app.test_request_context('/token/assign',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"cornelius\",",
                "+                                                 \"realm\": self.realm1,",
                "+                                                 \"serial\": \"perf*\",",
                "+                                                 \"pin\": \"test\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\"",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1102: no token found!\")",
                "+",
                "+        # run POST unassign with a wildcard. This shall not unassign",
                "+        from privacyidea.lib.token import assign_token, unassign_token",
                "+        assign_token(\"perf001\", User(\"cornelius\", self.realm1))",
                "+        with self.app.test_request_context('/token/unassign',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"perf*\",",
                "+                                                 \"pin\": \"test\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1102: no token found!\")",
                "+",
                "+        # Now we unassign the token anyways",
                "+        unassign_token(\"perf001\")",
                "+",
                "+        # run POST revoke with a wildcard",
                "+        with self.app.test_request_context('/token/revoke',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"perf*\",",
                "+                                                 \"pin\": \"test\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            # The number of revoked tokens is 0",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # run POST enable and disable with a wildcard",
                "+        with self.app.test_request_context('/token/disable',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        with self.app.test_request_context('/token/enable',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # run DELETE /token with a wildcard",
                "+        with self.app.test_request_context('/token/perf*',",
                "+                                           method='DELETE',",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # run reset failcounter",
                "+        with self.app.test_request_context('/token/reset/perf*',",
                "+                                           method='POST',",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # run reset failcounter",
                "+        with self.app.test_request_context('/token/resync/perf*',",
                "+                                           method='POST', data={\"otp1\": \"123454\",",
                "+                                                                \"otp2\": \"123454\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # Try to set pin",
                "+        with self.app.test_request_context('/token/setpin/perf*',",
                "+                                           method='POST', data={\"otpppin\": \"123454\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # Try to set description",
                "+        with self.app.test_request_context('/token/set/perf*',",
                "+                                           method='POST', data={\"description\": \"general token\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # Try to set realm",
                "+        with self.app.test_request_context('/token/realm/perf*',",
                "+                                           method='POST', data={\"realms\": self.realm1},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"value\"), 0)",
                "+",
                "+        # Try to copy the pin",
                "+        with self.app.test_request_context('/token/copypin',",
                "+                                           method='POST',",
                "+                                           data={\"from\": \"perf*\",",
                "+                                                 \"to\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 1016)",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1016: No unique token to copy from found\")",
                "+",
                "+        with self.app.test_request_context('/token/copypin',",
                "+                                           method='POST',",
                "+                                           data={\"from\": \"perf001\",",
                "+                                                 \"to\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 1017)",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1017: No unique token to copy to found\")",
                "+",
                "+        # Try to copy the user",
                "+        with self.app.test_request_context('/token/copyuser',",
                "+                                           method='POST',",
                "+                                           data={\"from\": \"perf*\",",
                "+                                                 \"to\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 1016)",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1016: No unique token to copy from found\")",
                "+",
                "+        # Try to copy the user",
                "+        with self.app.test_request_context('/token/copyuser',",
                "+                                           method='POST',",
                "+                                           data={\"from\": \"perf001\",",
                "+                                                 \"to\": \"perf*\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 1017)",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR1017: No unique token to copy to found\")",
                "+",
                "+",
                "+",
                "+        # Try to mark wildcard token as lost",
                "+        # Just to be clear, all tokens are assigned to the user cornelius",
                "+        for i in range(0,self.token_count):",
                "+            assign_token(\"perf{0!s:0>3}\".format(i), User(\"cornelius\", self.realm1))",
                "+",
                "+        with self.app.test_request_context('/token/lost/perf*',",
                "+                                           method='POST',",
                "+                                           data={},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 2012)",
                "+            self.assertEqual(result.get(\"error\").get(\"message\"), \"ERR2012: You can only define a lost token for an assigned token.\")",
                "+",
                "+        # unassign tokens again",
                "+        for i in range(0,self.token_count):",
                "+            unassign_token(\"perf{0!s:0>3}\".format(i))",
                "+",
                "+        # Try to set tokeninfo",
                "+        with self.app.test_request_context('/token/info/perf*/newkey',",
                "+                                           method='POST',",
                "+                                           data={\"value\": \"newvalue\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertFalse(result.get(\"value\"))",
                "+",
                "+            toks = get_tokens(tokeninfo={\"newkey\": \"newvalue\"})",
                "+            # No token reveived this value!",
                "+            self.assertEqual(len(toks), 0)",
                "+",
                "+        # Try to delete tokeninfo",
                "+        with self.app.test_request_context('/token/info/perf*/newkey',",
                "+                                           method='DELETE',",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            # Of course there is no exact token \"perf*\", it does not match perf001",
                "+            self.assertFalse(result.get(\"value\"))",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "tests/test_api_token.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1225": "get_tokens matches serial numbers exactly by default #1240"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: check",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1225",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dc365d6f594b687d39197a1a584adb9fd95437d9",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536134763,
            "hunks": 4,
            "message": "Add the detailed resolver list to privacyidea-diag The diagnostics file will also contain the configuration of the resolvers. The bindpw (ldapresolver) and password (sqlresolver) are filtered out. Closes #1213",
            "diff": [
                "diff --git a/pi-manage b/pi-manage",
                "index 6201ee232..664eacd44 100755",
                "--- a/pi-manage",
                "+++ b/pi-manage",
                "@@ -823,6 +823,7 @@ def create_internal(name):",
                "-@resolver_manager.command",
                "-def list():",
                "+@resolver_manager.option('-v', help=\"Verbose output - also print the configuration of the resolvers.\",",
                "+                         dest=\"verbose\", action=\"store_true\")",
                "+def list(verbose):",
                "     \"\"\"",
                "-    list the available resolvers and the type",
                "+    list the available resolvers and the type.",
                "     \"\"\"",
                "@@ -830,4 +831,16 @@ def list():",
                "     resolver_list = get_resolver_list()",
                "-    for name, resolver in resolver_list.iteritems():",
                "-        print(\"%16s - (%s)\" % (name, resolver.get(\"type\")))",
                "+",
                "+    if not verbose:",
                "+        for name, resolver in resolver_list.iteritems():",
                "+            print(\"{0!s:16} - ({1!s})\".format(name, resolver.get(\"type\")))",
                "+    else:",
                "+        for name, resolver in resolver_list.iteritems():",
                "+            print(\"{0!s:16} - ({1!s})\".format(name, resolver.get(\"type\")))",
                "+            print(\".\"*32)",
                "+            data = resolver.get(\"data\", {})",
                "+            for k, v in data.iteritems():",
                "+                if k.lower() in [\"bindpw\", \"password\"]:",
                "+                    v = \"xxxxx\"",
                "+                print(\"{0!s:>24}: {1!r}\".format(k, v))",
                "+            print(\"\")",
                "diff --git a/tools/privacyidea-diag b/tools/privacyidea-diag",
                "index 1a5ba1d17..57e1096ea 100755",
                "--- a/tools/privacyidea-diag",
                "+++ b/tools/privacyidea-diag",
                "@@ -98,3 +98,3 @@ pi_config() {",
                " \tlog \"---------\"",
                "-\tpi-manage resolver list >> $tempfile",
                "+\tpi-manage resolver list -v >> $tempfile",
                " \tlog \"Realms\""
            ],
            "changed_files": [
                "pi-manage",
                "tools/privacyidea-diag"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1213": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: contain",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1213",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4b8832dfa99d54d8c790cc3b682f08d9c23388fd",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536674112,
            "hunks": 0,
            "message": "Merge pull request #1230 from privacyidea/1228/image-in-qr-url Add IMAGE to Smartphone App",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1230": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1230",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "923de03c1bfd65817ebe0d4f884b6ca1c89c3e8b",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536221246,
            "hunks": 6,
            "message": "Set version 2.23.1",
            "diff": [
                "diff --git a/Changelog b/Changelog",
                "index 476cf944d..d04af0689 100644",
                "--- a/Changelog",
                "+++ b/Changelog",
                "@@ -1 +1,11 @@",
                "+Version 2.23.1, 2018-09-06",
                "+",
                "+  Fixes:",
                "+  * Fix PassOnNoUser in combination with event handler (#1206)",
                "+  * Fix loading of Event handler detail view (#1210)",
                "+  * Fix Challenge-Response login at Web UI (#1216)",
                "+  * Fix triggerchallenge to only use active tokens (#1217)",
                "+  * Write all installed package to diagnostics file and",
                "+    also write the resolver config in privacyidea-diag",
                "+",
                " Version 2.23, 2018-08-29",
                "diff --git a/Makefile b/Makefile",
                "index e9ad254b3..386933e54 100644",
                "--- a/Makefile",
                "+++ b/Makefile",
                "@@ -17,3 +17,3 @@ info:",
                " #VERSION=1.3~dev5",
                "-SHORT_VERSION=2.23",
                "+SHORT_VERSION=2.23.1",
                " #SHORT_VERSION=2.10~dev7",
                "diff --git a/deploy/debian-ubuntu/changelog b/deploy/debian-ubuntu/changelog",
                "index 2b6acfba3..ec2b040d4 100644",
                "--- a/deploy/debian-ubuntu/changelog",
                "+++ b/deploy/debian-ubuntu/changelog",
                "@@ -1 +1,13 @@",
                "+python-privacyidea (2.23.1-1trusty) trusty; urgency=medium",
                "+",
                "+  Fixes:",
                "+  * Fix PassOnNoUser in combination with event handler (#1206)",
                "+  * Fix loading of Event handler detail view (#1210)",
                "+  * Fix Challenge-Response login at Web UI (#1216)",
                "+  * Fix triggerchallenge to only use active tokens (#1217)",
                "+  * Write all installed package to diagnostics file and",
                "+    also write the resolver config in privacyidea-diag",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Thu, 06 Sep 2018 10:00:00 +0200",
                "+",
                " python-privacyidea (2.23-1trusty) trusty; urgency=medium",
                "diff --git a/deploy/debian-virtualenv/changelog b/deploy/debian-virtualenv/changelog",
                "index 2cc067295..e0c528015 100644",
                "--- a/deploy/debian-virtualenv/changelog",
                "+++ b/deploy/debian-virtualenv/changelog",
                "@@ -1 +1,13 @@",
                "+privacyidea-venv (2.23.1-1) jessie; urgency=medium",
                "+",
                "+  Fixes:",
                "+  * Fix PassOnNoUser in combination with event handler (#1206)",
                "+  * Fix loading of Event handler detail view (#1210)",
                "+  * Fix Challenge-Response login at Web UI (#1216)",
                "+  * Fix triggerchallenge to only use active tokens (#1217)",
                "+  * Write all installed package to diagnostics file and",
                "+    also write the resolver config in privacyidea-diag",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Thu, 06 Sep 2018 10:00:00 +0200",
                "+",
                " privacyidea-venv (2.23-1) jessie; urgency=medium",
                "diff --git a/doc/conf.py b/doc/conf.py",
                "index a7c795721..9a911f3ce 100644",
                "--- a/doc/conf.py",
                "+++ b/doc/conf.py",
                "@@ -19,3 +19,3 @@",
                " # The short X.Y version.",
                "-version = '2.23'",
                "+version = '2.23.1'",
                " # The full version, including alpha/beta/rc tags.",
                "diff --git a/setup.py b/setup.py",
                "index 452fee4ba..b025661a2 100644",
                "--- a/setup.py",
                "+++ b/setup.py",
                "@@ -7,3 +7,3 @@ import sys",
                " #VERSION=\"2.1dev4\"",
                "-VERSION=\"2.23\"",
                "+VERSION=\"2.23.1\""
            ],
            "changed_files": [
                "Changelog",
                "Makefile",
                "deploy/debian-ubuntu/changelog",
                "deploy/debian-virtualenv/changelog",
                "doc/conf.py",
                "setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4e462f957832003a3caa583483db8bf1023d3cff",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536318610,
            "hunks": 6,
            "message": "Set version to 2.23.2",
            "diff": [
                "diff --git a/Changelog b/Changelog",
                "index d04af0689..0f5d06d55 100644",
                "--- a/Changelog",
                "+++ b/Changelog",
                "@@ -1 +1,6 @@",
                "+Version 2.23.2, 2018-09-07",
                "+",
                "+  Fixes:",
                "+  * Fix problem with empty username (#1227)",
                "+",
                " Version 2.23.1, 2018-09-06",
                "diff --git a/Makefile b/Makefile",
                "index 386933e54..8b2efc351 100644",
                "--- a/Makefile",
                "+++ b/Makefile",
                "@@ -17,3 +17,3 @@ info:",
                " #VERSION=1.3~dev5",
                "-SHORT_VERSION=2.23.1",
                "+SHORT_VERSION=2.23.2",
                " #SHORT_VERSION=2.10~dev7",
                "diff --git a/deploy/debian-ubuntu/changelog b/deploy/debian-ubuntu/changelog",
                "index ec2b040d4..1a6b80166 100644",
                "--- a/deploy/debian-ubuntu/changelog",
                "+++ b/deploy/debian-ubuntu/changelog",
                "@@ -1 +1,8 @@",
                "+python-privacyidea (2.23.2-1trusty) trusty; urgency=medium",
                "+",
                "+  Fixes:",
                "+  * Fix problem with empty username (#1227)",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Fri, 07 Sep 2018 12:00:00 +0200",
                "+",
                " python-privacyidea (2.23.1-1trusty) trusty; urgency=medium",
                "diff --git a/deploy/debian-virtualenv/changelog b/deploy/debian-virtualenv/changelog",
                "index e0c528015..4f00056f2 100644",
                "--- a/deploy/debian-virtualenv/changelog",
                "+++ b/deploy/debian-virtualenv/changelog",
                "@@ -1 +1,8 @@",
                "+privacyidea-venv (2.23.2-1) jessie; urgency=medium",
                "+",
                "+  Fixes:",
                "+  * Fix problem with empty username (#1227)",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Fri, 07 Sep 2018 12:00:00 +0200",
                "+",
                " privacyidea-venv (2.23.1-1) jessie; urgency=medium",
                "diff --git a/doc/conf.py b/doc/conf.py",
                "index 9a911f3ce..9194c2785 100644",
                "--- a/doc/conf.py",
                "+++ b/doc/conf.py",
                "@@ -19,3 +19,3 @@",
                " # The short X.Y version.",
                "-version = '2.23.1'",
                "+version = '2.23.2'",
                " # The full version, including alpha/beta/rc tags.",
                "diff --git a/setup.py b/setup.py",
                "index b025661a2..9655278b4 100644",
                "--- a/setup.py",
                "+++ b/setup.py",
                "@@ -7,3 +7,3 @@ import sys",
                " #VERSION=\"2.1dev4\"",
                "-VERSION=\"2.23.1\"",
                "+VERSION=\"2.23.2\""
            ],
            "changed_files": [
                "Changelog",
                "Makefile",
                "deploy/debian-ubuntu/changelog",
                "deploy/debian-virtualenv/changelog",
                "doc/conf.py",
                "setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d34f58bbd8fc127a0b3933e9a929a8bfde2de700",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536317824,
            "hunks": 35,
            "message": "get_tokens matches serial numbers exactly by default This should solve a lot of performance issues, in which a request with a wildcard serial number loaded a list of all tokens into memory.",
            "diff": [
                "diff --git a/privacyidea/api/token.py b/privacyidea/api/token.py",
                "index 245cfd540..84f3638ba 100644",
                "--- a/privacyidea/api/token.py",
                "+++ b/privacyidea/api/token.py",
                "@@ -1025,3 +1025,3 @@ def get_serial_by_otp_api(otp=None):",
                "-    count = get_tokens(tokentype=ttype, serial=\"*{0!s}*\".format(",
                "+    count = get_tokens(tokentype=ttype, serial_wildcard=\"*{0!s}*\".format(",
                "             serial_substr), assigned=assigned, count=True)",
                "@@ -1029,3 +1029,3 @@ def get_serial_by_otp_api(otp=None):",
                "         tokenobj_list = get_tokens(tokentype=ttype,",
                "-                                   serial=\"*{0!s}*\".format(serial_substr),",
                "+                                   serial_wildcard=\"*{0!s}*\".format(serial_substr),",
                "                                    assigned=assigned)",
                "diff --git a/privacyidea/lib/decorators.py b/privacyidea/lib/decorators.py",
                "index 5bb7433eb..6d506ff6d 100644",
                "--- a/privacyidea/lib/decorators.py",
                "+++ b/privacyidea/lib/decorators.py",
                "@@ -109,4 +109,4 @@ def check_copy_serials(func):",
                "     def check_serial_wrapper(*args, **kwds):",
                "-        tokenobject_list_from = get_tokens(serial=args[0])",
                "-        tokenobject_list_to = get_tokens(serial=args[1])",
                "+        tokenobject_list_from = get_tokens(serial_wildcard=args[0])",
                "+        tokenobject_list_to = get_tokens(serial_wildcard=args[1])",
                "         if len(tokenobject_list_from) != 1:",
                "diff --git a/privacyidea/lib/token.py b/privacyidea/lib/token.py",
                "index 25d24dafe..8f4b73347 100644",
                "--- a/privacyidea/lib/token.py",
                "+++ b/privacyidea/lib/token.py",
                "@@ -137,3 +137,3 @@ def create_tokenclass_object(db_token):",
                " def _create_token_query(tokentype=None, realm=None, assigned=None, user=None,",
                "-                        serial=None, active=None, resolver=None,",
                "+                        serial_exact=None, serial_wildcard=None, active=None, resolver=None,",
                "                         rollout_state=None, description=None, revoked=None,",
                "@@ -207,11 +207,11 @@ def _create_token_query(tokentype=None, realm=None, assigned=None, user=None,",
                "-    if serial is not None and serial.strip(\"*\"):",
                "+    if serial_wildcard is not None and serial_wildcard.strip(\"*\"):",
                "         # filter for serial",
                "-        if \"*\" in serial:",
                "-            # match with \"like\"",
                "-            sql_query = sql_query.filter(Token.serial.like(serial.replace(",
                "-                \"*\", \"%\")))",
                "-        else:",
                "-            # exact match",
                "-            sql_query = sql_query.filter(Token.serial == serial)",
                "+        # match with \"like\"",
                "+        sql_query = sql_query.filter(Token.serial.like(serial_wildcard.replace(",
                "+            \"*\", \"%\")))",
                "+",
                "+    if serial_exact is not None:",
                "+        # exact match for serial",
                "+        sql_query = sql_query.filter(Token.serial == serial_exact)",
                "@@ -272,3 +272,3 @@ def _create_token_query(tokentype=None, realm=None, assigned=None, user=None,",
                " def get_tokens(tokentype=None, realm=None, assigned=None, user=None,",
                "-               serial=None, active=None, resolver=None, rollout_state=None,",
                "+               serial=None, serial_wildcard=None, active=None, resolver=None, rollout_state=None,",
                "                count=False, revoked=None, locked=None, tokeninfo=None,",
                "@@ -295,4 +295,6 @@ def get_tokens(tokentype=None, realm=None, assigned=None, user=None,",
                "     :type user: User Object",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The exact serial number of a token",
                "     :type serial: basestring",
                "+    :param serial_wildcard: A wildcard to match token serials",
                "+    :type serial_wildcard: basestring",
                "     :param active: Whether only active (True) or inactive (False) tokens",
                "@@ -325,4 +327,4 @@ def get_tokens(tokentype=None, realm=None, assigned=None, user=None,",
                "                                     assigned=assigned, user=user,",
                "-                                    serial=serial, active=active,",
                "-                                    resolver=resolver,",
                "+                                    serial_exact=serial, serial_wildcard=serial_wildcard,",
                "+                                    active=active, resolver=resolver,",
                "                                     rollout_state=rollout_state,",
                "@@ -367,3 +369,3 @@ def get_tokens_paginate(tokentype=None, realm=None, assigned=None, user=None,",
                "     :type user: User object",
                "-    :param serial:",
                "+    :param serial: a pattern for matching the serial",
                "     :param active:",
                "@@ -389,3 +391,3 @@ def get_tokens_paginate(tokentype=None, realm=None, assigned=None, user=None,",
                "                                 assigned=assigned, user=user,",
                "-                                serial=serial, active=active,",
                "+                                serial_wildcard=serial, active=active,",
                "                                 resolver=resolver,",
                "@@ -547,3 +549,3 @@ def token_exist(serial):",
                "     \"\"\"",
                "-    returns true if the token with the given serial number exists",
                "+    returns true if the token with the exact given serial number exists",
                "@@ -1017,3 +1019,3 @@ def remove_token(serial=None, user=None):",
                "     :type user: User object",
                "-    :param serial: The serial number of the token to delete",
                "+    :param serial: The serial number of the token to delete (exact)",
                "     :type serial: basestring",
                "@@ -1056,3 +1058,3 @@ def set_realms(serial, realms=None, add=False):",
                "-    :param serial: the serial number of the token",
                "+    :param serial: the serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1086,3 +1088,3 @@ def set_defaults(serial):",
                "     \"\"\"",
                "-    Set the default values for the token with the given serial number",
                "+    Set the default values for the token with the given serial number (exact)",
                "     :param serial: token serial",
                "@@ -1161,3 +1163,3 @@ def unassign_token(serial, user=None):",
                "-    :param serial: The serial number of the token to unassign",
                "+    :param serial: The serial number of the token to unassign (exact)",
                "     :return: True",
                "@@ -1218,3 +1220,3 @@ def reset_token(serial, user=None):",
                "     Reset the failcounter",
                "-    :param serial:",
                "+    :param serial: serial number (exact)",
                "     :param user:",
                "@@ -1245,3 +1247,3 @@ def set_pin(serial, pin, user=None, encrypt_pin=False):",
                "     :param serial: If the serial is specified, the PIN for this very token",
                "-    will be set.",
                "+    will be set. (exact)",
                "     :return: The number of PINs set (usually 1)",
                "@@ -1271,3 +1273,3 @@ def set_pin_user(serial, user_pin, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1294,3 +1296,3 @@ def set_pin_so(serial, so_pin, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1316,3 +1318,3 @@ def revoke_token(serial, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1389,3 +1391,3 @@ def set_otplen(serial, otplen=6, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1414,3 +1416,3 @@ def set_hashlib(serial, hashlib=\"sha1\", user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1447,3 +1449,3 @@ def set_count_auth(serial, count, user=None, max=False, success=False):",
                "     :type user: User object",
                "-    :param serial: The serial number of the one token to modifiy",
                "+    :param serial: The serial number of the one token to modifiy (exact)",
                "     :type serial: basestring",
                "@@ -1536,3 +1538,3 @@ def set_validity_period_start(serial, user, start):",
                "-    :param serial:",
                "+    :param serial: serial number (exact)",
                "     :param user:",
                "@@ -1554,3 +1556,3 @@ def set_validity_period_end(serial, user, end):",
                "-    :param serial:",
                "+    :param serial: serial number (exact)",
                "     :param user:",
                "@@ -1574,3 +1576,3 @@ def set_sync_window(serial, syncwindow=1000, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1599,3 +1601,3 @@ def set_count_window(serial, countwindow=10, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1623,3 +1625,3 @@ def set_description(serial, description, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "@@ -1647,3 +1649,3 @@ def set_failcounter(serial, counter, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :param counter: THe counter to which the fail counter should be set",
                "@@ -1668,3 +1670,3 @@ def set_max_failcount(serial, maxfail, user=None):",
                "-    :param serial: The serial number of the token",
                "+    :param serial: The serial number of the token (exact)",
                "     :type serial: basestring",
                "diff --git a/tests/test_lib_token.py b/tests/test_lib_token.py",
                "index 0dcac5685..8858ad72d 100644",
                "--- a/tests/test_lib_token.py",
                "+++ b/tests/test_lib_token.py",
                "@@ -175,2 +175,12 @@ class TokenTestCase(MyTestCase):",
                "+        # wildcard matches do not work for the ``serial`` parameter",
                "+        tokenobject_list = get_tokens(serial=\"hotptoke*\")",
                "+        self.assertEqual(len(tokenobject_list), 0)",
                "+        # get tokens with a wildcard serial",
                "+        tokenobject_list = get_tokens(serial_wildcard=\"SE*\")",
                "+        self.assertEqual(len(tokenobject_list), 3)",
                "+        # get all tokens",
                "+        tokenobject_list = get_tokens(serial_wildcard=\"*\")",
                "+        self.assertEqual(len(tokenobject_list), 4)",
                "+",
                "     def test_03_get_token_type(self):",
                "diff --git a/tools/privacyidea-get-serial b/tools/privacyidea-get-serial",
                "index 934af41c7..14c22ed86 100755",
                "--- a/tools/privacyidea-get-serial",
                "+++ b/tools/privacyidea-get-serial",
                "@@ -72,3 +72,3 @@ def byotp(otp=None, type=None, serial=\"\", window=10, unassigned=False,",
                "         assigned=None",
                "-    count = get_tokens(tokentype=type, serial=\"*{0!s}*\".format(",
                "+    count = get_tokens(tokentype=type, serial_wildcard=\"*{0!s}*\".format(",
                "             serial), assigned=assigned, count=True)",
                "@@ -77,3 +77,3 @@ def byotp(otp=None, type=None, serial=\"\", window=10, unassigned=False,",
                "     tokenobj_list = get_tokens(tokentype=type,",
                "-                               serial=\"*{0!s}*\".format(serial),",
                "+                               serial_wildcard=\"*{0!s}*\".format(serial),",
                "                                assigned=assigned)"
            ],
            "changed_files": [
                "privacyidea/api/token.py",
                "privacyidea/lib/decorators.py",
                "privacyidea/lib/token.py",
                "tests/test_lib_token.py",
                "tools/privacyidea-get-serial"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "43ce2d0a20f836046bed0d6cd62a81759df0f4a1",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535525409,
            "hunks": 6,
            "message": "Release version 2.23",
            "diff": [
                "diff --git a/Changelog b/Changelog",
                "index 5d2c9e7fe..476cf944d 100644",
                "--- a/Changelog",
                "+++ b/Changelog",
                "@@ -1,2 +1,2 @@",
                "-Version 2.23, 2018-08-XX",
                "+Version 2.23, 2018-08-29",
                "diff --git a/Makefile b/Makefile",
                "index c0fb44936..e9ad254b3 100644",
                "--- a/Makefile",
                "+++ b/Makefile",
                "@@ -17,3 +17,3 @@ info:",
                " #VERSION=1.3~dev5",
                "-SHORT_VERSION=2.23~dev8",
                "+SHORT_VERSION=2.23",
                " #SHORT_VERSION=2.10~dev7",
                "diff --git a/deploy/debian-ubuntu/changelog b/deploy/debian-ubuntu/changelog",
                "index 43184c6d2..2b6acfba3 100644",
                "--- a/deploy/debian-ubuntu/changelog",
                "+++ b/deploy/debian-ubuntu/changelog",
                "@@ -1 +1,67 @@",
                "+python-privacyidea (2.23-1trusty) trusty; urgency=medium",
                "+",
                "+  Features:",
                "+  * Add periodic tasks including a privacyidea-cron script. (#992) ",
                "+  * Add task module \"Simple Stats\" to generate time series of certain ",
                "+    important statistics values in privacyIDEA (#1105)",
                "+  * Add task module \"Event Counter\" that allows to create time series of ",
                "+    any arbitrary event. (#1029)",
                "+  * New token type: TAN list, that can also import a prefefined",
                "+    list of TANs (#1057)",
                "+  * Add Event Handler Pre-Handling, that e.g. allows for",
                "+    even more easy token enrollment concepts (#747)",
                "+",
                "+  Enhancements:",
                "+  * Improve performance by adding SQL pooling for SQL Audit ",
                "+    and SQL Resolvers. (#1167, #1140)",
                "+  * Improve SQL Resolver to also verify bcrypt-hash passwords (#1172)",
                "+  * Allow multiple WHERE conditions in SQL Resolver (#1039)",
                "+  * Allow objectGUID as loginname in LDAP resolver for better ",
                "+    ownCloud support (#1076)",
                "+  * Add command in pi-manage to dump audit log information (#1120)",
                "+  * Add script to allow generation of AES keys on HSM (#1159)",
                "+  * Improve recovery mechanism from a lost HSM connection (#1069)",
                "+  * Improve Debug Logging to hide passwords in SQL connect strings (#1162)",
                "+  * Add script for easy privacyIDEA standalone setup (#1093)",
                "+  * ldap3, pyasn1, croniter updated in Ubuntu Launchpad repo (#1085)",
                "+  * Add a script that easily gathers support and diagnostic information (#829)",
                "+  * Add event handler management to pi-manage (#1119)",
                "+  * Allow to customize the challenge text for challenge response tokens (#1096)",
                "+  * Add user information to OATH CSV token import file (#998)",
                "+  * Improve migration scripts from LinOTP to also update counter values (#1075)",
                "+  * Add priority to policies to avoid contradicting policies (#1031)",
                "+  * The token event handler now can delete tokeninfo (#988)",
                "+  * Make the import of OATH CSV token specific, so that each ",
                "+    tokentype can define its own import strategy (#1066)",
                "+  * The Event Counter module now allows to decrease the counter (#991)",
                "+  * Allow time deltas to also contain seconds (#1033)",
                "+",
                "+  Fixes:",
                "+  * Allow to use unicode passwords with non-ascii characters for the",
                "+    connect string in SQL Resolvers (#1181)",
                "+  * Fix problem that a wrong password hash was used, if user is created",
                "+    in SQL Resolver (#1114)",
                "+  * Fix performance issue with slow token listing (#1123)",
                "+  * Fix the QR code regeneration if the user already has the maximum number",
                "+    of allowed tokens (#1153)",
                "+  * Fix problem with privacyidea-pip-update in case of pip version 10 (#1128)",
                "+  * Fix problem if max_token_per_user was higher than 9 (#1117)",
                "+  * Fix hash algorithm in QR Code (#1088)",
                "+  * Set focus in username field in the login dialog (#205)",
                "+  * Fix disappearing scrollbar issue (#1020)",
                "+  * Fix import of SHA256 tokens (#1061)",
                "+  * Convert string values to unicode in the database model to ",
                "+    avoid misleading \"error\" messages (#1000)",
                "+  * Fix truncation of audit log in case of authentication failure (#1034)",
                "+  * Shorten audit information to fit into the database column (#1037)",
                "+  * Fix the RADIUS configuration test (#1042)",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Wed, 29 Aug 2018 09:00:00 +0200",
                "+",
                "+python-privacyidea (2.23~dev9-trusty) trusty; urgency=medium",
                "+",
                "+  Development release",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Tue, 28 Aug 2018 07:15:00 +0200",
                "+",
                " python-privacyidea (2.23~dev8-trusty) trusty; urgency=medium",
                "diff --git a/deploy/debian-virtualenv/changelog b/deploy/debian-virtualenv/changelog",
                "index a750bbbac..2cc067295 100644",
                "--- a/deploy/debian-virtualenv/changelog",
                "+++ b/deploy/debian-virtualenv/changelog",
                "@@ -1 +1,68 @@",
                "+privacyidea-venv (2.23-1) jessie; urgency=medium",
                "+",
                "+  Features:",
                "+  * Add periodic tasks including a privacyidea-cron script. (#992) ",
                "+  * Add task module \"Simple Stats\" to generate time series of certain ",
                "+    important statistics values in privacyIDEA (#1105)",
                "+  * Add task module \"Event Counter\" that allows to create time series of ",
                "+    any arbitrary event. (#1029)",
                "+  * New token type: TAN list, that can also import a prefefined",
                "+    list of TANs (#1057)",
                "+  * Add Event Handler Pre-Handling, that e.g. allows for",
                "+    even more easy token enrollment concepts (#747)",
                "+",
                "+  Enhancements:",
                "+  * Improve performance by adding SQL pooling for SQL Audit ",
                "+    and SQL Resolvers. (#1167, #1140)",
                "+  * Improve SQL Resolver to also verify bcrypt-hash passwords (#1172)",
                "+  * Allow multiple WHERE conditions in SQL Resolver (#1039)",
                "+  * Allow objectGUID as loginname in LDAP resolver for better ",
                "+    ownCloud support (#1076)",
                "+  * Add command in pi-manage to dump audit log information (#1120)",
                "+  * Add script to allow generation of AES keys on HSM (#1159)",
                "+  * Improve recovery mechanism from a lost HSM connection (#1069)",
                "+  * Improve Debug Logging to hide passwords in SQL connect strings (#1162)",
                "+  * Add script for easy privacyIDEA standalone setup (#1093)",
                "+  * ldap3, pyasn1, croniter updated in Ubuntu Launchpad repo (#1085)",
                "+  * Add a script that easily gathers support and diagnostic information (#829)",
                "+  * Add event handler management to pi-manage (#1119)",
                "+  * Allow to customize the challenge text for challenge response tokens (#1096)",
                "+  * Add user information to OATH CSV token import file (#998)",
                "+  * Improve migration scripts from LinOTP to also update counter values (#1075)",
                "+  * Add priority to policies to avoid contradicting policies (#1031)",
                "+  * The token event handler now can delete tokeninfo (#988)",
                "+  * Make the import of OATH CSV token specific, so that each ",
                "+    tokentype can define its own import strategy (#1066)",
                "+  * The Event Counter module now allows to decrease the counter (#991)",
                "+  * Allow time deltas to also contain seconds (#1033)",
                "+",
                "+  Fixes:",
                "+  * Allow to use unicode passwords with non-ascii characters for the",
                "+    connect string in SQL Resolvers (#1181)",
                "+  * Fix problem that a wrong password hash was used, if user is created",
                "+    in SQL Resolver (#1114)",
                "+  * Fix performance issue with slow token listing (#1123)",
                "+  * Fix the QR code regeneration if the user already has the maximum number",
                "+    of allowed tokens (#1153)",
                "+  * Fix problem with privacyidea-pip-update in case of pip version 10 (#1128)",
                "+  * Fix problem if max_token_per_user was higher than 9 (#1117)",
                "+  * Fix hash algorithm in QR Code (#1088)",
                "+  * Set focus in username field in the login dialog (#205)",
                "+  * Fix disappearing scrollbar issue (#1020)",
                "+  * Fix import of SHA256 tokens (#1061)",
                "+  * Convert string values to unicode in the database model to ",
                "+    avoid misleading \"error\" messages (#1000)",
                "+  * Fix truncation of audit log in case of authentication failure (#1034)",
                "+  * Shorten audit information to fit into the database column (#1037)",
                "+  * Fix the RADIUS configuration test (#1042)",
                "+",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Wed, 29 Aug 2018 09:00:00 +0200",
                "+",
                "+privacyidea-venv (2.23~dev9-1) jessie; urgency=medium",
                "+",
                "+  * Development version",
                "+",
                "+ -- Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>  Tue, 28 Aug 2018 07:30:00 +0200",
                "+",
                " privacyidea-venv (2.23~dev8-1) jessie; urgency=medium",
                "diff --git a/doc/conf.py b/doc/conf.py",
                "index 62c4f4d54..a7c795721 100644",
                "--- a/doc/conf.py",
                "+++ b/doc/conf.py",
                "@@ -19,3 +19,3 @@",
                " # The short X.Y version.",
                "-version = '2.22.1dev1'",
                "+version = '2.23'",
                " # The full version, including alpha/beta/rc tags.",
                "diff --git a/setup.py b/setup.py",
                "index 1ea8154a1..452fee4ba 100644",
                "--- a/setup.py",
                "+++ b/setup.py",
                "@@ -7,3 +7,3 @@ import sys",
                " #VERSION=\"2.1dev4\"",
                "-VERSION=\"2.23dev8\"",
                "+VERSION=\"2.23\""
            ],
            "changed_files": [
                "Changelog",
                "Makefile",
                "deploy/debian-ubuntu/changelog",
                "deploy/debian-virtualenv/changelog",
                "doc/conf.py",
                "setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23",
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e851d75aba9d1de194dc9b0e3ccd9ed3ba8b6232",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535643433,
            "hunks": 1,
            "message": "Add aditional check on error.details if not none type",
            "diff": [
                "diff --git a/privacyidea/api/before_after.py b/privacyidea/api/before_after.py",
                "index 1b5ec8652..9845f7ba7 100644",
                "--- a/privacyidea/api/before_after.py",
                "+++ b/privacyidea/api/before_after.py",
                "@@ -271,4 +271,5 @@ def auth_error(error):",
                "         if hasattr(error, 'details'):",
                "-            if 'message' in error.details:",
                "-                message = \"{}|{}\".format(error.description, error.details['message'])",
                "+            if error.details:",
                "+                if 'message' in error.details:",
                "+                    message = \"{}|{}\".format(error.description, error.details['message'])"
            ],
            "changed_files": [
                "privacyidea/api/before_after.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: check",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "50f8145712cfc59ab1eeacaa3b2ef925fc9b5c15",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535644032,
            "hunks": 2,
            "message": "Check also if description present",
            "diff": [
                "diff --git a/privacyidea/api/before_after.py b/privacyidea/api/before_after.py",
                "index 9845f7ba7..360044641 100644",
                "--- a/privacyidea/api/before_after.py",
                "+++ b/privacyidea/api/before_after.py",
                "@@ -268,3 +268,7 @@ def auth_error(error):",
                "     if \"audit_object\" in g:",
                "-        message = error.description",
                "+        message = ''",
                "+        description = ''",
                "+        ",
                "+        if hasattr(error, 'description'):",
                "+            description = error.description",
                "@@ -273,3 +277,3 @@ def auth_error(error):",
                "                 if 'message' in error.details:",
                "-                    message = \"{}|{}\".format(error.description, error.details['message'])",
                "+                    message = \"{}|{}\".format(description, error.details['message'])"
            ],
            "changed_files": [
                "privacyidea/api/before_after.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: check",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "42316a8cfcb0d77251d399ff5cc6741f1265b802",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536337342,
            "hunks": 5,
            "message": "Add IMAGE to Smartphone App Allow an image parameter to be configured for smartphon apps like FreeOTP. Closes #1228",
            "diff": [
                "diff --git a/privacyidea/api/lib/prepolicy.py b/privacyidea/api/lib/prepolicy.py",
                "index 59d6cb899..29f8cc865 100644",
                "--- a/privacyidea/api/lib/prepolicy.py",
                "+++ b/privacyidea/api/lib/prepolicy.py",
                "@@ -500,2 +500,12 @@ def init_tokenlabel(request=None, action=None):",
                "+    imageurl_pols = policy_object.get_action_values(action=ACTION.APPIMAGEURL,",
                "+                                                    scope=SCOPE.ENROLL,",
                "+                                                    user=user_object.login,",
                "+                                                    realm=user_object.realm,",
                "+                                                    client=g.client_ip,",
                "+                                                    unique=True,",
                "+                                                    allow_white_space_in_action=True)",
                "+    if len(imageurl_pols) == 1:",
                "+        request.all_data[\"appimageurl\"] = imageurl_pols[0]",
                "+",
                "     return True",
                "diff --git a/privacyidea/lib/policy.py b/privacyidea/lib/policy.py",
                "index 780c34fc7..0799d118d 100644",
                "--- a/privacyidea/lib/policy.py",
                "+++ b/privacyidea/lib/policy.py",
                "@@ -2,2 +2,4 @@",
                " #",
                "+#  2018-09-07 Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>",
                "+#             Add App Image URL",
                " #  2018-01-15 Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>",
                "@@ -200,2 +202,3 @@ class ACTION(object):",
                "     ASSIGN = \"assign\"",
                "+    APPIMAGEURL = \"appimageurl\"",
                "     AUDIT = \"auditlog\"",
                "@@ -1525,2 +1528,8 @@ def get_static_policy_definitions(scope=None):",
                "             },",
                "+            ACTION.APPIMAGEURL: {",
                "+                'type': 'str',",
                "+                'desc': _(\"This is the URL to the token image for smartphone apps \"",
                "+                          \"like FreeOTP.\"),",
                "+                'group': GROUP.TOKEN",
                "+            },",
                "             ACTION.AUTOASSIGN: {",
                "diff --git a/privacyidea/lib/tokens/hotptoken.py b/privacyidea/lib/tokens/hotptoken.py",
                "index 43434b327..13402b0f5 100644",
                "--- a/privacyidea/lib/tokens/hotptoken.py",
                "+++ b/privacyidea/lib/tokens/hotptoken.py",
                "@@ -219,2 +219,5 @@ class HotpTokenClass(TokenClass):",
                "             response_detail.update(twostep_parameters)",
                "+        imageurl = params.get(\"appimageurl\")",
                "+        if imageurl:",
                "+            extra_data.update({\"image\": imageurl})",
                "         if otpkey:"
            ],
            "changed_files": [
                "privacyidea/api/lib/prepolicy.py",
                "privacyidea/lib/policy.py",
                "privacyidea/lib/tokens/hotptoken.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1228": "Add IMAGE to Smartphone App #1230 Image in keyuri #3019"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1228",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "89afcbe860b33ef5eac33b4ed00e4c8bf6fe7bfa",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536133538,
            "hunks": 2,
            "message": "Write all packages to the diag file Working on #1213",
            "diff": [
                "diff --git a/tools/privacyidea-diag b/tools/privacyidea-diag",
                "index 7b0ea6b49..1a5ba1d17 100755",
                "--- a/tools/privacyidea-diag",
                "+++ b/tools/privacyidea-diag",
                "@@ -78,9 +78,7 @@ pi_versions() {",
                " \t# In case it is Ubuntu",
                "-\tdpkg -l >> $FileName",
                "+\tdpkg -l | sort >> $FileName",
                " \t# In case it is CentOS/RHEL",
                "-\trpm -qa >> $FileName",
                "-\tgrep privacyidea $FileName >> $tempfile",
                "-\tgrep apache $FileName >> $tempfile",
                "-\tgrep httpd $FileName >> $tempfile",
                "-\tgrep nginx $FileName >> $tempfile",
                "+\trpm -qa | sort >> $FileName",
                "+\t# save all installed packages",
                "+\tcat $FileName >> $tempfile\t",
                " \trm -f $FileName"
            ],
            "changed_files": [
                "tools/privacyidea-diag"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1213": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1213",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4c3238c3bdf1d852942f395186cf701b66b77fcf",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536248487,
            "hunks": 3,
            "message": "Optimization, if a destinct serial number is searched. Working on #1224",
            "diff": [
                "diff --git a/tools/privacyidea-token-janitor b/tools/privacyidea-token-janitor",
                "index 40996c2b3..35b1b15f1 100755",
                "--- a/tools/privacyidea-token-janitor",
                "+++ b/tools/privacyidea-token-janitor",
                "@@ -3,2 +3,4 @@",
                " #",
                "+# 2018-09-06 Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>",
                "+#            Optimize for search _one_ token",
                " # 2018-02-21 Cornelius K\u00c3\u00b6lbel <cornelius.koelbel@netknights.it>",
                "@@ -255,5 +257,12 @@ def _get_tokenlist(last_auth, assigned, active, tokeninfo_key,",
                "+    # First we check to get one token with a specific serial:",
                "     tokenobj_list = get_tokens(tokentype=tokentype,",
                "                                active=filter_active,",
                "-                               assigned=filter_assigned)",
                "+                               assigned=filter_assigned,",
                "+                               serial=serial)",
                "+    if len(tokenobj_list) == 0:",
                "+        # The serial number was not a destinct token serial, but obviously a reg exp:",
                "+        tokenobj_list = get_tokens(tokentype=tokentype,",
                "+                                   active=filter_active,",
                "+                                   assigned=filter_assigned)",
                "     for token_obj in tokenobj_list:"
            ],
            "changed_files": [
                "tools/privacyidea-token-janitor"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1224": "privacyidea-token-janitor delete action does not delete all matching tokens #1322"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1224",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a1793aa5e3012a8c0a76cb50b38c62101f4d4be9",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536042569,
            "hunks": 3,
            "message": "Fix loading of event handler detail view Fix #1210",
            "diff": [
                "diff --git a/privacyidea/static/components/config/controllers/eventController.js b/privacyidea/static/components/config/controllers/eventController.js",
                "index 929cc061e..7c914f9e8 100644",
                "--- a/privacyidea/static/components/config/controllers/eventController.js",
                "+++ b/privacyidea/static/components/config/controllers/eventController.js",
                "@@ -156,2 +156,5 @@ myApp.controller(\"eventDetailController\", function($scope, $stateParams,",
                "             //debug: console.log($scope.handlermodules );",
                "+            if ($scope.eventid) {",
                "+               $scope.getEvent();",
                "+            }",
                "         });",
                "@@ -257,5 +260,2 @@ myApp.controller(\"eventDetailController\", function($scope, $stateParams,",
                "     $scope.getHandlerModules();",
                "-    if ($scope.eventid) {",
                "-        $scope.getEvent();",
                "-    }",
                "diff --git a/privacyidea/static/components/config/views/config.events.details.html b/privacyidea/static/components/config/views/config.events.details.html",
                "index bde401010..b553678a8 100644",
                "--- a/privacyidea/static/components/config/views/config.events.details.html",
                "+++ b/privacyidea/static/components/config/views/config.events.details.html",
                "@@ -64,3 +64,3 @@",
                "                     ng-model=\"form.handlermodule\" required",
                "-                    ng-options=\"module for module in handlermodules\"",
                "+                    ng-options=\"handlermodule as handlermodule for handlermodule in handlermodules\"",
                "                     ng-change=\"handlerModuleChanged()\""
            ],
            "changed_files": [
                "privacyidea/static/components/config/controllers/eventController.js",
                "privacyidea/static/components/config/views/config.events.details.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1210": "Fix loading of event handler detail view #1211"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1210",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "abfba44e14aef0a5e54a1890ae2fa0085cf836bb",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536400105,
            "hunks": 5,
            "message": "Only show limited assign-err message for user If user assigns a token and the token already belongs to another user, only a limited error message is displayed. It does not tell to whom this token is already assigned. Closes #1232",
            "diff": [
                "diff --git a/privacyidea/api/token.py b/privacyidea/api/token.py",
                "index 245cfd540..f7a4da2f4 100644",
                "--- a/privacyidea/api/token.py",
                "+++ b/privacyidea/api/token.py",
                "@@ -424,3 +424,8 @@ def assign_api():",
                "     encrypt_pin = getParam(request.all_data, \"encryptpin\")",
                "-    res = assign_token(serial, user, pin=pin, encrypt_pin=encrypt_pin)",
                "+    if g.logged_in_user.get(\"role\") == \"user\":",
                "+        err_message = \"Token already assigned to another user.\"",
                "+    else:",
                "+        err_message = None",
                "+    res = assign_token(serial, user, pin=pin, encrypt_pin=encrypt_pin,",
                "+                       err_message=err_message)",
                "     g.audit_object.log({\"success\": True})",
                "diff --git a/privacyidea/lib/token.py b/privacyidea/lib/token.py",
                "index 25d24dafe..cd2518e6f 100644",
                "--- a/privacyidea/lib/token.py",
                "+++ b/privacyidea/lib/token.py",
                "@@ -1104,3 +1104,3 @@ def set_defaults(serial):",
                " @log_with(log)",
                "-def assign_token(serial, user, pin=None, encrypt_pin=False):",
                "+def assign_token(serial, user, pin=None, encrypt_pin=False, err_message=None):",
                "     \"\"\"",
                "@@ -1117,2 +1117,4 @@ def assign_token(serial, user, pin=None, encrypt_pin=False):",
                "     :type encrypt_pin: bool",
                "+    :param err_message: The error message, that is displayed in case the token is already assigned",
                "+    :type err_message: basestring",
                "@@ -1134,4 +1136,4 @@ def assign_token(serial, user, pin=None, encrypt_pin=False):",
                "         log.warning(\"token already assigned to user: {0!r}\".format(old_user))",
                "-        raise TokenAdminError(\"Token already assigned to user {0!r}\".format(",
                "-                              old_user), id=1103)",
                "+        err_message = err_message or \"Token already assigned to user {0!r}\".format(old_user)",
                "+        raise TokenAdminError(err_message, id=1103)",
                "diff --git a/tests/test_api_token.py b/tests/test_api_token.py",
                "index e91056b24..dbeffd476 100644",
                "--- a/tests/test_api_token.py",
                "+++ b/tests/test_api_token.py",
                "@@ -296,2 +296,29 @@ class APITokenTestCase(MyTestCase):",
                "             self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            error = result.get(\"error\")",
                "+            self.assertEqual(error.get(\"message\"), \"ERR1103: Token already assigned to user User(login=u'cornelius', \"",
                "+                                                   \"realm=u'realm1', resolver=u'resolver1')\")",
                "+",
                "+        # Now the user tries to assign a foreign token",
                "+        with self.app.test_request_context('/auth',",
                "+                                           method='POST',",
                "+                                           data={\"username\":",
                "+                                                     \"selfservice@realm1\",",
                "+                                                 \"password\": \"test\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            self.assertTrue(result.get(\"status\"), res.data)",
                "+            # In self.at_user we store the user token",
                "+            self.at_user = result.get(\"value\").get(\"token\")",
                "+",
                "+        with self.app.test_request_context('/token/assign',",
                "+                                           method='POST',",
                "+                                           data={\"serial\": \"S1\"},",
                "+                                           headers={'Authorization': self.at_user}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 400, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            error = result.get(\"error\")",
                "+            self.assertEqual(error.get(\"message\"), \"ERR1103: Token already assigned to another user.\")"
            ],
            "changed_files": [
                "privacyidea/api/token.py",
                "privacyidea/lib/token.py",
                "tests/test_api_token.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1232": "Only show limited assign-err message for user #1234"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1232",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b8fcca45caa091cea0cc9d0a4b3f70b8d9a73aeb",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535460271,
            "hunks": 4,
            "message": "Fix conditionals",
            "diff": [
                "diff --git a/privacyidea/static/components/token/controllers/tokenControllers.js b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "index 90e53dfc3..b3ec1cb4c 100644",
                "--- a/privacyidea/static/components/token/controllers/tokenControllers.js",
                "+++ b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "@@ -170,8 +170,5 @@ myApp.controller(\"tokenEnrollController\", function ($scope, TokenFactory,",
                "     $scope.qrCodeWidth = 250;",
                "-    if ($state.includes('token.wizard')) {",
                "+    if ($state.includes('token.wizard') && !$scope.show_seed) {",
                "         $scope.qrCodeWidth = 500;",
                "     }",
                "-    if ($state.includes('token.wizard') && $scope.show_seed) {",
                "-        $scope.qrCodeWidth = 250;",
                "-    }",
                "     $scope.checkRight = AuthFactory.checkRight;",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.hotp.html b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "index 99bf801a4..b6d9f1af6 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "@@ -5,3 +5,3 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') and !$scope.show_seed) || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') && !$scope.show_seed) || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.totp.html b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "index 99bf801a4..b6d9f1af6 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "@@ -5,3 +5,3 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') and !$scope.show_seed) || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') && !$scope.show_seed) || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">"
            ],
            "changed_files": [
                "privacyidea/static/components/token/controllers/tokenControllers.js",
                "privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "privacyidea/static/components/token/views/token.enrolled.totp.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3b0115745657a47612d2c708f954027e5e52c32f"
                ]
            ],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1aa70cae800bafffd4f672af55c6756fef39609",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536144782,
            "hunks": 6,
            "message": "Add \"details\" to response again, to allow challenge response in webui Fixes #1216",
            "diff": [
                "diff --git a/privacyidea/api/auth.py b/privacyidea/api/auth.py",
                "index 0a1339311..abe575a72 100644",
                "--- a/privacyidea/api/auth.py",
                "+++ b/privacyidea/api/auth.py",
                "@@ -260,3 +260,4 @@ def get_auth_token():",
                "         raise AuthError(_(\"Authentication failure. Wrong credentials\"),",
                "-                        id=ERROR.AUTHENTICATE_WRONG_CREDENTIALS)",
                "+                        id=ERROR.AUTHENTICATE_WRONG_CREDENTIALS,",
                "+                        details=details or {})",
                "     else:",
                "diff --git a/privacyidea/api/before_after.py b/privacyidea/api/before_after.py",
                "index ae553b07e..4d3ab8000 100644",
                "--- a/privacyidea/api/before_after.py",
                "+++ b/privacyidea/api/before_after.py",
                "@@ -271,3 +271,4 @@ def auth_error(error):",
                "     return send_error(error.message,",
                "-                      error_code=error.id), 401",
                "+                      error_code=error.id,",
                "+                      details=error.details), 401",
                "diff --git a/privacyidea/lib/error.py b/privacyidea/lib/error.py",
                "index 66adce724..68bff8303 100644",
                "--- a/privacyidea/lib/error.py",
                "+++ b/privacyidea/lib/error.py",
                "@@ -111,3 +111,4 @@ class SubscriptionError(privacyIDEAError):",
                " class AuthError(privacyIDEAError):",
                "-    def __init__(self, description, id=ERROR.AUTHENTICATE):",
                "+    def __init__(self, description, id=ERROR.AUTHENTICATE, details=None):",
                "+        self.details = details",
                "         privacyIDEAError.__init__(self, description=description, id=id)",
                "diff --git a/tests/base.py b/tests/base.py",
                "index f979ff681..f13d83f2e 100644",
                "--- a/tests/base.py",
                "+++ b/tests/base.py",
                "@@ -33,2 +33,13 @@ class MyTestCase(unittest.TestCase):",
                "     otpkey = \"3132333435363738393031323334353637383930\"",
                "+    valid_otp_values = [\"755224\",",
                "+                        \"287082\",",
                "+                        \"359152\",",
                "+                        \"969429\",",
                "+                        \"338314\",",
                "+                        \"254676\",",
                "+                        \"287922\",",
                "+                        \"162583\",",
                "+                        \"399871\",",
                "+                        \"520489\"]",
                "+",
                "diff --git a/tests/test_api_roles.py b/tests/test_api_roles.py",
                "index 6da8a8595..f8440cf8b 100644",
                "--- a/tests/test_api_roles.py",
                "+++ b/tests/test_api_roles.py",
                "@@ -147,2 +147,38 @@ class APIAuthTestCase(MyTestCase):",
                "+class APIAuthChallengeResponse(MyTestCase):",
                "+",
                "+    def setUp(self):",
                "+        self.setUp_user_realms()",
                "+        # New token for the user \"selfservice\"",
                "+        Token(\"hotp1\", \"hotp\", otpkey=self.otpkey, userid=1004, resolver=self.resolvername1,",
                "+              realm=self.realm1).save()",
                "+        # Define HOTP token to be challenge response",
                "+        set_policy(name=\"pol_cr\", scope=SCOPE.AUTH, action=\"{0!s}=hotp\".format(ACTION.CHALLENGERESPONSE))",
                "+        set_policy(name=\"webuilog\", scope=SCOPE.WEBUI, action=\"{0!s}=privacyIDEA\".format(ACTION.LOGINMODE))",
                "+        from privacyidea.lib.token import set_pin",
                "+        set_pin(\"hotp1\", \"pin\")",
                "+",
                "+    def test_01_challenge_response_at_webui(self):",
                "+        with self.app.test_request_context('/auth',",
                "+                                           method='POST',",
                "+                                           data={\"username\": \"selfservice\",",
                "+                                                 \"password\": \"pin\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 401, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertFalse(data.get(\"result\").get(\"status\"))",
                "+            detail = data.get(\"detail\")",
                "+            self.assertTrue(\"enter otp\" in detail.get(\"message\"), detail.get(\"message\"))",
                "+            transaction_id = detail.get(\"transaction_id\")",
                "+",
                "+        # Now we try to login with the OTP value",
                "+        with self.app.test_request_context('/auth',",
                "+                                           method='POST',",
                "+                                           data={\"username\": \"selfservice\",",
                "+                                                 \"password\": self.valid_otp_values[0],",
                "+                                                 \"transaction_id\": transaction_id}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            data = json.loads(res.data)",
                "+            self.assertEqual(data.get(\"result\").get(\"value\").get(\"username\"), \"selfservice\")",
                "@@ -576,3 +612,2 @@ class APISelfserviceTestCase(MyTestCase):",
                "-",
                "     def test_31_user_is_not_allowed_for_some_api_calls(self):"
            ],
            "changed_files": [
                "privacyidea/api/auth.py",
                "privacyidea/api/before_after.py",
                "privacyidea/lib/error.py",
                "tests/base.py",
                "tests/test_api_roles.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1216": "Add \"details\" to response again, #1218"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1216",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d20b0979d8e81a36de0192c3dceceb7aeb022b24",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536568219,
            "hunks": 3,
            "message": "Add OTP PIN to Token wizard If the user has a policy that requires a minimum OTP PIN length, the PIN entry dialog is also displayed in the token wizard. Closes #1144",
            "diff": [
                "diff --git a/privacyidea/static/components/login/controllers/loginControllers.js b/privacyidea/static/components/login/controllers/loginControllers.js",
                "index b9b16a7d4..70f4d97d4 100644",
                "--- a/privacyidea/static/components/login/controllers/loginControllers.js",
                "+++ b/privacyidea/static/components/login/controllers/loginControllers.js",
                "@@ -41,2 +41,3 @@ angular.module(\"privacyideaApp\")",
                "     $scope.checkRight = AuthFactory.checkRight;",
                "+    $scope.getRightsValue = AuthFactory.getRightsValue;",
                "     $scope.checkMainMenu = AuthFactory.checkMainMenu;",
                "diff --git a/privacyidea/static/components/login/factories/auth.js b/privacyidea/static/components/login/factories/auth.js",
                "index b1c212917..b14946eb6 100644",
                "--- a/privacyidea/static/components/login/factories/auth.js",
                "+++ b/privacyidea/static/components/login/factories/auth.js",
                "@@ -59,2 +59,16 @@ angular.module(\"privacyideaAuth\", [])",
                "             },",
                "+            getRightsValue: function (action) {",
                "+                // return the value of an action like otp_pin_minlength",
                "+                var res = false;",
                "+                user.rights.forEach(function(entry){",
                "+                    if (entry.indexOf(\"=\") >= 0) {",
                "+                        // this is a value action",
                "+                        var components = entry.split(\"=\");",
                "+                        if (components[0] === action) {",
                "+                            res = components[1];",
                "+                        }",
                "+                    }",
                "+                });",
                "+                return res;",
                "+            },",
                "             checkMainMenu: function (menu) {",
                "diff --git a/privacyidea/static/components/token/views/token.enroll.html b/privacyidea/static/components/token/views/token.enroll.html",
                "index cbc982936..fd1a94b23 100644",
                "--- a/privacyidea/static/components/token/views/token.enroll.html",
                "+++ b/privacyidea/static/components/token/views/token.enroll.html",
                "@@ -40,3 +40,3 @@",
                "              ng-if=\"loggedInUser.role == 'user' && !hidePin &&",
                "-                    !$state.includes('token.wizard') &&",
                "+                    (!$state.includes('token.wizard') || getRightsValue('otp_pin_minlength'))&&",
                "                     checkRight('enrollpin')\">"
            ],
            "changed_files": [
                "privacyidea/static/components/login/controllers/loginControllers.js",
                "privacyidea/static/components/login/factories/auth.js",
                "privacyidea/static/components/token/views/token.enroll.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1144": "Add OTP PIN to Token wizard #1236"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1144",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "babfa009c993f45bd32019d9b21e9a02c7c510fb",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535695473,
            "hunks": 3,
            "message": "Fix passOnNoUser with event handler If the PassOnNoUser policy was set and an event handler is defined, the authentication will fail with ERR904. Fix #1206",
            "diff": [
                "diff --git a/privacyidea/lib/eventhandler/base.py b/privacyidea/lib/eventhandler/base.py",
                "index 8bbd65eaa..480affc3f 100644",
                "--- a/privacyidea/lib/eventhandler/base.py",
                "+++ b/privacyidea/lib/eventhandler/base.py",
                "@@ -270,3 +270,5 @@ class BaseEventHandler(object):",
                "         except UserError as exx:",
                "-            if exx.id == 905:",
                "+            if exx.id in [904, 905]:",
                "+                # 904: User can not be found - maybe we got here due to PassOnNoUser",
                "+                # 905: This would be a parameter error - why is this here?",
                "                 user = User()",
                "diff --git a/tests/test_api_validate.py b/tests/test_api_validate.py",
                "index e2d26ec40..f1cba7294 100644",
                "--- a/tests/test_api_validate.py",
                "+++ b/tests/test_api_validate.py",
                "@@ -14,2 +14,4 @@ from privacyidea.lib.token import (get_tokens, init_token, remove_token,",
                " from privacyidea.lib.policy import SCOPE, ACTION, set_policy, delete_policy",
                "+from privacyidea.lib.event import set_event",
                "+from privacyidea.lib.event import delete_event",
                " from privacyidea.lib.error import ERROR",
                "@@ -1532,2 +1534,23 @@ class ValidateAPITestCase(MyTestCase):",
                "+        # Creating a notification event. The non-existing user must",
                "+        # still be able to pass!",
                "+        eid = set_event(\"notify\", event=[\"validate_check\"], action=\"sendmail\",",
                "+                  handlermodule=\"UserNotification\", conditions={\"token_locked\": True})",
                "+",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"doesNotExist\",",
                "+                                                 \"realm\": self.realm2,",
                "+                                                 \"pass\": pin}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            self.assertEqual(result.get(\"value\"), True)",
                "+            detail = json.loads(res.data).get(\"detail\")",
                "+            self.assertEqual(detail.get(\"message\"),",
                "+                             u\"user does not exist, accepted \"",
                "+                             u\"due to 'pass_no'\")",
                "+",
                "+        delete_event(eid)",
                "+",
                "         r = get_tokens(user=User(user, self.realm2), count=True)"
            ],
            "changed_files": [
                "privacyidea/lib/eventhandler/base.py",
                "tests/test_api_validate.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1206": "Fix passOnNoUser with event handler #1207"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1206",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2301cc656b6f27a69342bfdd13e2443112f7a7b7",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535121721,
            "hunks": 1,
            "message": "Change conditional",
            "diff": [
                "diff --git a/privacyidea/static/components/token/controllers/tokenControllers.js b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "index 5de55db6c..90e53dfc3 100644",
                "--- a/privacyidea/static/components/token/controllers/tokenControllers.js",
                "+++ b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "@@ -173,3 +173,3 @@ myApp.controller(\"tokenEnrollController\", function ($scope, TokenFactory,",
                "     }",
                "-    if ($state.includes('token.wizard') and $scope.show_seed) {",
                "+    if ($state.includes('token.wizard') && $scope.show_seed) {",
                "         $scope.qrCodeWidth = 250;"
            ],
            "changed_files": [
                "privacyidea/static/components/token/controllers/tokenControllers.js"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "869b49ac35102d369e781525324388d7940422a8",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535120816,
            "hunks": 1,
            "message": "Fix image width in case of show_seed",
            "diff": [
                "diff --git a/privacyidea/static/components/token/controllers/tokenControllers.js b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "index 0f526b615..5de55db6c 100644",
                "--- a/privacyidea/static/components/token/controllers/tokenControllers.js",
                "+++ b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "@@ -173,2 +173,5 @@ myApp.controller(\"tokenEnrollController\", function ($scope, TokenFactory,",
                "     }",
                "+    if ($state.includes('token.wizard') and $scope.show_seed) {",
                "+        $scope.qrCodeWidth = 250;",
                "+    }",
                "     $scope.checkRight = AuthFactory.checkRight;"
            ],
            "changed_files": [
                "privacyidea/static/components/token/controllers/tokenControllers.js"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "16c0d94f55f5c8318afd066eff6d3ca0cfbc78b7",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536565053,
            "hunks": 9,
            "message": "Move addition of b32 value of otp token out of cr_google exception block, fixing token view",
            "diff": [
                "diff --git a/privacyidea/lib/tokens/hotptoken.py b/privacyidea/lib/tokens/hotptoken.py",
                "index 99e046383..33ce49b2d 100644",
                "--- a/privacyidea/lib/tokens/hotptoken.py",
                "+++ b/privacyidea/lib/tokens/hotptoken.py",
                "@@ -223,2 +223,8 @@ class HotpTokenClass(TokenClass):",
                "             if user is not None:",
                "+                key_bin = binascii.unhexlify(otpkey)",
                "+                # also strip the padding =, as it will get problems with the google app.",
                "+                value_b32 = base64.b32encode(key_bin).strip('=')",
                "+                value_b32_str = \"{0!s}\".format(value_b32)",
                "+                response_detail[\"otpkey\"][\"value_b32\"] = value_b32_str",
                "+                ",
                "                 try:",
                "@@ -258,8 +264,2 @@ class HotpTokenClass(TokenClass):",
                "                                                   }",
                "-                                                 ",
                "-                    key_bin = binascii.unhexlify(otpkey)",
                "-                    # also strip the padding =, as it will get problems with the google app.",
                "-                    value_b32 = base64.b32encode(key_bin).strip('=')",
                "-                    value_b32_str = \"{0!s}\".format(value_b32)",
                "-                    response_detail[\"otpkey\"][\"value_b32\"] = value_b32_str",
                "                 except Exception as ex:  # pragma: no cover",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.hotp.html b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "index 4a5ea1b5a..f2466597a 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "@@ -5,4 +5,4 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"!show_seed || form['2stepinit']\">",
                "-        <accordion close-others=\"oneAtATime\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"form['2stepinit']\">",
                "+        <accordion close-others=\"oneAtATime\" ng-show=\"show_seed\">",
                "             <accordion-group heading=\"{{ 'The OTP key'|translate }}\">",
                "@@ -13,2 +13,3 @@",
                "+        <div class=\"col-sm-12\" ng-hide=\"$state.includes('token.wizard')\">",
                "         <p translate>",
                "@@ -26,2 +27,3 @@",
                "         </button>",
                "+        </div>",
                "     </div>",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.totp.html b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "index 23055e598..f2466597a 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "@@ -5,7 +5,7 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"!show_seed || form['2stepinit']\">",
                "-        <accordion close-others=\"oneAtATime\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"form['2stepinit']\">",
                "+        <accordion close-others=\"oneAtATime\" ng-show=\"show_seed\">",
                "             <accordion-group heading=\"{{ 'The OTP key'|translate }}\">",
                "-              Hex: {{ enrolledToken.otpkey.value }}",
                "-              Base32: {{ enrolledToken.otpkey.value_b32 }}",
                "+                Hex: {{ enrolledToken.otpkey.value }}",
                "+                Base32: {{ enrolledToken.otpkey.value_b32 }}",
                "             </accordion-group>",
                "@@ -13,2 +13,3 @@",
                "+        <div class=\"col-sm-12\" ng-hide=\"$state.includes('token.wizard')\">",
                "         <p translate>",
                "@@ -26,2 +27,3 @@",
                "         </button>",
                "+        </div>",
                "     </div>"
            ],
            "changed_files": [
                "privacyidea/lib/tokens/hotptoken.py",
                "privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "privacyidea/static/components/token/views/token.enrolled.totp.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1573f497422bf9291f6dcc579219dacb1ce4b061",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535456452,
            "hunks": 26,
            "message": "Show seed in human readable and by google authenticator acceptable form",
            "diff": [
                "diff --git a/privacyidea/lib/tokenclass.py b/privacyidea/lib/tokenclass.py",
                "index 1ef3cd7df..116f8032e 100644",
                "--- a/privacyidea/lib/tokenclass.py",
                "+++ b/privacyidea/lib/tokenclass.py",
                "@@ -61,3 +61,3 @@ It depends on lib.user and lib.config.",
                " The token object also contains a database token object as self.token.",
                "-The token object runs the self.update() method during the initialization ",
                "+The token object runs the self.update() method during the initialization",
                " process in the API /token/init.",
                "@@ -72,4 +72,4 @@ genkey      -> genkey=1 : privacyIDEA generates an OTPKey, creates the token",
                "                to the client and the clients needs to send back the second part.",
                "-               ",
                "-In case of 2stepinit the key is generated from the server_component and the ",
                "+",
                "+In case of 2stepinit the key is generated from the server_component and the",
                " client_component using the TokenClass method generate_symmetric_key.",
                "@@ -80,2 +80,4 @@ import hashlib",
                " import datetime",
                "+import binascii",
                "+import base64",
                "@@ -139,3 +141,3 @@ class TokenClass(object):",
                "         Create a new token object.",
                "-        ",
                "+",
                "         :param db_token: A database token object",
                "@@ -159,3 +161,3 @@ class TokenClass(object):",
                "         also in the underlying database-Token-object.",
                "-        ",
                "+",
                "         :param tokentype: The type of the token like HOTP or TOTP",
                "@@ -186,3 +188,3 @@ class TokenClass(object):",
                "         Set the user attributes (uid, resolvername, resolvertype) of a token.",
                "-        ",
                "+",
                "         :param user: a User() object, consisting of loginname and realm",
                "@@ -223,5 +225,5 @@ class TokenClass(object):",
                "         \"\"\"",
                "-        Return True is the token is orphaned. ",
                "-        ",
                "-        An orphaned token means, that it has a user assigned, but the user ",
                "+        Return True is the token is orphaned.",
                "+",
                "+        An orphaned token means, that it has a user assigned, but the user",
                "         does not exist in the user store (anymore)",
                "@@ -372,3 +374,3 @@ class TokenClass(object):",
                "         a negative value is a failure.",
                "-        ",
                "+",
                "         :return: something like:  (1, pin, otpval, combined)",
                "@@ -492,3 +494,3 @@ class TokenClass(object):",
                "         Update the token object",
                "-        ",
                "+",
                "         :param param: a dictionary with different params like keysize,",
                "@@ -603,3 +605,3 @@ class TokenClass(object):",
                "         Set the description on the database level",
                "-        ",
                "+",
                "         :param description: description of the token",
                "@@ -674,3 +676,3 @@ class TokenClass(object):",
                "         self.token.set_realms(realms, add=add)",
                "-        ",
                "+",
                "     def get_realms(self):",
                "@@ -682,6 +684,6 @@ class TokenClass(object):",
                "         return self.token.get_realms()",
                "-        ",
                "+",
                "     def get_serial(self):",
                "         return self.token.serial",
                "-    ",
                "+",
                "     def get_tokentype(self):",
                "@@ -1074,3 +1076,3 @@ class TokenClass(object):",
                "         it returns True. Otherwise False.",
                "-        ",
                "+",
                "         :return: success if the counter is less than max",
                "@@ -1184,3 +1186,3 @@ class TokenClass(object):",
                "         a token.",
                "-        ",
                "+",
                "         :param otp: the OTP value",
                "@@ -1275,3 +1277,3 @@ class TokenClass(object):",
                "         Can be anything else.",
                "-        ",
                "+",
                "         :param params: The request params during token creation token/init",
                "@@ -1294,4 +1296,8 @@ class TokenClass(object):",
                "         if otpkey is not None:",
                "+            key_bin = binascii.unhexlify(otpkey)",
                "+            # also strip the padding =, as it will get problems with the google app.",
                "+            otpkey_human = base64.b32encode(key_bin).strip('=')",
                "             response_detail[\"otpkey\"] = {\"description\": \"OTP seed\",",
                "                                          \"value\": \"seed://{0!s}\".format(otpkey),",
                "+                                         \"human_value\": \"key://{0!s}\".format(otpkey_human),",
                "                                          \"img\": create_img(otpkey, width=200)}",
                "@@ -1626,9 +1632,9 @@ class TokenClass(object):",
                "         \"\"\"",
                "-        This method generates a symmetric key, from a server component and a ",
                "-        client component. ",
                "+        This method generates a symmetric key, from a server component and a",
                "+        client component.",
                "         This key generation could be based on HMAC, KDF or even Diffie-Hellman.",
                "-        ",
                "-        The basic key-generation is simply replacing the last n byte of the ",
                "+",
                "+        The basic key-generation is simply replacing the last n byte of the",
                "         server component with bytes of the client component.",
                "-                ",
                "+",
                "         :param server_component: The component usually generated by privacyIDEA",
                "@@ -1638,3 +1644,3 @@ class TokenClass(object):",
                "         :type server_component: hex string",
                "-        :param options: ",
                "+        :param options:",
                "         :return: the new generated key as hex string",
                "@@ -1682,2 +1688,2 @@ class TokenClass(object):",
                "-        return params",
                "\\ No newline at end of file",
                "+        return params",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.hotp.html b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "index bd78755e6..99bf801a4 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "@@ -9,2 +9,3 @@",
                "                 {{ enrolledToken.otpkey.value }}",
                "+                {{ enrolledToken.otpkey.human_value }}",
                "             </accordion-group>",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.totp.html b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "index bd78755e6..99bf801a4 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "@@ -9,2 +9,3 @@",
                "                 {{ enrolledToken.otpkey.value }}",
                "+                {{ enrolledToken.otpkey.human_value }}",
                "             </accordion-group>"
            ],
            "changed_files": [
                "privacyidea/lib/tokenclass.py",
                "privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "privacyidea/static/components/token/views/token.enrolled.totp.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c8eec231c130c698a937dde780a2a90f0c13a8ac",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536337847,
            "hunks": 2,
            "message": "Better vasco library error handling and log output",
            "diff": [
                "diff --git a/privacyidea/lib/tokens/vascotoken.py b/privacyidea/lib/tokens/vascotoken.py",
                "index 90a72e83f..6a38c57b4 100644",
                "--- a/privacyidea/lib/tokens/vascotoken.py",
                "+++ b/privacyidea/lib/tokens/vascotoken.py",
                "@@ -159,5 +159,9 @@ class VascoTokenClass(TokenClass):",
                "             elif result == 201:",
                "-                log.warning(\"A previous OTP value was used again!\")",
                "+                log.warning(\"VASCO token failed to authenticate, code replay attempt, previous OTP value was used again!\")",
                "             elif result == 202:",
                "                 log.warning(\"Token-internal fail counter reached its maximum!\")",
                "+            elif result == -202:",
                "+                log.warning(\"VASCO token failed to authenticate, response too small, user did not type his complete OTP!\")",
                "+            elif result == -205:",
                "+                log.warning(\"VASCO token failed to authenticate, response not decimal!\")",
                "             else:"
            ],
            "changed_files": [
                "privacyidea/lib/tokens/vascotoken.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0f157280ec451691808c44e5385ad6f9993f22c1",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536603365,
            "hunks": 2,
            "message": "Make get_realms_of_token exit early for wildcards This avoids warnings for e.g. \"List Challenges\"",
            "diff": [
                "diff --git a/privacyidea/lib/token.py b/privacyidea/lib/token.py",
                "index e77d33027..8b2b8e9e7 100644",
                "--- a/privacyidea/lib/token.py",
                "+++ b/privacyidea/lib/token.py",
                "@@ -525,3 +525,3 @@ def get_realms_of_token(serial, only_first_realm=False):",
                "-    :param serial: the serial number of the token",
                "+    :param serial: the exact serial number of the token",
                "     :type serial: basestring",
                "@@ -534,2 +534,5 @@ def get_realms_of_token(serial, only_first_realm=False):",
                "     \"\"\"",
                "+    if \"*\" in serial:",
                "+        return []",
                "+",
                "     tokenobject_list = get_tokens(serial=serial)"
            ],
            "changed_files": [
                "privacyidea/lib/token.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "451006e8d543f50130a135bfa9ed6fc0122a6686",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536238626,
            "hunks": 1,
            "message": "The debian base package for UCS must not strip some libs",
            "diff": [
                "diff --git a/deploy/debian-virtualenv/rules b/deploy/debian-virtualenv/rules",
                "index 5a7735de5..61065111a 100755",
                "--- a/deploy/debian-virtualenv/rules",
                "+++ b/deploy/debian-virtualenv/rules",
                "@@ -14,2 +14,5 @@ override_dh_shlibdeps:",
                "+override_dh_strip:",
                "+\tdh_strip --exclude=cffi --exclude=PIL --exclude=Pillow",
                "+"
            ],
            "changed_files": [
                "deploy/debian-virtualenv/rules"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "46f5f089a4d05ff3d8968554fa0dd88baec29209",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535122337,
            "hunks": 3,
            "message": "modifying show_seed option label",
            "diff": [
                "diff --git a/privacyidea/lib/policy.py b/privacyidea/lib/policy.py",
                "index 7a1b8af48..4f3ea59e2 100644",
                "--- a/privacyidea/lib/policy.py",
                "+++ b/privacyidea/lib/policy.py",
                "@@ -1762,4 +1762,5 @@ def get_static_policy_definitions(scope=None):",
                "                 'type': 'bool',",
                "-                'desc': _(\"If this checked, seed will be always displayed \"",
                "-                          \"when enrolling TOTP/HOTP token.\")",
                "+                'desc': _(\"If this checked and token_wizard is enabled, seed \"",
                "+                          \"will be displayed in wizard when enrolling \"",
                "+                          \"TOTP/HOTP token.\")",
                "             }",
                "diff --git a/privacyidea/messages.pot b/privacyidea/messages.pot",
                "index 6beffcd09..c149c8705 100644",
                "--- a/privacyidea/messages.pot",
                "+++ b/privacyidea/messages.pot",
                "@@ -668,5 +668,6 @@ msgstr \"\"",
                "-#: lib/policy.py:1762",
                "+#: lib/policy.py:1763",
                " msgid \"\"",
                "-\"If this checked, seed will be always displayed when enrolling TOTP/HOTP token.\"",
                "+\"If this checked and token_wizard is enabled, seed \"",
                "+\"will be displayed in wizard when enrolling TOTP/HOTP token.\"",
                " msgstr \"\""
            ],
            "changed_files": [
                "privacyidea/lib/policy.py",
                "privacyidea/messages.pot"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0e5757a0809f700942735ae34bab3d1cd9a1b9d8",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535640332,
            "hunks": 74,
            "message": "Moving otpkey details generation to hotp where it should be",
            "diff": [
                "diff --git a/privacyidea/api/before_after.py b/privacyidea/api/before_after.py",
                "index ae553b07e..9845f7ba7 100644",
                "--- a/privacyidea/api/before_after.py",
                "+++ b/privacyidea/api/before_after.py",
                "@@ -268,3 +268,10 @@ def auth_error(error):",
                "     if \"audit_object\" in g:",
                "-        g.audit_object.log({\"info\": error.message})",
                "+        message = error.description",
                "+",
                "+        if hasattr(error, 'details'):",
                "+            if error.details:",
                "+                if 'message' in error.details:",
                "+                    message = \"{}|{}\".format(error.description, error.details['message'])",
                "+",
                "+        g.audit_object.log({\"info\": message})",
                "         g.audit_object.finalize_log()",
                "diff --git a/privacyidea/lib/tokenclass.py b/privacyidea/lib/tokenclass.py",
                "index 116f8032e..b11419045 100644",
                "--- a/privacyidea/lib/tokenclass.py",
                "+++ b/privacyidea/lib/tokenclass.py",
                "@@ -61,3 +61,3 @@ It depends on lib.user and lib.config.",
                " The token object also contains a database token object as self.token.",
                "-The token object runs the self.update() method during the initialization",
                "+The token object runs the self.update() method during the initialization ",
                " process in the API /token/init.",
                "@@ -72,4 +72,4 @@ genkey      -> genkey=1 : privacyIDEA generates an OTPKey, creates the token",
                "                to the client and the clients needs to send back the second part.",
                "-",
                "-In case of 2stepinit the key is generated from the server_component and the",
                "+               ",
                "+In case of 2stepinit the key is generated from the server_component and the ",
                " client_component using the TokenClass method generate_symmetric_key.",
                "@@ -80,4 +80,2 @@ import hashlib",
                " import datetime",
                "-import binascii",
                "-import base64",
                "@@ -141,3 +139,3 @@ class TokenClass(object):",
                "         Create a new token object.",
                "-",
                "+        ",
                "         :param db_token: A database token object",
                "@@ -161,3 +159,3 @@ class TokenClass(object):",
                "         also in the underlying database-Token-object.",
                "-",
                "+        ",
                "         :param tokentype: The type of the token like HOTP or TOTP",
                "@@ -188,3 +186,3 @@ class TokenClass(object):",
                "         Set the user attributes (uid, resolvername, resolvertype) of a token.",
                "-",
                "+        ",
                "         :param user: a User() object, consisting of loginname and realm",
                "@@ -225,5 +223,5 @@ class TokenClass(object):",
                "         \"\"\"",
                "-        Return True is the token is orphaned.",
                "-",
                "-        An orphaned token means, that it has a user assigned, but the user",
                "+        Return True is the token is orphaned. ",
                "+        ",
                "+        An orphaned token means, that it has a user assigned, but the user ",
                "         does not exist in the user store (anymore)",
                "@@ -374,3 +372,3 @@ class TokenClass(object):",
                "         a negative value is a failure.",
                "-",
                "+        ",
                "         :return: something like:  (1, pin, otpval, combined)",
                "@@ -494,3 +492,3 @@ class TokenClass(object):",
                "         Update the token object",
                "-",
                "+        ",
                "         :param param: a dictionary with different params like keysize,",
                "@@ -605,3 +603,3 @@ class TokenClass(object):",
                "         Set the description on the database level",
                "-",
                "+        ",
                "         :param description: description of the token",
                "@@ -676,3 +674,3 @@ class TokenClass(object):",
                "         self.token.set_realms(realms, add=add)",
                "-",
                "+        ",
                "     def get_realms(self):",
                "@@ -684,6 +682,6 @@ class TokenClass(object):",
                "         return self.token.get_realms()",
                "-",
                "+        ",
                "     def get_serial(self):",
                "         return self.token.serial",
                "-",
                "+    ",
                "     def get_tokentype(self):",
                "@@ -1076,3 +1074,3 @@ class TokenClass(object):",
                "         it returns True. Otherwise False.",
                "-",
                "+        ",
                "         :return: success if the counter is less than max",
                "@@ -1186,3 +1184,3 @@ class TokenClass(object):",
                "         a token.",
                "-",
                "+        ",
                "         :param otp: the OTP value",
                "@@ -1291,15 +1289,2 @@ class TokenClass(object):",
                "-        otpkey = None",
                "-        if 'otpkey' in init_details:",
                "-            otpkey = init_details.get('otpkey')",
                "-",
                "-        if otpkey is not None:",
                "-            key_bin = binascii.unhexlify(otpkey)",
                "-            # also strip the padding =, as it will get problems with the google app.",
                "-            otpkey_human = base64.b32encode(key_bin).strip('=')",
                "-            response_detail[\"otpkey\"] = {\"description\": \"OTP seed\",",
                "-                                         \"value\": \"seed://{0!s}\".format(otpkey),",
                "-                                         \"human_value\": \"key://{0!s}\".format(otpkey_human),",
                "-                                         \"img\": create_img(otpkey, width=200)}",
                "-",
                "         return response_detail",
                "@@ -1632,9 +1617,9 @@ class TokenClass(object):",
                "         \"\"\"",
                "-        This method generates a symmetric key, from a server component and a",
                "-        client component.",
                "+        This method generates a symmetric key, from a server component and a ",
                "+        client component. ",
                "         This key generation could be based on HMAC, KDF or even Diffie-Hellman.",
                "-",
                "-        The basic key-generation is simply replacing the last n byte of the",
                "+        ",
                "+        The basic key-generation is simply replacing the last n byte of the ",
                "         server component with bytes of the client component.",
                "-",
                "+                ",
                "         :param server_component: The component usually generated by privacyIDEA",
                "@@ -1644,3 +1629,3 @@ class TokenClass(object):",
                "         :type server_component: hex string",
                "-        :param options:",
                "+        :param options: ",
                "         :return: the new generated key as hex string",
                "@@ -1688,2 +1673,2 @@ class TokenClass(object):",
                "-        return params",
                "+        return params",
                "\\ No newline at end of file",
                "diff --git a/privacyidea/lib/tokens/hotptoken.py b/privacyidea/lib/tokens/hotptoken.py",
                "index 43434b327..cd2e64af7 100644",
                "--- a/privacyidea/lib/tokens/hotptoken.py",
                "+++ b/privacyidea/lib/tokens/hotptoken.py",
                "@@ -48,2 +48,3 @@ import time",
                " import binascii",
                "+import base64",
                "@@ -257,2 +258,10 @@ class HotpTokenClass(TokenClass):",
                "                                                   }",
                "+                                                 ",
                "+                    key_bin = binascii.unhexlify(otpkey)",
                "+                    # also strip the padding =, as it will get problems with the google app.",
                "+                    otpkey_human = base64.b32encode(key_bin).strip('=')",
                "+                    response_detail[\"otpkey\"] = {\"description\": \"OTP seed\",",
                "+                                                 \"value\": \"seed://{0!s}\".format(otpkey),",
                "+                                                 \"human_value\": \"key://{0!s}\".format(otpkey_human),",
                "+                                                 \"img\": create_img(otpkey, width=200)}",
                "                 except Exception as ex:  # pragma: no cover",
                "@@ -260,3 +269,3 @@ class HotpTokenClass(TokenClass):",
                "                     log.error('failed to set oath or google url: {0!r}'.format(ex))",
                "-                    ",
                "+",
                "         return response_detail",
                "diff --git a/tests/test_lib_tokenclass.py b/tests/test_lib_tokenclass.py",
                "index 062b240ef..806360014 100644",
                "--- a/tests/test_lib_tokenclass.py",
                "+++ b/tests/test_lib_tokenclass.py",
                "@@ -34,5 +34,5 @@ class TokenBaseTestCase(MyTestCase):",
                "     serial2 = \"SE222222\"",
                "-",
                "+    ",
                "     # set_user, get_user, reset, set_user_identifiers",
                "-",
                "+    ",
                "     def test_00_create_user_realm(self):",
                "@@ -42,3 +42,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(rid > 0, rid)",
                "-",
                "+               ",
                "         (added, failed) = set_realm(self.realm1,",
                "@@ -47,3 +47,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(len(added) == 1)",
                "-",
                "+        ",
                "         user = User(login=\"root\",",
                "@@ -51,9 +51,9 @@ class TokenBaseTestCase(MyTestCase):",
                "                     resolver=self.resolvername1)",
                "-",
                "+        ",
                "         user_str = \"{0!s}\".format(user)",
                "         self.assertTrue(user_str == \"<root.resolver1@realm1>\", user_str)",
                "-",
                "+        ",
                "         self.assertFalse(user.is_empty())",
                "         self.assertTrue(User().is_empty())",
                "-",
                "+        ",
                "         user_repr = \"{0!r}\".format(user)",
                "@@ -69,3 +69,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.type == \"unknown\", token)",
                "-",
                "+        ",
                "         token.set_type(\"newtype\")",
                "@@ -74,3 +74,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.get_type() == \"newtype\", token)",
                "-",
                "+        ",
                "         self.assertTrue(token.get_class_prefix() == \"UNK\", token)",
                "@@ -81,3 +81,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(info == {}, \"{0!s}\".format(info))",
                "-",
                "+        ",
                "     def test_02_set_user(self):",
                "@@ -88,3 +88,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.type == \"newtype\", token.type)",
                "-",
                "+        ",
                "         token.set_user(User(login=\"cornelius\",",
                "@@ -97,3 +97,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.user_id)",
                "-",
                "+        ",
                "         user_object = token.user",
                "@@ -103,3 +103,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         user_object)",
                "-",
                "+        ",
                "         token.set_user_identifiers(2000, self.resolvername1, \"passwdresolver\")",
                "@@ -114,3 +114,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.failcount)",
                "-",
                "+        ",
                "     def test_04_base_methods(self):",
                "@@ -122,3 +122,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(res[0] is False, res)",
                "-",
                "+        ",
                "         c = token.create_challenge(\"transactionid\")",
                "@@ -149,3 +149,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token)",
                "-",
                "+        ",
                "         # set defaults",
                "@@ -154,14 +154,14 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.sync_window == 1000)",
                "-",
                "+        ",
                "         token.resync(\"1234\", \"3456\")",
                "-",
                "+        ",
                "         token.token.count_window = 17",
                "         self.assertTrue(token.get_otp_count_window() == 17)",
                "-",
                "+        ",
                "         token.token.count = 18",
                "         self.assertTrue(token.get_otp_count() == 18)",
                "-",
                "+        ",
                "         token.token.active = False",
                "         self.assertTrue(token.is_active() is False)",
                "-",
                "+        ",
                "         token.token.failcount = 7",
                "@@ -170,8 +170,8 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.failcount == 8)",
                "-",
                "+        ",
                "         token.token.maxfail = 12",
                "         self.assertTrue(token.get_max_failcount() == 12)",
                "-",
                "+        ",
                "         self.assertTrue(token.get_user_id() == token.token.user_id)",
                "-",
                "+        ",
                "         self.assertTrue(token.get_serial() == \"SE123456\", token.token.serial)",
                "@@ -179,3 +179,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.tokentype)",
                "-",
                "+        ",
                "         token.set_so_pin(\"sopin\")",
                "@@ -194,9 +194,9 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.count)",
                "-",
                "+        ",
                "         token.set_maxfail(1000)",
                "         self.assertTrue(token.token.maxfail == 1000)",
                "-",
                "+        ",
                "         token.set_count_window(52)",
                "         self.assertTrue(token.get_count_window() == 52)",
                "-",
                "+        ",
                "         token.set_sync_window(53)",
                "@@ -214,3 +214,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.set_pin_hash_seed(ph1, pseed)",
                "-",
                "+        ",
                "     def test_07_enable(self):",
                "@@ -221,4 +221,4 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.enable()",
                "-        self.assertTrue(token.token.active)",
                "-",
                "+        self.assertTrue(token.token.active)        ",
                "+        ",
                "     def test_05_get_set_realms(self):",
                "@@ -232,3 +232,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(len(realms) == 2, realms)",
                "-",
                "+        ",
                "     def test_99_delete_token(self):",
                "@@ -237,3 +237,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.delete_token()",
                "-",
                "+        ",
                "         db_token = Token.query.filter_by(serial=self.serial1).first()",
                "@@ -247,3 +247,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(\"hashlib\" in tinfo, tinfo)",
                "-",
                "+        ",
                "     def test_09_failcount(self):",
                "@@ -254,3 +254,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(end == start + 1, (end, start))",
                "-",
                "+        ",
                "     def test_10_get_hashlib(self):",
                "@@ -262,3 +262,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                             TokenClass.get_hashlib(hl))",
                "-",
                "+    ",
                "     def test_11_tokeninfo(self):",
                "@@ -277,3 +277,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         info2)",
                "-",
                "+        ",
                "         # auth counter",
                "@@ -289,3 +289,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.get_count_auth() == 201)",
                "-",
                "+        ",
                "         self.assertTrue(token.check_auth_counter())",
                "@@ -315,3 +315,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                           token.set_validity_period_start, \"wrong date\")",
                "-",
                "+        ",
                "         self.assertFalse(token.check_validity_period())",
                "@@ -339,3 +339,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.check_validity_period())",
                "-",
                "+        ",
                "         # check before start date",
                "@@ -350,3 +350,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertFalse(token.check_validity_period())",
                "-",
                "+        ",
                "         # check after enddate",
                "@@ -433,3 +433,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token = TokenClass(db_token)",
                "-",
                "+        ",
                "         token.set_otp_count(10)",
                "@@ -448,3 +448,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.check_otp_exist(\"123456\") == -1)",
                "-",
                "+        ",
                "     def test_14_split_pin_pass(self):",
                "@@ -452,3 +452,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token = TokenClass(db_token)",
                "-",
                "+        ",
                "         token.token.otplen = 6",
                "@@ -465,3 +465,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(value == \"123456\", value)",
                "-",
                "+        ",
                "     def test_15_check_pin(self):",
                "@@ -472,3 +472,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertFalse(token.check_pin(\"wrong pin\"))",
                "-",
                "+        ",
                "     def test_15_status_validation(self):",
                "@@ -519,3 +519,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                            \"genkey\": \"1\"})",
                "-",
                "+        ",
                "         token.update({\"otpkey\": \"123456\",",
                "@@ -525,3 +525,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.otplen == 6)",
                "-",
                "+        ",
                "         # save pin encrypted",
                "@@ -533,3 +533,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.pin_hash)",
                "-",
                "+        ",
                "         # update token without otpkey",
                "@@ -601,3 +601,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(r == -1, r)",
                "-",
                "+        ",
                "         # test the challenge janitor"
            ],
            "changed_files": [
                "privacyidea/api/before_after.py",
                "privacyidea/lib/tokenclass.py",
                "privacyidea/lib/tokens/hotptoken.py",
                "tests/test_lib_tokenclass.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5660ca72db3c1c2a308c4a917ce2a1b98f669021",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536603349,
            "hunks": 1,
            "message": "Add warnings about serial matches to get_tokens",
            "diff": [
                "diff --git a/privacyidea/lib/token.py b/privacyidea/lib/token.py",
                "index 8f4b73347..e77d33027 100644",
                "--- a/privacyidea/lib/token.py",
                "+++ b/privacyidea/lib/token.py",
                "@@ -333,2 +333,9 @@ def get_tokens(tokentype=None, realm=None, assigned=None, user=None,",
                "+    # Warning for unintentional exact serial matches",
                "+    if serial is not None and \"*\" in serial:",
                "+        log.info(u\"Exact match on a serial containing a wildcard: {!r}\".format(serial))",
                "+    # Warning for unintentional wildcard serial matches",
                "+    if serial_wildcard is not None and \"*\" not in serial_wildcard:",
                "+        log.info(u\"Wildcard match on serial without a wildcard: {!r}\".format(serial_wildcard))",
                "+",
                "     # Decide, what we are supposed to return"
            ],
            "changed_files": [
                "privacyidea/lib/token.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b56982a4f982d34b2b888992488991a6cf5a5f1e",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535640332,
            "hunks": 6,
            "message": "Adding hotp/totp otpkey specific part to hotp class",
            "diff": [
                "diff --git a/privacyidea/api/before_after.py b/privacyidea/api/before_after.py",
                "index 9845f7ba7..ae553b07e 100644",
                "--- a/privacyidea/api/before_after.py",
                "+++ b/privacyidea/api/before_after.py",
                "@@ -268,10 +268,3 @@ def auth_error(error):",
                "     if \"audit_object\" in g:",
                "-        message = error.description",
                "-",
                "-        if hasattr(error, 'details'):",
                "-            if error.details:",
                "-                if 'message' in error.details:",
                "-                    message = \"{}|{}\".format(error.description, error.details['message'])",
                "-",
                "-        g.audit_object.log({\"info\": message})",
                "+        g.audit_object.log({\"info\": error.message})",
                "         g.audit_object.finalize_log()",
                "diff --git a/privacyidea/lib/tokenclass.py b/privacyidea/lib/tokenclass.py",
                "index b11419045..d744b23b8 100644",
                "--- a/privacyidea/lib/tokenclass.py",
                "+++ b/privacyidea/lib/tokenclass.py",
                "@@ -1271,3 +1271,2 @@ class TokenClass(object):",
                "         This method is called from api/token after the token is enrolled",
                "-",
                "         get_init_detail returns additional information after an admin/init",
                "@@ -1275,3 +1274,3 @@ class TokenClass(object):",
                "         Can be anything else.",
                "-",
                "+        ",
                "         :param params: The request params during token creation token/init",
                "@@ -1289,4 +1288,13 @@ class TokenClass(object):",
                "-        return response_detail",
                "+        otpkey = None",
                "+        if 'otpkey' in init_details:",
                "+            otpkey = init_details.get('otpkey')",
                "+        if otpkey is not None:",
                "+            response_detail[\"otpkey\"] = {\"description\": \"OTP seed\",",
                "+                                         \"value\": \"seed://{0!s}\".format(otpkey),",
                "+                                         \"img\": create_img(otpkey, width=200)}",
                "+",
                "+        return response_detail",
                "+        ",
                "     def get_QRimage_data(self, response_detail):",
                "@@ -1673,2 +1681,2 @@ class TokenClass(object):",
                "-        return params",
                "\\ No newline at end of file",
                "+        return params"
            ],
            "changed_files": [
                "privacyidea/api/before_after.py",
                "privacyidea/lib/tokenclass.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "63f8797b9e8f624fc60fc3a4f419043e56ef8a2a",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536605012,
            "hunks": 2,
            "message": "The copy token in fact only is supposed for exact tokens",
            "diff": [
                "diff --git a/privacyidea/lib/decorators.py b/privacyidea/lib/decorators.py",
                "index 6d506ff6d..6f23b06bc 100644",
                "--- a/privacyidea/lib/decorators.py",
                "+++ b/privacyidea/lib/decorators.py",
                "@@ -104,3 +104,3 @@ def check_copy_serials(func):",
                "     Decorator to check if the serial_from and serial_to exist.",
                "-    If the serials are not unique, we raise an error",
                "+    If the serials are not unique or do not exist, we raise an error",
                "     \"\"\"",
                "@@ -109,4 +109,4 @@ def check_copy_serials(func):",
                "     def check_serial_wrapper(*args, **kwds):",
                "-        tokenobject_list_from = get_tokens(serial_wildcard=args[0])",
                "-        tokenobject_list_to = get_tokens(serial_wildcard=args[1])",
                "+        tokenobject_list_from = get_tokens(serial=args[0])",
                "+        tokenobject_list_to = get_tokens(serial=args[1])",
                "         if len(tokenobject_list_from) != 1:"
            ],
            "changed_files": [
                "privacyidea/lib/decorators.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "211b438f0c03cbc567b046204205a433134e444b",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535119422,
            "hunks": 4,
            "message": "Setting conditions to show seed where it should go",
            "diff": [
                "diff --git a/privacyidea/static/components/token/views/token.enroll.html b/privacyidea/static/components/token/views/token.enroll.html",
                "index c1be12ee4..cbc982936 100644",
                "--- a/privacyidea/static/components/token/views/token.enroll.html",
                "+++ b/privacyidea/static/components/token/views/token.enroll.html",
                "@@ -135,3 +135,3 @@",
                "         <span ng-show=\"!newUser.user || loggedInUser.role != 'admin'\" translate",
                "-              ng-hide=\"$state.includes('token.wizard') and !$scope.show_seed\">",
                "+              ng-hide=\"$state.includes('token.wizard')\">",
                "             The token was successfully enrolled with serial number",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.hotp.html b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "index 9856ef56e..bd78755e6 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "@@ -5,3 +5,3 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"$state.includes('token.wizard') || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') and !$scope.show_seed) || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">",
                "@@ -45,2 +45 @@",
                " </div>",
                "-",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.totp.html b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "index f2dd6a40d..bd78755e6 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "@@ -5,3 +5,3 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"$state.includes('token.wizard') || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"($state.includes('token.wizard') and !$scope.show_seed) || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">"
            ],
            "changed_files": [
                "privacyidea/static/components/token/views/token.enroll.html",
                "privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "privacyidea/static/components/token/views/token.enrolled.totp.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "772b4f6e2a7109ff5baf3ae9cf932489e674fc60",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536184015,
            "hunks": 1,
            "message": "Add further policy testcase",
            "diff": [
                "diff --git a/tests/test_api_validate.py b/tests/test_api_validate.py",
                "index f1cba7294..8fafe5a4e 100644",
                "--- a/tests/test_api_validate.py",
                "+++ b/tests/test_api_validate.py",
                "@@ -1350,2 +1350,16 @@ class ValidateAPITestCase(MyTestCase):",
                "+        # Test if the policies \"reset_all_tokens\" and \"passthru\" work out fine at the same time",
                "+        set_policy(name=\"reset_all_tokens\", scope=SCOPE.AUTH, action=ACTION.RESETALLTOKENS)",
                "+        # Passthru with POST Request",
                "+        with self.app.test_request_context('/validate/check',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"passthru\",",
                "+                                                 \"realm\": self.realm2,",
                "+                                                 \"pass\": \"pthru\"}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            self.assertEqual(result.get(\"value\"), True)",
                "+",
                "+        delete_policy(\"reset_all_tokens\")",
                "         delete_policy(\"pthru\")"
            ],
            "changed_files": [
                "tests/test_api_validate.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v2.23.1",
                "v2.23.2",
                "v2.23.3",
                "v2.23.3dev1",
                "v2.23.3dev3",
                "v2.23.3dev4",
                "v2.23.3dev5",
                "v2.23.4",
                "v2.23.4dev2",
                "v2.23.4dev3",
                "v2.23.4dev4",
                "v2.23.4dev5",
                "v2.23.5",
                "v2.23.5dev1",
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ce93d923b18da1ea6276fb324d2733934d9caae3",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536129687,
            "hunks": 12,
            "message": "Changing so that show_seed is system wide not wizard only setting",
            "diff": [
                "diff --git a/privacyidea/lib/policy.py b/privacyidea/lib/policy.py",
                "index 4f3ea59e2..b8d20145b 100644",
                "--- a/privacyidea/lib/policy.py",
                "+++ b/privacyidea/lib/policy.py",
                "@@ -1762,5 +1762,4 @@ def get_static_policy_definitions(scope=None):",
                "                 'type': 'bool',",
                "-                'desc': _(\"If this checked and token_wizard is enabled, seed \"",
                "-                          \"will be displayed in wizard when enrolling \"",
                "-                          \"TOTP/HOTP token.\")",
                "+                'desc': _(\"If this is checked, the seed \"",
                "+                          \"will be displayed as text during enrollment.\")",
                "             }",
                "diff --git a/privacyidea/lib/tokenclass.py b/privacyidea/lib/tokenclass.py",
                "index d744b23b8..1ef3cd7df 100644",
                "--- a/privacyidea/lib/tokenclass.py",
                "+++ b/privacyidea/lib/tokenclass.py",
                "@@ -1271,2 +1271,3 @@ class TokenClass(object):",
                "         This method is called from api/token after the token is enrolled",
                "+",
                "         get_init_detail returns additional information after an admin/init",
                "@@ -1298,3 +1299,3 @@ class TokenClass(object):",
                "         return response_detail",
                "-        ",
                "+",
                "     def get_QRimage_data(self, response_detail):",
                "@@ -1681,2 +1682,2 @@ class TokenClass(object):",
                "-        return params",
                "+        return params",
                "\\ No newline at end of file",
                "diff --git a/privacyidea/lib/tokens/hotptoken.py b/privacyidea/lib/tokens/hotptoken.py",
                "index cd2e64af7..99e046383 100644",
                "--- a/privacyidea/lib/tokens/hotptoken.py",
                "+++ b/privacyidea/lib/tokens/hotptoken.py",
                "@@ -261,7 +261,5 @@ class HotpTokenClass(TokenClass):",
                "                     # also strip the padding =, as it will get problems with the google app.",
                "-                    otpkey_human = base64.b32encode(key_bin).strip('=')",
                "-                    response_detail[\"otpkey\"] = {\"description\": \"OTP seed\",",
                "-                                                 \"value\": \"seed://{0!s}\".format(otpkey),",
                "-                                                 \"human_value\": \"key://{0!s}\".format(otpkey_human),",
                "-                                                 \"img\": create_img(otpkey, width=200)}",
                "+                    value_b32 = base64.b32encode(key_bin).strip('=')",
                "+                    value_b32_str = \"{0!s}\".format(value_b32)",
                "+                    response_detail[\"otpkey\"][\"value_b32\"] = value_b32_str",
                "                 except Exception as ex:  # pragma: no cover",
                "diff --git a/privacyidea/messages.pot b/privacyidea/messages.pot",
                "index c149c8705..9f2765f29 100644",
                "--- a/privacyidea/messages.pot",
                "+++ b/privacyidea/messages.pot",
                "@@ -670,4 +670,4 @@ msgstr \"\"",
                " msgid \"\"",
                "-\"If this checked and token_wizard is enabled, seed \"",
                "-\"will be displayed in wizard when enrolling TOTP/HOTP token.\"",
                "+\"If this is checked, the seed \"",
                "+\"will be displayed as text during enrollment.\"",
                " msgstr \"\"",
                "diff --git a/privacyidea/static/components/token/controllers/tokenControllers.js b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "index d053584c1..72225b28d 100644",
                "--- a/privacyidea/static/components/token/controllers/tokenControllers.js",
                "+++ b/privacyidea/static/components/token/controllers/tokenControllers.js",
                "@@ -170,3 +170,3 @@ myApp.controller(\"tokenEnrollController\", function ($scope, TokenFactory,",
                "     $scope.qrCodeWidth = 250;",
                "-    $scope.hide_wizard_seed = true;",
                "+",
                "     if ($state.includes('token.wizard') && !$scope.show_seed) {",
                "@@ -175,6 +175,2 @@ myApp.controller(\"tokenEnrollController\", function ($scope, TokenFactory,",
                "-    if ($state.includes('token.wizard') && $scope.show_seed) {",
                "-        $scope.hide_wizard_seed = false;",
                "-    }",
                "-",
                "     $scope.checkRight = AuthFactory.checkRight;",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.hotp.html b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "index 2a30cdba3..4a5ea1b5a 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "@@ -5,7 +5,7 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"hide_wizard_seed || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"!show_seed || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">",
                "             <accordion-group heading=\"{{ 'The OTP key'|translate }}\">",
                "-                {{ enrolledToken.otpkey.value }}",
                "-                {{ enrolledToken.otpkey.human_value }}",
                "+                Hex: {{ enrolledToken.otpkey.value }}",
                "+                Base32: {{ enrolledToken.otpkey.value_b32 }}",
                "             </accordion-group>",
                "diff --git a/privacyidea/static/components/token/views/token.enrolled.totp.html b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "index 2a30cdba3..23055e598 100644",
                "--- a/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "+++ b/privacyidea/static/components/token/views/token.enrolled.totp.html",
                "@@ -5,7 +5,7 @@",
                "     </div>",
                "-    <div class=\"col-sm-6\" ng-hide=\"hide_wizard_seed || form['2stepinit']\">",
                "+    <div class=\"col-sm-6\" ng-hide=\"!show_seed || form['2stepinit']\">",
                "         <accordion close-others=\"oneAtATime\">",
                "             <accordion-group heading=\"{{ 'The OTP key'|translate }}\">",
                "-                {{ enrolledToken.otpkey.value }}",
                "-                {{ enrolledToken.otpkey.human_value }}",
                "+              Hex: {{ enrolledToken.otpkey.value }}",
                "+              Base32: {{ enrolledToken.otpkey.value_b32 }}",
                "             </accordion-group>"
            ],
            "changed_files": [
                "privacyidea/lib/policy.py",
                "privacyidea/lib/tokenclass.py",
                "privacyidea/lib/tokens/hotptoken.py",
                "privacyidea/messages.pot",
                "privacyidea/static/components/token/controllers/tokenControllers.js",
                "privacyidea/static/components/token/views/token.enrolled.hotp.html",
                "privacyidea/static/components/token/views/token.enrolled.totp.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c9ac5d5bdaa2ffbac08d54e239d2d71f8de1ba5b",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535467219,
            "hunks": 51,
            "message": "Fix tests related to human readable otp seed",
            "diff": [
                "diff --git a/tests/test_lib_tokenclass.py b/tests/test_lib_tokenclass.py",
                "index 0d4f2b51a..062b240ef 100644",
                "--- a/tests/test_lib_tokenclass.py",
                "+++ b/tests/test_lib_tokenclass.py",
                "@@ -21,3 +21,3 @@ import datetime",
                " from dateutil.tz import tzlocal",
                "-",
                "+import binascii",
                "@@ -34,5 +34,5 @@ class TokenBaseTestCase(MyTestCase):",
                "     serial2 = \"SE222222\"",
                "-    ",
                "+",
                "     # set_user, get_user, reset, set_user_identifiers",
                "-    ",
                "+",
                "     def test_00_create_user_realm(self):",
                "@@ -42,3 +42,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(rid > 0, rid)",
                "-               ",
                "+",
                "         (added, failed) = set_realm(self.realm1,",
                "@@ -47,3 +47,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(len(added) == 1)",
                "-        ",
                "+",
                "         user = User(login=\"root\",",
                "@@ -51,9 +51,9 @@ class TokenBaseTestCase(MyTestCase):",
                "                     resolver=self.resolvername1)",
                "-        ",
                "+",
                "         user_str = \"{0!s}\".format(user)",
                "         self.assertTrue(user_str == \"<root.resolver1@realm1>\", user_str)",
                "-        ",
                "+",
                "         self.assertFalse(user.is_empty())",
                "         self.assertTrue(User().is_empty())",
                "-        ",
                "+",
                "         user_repr = \"{0!r}\".format(user)",
                "@@ -69,3 +69,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.type == \"unknown\", token)",
                "-        ",
                "+",
                "         token.set_type(\"newtype\")",
                "@@ -74,3 +74,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.get_type() == \"newtype\", token)",
                "-        ",
                "+",
                "         self.assertTrue(token.get_class_prefix() == \"UNK\", token)",
                "@@ -81,3 +81,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(info == {}, \"{0!s}\".format(info))",
                "-        ",
                "+",
                "     def test_02_set_user(self):",
                "@@ -88,3 +88,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.type == \"newtype\", token.type)",
                "-        ",
                "+",
                "         token.set_user(User(login=\"cornelius\",",
                "@@ -97,3 +97,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.user_id)",
                "-        ",
                "+",
                "         user_object = token.user",
                "@@ -103,3 +103,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         user_object)",
                "-        ",
                "+",
                "         token.set_user_identifiers(2000, self.resolvername1, \"passwdresolver\")",
                "@@ -114,3 +114,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.failcount)",
                "-        ",
                "+",
                "     def test_04_base_methods(self):",
                "@@ -122,3 +122,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(res[0] is False, res)",
                "-        ",
                "+",
                "         c = token.create_challenge(\"transactionid\")",
                "@@ -149,3 +149,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token)",
                "-        ",
                "+",
                "         # set defaults",
                "@@ -154,14 +154,14 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.sync_window == 1000)",
                "-        ",
                "+",
                "         token.resync(\"1234\", \"3456\")",
                "-        ",
                "+",
                "         token.token.count_window = 17",
                "         self.assertTrue(token.get_otp_count_window() == 17)",
                "-        ",
                "+",
                "         token.token.count = 18",
                "         self.assertTrue(token.get_otp_count() == 18)",
                "-        ",
                "+",
                "         token.token.active = False",
                "         self.assertTrue(token.is_active() is False)",
                "-        ",
                "+",
                "         token.token.failcount = 7",
                "@@ -170,8 +170,8 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.failcount == 8)",
                "-        ",
                "+",
                "         token.token.maxfail = 12",
                "         self.assertTrue(token.get_max_failcount() == 12)",
                "-        ",
                "+",
                "         self.assertTrue(token.get_user_id() == token.token.user_id)",
                "-        ",
                "+",
                "         self.assertTrue(token.get_serial() == \"SE123456\", token.token.serial)",
                "@@ -179,3 +179,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.tokentype)",
                "-        ",
                "+",
                "         token.set_so_pin(\"sopin\")",
                "@@ -194,9 +194,9 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.count)",
                "-        ",
                "+",
                "         token.set_maxfail(1000)",
                "         self.assertTrue(token.token.maxfail == 1000)",
                "-        ",
                "+",
                "         token.set_count_window(52)",
                "         self.assertTrue(token.get_count_window() == 52)",
                "-        ",
                "+",
                "         token.set_sync_window(53)",
                "@@ -214,3 +214,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.set_pin_hash_seed(ph1, pseed)",
                "-        ",
                "+",
                "     def test_07_enable(self):",
                "@@ -221,4 +221,4 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.enable()",
                "-        self.assertTrue(token.token.active)        ",
                "-        ",
                "+        self.assertTrue(token.token.active)",
                "+",
                "     def test_05_get_set_realms(self):",
                "@@ -232,3 +232,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(len(realms) == 2, realms)",
                "-        ",
                "+",
                "     def test_99_delete_token(self):",
                "@@ -237,3 +237,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token.delete_token()",
                "-        ",
                "+",
                "         db_token = Token.query.filter_by(serial=self.serial1).first()",
                "@@ -247,3 +247,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(\"hashlib\" in tinfo, tinfo)",
                "-        ",
                "+",
                "     def test_09_failcount(self):",
                "@@ -254,3 +254,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(end == start + 1, (end, start))",
                "-        ",
                "+",
                "     def test_10_get_hashlib(self):",
                "@@ -262,3 +262,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                             TokenClass.get_hashlib(hl))",
                "-    ",
                "+",
                "     def test_11_tokeninfo(self):",
                "@@ -277,3 +277,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         info2)",
                "-        ",
                "+",
                "         # auth counter",
                "@@ -289,3 +289,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.get_count_auth() == 201)",
                "-        ",
                "+",
                "         self.assertTrue(token.check_auth_counter())",
                "@@ -315,3 +315,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                           token.set_validity_period_start, \"wrong date\")",
                "-        ",
                "+",
                "         self.assertFalse(token.check_validity_period())",
                "@@ -339,3 +339,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.check_validity_period())",
                "-        ",
                "+",
                "         # check before start date",
                "@@ -350,3 +350,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertFalse(token.check_validity_period())",
                "-        ",
                "+",
                "         # check after enddate",
                "@@ -433,3 +433,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token = TokenClass(db_token)",
                "-        ",
                "+",
                "         token.set_otp_count(10)",
                "@@ -448,3 +448,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.check_otp_exist(\"123456\") == -1)",
                "-        ",
                "+",
                "     def test_14_split_pin_pass(self):",
                "@@ -452,3 +452,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token = TokenClass(db_token)",
                "-        ",
                "+",
                "         token.token.otplen = 6",
                "@@ -465,3 +465,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(value == \"123456\", value)",
                "-        ",
                "+",
                "     def test_15_check_pin(self):",
                "@@ -472,3 +472,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertFalse(token.check_pin(\"wrong pin\"))",
                "-        ",
                "+",
                "     def test_15_status_validation(self):",
                "@@ -486,3 +486,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         token = TokenClass(db_token)",
                "-        token.add_init_details(\"otpkey\", \"secretkey\")",
                "+        token.add_init_details(\"otpkey\", binascii.hexlify(\"secretkey\"))",
                "         detail = token.get_init_detail()",
                "@@ -519,3 +519,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                            \"genkey\": \"1\"})",
                "-        ",
                "+",
                "         token.update({\"otpkey\": \"123456\",",
                "@@ -525,3 +525,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(token.token.otplen == 6)",
                "-        ",
                "+",
                "         # save pin encrypted",
                "@@ -533,3 +533,3 @@ class TokenBaseTestCase(MyTestCase):",
                "                         token.token.pin_hash)",
                "-        ",
                "+",
                "         # update token without otpkey",
                "@@ -601,3 +601,3 @@ class TokenBaseTestCase(MyTestCase):",
                "         self.assertTrue(r == -1, r)",
                "-        ",
                "+",
                "         # test the challenge janitor"
            ],
            "changed_files": [
                "tests/test_lib_tokenclass.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "90e4924b805990e360cec15bb903329f091ad66c",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535111957,
            "hunks": 8,
            "message": "Adding new option to webui policy show_seed, to show_seed even in token wizard",
            "diff": [
                "diff --git a/privacyidea/api/lib/postpolicy.py b/privacyidea/api/lib/postpolicy.py",
                "index 29c51823e..64eb77406 100644",
                "--- a/privacyidea/api/lib/postpolicy.py",
                "+++ b/privacyidea/api/lib/postpolicy.py",
                "@@ -589,2 +589,10 @@ def get_webui_settings(request, response):",
                "         )",
                "+        show_seed = policy_object.get_policies(",
                "+            action=ACTION.SHOW_SEED,",
                "+            scope=SCOPE.WEBUI,",
                "+            realm=realm,",
                "+            client=client,",
                "+            active=True",
                "+        )",
                "+        show_seed = bool(show_seed)",
                "@@ -629,2 +637,3 @@ def get_webui_settings(request, response):",
                "         content[\"result\"][\"value\"][\"hide_welcome\"] = hide_welcome",
                "+        content[\"result\"][\"value\"][\"show_seed\"] = show_seed",
                "         content[\"result\"][\"value\"][\"subscription_status\"] = subscription_status()",
                "diff --git a/privacyidea/lib/policy.py b/privacyidea/lib/policy.py",
                "index 780c34fc7..708b116c8 100644",
                "--- a/privacyidea/lib/policy.py",
                "+++ b/privacyidea/lib/policy.py",
                "@@ -972,3 +972,3 @@ def export_policies(policies):",
                "     This function takes a policy list and creates an export file from it",
                "-    ",
                "+",
                "     :param policies: a policy definition",
                "@@ -1758,2 +1758,7 @@ def get_static_policy_definitions(scope=None):",
                "                           \"the welcome dialog anymore.\")",
                "+            },",
                "+            ACTION.SHOW_SEED: {",
                "+                'type': 'bool',",
                "+                'desc': _(\"If this checked, seed will be always displayed \"",
                "+                          \"when enrolling TOTP/HOTP token.\")",
                "             }",
                "diff --git a/privacyidea/messages.pot b/privacyidea/messages.pot",
                "index 0cdd7914e..6beffcd09 100644",
                "--- a/privacyidea/messages.pot",
                "+++ b/privacyidea/messages.pot",
                "@@ -668,2 +668,7 @@ msgstr \"\"",
                "+#: lib/policy.py:1762",
                "+msgid \"\"",
                "+\"If this checked, seed will be always displayed when enrolling TOTP/HOTP token.\"",
                "+msgstr \"\"",
                "+",
                " #: lib/radiusserver.py:199 lib/radiusserver.py:230",
                "@@ -1349,2 +1354 @@ msgid \"Yubikey AES mode: One Time Passwords with Yubikey.\"",
                " msgstr \"\"",
                "-",
                "diff --git a/privacyidea/static/components/login/controllers/loginControllers.js b/privacyidea/static/components/login/controllers/loginControllers.js",
                "index b9b16a7d4..1a9dff919 100644",
                "--- a/privacyidea/static/components/login/controllers/loginControllers.js",
                "+++ b/privacyidea/static/components/login/controllers/loginControllers.js",
                "@@ -345,2 +345,3 @@ angular.module(\"privacyideaApp\")",
                "             $scope.hide_welcome = data.result.value.hide_welcome;",
                "+            $scope.show_seed = data.result.value.show_seed;",
                "             $scope.subscription_state = data.result.value.subscription_status;",
                "diff --git a/privacyidea/static/components/token/views/token.enroll.html b/privacyidea/static/components/token/views/token.enroll.html",
                "index cbc982936..c1be12ee4 100644",
                "--- a/privacyidea/static/components/token/views/token.enroll.html",
                "+++ b/privacyidea/static/components/token/views/token.enroll.html",
                "@@ -135,3 +135,3 @@",
                "         <span ng-show=\"!newUser.user || loggedInUser.role != 'admin'\" translate",
                "-              ng-hide=\"$state.includes('token.wizard')\">",
                "+              ng-hide=\"$state.includes('token.wizard') and !$scope.show_seed\">",
                "             The token was successfully enrolled with serial number"
            ],
            "changed_files": [
                "privacyidea/api/lib/postpolicy.py",
                "privacyidea/lib/policy.py",
                "privacyidea/messages.pot",
                "privacyidea/static/components/login/controllers/loginControllers.js",
                "privacyidea/static/components/token/views/token.enroll.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "026ecc44bcb483dc7f83762ac9d7bcec82da1f40",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1535115901,
            "hunks": 1,
            "message": "Add attribute SHOW_SEED to ACTION class",
            "diff": [
                "diff --git a/privacyidea/lib/policy.py b/privacyidea/lib/policy.py",
                "index 708b116c8..7a1b8af48 100644",
                "--- a/privacyidea/lib/policy.py",
                "+++ b/privacyidea/lib/policy.py",
                "@@ -308,2 +308,3 @@ class ACTION(object):",
                "     HIDE_WELCOME = \"hide_welcome_info\"",
                "+    SHOW_SEED = \"show_seed\"",
                "     CUSTOM_MENU = \"custom_menu\""
            ],
            "changed_files": [
                "privacyidea/lib/policy.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fe5420cda6de70e5350a0f086bafabd7e7e78312",
            "repository": "https://github.com/privacyidea/privacyidea",
            "timestamp": 1536344858,
            "hunks": 2,
            "message": "Add test to increase coverage",
            "diff": [
                "diff --git a/tests/test_api_token.py b/tests/test_api_token.py",
                "index e91056b24..df3373811 100644",
                "--- a/tests/test_api_token.py",
                "+++ b/tests/test_api_token.py",
                "@@ -1454,2 +1454,25 @@ class APITokenTestCase(MyTestCase):",
                "             self.assertEqual(result.get(\"status\"), False)",
                "-            self.assertEqual(result.get(\"error\").get(\"code\"), 905)",
                "\\ No newline at end of file",
                "+            self.assertEqual(result.get(\"error\").get(\"code\"), 905)",
                "+",
                "+    def test_28_enroll_app_with_image_url(self):",
                "+        set_policy(\"imgurl\", scope=SCOPE.ENROLL,",
                "+                   action=\"{0!s}=https://example.com/img.png\".format(ACTION.APPIMAGEURL))",
                "+        with self.app.test_request_context('/token/init',",
                "+                                           method='POST',",
                "+                                           data={\"user\": \"cornelius\",",
                "+                                                 \"genkey\": \"1\",",
                "+                                                 \"realm\": self.realm1,",
                "+                                                 \"serial\": \"goog1\",",
                "+                                                 \"pin\": \"test\"},",
                "+                                           headers={'Authorization': self.at}):",
                "+            res = self.app.full_dispatch_request()",
                "+            self.assertTrue(res.status_code == 200, res)",
                "+            result = json.loads(res.data).get(\"result\")",
                "+            detail = json.loads(res.data).get(\"detail\")",
                "+            self.assertTrue(result.get(\"status\"))",
                "+            self.assertTrue(result.get(\"value\"))",
                "+            self.assertTrue(u'image=https%3A//example.com/img.png' in detail.get(\"googleurl\").get(\"value\"),",
                "+                            detail.get(\"googleurl\"))",
                "+",
                "+        remove_token(\"goog1\")",
                "+        delete_policy(\"imgurl\")",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "tests/test_api_token.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v3.0",
                "v3.0.1",
                "v3.0.1dev1",
                "v3.0.1dev2",
                "v3.0.1dev3",
                "v3.0.1dev4",
                "v3.0.2",
                "v3.0.2dev1",
                "v3.0.2dev2",
                "v3.0dev10",
                "v3.0dev11",
                "v3.0dev2",
                "v3.0dev3",
                "v3.0dev4",
                "v3.0dev5",
                "v3.0dev6",
                "v3.0dev7",
                "v3.0dev8",
                "v3.0dev9",
                "v3.1",
                "v3.1.1",
                "v3.1.2",
                "v3.10dev1",
                "v3.10dev2",
                "v3.10dev3",
                "v3.1dev1",
                "v3.1dev2",
                "v3.1dev3",
                "v3.1dev4",
                "v3.1dev5",
                "v3.2",
                "v3.2.1",
                "v3.2.1dev1",
                "v3.2.1dev2",
                "v3.2.1dev3",
                "v3.2.2",
                "v3.2.2dev1",
                "v3.2.2dev2",
                "v3.2.2dev3",
                "v3.2.2dev4",
                "v3.2dev1",
                "v3.2dev2",
                "v3.2dev3",
                "v3.2dev4",
                "v3.2dev5",
                "v3.3",
                "v3.3.1",
                "v3.3.1dev1",
                "v3.3.2",
                "v3.3.2dev1",
                "v3.3.3",
                "v3.3.3dev1",
                "v3.3.3dev2",
                "v3.3.3dev3",
                "v3.3dev1",
                "v3.3dev1-diagrams",
                "v3.3dev2",
                "v3.3dev3",
                "v3.4",
                "v3.4.1",
                "v3.4.1dev1",
                "v3.4.1dev3",
                "v3.4dev1",
                "v3.4dev2",
                "v3.4dev3",
                "v3.4dev4",
                "v3.4dev5",
                "v3.4dev6",
                "v3.4dev7",
                "v3.4dev8",
                "v3.5",
                "v3.5.1",
                "v3.5.1dev1",
                "v3.5.1dev2",
                "v3.5.1dev3",
                "v3.5.2",
                "v3.5.2dev2",
                "v3.5dev1",
                "v3.5dev2",
                "v3.5dev3",
                "v3.5dev4",
                "v3.5dev5",
                "v3.6",
                "v3.6.1",
                "v3.6.1dev1",
                "v3.6.1dev2",
                "v3.6.2",
                "v3.6.2dev1",
                "v3.6.3",
                "v3.6dev1",
                "v3.6dev2",
                "v3.6dev3",
                "v3.6dev4",
                "v3.6dev5",
                "v3.6dev6",
                "v3.6dev7",
                "v3.6dev8",
                "v3.6dev9",
                "v3.7",
                "v3.7.1",
                "v3.7.1dev1",
                "v3.7.1dev2",
                "v3.7.2",
                "v3.7.2dev1",
                "v3.7.3",
                "v3.7.4",
                "v3.7dev1",
                "v3.7dev2",
                "v3.7dev2wq",
                "v3.7dev3",
                "v3.7dev4",
                "v3.7dev5",
                "v3.7dev6",
                "v3.8",
                "v3.8.1",
                "v3.8.1dev1",
                "v3.8dev1",
                "v3.8dev2",
                "v3.8dev3",
                "v3.8dev4",
                "v3.9",
                "v3.9.1",
                "v3.9.1dev1",
                "v3.9.2",
                "v3.9.3",
                "v3.9.3dev1",
                "v3.9dev1",
                "v3.9dev2",
                "v3.9dev3"
            ],
            "matched_rules": []
        }
    ]
}
